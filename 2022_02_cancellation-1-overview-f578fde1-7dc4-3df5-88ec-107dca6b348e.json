[{"_id":"033f3080-9647-11ec-ba33-3d958a76b46e","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"263c3d20-9643-11ec-ba33-3d958a76b46e","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Emy","authorUri":"","message":"By doing, for example, \r\n\r\n<code>\r\nif(cancellationToken.IsCancellationRequested)\r\n{\r\n  return;\r\n}\r\n</code>","date":"2022-02-25T14:27:08.509Z"},{"_id":"263c3d20-9643-11ec-ba33-3d958a76b46e","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Tomas","authorUri":"","message":"Hello Stephen, thanks for the article. Could you please add an example of the \"silent return\"? I am not sure I fully understand the case.","date":"2022-02-25T13:59:29.202Z"},{"_id":"6964a3b0-9686-11ec-be7f-69d59780361f","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"033f3080-9647-11ec-ba33-3d958a76b46e","authorEmailEncrypted":"uLuNmJWZj9LqAA5TvY/Q58ML1RbfrTIktlYv1bv+nEO9jHHsUPOn/rghvwP81XEBa1mcVihoJCyMx7VPNgEB+Mt+bPNdm3URHlNXK+DZCKeawe6nxcx3iL40uCd22SfeQMVHnYfw+s06B27T9YGoNJ/HADkT71a7EY0xFBIuoBIqFnMNel2yaxDvnv8UNHxey0HBJDEldHCDOrMl1jaFCPhrnbox9lZ27eI1kblHweC3y8i17Pzp8gCd1GIPYSKmK/TXBBvFWezrd2PRrtop0JS6FMaDV8JmOnnv+6mVC4X6BlSl2U/I6+E86iIDBDxFtA+eQmAEHhoflFilM28ocaJlhdEzjGbZ+u6T7Kvbi2s+yKeKiuh7xcjOcFX5fL4v53cnmcRqho5zD9vY4Xan0SlltDr3csmlOdIcKD5iE8qDeOB6rSL5hk+WGWidVls86YtsyaX76pHZTgM5IWc5iSdFQTUn+/lKsRbGbLmgh+bQXlcCwCO7xsN2a4bvF0qQZLn4NOqJCfPtQjWmuuIACXjIHLpcGYyfwzhESezoEDdBNqq8UXlrab8Zz7v1Vy1Th2AH6tX9sxQavVoTSam9CIl4RvHiQH+pZr6qYLiX0H45lAXOgFTJad/7i3leh3KlRn/SJ+lN8tmdeR+og52oAHVOBsQM+z5n3kNMDY92HCM=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Yes, that's exactly what I meant: a return without throwing an `OperationCanceledException`. Thanks!","date":"2022-02-25T22:00:58.140Z"},{"_id":"f713a290-9697-11ec-9763-8bffb08036bd","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"033f3080-9647-11ec-ba33-3d958a76b46e","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Tomas","authorUri":"","message":"Oh, thanks. I've never seen this. That's definitely a bad way.","date":"2022-02-26T00:06:37.301Z"},{"_id":"3c96c210-a24c-11ec-b4fd-a59a8f97b941","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"fGP80Bb1lzmqTY0Qm4gdrPe2cWLVPRHtBw046rILtGN+AZXH1cHYAVYRnTjREAjKENe/1jIceQouTaEfQb+18PPw2dEjJ2XYeCEN8n9g2eCdS+4R0A1qKH3rzHevh6ZzNZAiVpvWCyM1GBcjwY5EQk4hc9yeFsLj5btgYJvbYNv8GyTRSjT8NuZ1P3P/+s7jQZKupIGYpMVG37gO4mPr70QEc1wizinE1CabbAVesfW71w2ZOvtrvxTknKdAOrLEb/CnILiZbx3etiffCo7tpUdDAOmqwRxGNzv9yDQllgBygxLkH24OpB9JnkFGsxaqMYVJqdXixPTp1ZONtRhmqNloQS/z2ue/eKbeTDPgLon3BnWRMP6OkUS0rEOXgN2Jhp+LvnMAPFlNyzVHjP1gpaXXv9+EngYkZMYeKF9B11zih6rkJf4oQIxdkidf6PCS/vBDU8ZiRdese3YvmMvBuOoQsX0Qfjt8w2TnZ01+0WT1kyVhoXj6O1YTadbYm1+ndA854YtNr8sAO3IuXJYp0f+6hkjFCqC8Wt1IrFw7MWHNTx1H3AbcWXP2kUjAP7ZwJZ5OUh/VFuJ6Qh7gXGEnGtmm78R6ETr12xI425GHRXrRoaPTqjynWElYYljwI1s3TNw4dioTZ1l+2lsdH1b4vCDB3eWDCWOy2NYTmTTFn10=","authorEmailMD5":"dabc563241484bc06c27f5ff75b951bc","authorName":"Paolo Meozzi","authorUri":"","message":"Hello Stephen, i don't know if it's important, but about passing the 'ct' to the Run() method, the difference is seen using the ContinueWith() method.\r\nWithout passing the 'ct' to Run(), the task is considered 'faulted', even if it is stopped by the 'ct'. \r\n\r\n     CancellationTokenSource cts = new CancellationTokenSource();\r\n    private void button1_Click(object sender, EventArgs e)\r\n    {\r\n        CancellationToken ct = cts.Token;  \r\n\r\n        Task t = Task.Run(() => DoSomething(ct), ct); // -> canceled\r\n        //Task t = Task.Run(() => DoSomething(ct)); // -> faulted\r\n\r\n        t.ContinueWith(th => { MessageBox.Show($\"canceled\"); }, \r\n                                     TaskContinuationOptions.OnlyOnCanceled);\r\n        t.ContinueWith(th => { MessageBox.Show($\"faulted\"); }, \r\n                                     TaskContinuationOptions.OnlyOnFaulted);\r\n    }\r\n\r\n    private void button2_Click(object sender, EventArgs e)\r\n    {\r\n        cts.Cancel();\r\n    }\r\n    private void DoSomething (CancellationToken cancToken)\r\n    {\r\n        while(true)\r\n        {\r\n            cancToken.ThrowIfCancellationRequested();          \r\n        }\r\n    }","date":"2022-03-12T21:34:46.151Z"},{"_id":"d4494940-a2d1-11ec-a84c-8facc0185c43","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"3c96c210-a24c-11ec-b4fd-a59a8f97b941","authorEmailEncrypted":"kvQpgifhnIzfl/kSuVkcPeWBVrxwTn3vL1z/6tR5qv5Bq1QBDm0P34sR/bLSmOKdrqIdP4yyfuaWrbFwHzHwBtH8/nak48KV5oC6ZBLWj+JiQeQ+mMWjNnj+6vOwEGbmdaREYsOYN09WEdlu5tVcv8W6WxgqzT6U73s28dmvdxZlyfR7ZAlEbeQZDplYQmTxZgYI76PXzPjVgQ2ZKr4qGEGQKpu+yT/Q8Q1hssAaGj6RUKXz/dZF9gkVA4HCK8OQs04S1dECzLimGkFgfnd4qE/INCZ88pRwNQA3LMSzkJduWOGQz1f85voqIoBu44gkkTOud3AuBGONGN1wYsXktYqjy/7pRuvivI2G0TIqY44NlEaYitSRFX+3M33dkZjoYoLc27hZ0yEj7oFCWWRvCgMWTLMI5xf/jd+SNuWj5zmf382NFHJk84vCdUaAhxTojPbJUGfaBr+B5+2q14VOjh4M+OAWC35FzTCO5GIo3BjFs1ZD3AjTVJji88Ovyb1xzpJI5oieFmtnQuWAXAZFoTPDHNeKk+dodonJeg2tcmMf5CSt60YyOXYizxdGie2SM9KV7+/rq1OePS5fIP1nMJDO8KOEdKRBdFZJpNt/TyxG34EzK6EPVr+yNtGon3zQyMT+M/AVccr3/A0WtohfOiVXjDW/WSj8/kHp6P12nDA=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"That's a good point; the ending task status is different in that case. I did not think of that.\r\n\r\nOn the other hand, `ContinueWith` should be replaced with `await` in 99% of cases, so I still prefer not to pass it. IMO. ;)","date":"2022-03-13T13:31:03.982Z"},{"_id":"6f287750-b255-11ec-9070-750395a7028e","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"d4494940-a2d1-11ec-a84c-8facc0185c43","authorEmailEncrypted":"CVNfDSNugCf/KhtbzqoYLUkNT3jr/bzzULa+1hIprm3NgCgIyjkov9hBYrmAPJKxJ4ydcZjxZTbqXkJT93rALT/WzUaCHaziKLAu1LZsfeLpbWqsZsRcq8/t+l/C1j36xQAwdRZBm4llumk5qbzK9pispliKPkD6h+8P0Y6ZmjFngzNEpaeuKjlnYoFghA/Txfhn6705OB1EEl/lGVztju+kxAwxdUxAw4pw8BqKNckVSZGIMJDX6Qu7lMwe+Hp3jeqIRRX/XAnXqFlWFzxRE7KyJ/TuGVM9wL29LRPFXMwZVeNg5g8hzf+7Z/CB2X/tlDGbrdrpFS5zuX40FyD9Bea8uEnv7+ZvQ0ouRl2nqzeq3hFzFXCNw0V7Xng55vEKxe7VqnD2l87UpljuodUpED6Xy2RBrQoRU/QlJ+UUnZbIpI8+jAfmR7rWkDT7hJd1HyX+BDVHR8OGzRtWmxUv0ma8cH0El7yFV9NVzdSVY6z+uzv0yE+kOf9OPBTuP67zzqkAFJjhUpKzBd2CoNovAW/sd6bgGhipbkXut3s9ZbNo3FC3r7usGwq463BlIo0tLL5y1rML1WkOazK49Z5KhKjvvqrGqeNFgEdRWPIbK6m/uvnHXgtraDr3xnvbtKxrF70GslhmPG3ZSRFrLD31ZwwN38mOlqid/91Euqbo4vo=","authorEmailMD5":"beb9e59cf6b8f056b0762960f549de29","authorName":"Milos","authorUri":"","message":"Hello Stephen,<br/>\r\nmy experience is that this behavior is not related to the explicit use of continuations. Even if you await task constructed this way without passing cancellation token the resulting status is still `Faulted`, which may be a little surprising at first.<br/>\r\nM.\r\n\r\n```csharp\r\nasync Task Main()\r\n{\r\n\tusing var cts = new CancellationTokenSource(250);\r\n\tvar cancellationToken = cts.Token;\r\n\tTask? task = null;\r\n\t\r\n\ttry\r\n\t{\t\r\n\t\ttask = Task.Run(() =>\r\n\t\t{\r\n\t\t\tThread.Sleep(500);\r\n\t\t\tcancellationToken.ThrowIfCancellationRequested();\r\n\t\t}/*, cancellationToken*/);\r\n\r\n\t\tawait task;\r\n\t}\r\n\tcatch (OperationCanceledException)\r\n\t{\r\n\t\ttask?.Status.Dump(\"t.Status\");\r\n\t}\r\n}\r\n```\r\n\r\n```\r\nt.Status\r\nFaulted\r\n```","date":"2022-04-02T07:20:55.153Z"},{"_id":"01d729b0-ffbe-11ec-8278-c132177ae00a","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"6f287750-b255-11ec-9070-750395a7028e","authorEmailEncrypted":"VQ/CuiPX4JZlaMvUhuuRqF2T+qsTr/LPWJy+U9UFWqv1NJRPzf57AvU9/5n/z6KtLdW62EfvYuuxOE0g0Jds9QSDYehRRZe98jiq+WHr297PW5rY2VHH0QZdDQaimDec7A+4jVdivOnhIy1/hsPo7/ADXKasWLKMUOz7tzqw2XiRE5c6vAY9iXsmd/u/J+0pKz9hYSRNaJ9LomfKulIRkSfmPzV9sL4PuOPLooVOrMnHjDo8NG/B3JJifs7gDbbpGdvfUCxQtWioh3pXbf0MSVkjDKk+5YuUSBhGjHR1d/3JZmmlMWcy6ur76O2qWdbZxNi+MAnJtalR4b619OxAWU4XdpHFGorrmyzNZGJKWeY5An3TE8KFPGMFBmwGehQNV3hXhg/K2g5gNbBg2DB6/sW4hzlNP3ppXtWLStreoQofL4PqPVKtb7XxLLVqhscTIYK3itodvXxzg7BnvDLMw09IA8JtBxuV84jgq6mvDbYoXAlyWkgyPNim0faUhvm23H/1ULgUmDeu+3PGETaa2ouLlDR6I6B6PBk4ABdurT8xPXfUk8lbQeVGjyWlYBfgKCUbRmm9O0H96H1Adf8/daECxN2L9g9W13SA1X9z5/gKQBc9A2G2Vm/CoBe1i9s+fvr+9vlFCLE+e7imVZmUf6v6lYsJlULRUid4qXDKt0c=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Yes, but again, 99% of the time, code *shouldn't* care what the `Status` is.\r\n\r\nThe *result* of the task is the `OperationCanceledException`; whether the task faulted or was cancelled should be inferred from that result. And the result of tasks is most cleanly acquired via `await`, not `Status` / `Exception` / etc.","date":"2022-07-09T19:33:28.272Z"},{"_id":"3dbf9290-464b-11ed-bcb1-0b37dcac7128","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"58132f90-464a-11ed-bcb1-0b37dcac7128","authorEmailEncrypted":"W8AFECkHAPI5Df5N60BZ9NPp7a0U6N8vX8aXbWhMAHWMur9mwDAPkqjdMsJmg320pZ72e6MOilopP1nLRo9GdQKSmpzL7CH6tXIPopZAQeO3++01kSzflaPJ92qGeYjlJTO2bWRMcF3wcZuYvvgztiRcxGz7w4p7sCebasQNj+O7H+ne4jaFjlVxF9hJ0FuiIXiWgC4uE7p9ioF5Z7oO+OmPUqqwxlsFNMBlenTFzxAub7Xj/1fDqLiGKPHmiSF4Tv+XwhTI7h0ZTBV5H6OoPeH6UpNfvybfHNPEd7imlSKjkDuzAuWvYCbjjsXw//io7DGfNCSBzfumdABtaTxiKuo4kUNwRRBqCYJNb0+Idak9E9xTBWQy43Cco7TWO5GIEwsQxUGIG9NURr594GACxvEtcVtCghw3FP8r2gf8jQr+NndH4ooIY42oO02QjAZzVNCz8dpYrIlqw/MnaueYWaUm4zSTK/HG2UH8NUaM1ktq2POphhlY3TVMzuGOLeYJkKrCuxmx1CouGcKW6X8Uo87cQAsKOmMJ2kdpF7yl+a492VJM47Gp/9OyRua2fOjbvhI+iaKzGfxpGCK2dW4GPTfBvTj3EbIVPPGP/mCIIjCbHBHuH36I+9T+A0P6quA8I4YRen80ImzOvZe1Xq+s4mjqeimc9NeIyZ1pm9UhBiE=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I've never had to write code like that. I'm not sure what scenario you would have where you wanted to propagate *only* `OperationCanceledException`.\r\n\r\nWhat's your use case?","date":"2022-10-07T14:20:49.246Z"},{"_id":"58132f90-464a-11ed-bcb1-0b37dcac7128","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"6964a3b0-9686-11ec-be7f-69d59780361f","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Gustav","authorUri":"","message":"Hi Stephen, do you have a good idea how to circumvent typing\r\n```C#\r\ncatch(Exception e) when (e is not OperationCanceledException and not TaskCanceledException)\r\n{ .. }\r\n```\r\nif you let the exception through without using early returns?\r\nIs there a better way to handle cancellation then letting exceptions be a part of your structure?\r\n\r\nRegards","date":"2022-10-07T14:14:23.953Z"},{"_id":"447eaf7e-6cd0-4c41-ad1a-9fd6757ecffd","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"8de12908-2868-43ce-805f-41f29eb279be","authorEmailEncrypted":"T4PQT2akL4hqvbCVlvw57QDXj01D4aqEFtBjpROQWZLNrxUgE6SN/XD0qzaOsPShQnGlGr4CgeN6v1kge4dcHyVj82Y9nvO7bwV2/jaxNN6IIyGhPiHsy+y8K9TklECvSfMvAI3loIZLsM7CCGdtlskibmZ+1GPWAHcZYhuorD/a4SQQ2dtBM9Q8+DExiKtiDUKofnpUQ4o5z77/81NBj/dA5bj25E2eS/sGg7RCKvltXwySMu6E7a0z43U+tyDbWAU6FVQ2mdwSqcIoHDdxkgWRBcvi5n9LW5YpY9Y6Xo1SIM6xQT9tYs69MHol971mED0xMGiuqYUjt5UrdX+ip5tiL2B60yPsa8GHvoxIJ7YZjPEWGwOVXnANqXw7r6TKmUg8vUG1jp09DLOdEJeuPChwERWYPp4kjbw5NULte8r87U+x6s36HkrZiNKJG5ofhdc7A9tI50XeRti3dgxhwL/bQfDP37Pl4h4Ku3C8IJb9YqRgJLydp+YA4dBpzfsEt6Bu2yapbAowv5Mbs1hINWJQlE+fD99Dd99uZWBf5NtROzAeluL9VWNxgF7TNw0On93UmNpb/n5rLQXKPfOzTV3LzTpRZOvY9zpbsUJeKs24z4YXzKYIiFQLKQQy91QZt9jNjGVClUlZ8QExJsvL5JPil2umsLlCbE1lo6FsOOo=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Technically, boolean flags can be problematic because if it's set by one thread then the update may not propagate to another thread. Volatile access (on both sides) or memory barriers are necessary to ensure the flag change can be seen when crossing threads.\n\nI've never seen this be a problem in practice (the .NET runtime/compiler do not optimize as much as they could). That said, I personally would change this to use a `CancellationToken` for two reasons: 1) The CT is guaranteed correct (it uses proper access/barriers internally), and 2) The CT code is the standard pattern for cancellation, so it will be less surprising to future maintainers.","date":"2023-02-18T21:41:46.7149266Z"},{"_id":"8de12908-2868-43ce-805f-41f29eb279be","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"David Deley","authorUri":"","message":"I have a Task which uses a boolean flag instead of a cancellation token. It periodically checks the flag, and if the flag changes to True, the loop terminates. It seems to work fine. Is there a possibility this won't work fine? Is there a good reason to make the effort to convert this to a cancellation token?","date":"2023-02-18T17:39:24.5487474Z"},{"_id":"c2e6ade2-f457-4838-81cd-34c88aa29358","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"bP7FJq1zYzb6oHMDuaIq/MlGlzjZp1kKHtudr8xb/5AC6j3n/DQUtERb08/z1SbNoUU9obbg2FdZv3S7kNHViHU8ejku/hAKpthj3QLRmiEi8bldq3G+FtYWRo88E195AacH0Wf312Lm583NHXyf6NrzdBRE63Iud1CrlsWVfz2tok+omdf5VkRAQmKna5fmEgvBbH6R1HlP5iDsMl8AhK5X5KvPFlzXLNR35Y+IfqEVsd77RsP7nGommL1cq2dMWtospMg/7/QhCCd5+/kYATYTIUNYUOTel7V53OII926wcXS/v3nVB71Ih27J9kg+OOMX3rESvaHQvJeqLnVSO7qt+J7R9TCfhK4uAodqCZRRWWX4gurznv0oH6YPysqNGiCIfKRu1/imVhztw2gdpv+Xgkc9yvx4WgnzXXZWZQX2LwfMNcSh63toe3g0FrxlWNRkFtwuEmR0Om5ty+sdhiCy9B3Sr+G8awji7UNaWYAGdyGzlFS++BVTrpYd7RtsP6A7qPcVWPfrGl1pMXeX8nECPBdU5e17PfhB5w8NHnmRnt744+nQSLNDD7FeCOSfAMpU+vnvjG0h9JZwNwPbqe+/Dxh8IPEly3KL3GRrDONB0EG8xIFpu0dDzjHr9a1Q3hy6jSwvsRWuaYyP108VFfcwxw0u5gcCwAWbuZcEJWQ=","authorEmailMD5":"4760c73b501e7ba078f6a113483c13aa","authorName":"Stepan Stulov","authorUri":"https://www.linkedin.com/in/stepanstulov/","message":"Hello, Stephen. Thank you for the article series. This is by far the most intuitive one I've read. What is the most \"canonical\" pattern for tasks canceling themselves without being requested from outside? Simply throw the `OperationCanceledException` whenever a task decides to cancel with no tokens involved? Thank you!","date":"2023-03-13T17:23:24.0075309Z"},{"_id":"a972dcb8-47a2-405d-8fa4-9378e1ac4f6b","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"c2e6ade2-f457-4838-81cd-34c88aa29358","authorEmailEncrypted":"OLnJECdTAli1oA0ULbMUf61ezBvB2TNUqqHfIPbzI6aJF+7KsvLCsyYPeUDP+r/TxZEywzw3+WCl5zZK2PH1Tyk6MtByJSYLG+PQPoYgnqTRKHKi4osUIizO8xd3O/NJsOBv08WX8mKwGst9a6hgRijQElf8WQti5AtzxpXJe5P+StrLrwvoBtVeSLPmucAOiUkMt2zkSQ8BBtcnvZgfCuo7Ua/U97LZjiOvourCpq4+bqe+q9xYECS6lYIVPYAyhzLVXBOD4WNUbx4Rb3WwlF7lNIbGV0t1pxbvgVzvuWM8FWhbuh/vSvPzCoR18hbjuz7IokkyOPQ7ouQBAo0LiT/RdwzQBu8hNPRsQwOED1i8MGmq+GVit8Fd26JvPRkR4M/BXU6Eu5L3Y9DYTtlURK9euwNgUvdgmD4uVtiav8eVTcXrsOICBe4mHYF3W1QpCLPPc0RX72xU5LD6zEam7Bi5BG1axwGdpIMOMXDdgXU6QKxpXISnq61nnMCICssch1h7BSZz9V4afV96EdR4DlNAT4tBfiaxKDHAwYBbG9T3bEgidRt+RHCqKsu51Fv2CN/tO+h2W1eD3GMtGsMzePEr8sjY4FBo3a0CoePfX648wA2UYtNXs4HY1h059WsQaOgShRphGUpAtCmcEPCwW6GzMWaJ0S1/obAsYve0XjY=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"There isn't a canonical pattern for that behavior, but throwing an `OperationCanceledException` seems reasonable to me. I'd just be careful to document it.","date":"2024-01-28T03:05:14.3153817Z"},{"_id":"858d83b8-b4d3-41d6-9371-c63e4be165e8","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"JHZw6CJ5WC97wMpKFdOR1Ti5pVgyxovo/U8m3tJHMwNCbSX/u4/bDVCUXZGL8Kc4015NfdD7UH9WdCkVWAE2Od7BujigxrKIAa8x+F5FfpHmKEUce5hQ05AHthZlxP4CicHBB+tQ3vQQWgKvy3/gEivBCwqMJfiVpoXQK5hoDDrwP8Et6RKmFJe6aGeTofGpkdDzzA4MDBTAlj/fo509++YFh74NQo0hXJ5iw4Pw1B6CSQMQW6F11L1Fy5hpeLEwAAuUQWo3qxt8UpnLZxCeR/1mb4fXYt8OnLNxstTuiQSWeg7c8MalCLWcFbkjNGnBUa0hKRDLYFA3RrLA9Ty3VrUNqbaaX7Sl+PnBXilMMVXxg7psYRS5WiZJXJQDIH2zuJx+THo4jg/LorFQTXsuF2gdFFr5T3ZgooPZwLfqKCVi9FXuQE2WSSerZD1OL7YtXplHixZE6ZysVYB63s20E7b+JnbinQDoCq2bwADAyNl2YUt8Q13/ojfAd+ai5U+6s74ZDzYS8NRkkA2jAtC0iX3WLP+iKfKcK3rcgkHIHrA/uy5YluOoLVH93v+iXzhln0KALBeZmdNxsLEP1yl36IWLG/KrqOkzs7dZ2TA2JM9z3fWadZPFdLtu0S2NUckckcfA8Ab2Mf2HtT6BdENJoCYzzgVOPKVjncOPdC6sP9g=","authorEmailMD5":"d66d5925cf7d5fc1375ddfd93335a921","authorName":"Jesse Slicer","authorUri":"https://github.com/jslicer","message":"Hi Stephen. Appreciate all your hard work on educating all of us about asynchronous programming. I quote and link you often in code reviews for best practices. One thing that strikes me as odd is the throwing of `OperationCanceledException` when respecting a request to cancel via a `CancellationToken`. It's a bit of a cognitive lift to expect an exception on the happy path where the request was made and the `Task` honored that request.  While I accept that as the convention, I feel that *surely* there must be a better paradigm than using an exception for program flow. Thoughts?","date":"2024-04-05T21:50:38.8995527Z"},{"_id":"92ece6c3-e22c-4863-b4ef-7d04d483362c","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Mustafa Özçetin","authorUri":"","message":"Hi Stephen. Firstly thanks for your valuable and practical contents. In the second sentence of the \"Cancellation Tokens and the 90% Case\" section, do you mean \"The requesting code will *carry* a cancellation token\"?","date":"2024-06-10T06:08:38.4315586Z"},{"_id":"5d39295a-5913-43a0-b2ab-3d47544b2827","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"Ee/b+zQGS4XchXg1RaSOidS2ocIex1A9xWJIsDAg5jY/GWGSupar/buk8958Tm+pFBlSwTomf/EaR5TyVyHuoCrd1d7hcRM1TQr2Zuk9uyMyvJIlFywXal1P8xJp3x/bBAtNSYlApT4ApTJU8N5JrDCTrmPAtwEGYGVv/6DXiUjL1fyb6n2CQi77OIoFIYX3O0ao2L47R/bndXQg8L57B9uL82oZBWIxIt6a5lCOTec6SQjZls6P9XagxLZstyIUEWS/Qc1MtiI8FPnRjg6X+m6uXwjvthVQ02xJRsDNZN10u60wIZp0NGiQiA999s8c6Hlsu5ORVgcIgJIFRXIqpWuUlTWYorBmYIxf81tSBfS34FDDnZLpKaLLbu5M69rSoAnv+l+jB8PgQUrke7jfE4ncfFEoFesrx7JWD5drozhAyNuzDZr2uZrXfDQBfvCNJaYpfB/G7FSUtqCNtLUqID9wfRGnIe+OnhVufBHKgwU7FT/UzKZSo+oA+uA7r4agPxtgDEKAdfNhYIlrJjoRvK+7mO/vmxz2gkBvx3Z0SlCwEmE5nXbyMnsv9VOxuanxCpTy6BtJVjC34rb7S3nJQzFsb51CFErmIhsg4ILh5DBFJxGo4UCDvO7jVQw/8ORJ0tPR4kF9Ied61Tmh385u181TOD8ZtQ9MpR7zrMUxgks=","authorEmailMD5":"0221dfd19fc24c815184a775d7ff1500","authorName":"Artem","authorUri":"","message":"Hello Stephen, thank you for the post. What if I have some application lifetime running background task and I want to stop/cancel it on exit. I guess it is ok to cancel it via token and silently exit without throwing exception in this case? Or is a better way to stop such kind of tasks?","date":"2024-08-14T11:28:56.3748524Z"},{"_id":"b2056033-fcae-408d-94d2-ca0a2a16dd42","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"858d83b8-b4d3-41d6-9371-c63e4be165e8","authorEmailEncrypted":"ktgsFBBO3kO1asoTCyEeLAU9QhvRbL4gtD2Userlk0NudgvNS4OcyXSePwR8n0TmThThmq1nVq2gV0WDOHDxF917Py3S1n/tuL531Q+whZLZIMaTsWywVZ/DytMfzlPyAsPHSI4+0lryrH7V+eP+CMEUXdtDaIcRc1jkEaEYV6kZibKhqpls7j8FJzaGPy0h8l4ehcWeFVqqHOs+U0tkJ20Xuket264AYMpoTpf+4+2TtEFEOnbGE8N6Zs2jfXJoXELjONwZGmNRk0H5nEYhIONRmDMjHU93YQbQfMyE88Rl5GwQUP47ZMqItt5SWNGxxddaNKH6DcDzRAdoe9iylxI3Z7gipTAJ66ykSM0SVHKbF650I9PTqucISk5B6XXoHayMaVbChV/Fd0taevjTlG6rbRyp6vb3FcCnXKey0qVI67fV4u6yMBlJ2GgH1uat/clPA9NJurIfNoJFr2knp/1IytJdZqD9/J5RQFK+G/xsrgFpoFqRkRWfkr1y8nUQCzAnKVorVVsUKuDBb8do4Kh28d+YKpG+888BZnyNrR8C1f2vEhR0FnTrtiT5DkMQpvUVKjbv/g+6skVZOTXrDNdHA3di0AMbOdyyKAUMxFR2L9Of1YtGA2D/eO05QMLoP92TNQTm2e0n/3DOuYs50zy0/tAcHhUN6cmip0MntQM=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I'm not convinced that cancelling an operation is the \"happy path\". It's not as unexpected as some other exception, but it's not as happy as finishing without being cancelled.\n\nIn other languages - specifically, those using Either types instead of exceptions - the natural expression of cancellation would be different. There are some Either types in C# that have been introduced by various functional-programming libraries, but none of them has seen wide adoption. And so the BCL used the exception pattern, and everything else (almost) has followed suit.\n\nUsing exceptions for flow control also does feel odd to me in this instance, so I know what you're feeling. But I think it's the solution that fits the best with the C# language as it was (this was .NET Framework 4.0, so long before any major FP-inspired changes like switch expressions).","date":"2024-08-15T00:26:25.7241722Z"},{"_id":"c0648edb-12d7-4610-824f-e0c8f5a15f90","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"92ece6c3-e22c-4863-b4ef-7d04d483362c","authorEmailEncrypted":"qukN/U9wrICwuCXC99gF+0/D9JMI2EeeJMSNpPwcEoLLy7axXA6wODnplcgP4ievR8DxRcS7jE3hda0zRB4yb8MDuhzmXiduXU1MUWVdS7VTFyFyARn6Z3VqS6TP1iTd3vl+mxkzMcXJDRTPeIROvBYESkrFty9ExUv/OJKwvixtH3PxV4eBG3XU1yUDOM3xsM0Bl+oXIzyQjb7r3X5xRaADFbdn5ADeXrfnB9K7kXmhLosZbuxSlHdF0Er9uoMdb6FAxSe9jKW+FH8xSeHgc986rIcoUkEd0HbdtQjcVFviGCcl9/WHg46IPCZqONEJP6MtYQlH9BwzOnpdx7HRU9pUpJozbTgzkoMPGheKG4T32AQ1OUKghaY0ZyzMgg7BNwNeZkSjXX9evcy8CJBNTcsnG6yeC6UoWEUPgP+dQ8aeJYBqC2iScSDkANbwq2FOMgRafiQQ4/bxE5V7CpLjaQM4Zx17Kl/yROH+HFt8zUuPi1jSU2owAdMbuRIKP15zLG6PHe+fS7v7CaJiKc/teGsE1iPCDook131z2+X5l4wUPN49TYrqQdkxRaprmchAqV6RFlNfeExLV7MsKUl5F3b9VXbsWW48va21CludC0lHgsISnF822mC0rWpOUPpCAezAmkR2iwRTkmGB84ybdjPUki7pJSOzLv/J9eBN7xg=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"No; the requesting code is responsible for cancelling the token, and the receiving code is responsible for responding to the token being cancelled.\n\nThis is in contrast to other older patterns I've seen in different languages and frameworks, where any code could issue a cancellation and any code can respond to it. By separating the source from the token, the .NET team really encouraged a much cleaner code design by providing a much cleaner API!","date":"2024-08-15T00:30:05.2362059Z"},{"_id":"c31f4263-b636-44e4-8163-f9d5e23de829","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"5d39295a-5913-43a0-b2ab-3d47544b2827","authorEmailEncrypted":"QbXtUZOuB9Nv0Gyff+YWsSdXeK/D8/L5DoxXKRaQdYXvw3Q60m9xR2y72WsZs2qhoeALN6lGOe1LxCwWy28ilkmFiGFZxhckPJZ5XKvQoydvlMVc96ZZO2nQyF1uUVJTNSfKvDMWS++wX9Fg8XpsmERCOEF33QDK/GBpTEiR1qJ+ELmFWUNpzFfO9kQdC++von5qR963q07+Vp0IeMJ6f85axBOh0j5jAX2d43066E/aMnEmKEyykH3Qd0g4qOGtKnkfAb/N0DLBOR3qwHBQB/LqBSfV9YXAcd2CobpcOHcQ1U9O6FBDM1h9/RceuGfu5PHsUq2Br3Co0v/haCP5t4Rf2bA2da5S0VnqeVg825lGGahNSFQHhAxFVHgZvJfTC76ANGuHRwKGlVz0g77kZg8/QgeG6oskG1i62cOxQLmIZ+UOHUqj6+J8Wl4JZe8nC/NWHSUqqW/WRD3+QwVAfPY7ii3w+Xp8RkGRISun74GRx9VLJ/YgCW/lD4ke+O9IG3yYo0emGHQg9ZQUNtbliLsCmlHI4CtyYZvMLzMoY/T3GGpVQ8rJKRG9AsydY7EQiBMCTAFi66Krd+fkzRdmMHK6jwhHDQ03O2X0xDPCcsLDJvnKn2HK81m0JZbH5Ku787iljq3ToewZ25F/hQqz+f34KZO+E2aw3c+2e3406/o=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Personally, I would still follow the pattern (throwing an exception), and then catch and ignore `OperationCanceledException`. With this approach:\n\n1) All of your cancelable code is identical. It doesn't have to behave differently based on whether it's in a background task. It just responds to cancellation the same way as all other code. This means it's easier to move to other parts of the app, or wrap it into retries, etc.\n\n2) The difference in behavior (ignoring cancellation notifications when exiting) is in the layer that cares about that behavior: the top-level background task code.\n\n3) It works naturally with `BackgroundService` and friends in .NET core, which ignore exceptions by default in their top-level code.","date":"2024-08-15T00:37:22.1805760Z"},{"_id":"e192dbc8-a891-4511-b8b6-76863f2676e9","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"c31f4263-b636-44e4-8163-f9d5e23de829","authorEmailEncrypted":"vm/WJyEmerFJ5H1lK2HsChjcBTM1X746VPo2oQHQX+RwxmQC18Nvb5TVO4fC9JE1rp+k4+Ymo9mScwoNnZ8Ig6JDzRwocq+XxagvVGQey8fGb7cLywCvRIj13JMRUAMad22dyfwgUXNRSEcsvXjdrzu9e225o4omIXrLK+RXUVWh2FrbD8fMW4aDg1o3Qz3rbp7X5q+BuM2lb+HQrjpELA46yinvxTKIaj9mcP1eL48VCQeqTRHV7nzSmjYRrlCNRb1VdGYi1DZ429b4YCMW9RnPbnKELu2vkNLYTAHkHHdEmeNVEdbvsA0MYhSm8WHZc+oP+DMruNT3hYseGzE4Boqq16jVlFpEygD4dUxHJlOx0WbhimaJUUMD230RXMbZRIMwmc2YnVH6B5ketaw5n4S3kRXVMXmPMddW4pZ+3CXAiL+f95CV2eF/aB/SxbpH0gQ3ODfQylmbVKAFPzXupAHrdvw09rsvr1Wtcr48nSGgGji/w5+N+UaqoyZ7cS5+mVz6sszER8bWStTl9ePY/bQKi/jkMRiXEGWwMip3nJ0coU7JcqposYr4BvsVnAePoeAM6o+XLP+TUAcOOYYivdz9vbxNqHXpVm3wQM9iNK11U4HYSsHb7iC+NTaoyF2HorXgVyeMrQgpH4bwFO5k1Nro+efjpmR8JDWBeBpLRow=","authorEmailMD5":"0221dfd19fc24c815184a775d7ff1500","authorName":"Artem","authorUri":"","message":"Not sure if I got it, but thanks )","date":"2024-08-15T10:54:19.2587971Z"},{"_id":"4ba7c507-7359-4054-886c-2ac7f3cb6d85","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"ORNRmSTvQLpfDEFaKn7dqK1cT7pWR62dXazA8MfexMWGLltWWB4wLnBI75xVI8bZ6NbZprDOjkOkUz8mdfQjIo5wZNCXG6VSNim1spkpCtB6FKkuuiXOJiok2xgc8FfX5UZThvTuO12SXjoHsZ8GgDwqrxugI5dZGB8Hf8s0Whq0Yk+NGzvP8FLyMjFoS6+BLetboEyQAJkX/zekcKurL8Bwh7q2EsFTpXg4IQhYr1RinYs+y1htsT0k8yWYHZFDRusW2iEAeeKD2Mc8rrQlAGdt/Kdik/SIM15ya25TFKRmkWL4YzU6II07a4c/LGW8ock36sMIK1qRqHj4qB7r/WrMH91aWIBo4O6yBZQM4+Fm6zVBj+FVSuV6M5gDTXRuYy7ZXvSSm85bJbPonYQ5k17WB6te3BSwPF6CPqdgkTs36ax6YLOzS8AH/WDDVxCZAWhaCtUJDubwqqBM/vusXUOxZtJNVx1JtJ+BI+jsmyXsKJTWJKA/5Ng45hPBBuSw7PIpKjHJTUiHWFBk35aDyQxfWz5urItVn8J7k3cvx0636Mrvakz6eeiEEk0iPlc23GvNLD8xziyatVlz0n0xkSnJb9rsIYvGweVCg/eZv4qiz6ucmLEs2Kp003id7TBqgPHzIAXoxRa4Ao/KeuVvsw4dBrjGj8H/lbAGHPKkYP4=","authorEmailMD5":"fd5d2b2c98130d190305b55d5c84b2fb","authorName":"Sharat","authorUri":"","message":"Hello Stephen, I'm curious about canceling \"uncancelable code\" that you mentioned in the beginning. Has it been discussed in the series already? ","date":"2024-12-11T12:52:36.6891785Z"},{"_id":"8a17a2bf-8596-4bf4-8923-c0fbed5171ad","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"4ba7c507-7359-4054-886c-2ac7f3cb6d85","authorEmailEncrypted":"lKEPS2TUB1NGkuobAjcz+NSOfs3MzlH9ligpdKM9oT75k5608pKwMTkkyF6gp3PqdRrkaHELU+zSqRCH3GXYxukdq4yZ1PjOj1jxXdF7GKsunWfHxKzCjtaWtmKrujlq7EbENsc/rGMBVsRuDyh9/TFZHRyNgrkyq2EqHRUB8waBfzHtW73vjlbAFiwH760pmvVoBpXz90lUKiCVi23thqkSUkyVbSCob12XDJsmn4INwUvkGsBR4nvN8Y6nBAm8/aChUt56C2KvqBIWDnY/XVdk7oCZloSF6Lme4OLUnNHbJx1Hrj71OnBl52qO/ibi4zy5YhNPFV3cRb4rcy0CbWDZtlJKRM4jXiNGkSFyn04TRameO2i8FpP+RJ60f6dfYG8OyPkOj4OOHIaMj8S0Mq6kK79EBJRMDZ4Z3zK7XR4p7TInidaUuODkJ2Y4BPK/6bUoPqhzYpopb7yMI0L1eWnaazub6nmN0Co00jeaERO6sWybE0ByB1wJ/Diu8UF3X4JBe4PSk3gdbhMS0QUyYAgXkK1XgZjON2Dt/Mfk6uizBnNbQ1PlvufJ/mgNDIhYuvCPyGr0lhBlbmSzkVD3ydq9/mGJTJ3wIt40vOAqFDcxJdQJpf7v9H8UweK8+7OXZySJ8p7/8xlhUxTmabuzxM76L9+GezjktNdm4Dc4Nu0=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"No, sorry. I haven't gotten to that one yet, but it _is_ planned.","date":"2025-07-18T20:27:29.0306070Z"}]