[{"_id":"753fef5b-4180-30b9-9a1a-e85ec4f6c4f9","authorName":"Karg","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"For the EndDivide example, should the AggregateException be Flattened and then the inner exception rethrown? As it is, the AggExc's InnerException could be yet another AggExc.","postId":"2012_07_async-interop-with-iasyncresult-51645833-5fbe-300d-a947-fafb54095a67","replyTo":"","date":"2012-07-26T20:44:14Z","timestamp":1343335454},{"_id":"81d0ecd9-8edc-369e-b03b-5598e60e8780","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"It's not necessary if you're dealing with TAP code. \"await\" performs the same transformation (throws the first InnerException of AggregateException without flattening).","postId":"2012_07_async-interop-with-iasyncresult-51645833-5fbe-300d-a947-fafb54095a67","replyTo":"","date":"2012-07-26T22:38:17Z","timestamp":1343342297},{"_id":"8cf9fbb2-54fd-4c0e-9e97-1cfbeecb79cc","postId":"2012_07_async-interop-with-iasyncresult-51645833-5fbe-300d-a947-fafb54095a67","postUri":"https://blog.stephencleary.com/2012/07/async-interop-with-iasyncresult.html","replyTo":"e1a8e7c8-7bb7-45fd-94c0-e0c21e52de7b","authorEmailEncrypted":"pIlaYe9RWFx7/VANO3NhwWrLyLtQLn5rRR/QQEOiDj1dSTklqiCTo25JKkQ1Cwj8ZafldY2RwMqBpAd2STazzKLphU7rqm++OskdnTZ6g3wmnnlW5ZF9bwqUTEBNg7ZdUl1DULkH9UhLlch9DC5fRdTk4Cg1Lw9lTu/rnCffPe1HtsxdNau4bAAVyswsDr9otV8TkMbXdvXc3IAyeT8RfYflYkCvCb+nG2o7FbqriaMT1V2qsuWyVTgmHJ78YO/RSAYi7KVQdqqEGbYsQHVlQj1N6MS25nUZrkqXLz84Wyk6WDnOhMfiANFtyY6lfqQKArKNPd7IjKIj8SD1Pp0QLUzhfLYC2EwEPuLhse2gDNazOyZN7qlndUqmZfhC0gyQz7CjQ3oQqy0Hv+xgPkl02iTDFk5Vwb5bFn5yWJRjhp0U05K26iz0cw/lahariT3499DCQax1VR6m1YW9vRA4nBh/OQ4Lw5Tid2DocehQdUgrS5HD/HInew/KovMORlGcUGTEyqg+AQFkOU2z9gvypv+SVrzcHHfv7znt2BB9AaMJkRzlScGVlR3eBA8tEPpI2vptygvtpXjZ4ai8J+3pdnzDOTMSr2gSEIoXJNdGE/6RIGAj0bqC2dMiLsg390qVX5RjcaNYKeiZg293LnFoU6VtScGSbExzAHG4do/+CQc=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Nice!\n\nNot the first time my library code has been replaced by official .NET code, and I suspect it won't be the last. :)","date":"2025-04-02T12:50:23.4423895Z"},{"_id":"e1a8e7c8-7bb7-45fd-94c0-e0c21e52de7b","postId":"2012_07_async-interop-with-iasyncresult-51645833-5fbe-300d-a947-fafb54095a67","postUri":"https://blog.stephencleary.com/2012/07/async-interop-with-iasyncresult.html","replyTo":"","authorEmailEncrypted":"pE4izP5RT7f1EXKLkGOjVBRceHWpA0Zavds86GxbuPQvveZtJUj8TjYuT2koKGALpffRMRpH9lxymEt90+25taDhqp7g1vH+xUxi7cj5TsBh+vFj7FtryHzln1dqURsbe+5VyWixDkx+nBplKnHyPM6RazPhIGb0vt2sFIaDl7N7oSCyaCyASdlhrTKwVsDJ7vXVcgKG/cDxCKFnB7db4MAeVuWVVmfd5VwS2dYQPLo/U8TSmgfKlQVAM5gVLXK72Bi5q7Cb6j8Le/Ie1fVu4/o8lcLaqzXhqpt7u7+6hIQf53gD+vXyq/+CPDgbIOpf8CP0eoX+cJhH5zkvECauzTz7uCHgJCaispg5RbFxcK3WL+vFGmz6hGBhhPjpDB+Cz7u8Bd2fIY69yqJjAGMS3eMi5btxjQ2zl4iu94hrVgNtqugFea6H70dLo60jHoEvZBH1uj7QSHl26Z47WhVujQfFAcTjNkXgRadiwqf9eUqxRhrw5x8lv+qU+JcUXxgoyIGYiyTfyR9P2ViZYjQJQYblodxpODoRgNto34CUApdkCF01QAnGjJLGt6Nj7uhT3beieEPqVxJqe01dkLc2zD/9d7WeX/9B779t2L8smnVnmT8QAFe8ZnuqsvWyh/9nRKM55wuE4+c/NGfjEmOCD/Xqzg2G+NyAf2wE1iO0aZM=","authorEmailMD5":"e634e02646d909ce006da694a9deec28","authorName":"CÃ©dric Luthi","authorUri":"","message":"A decade later, the static [TaskToAsyncResult](https://learn.microsoft.com/en-us/dotnet/api/System.Threading.Tasks.TaskToAsyncResult) class that does the same as your `AsyncFactory` is part of the BCL!","date":"2025-04-02T06:52:38.2181632Z"}]