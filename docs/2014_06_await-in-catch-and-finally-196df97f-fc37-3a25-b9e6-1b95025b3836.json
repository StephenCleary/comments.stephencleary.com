[{"_id":"5eb4193a-3f68-31c9-a699-8312bbd061f8","authorName":"Marcel Popescu","authorEmailEncrypted":"nQTIo4ZD1obo8Pz6GNzf6GWbix1H8Eb6XU/igKwgc5y6EfNUD5bVDCuYW7u+C5cZCPdWUU9/H6PAoRbyXNWAxHiOF5WkgQScBn97siP62YxC2njR14TBLwdv2ZikEJhatnOYqoY9ArsVP6ssnbLrblwmuCrtHIt+lCSv1/DEChj0Zxi/m1GqjCEpZEJRuZ6T43B8a97ydFcE/H+QzvI5wU2GI1M8sJylqYSrGZ2tJCu8SuwXmyOLbRMsB/WPzLmGdBz/hLy/uOnpBv5i5FnM2ZXFQHqboztcoEnQRl9zQQjOzKHqujpTpfNF40prxcIGSwZLPlT4dK6NUplR6bQ4j54cntVTB/CFPHsGq/kczpJZxpbAvJBYlwAecnYnfy4ww4H0CyLdLpKPtwhYpaVP0Rxw6F3zSRppCnAOffa7p0eyiahnW3SD0DjAKwFx9+l/+UmKwaE5t+54sF6rpev+KXgE9ZRMQeAFszRcLlRiEdRhqjd3X/AbukjnNvECWgexcOxGYtkxYXYICoUhSN1J/zhvOgDDfuAmpKQAPDnk0rmOn3CcbfDbw1vhX/hGsxEXXwUjy7bSIFQ13qBLCnBPSlVsDDfpzyEiyC8EhsStS3CqLlBuSvM+yhpADpF25oER+myMq470S3U7BnEIa8PlZhVGuBjDovPMlXMzGNuiPx4=","authorEmailMD5":"062547509ea29cb1a75e7260a77bb6e5","authorUri":"","authorUserId":"disqus:marcelpopescu","authorFallbackAvatar":"https://disqus.com/api/users/avatars/marcelpopescu.jpg","message":"That you, I wasn't aware of that, I'll take a look.","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"91d99160-f7e0-33f1-b51a-873f1fff3ecf","date":"2014-06-16T08:36:14Z","timestamp":1402907774},{"_id":"91d99160-f7e0-33f1-b51a-873f1fff3ecf","authorName":"Zarat","authorEmailEncrypted":"RpL2VEryMBQ7pXHV5DGE83RtxFLAKODskk/ylnheNxj540STNYgNYj1l6nOTCA8+yumYupwDVqdbb/h9Wh/75PP6V4RUE5e/mtWfhTQBFL7HAZ7G0KA88IB/Xq2th9cYCpvsVt1Pe7mP9+4cnfRtkCSpaeGIJQ7v/1ypD/X1dLeK/9MYa7cSqIe2cW3Ke35KrYlbSMh+887+C3wKyPN5u6yfOljNA5LlSZDPBUt+RmCXEifiCIXBxoetGr650gNmQf8WE/Qez0Ev5A3xcnosO2srYFKvlxebnRphaFd/GcaoK6mTyZyZqWMHbjMo4XUyfsO9mb+FPCdMThRvGQ/kZZ3Xn4TjdYwU1IMD5DQcvz+/fpTzdPhM5do376xIOi9xeipcypHCaqIHbnajgj9YSbWL2W5jCKqXTy9S6/Ne/kW3GLbEeQZu6Qr96GxfvbvPRhOTQVvmOUNvwGSJdzqMKDLEmzpL4gg+iIVPtdhqGrjttcugFiR0kcuMZGkdMlBZXxjqJ3PMiOifvEeQyso85xa0pcN4OnW2eyjAQNO5GJI+CXuxlN8pLA0ikxpN3iUJKq5Mc6dTHYKHsMuXiDRVligRG9zuHlTLIuUWw+LjqLhPHdB+oXbX3bt0jTT0bpaubwufEGOdXngSWSHGUy+ZK6QX172g0QyNiGbr2zwrhkA=","authorEmailMD5":"d307e42a92fbce947bfa9fae4400e95f","authorUri":"","authorUserId":"disqus:disqus_bCQ4ScqAv7","authorFallbackAvatar":"https://disqus.com/api/users/avatars/disqus_bCQ4ScqAv7.jpg","message":"If you're on 4.5 you can use System.Runtime.ExceptionServices.ExceptionDispatchInfo to store the exception and rethrow it without overwriting the stack trace.","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"e0dc4f0e-ae83-39b8-9ce0-b23ee457470f","date":"2014-06-16T08:23:07Z","timestamp":1402906987},{"_id":"e0dc4f0e-ae83-39b8-9ce0-b23ee457470f","authorName":"Marcel Popescu","authorEmailEncrypted":"ndFF6qlhrd14zVLN5yKoBechnGmPJg0VkEsvcb/K6uJkWiF5AD4DzonhjA0at08PxbIh1AlyHnRkF7jdx0q5Uztlonk0PbnKbRDEawdmoInfVwVlzwlz53XupVakA+zGj/5G1iXKX/siFJybOnbnLMnOD7e8v2XVP7s2m2HSKNEHP05KrFxRmIUvMOrEpTo2ApDkBcuRVRDiYdzdcg0G1KVo0J0FNwHj84MDufIya0+j+AZewgrIH4xybT3H23IKQZYfRR2cUsnwVSmnKNr57Y0VUuCHy8IamO3AD0s7EgmTZmRKnaOs//NB74KqkARr62YkYTlRcnX7FC/WQYvXGsNmD8nKl5+V2sWyJVIW6e8tLBoy9t0xszq00XdEkfYKQxCfBXTBzRpcvj6bLqZ7MVxLpI76han5LfGr8W8qeiLKSkMUO31OX5uFhZcgBOd6ZMiUHBIEmIdKz4fUdcT4LTYhxcGIZyoVYz1Tas99I/xESS6oYWlaRcu+wpN3z3YD7YTtJBaEidOc26w7f8bHBzdLLK5wlPIi7sIwLRk6M6sgpK22pcHeWnOo+1q5cgjctmEn7+AjWujNb0EPDm8PzKopO3p1CAZ4oghyMyTH6Ek36Nv9JuBd4MVYllr54zvLEFoRSrbqxxVzlcH8dW7p/LwuvKFBuGG3RcAOqNeWPjQ=","authorEmailMD5":"062547509ea29cb1a75e7260a77bb6e5","authorUri":"","authorUserId":"disqus:marcelpopescu","authorFallbackAvatar":"https://disqus.com/api/users/avatars/marcelpopescu.jpg","message":"Unfortunately, that trick doesn't work if you want to throw after logging; I haven't figured out a clean way to handle that. (Currently I'm calling the LogAsync method without an await and hope for the best.)","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"","date":"2014-06-16T07:45:47Z","timestamp":1402904747},{"_id":"ad453931-b13d-3b82-bfee-b804eacfa5dd","authorName":"Sergey Kostrukov","authorEmailEncrypted":"pGsF+iqGB51d5jcAh+mPrRAXReBp770Foo9LLT/e7hYEcat1SXb0I7jLk7ObhcSx6vWCZhRpYoKFq0RW4zkIVcAKgYzMiOwUZ0H6AOW6cFYAZXndMJFW3E00Ev22jS2xM/RfIgoHOR/IhqqIkBIv8MKK+adtDMY4ebXLNox5v/VL2U+DTBkH0VrAe8EwuDLhwaeWX0tGFOSwSnkOkHjzdu3GxVMXG5nYS3/AbcVHIKW1oLsZBY+aj2qdNZsm3PNW6170Aa8fpl9/98bTXBg2YA+kH1fHzIIejnOEyxXWcCM293hnbswjiT6BYE1H7OFsNtof6z4lbAv6iT0SQsJqlM2gn8bhBAxgR9aZwZoVA5nw5KpdUUQ6rDOn8IPbatVsnUO/1MC/QbETp1NDq1TfRmAUJZR7R6maSj2R5ApV086TDxAEvYui3XQjnk3GwROptLMNXPKHokp/Y7FiOl82/nt6KeQrqveCJxx6+L31q0FgbCLEYcFhM376bc6GH7AlEPDgW5XVoRuU7NZ7q9CV2m6w2pxSPyABM+Pjil1UHEHolpX7OeuqobvHNZJsWGpTPDE3bo5Xv/MfF39kpPmydN/lAPrVyxaBLDDlvzGOBjVPdn/HMs+4lcgHKsdKJIiTuwsNIEF7+6QTuGkSFTaXStuKisVh8QLTjHSyYWHoL/s=","authorEmailMD5":"7598d735bc04481a6d5da1625652bbd1","authorUri":"","authorUserId":"disqus:sergeykostrukov","authorFallbackAvatar":"https://disqus.com/api/users/avatars/sergeykostrukov.jpg","message":"Good to know. Thanks!","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"","date":"2014-06-19T19:45:14Z","timestamp":1403207114},{"_id":"ee32d751-6c99-3a65-bcb3-ce27297c8957","authorName":"beton","authorEmailEncrypted":"h9F8SjzQmDs1tRKrtg8fGKC1fLgH1kouLYiJxE6AxtHYhkityCJCtDxT8Hj2toHXV2IiOSOKovqM1kGIZU6fj7d3EDajJ92z2t5+69K7qIfuvV6SQjIvmzyb/b+DOKcnVn0htLTr6P+7eAaxrIGeBq5QzhgqATdxZcP/LI1d6SxOem5bf9LX/GS7aM0sdvFTlwnPkLUKtRhBQqy/eh6RN8RXUMTNjkzk/gmpab92XQ9AuN2BOf8m184FViSHMSTXJKA4sCZmnMEADpCrHuzIglmuq2r3GUaTf+L7Tt1GP7e5YPiPRDQXupLBCD7k4IlzBx43k8NYrro1BEyvk1V8OUxqaIpzA/RVhMDPEwLZtdJ5Ta3O2XE3XRgf8LZJZJkCp35gd9/xp63i0mD02YgHYeNk1UXetXB0uA0uWNhvs4fjjdn6aWvcr/RAstgex94Apxv/1vgo6AE+ndFhQth7FMJ/3iq98gyjdT/DakVpKu1xr/X4iMtx1xm9vGleJ//Oc9YRMpIbxJte8E2+aGgPMZj6ZvkNuZ1KEoYAmoO2ezKpmBs9lViIlOOVxK82Xhk6w78/do63MHp6WZrAMuqEd6XMqadt9vzKd0PtK4WPvuLtAsw6kp4t9Ywvp2HnTABQ5Bkw1w2DRFD4NbBjPZb4duqwezcu2+llPditAA2Gu0o=","authorEmailMD5":"1bab52ce4bedb23809f85251a98b82f0","authorUri":"","authorUserId":"disqus:disqus_OW9fbW4I3h","authorFallbackAvatar":"https://disqus.com/api/users/avatars/disqus_OW9fbW4I3h.jpg","message":"Can you briefly explain why you cannot (or couldn't because apparently C#6 permits it) await in catch/finally blocks?","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"","date":"2015-11-26T15:39:37Z","timestamp":1448552377},{"_id":"f13db1a5-ebf2-34c6-aa47-c2588bb04d92","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"You couldn't (in C#5 and earlier) because the language didn't support it.\r\n\r\nNote that every language feature starts at minus 100 points: [http://blogs.msdn.com/b/ericgu/archive/2004/01/12/57985.aspx](http://blogs.msdn.com/b/ericgu/archive/2004/01/12/57985.aspx)","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"ee32d751-6c99-3a65-bcb3-ce27297c8957","date":"2015-11-26T19:16:50Z","timestamp":1448565410},{"_id":"e813545a-86ca-3006-94a7-d2e30b9aff9e","authorName":"Rahul Shrikrishna Joshi","authorEmailEncrypted":"lWhywBXO9/RcUcxTZEnsDC1Ag8rMKkzHjWseTVVdESQruoCDft43JdlVkK9UIwm0MoEw7RavKfnNtc6gkL9feoiwfCJsMsq4SrvMBphkoPedDzuqceDe68Pg9K+p/o6ow1O0whCPlcC5xh9vLbJ9lEhLfmWl9S58UIyHYEsBL9fPZSuM8VFfjnVB06FGPpZyseSVZ0jNgeEEunsdsDNLPMC6ec3mCABetBcGyF7CGNWcWUBLl/FfZUbM50ASu48Lq5IeIaLfdZVELlGkuztfX8lTZR6AX9M0nBkjDaK08mxKY9vhEyyVGQ7DPgE+UkuVTgqmQd0dzAv214Y6hZj/1ykGkHlFM2b9LlZbZ4mxzlxJkt1ZTFvQQAjpvNs3inU3taGDihDlcuMA0NX9C6FAmX+Nlx/4bmppSb+MOiooXAqBKCSUxYGdF1a+AVwSzUUXpWK8DJ3VF1EjaC2YS2Y60+I7FEyEa2VDu6fsvWZGDTCjPvSEqbj8z0eFhHg6qR0cfxHxGGCvL1MLMA3582Q0pswWNLKF3VMWHCN0ZFNDwMsrz8tdFuvQiSzkDWe7wtbqbr5hYgUcz6r5JGJIS15pAXxrz3X1WkNpLyH87BPkTGS6LXmZvwW9/gtEOXd/OOyH5dkZHCW0ar17eTRn5Xz2E5saLPbxqHiX24nNivc6Fe0=","authorEmailMD5":"8cccaac7f182897317df2e337a11be01","authorUri":"","authorUserId":"disqus:rahulshrikrishnajoshi","authorFallbackAvatar":"","message":"We can use MyLogger.LogAsync(ex).Wait(); in VS2013 instead","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"","date":"2016-04-22T04:55:29Z","timestamp":1461300929},{"_id":"eada00f3-b63d-3457-8270-3da9fe7217a6","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Wait() can easily cause deadlocks, as I describe here: [http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html](http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html)","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"e813545a-86ca-3006-94a7-d2e30b9aff9e","date":"2016-04-22T10:54:27Z","timestamp":1461322467},{"_id":"93f30af3-4f6b-3e0c-9bbf-ca8edb534ae8","authorName":"Pinky Paru","authorEmailEncrypted":"O8CgJBJkYLjlHkAFeVrpbXeNJOq+d1kpL3kZkqx/51TU31ywXcUx22cw3xLw7U8cTVTh2KZoF6dTKtXhKdcbR7n3q7GCsp0Qq0g+G9FbZ2tbnjLUKvNmvIN52E5IoGRhEaTaYEkZZ/Yny/CmTNlbu0mF2q6x4lvMD4KnHDe0cnae4eG150ORNNBnaNE8UmqSviQF3sxAlUhZn8QUSoFQVDgKBuZU5hL8sdw7FJJlq4xTU0MkDL8EQo1p83oaVKDwyw+nGQuFBTGjyGAZ0Z1o+grswJtcxIAoHann4MqTCfHbz83vqaYzF6VpKuyZlOMOqdaeccx/1TD3JKD6Mz2+8VPf2mf6iPmN/sIvQpxeHLlxcE03Ral8DVHxJufdzBImKs6jCVFaQAzdHqFp+tWIEEZECUDiOpNnx55Tt8g4NIVqoCD5Z7r3S/krDpIl7bLwAa/8QNVQhwE9RmDtMjAJFhpT4GTykvYMx6KHomXSeLr/6wogFB9x1oIUuvOogIuF1WV9vr056gmJi65sDsk+G/+VAyGzQDjFlQWO56wFii4K9bJnxElYmuO1jfPlJGBOSEqeIfQTv+Qca6wNJzCg8BIjrmNtXIS37lV4zOeIpNO2KZ6b404v9SeedPgYjP5Natkqz0IliQFOJYiwH59rdL42WzofBwVsTCORPkJ+wm8=","authorEmailMD5":"853585d273c77c62e48831ea5e691da7","authorUri":"","authorUserId":"disqus:pinkyparu","authorFallbackAvatar":"","message":"Please tell me what is wrong with the code. Finally block is not executing. In async methods when finally block will execute?\r\n\r\nTcpListener listener;  \r\n private async Task WaitForNewClientsAsync(int port, IPAddress localIPAddress)  \r\n {  \r\n listener = new TcpListener(localIPAddress, port);  \r\n listener.Start();\r\n\r\n TcpClient client = default(TcpClient);  \r\n try  \r\n {  \r\n while (true)  \r\n {  \r\n File.AppendAllText(@\"D:\\tracer.txt\", \"receiver started asynchronously\\n\");  \r\n client = await listener.AcceptTcpClientAsync();  \r\n IClient clientInfo = new Client(client);  \r\n Clients.Instance.AddClient(clientInfo);  \r\n clientInfo.Initialize();  \r\n }  \r\n }  \r\n catch (ObjectDisposedException)  \r\n {  \r\n return;  \r\n }  \r\n finally  \r\n {  \r\n listener.Stop();  \r\n File.AppendAllText(@\"D:\\tracer.txt\", \"receiver stopped\\n\");  \r\n }  \r\n }","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"","date":"2018-02-28T06:22:20Z","timestamp":1519798940},{"_id":"c578f9f4-bd6b-3c06-ac5b-8af9c4872293","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"You have a while (true), so the finally block will only be hit if an exception is thrown.","postId":"2014_06_await-in-catch-and-finally-196df97f-fc37-3a25-b9e6-1b95025b3836","replyTo":"93f30af3-4f6b-3e0c-9bbf-ca8edb534ae8","date":"2018-02-28T18:31:06Z","timestamp":1519842666}]