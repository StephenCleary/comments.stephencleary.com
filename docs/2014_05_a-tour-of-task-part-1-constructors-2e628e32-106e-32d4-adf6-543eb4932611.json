[{"_id":"27932200-3413-3252-94a4-403eaf3cd312","authorName":"Stephen Cleary","authorEmailEncrypted":"FFMglCJbR19zBIl2ckmzTlg+f4Yo25+oR7D9BkOYY0qUrtKBK6zT4UYBOLYHYHWD0eTRf3eawv0OtD+HHP1CER86nMHvmaPklbtkgpGPiwIDS7faAeB++eM74NrzgcmN+OuNwYpVfZggemX2K2W2s3sEKzFbipiXIf+0TStgVes20v3vI8OffvsJ5C0X5+6eTFWKg86RSuk2q5XrbzUwtlwZKOEWKxNURMiLKqQvtUNty3aIGlq2BeEd8oj6cpN1sQkpQ8ZGTSvnWTDjNJSkkrEISAegBNvdEGlq0iKWUqi/VSBHeViF/SU8XavZ4xKjjJjXP+4VrsvE3R8NwGL3WczFXZ+BtwkTfGl6ta+Hdj7a1XYl2FIvNxwV6aP1sMSlcEVRWxNNcRW/LGJdg/puBBPozJaTlUiE5I0wW0dpSNGSmYnN8MErivnr7RQjDXGiyByaMZwhN9amoCf6x80fgqRp1uj6mLA6ls1tcUbtu4+vxXJ0h5IHy0Nx8eu36WXOiTmYfmYTqVfqzQy9SNb2Keb+E15OLwGotqivHfsSzGQdl7HYZ8AYYQonoH4VAg/oIzdAYWDkCwAHpZ9FN3niM2Twtjp775ZFTDY9Qjj+Dd8RKLuiOdrTKjNgs6vabMQ3z848i9RhGP12j+E7OdpQ15hVVHdgTCTaUO3VhG/257M=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://www.blogger.com/profile/13192873941258824056","authorUserId":"","authorFallbackAvatar":"","message":"Actually, I prefer using Func for delayed scheduling. Thanks for reminding me of that!","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-16T22:04:34Z","timestamp":1400277874},{"_id":"b9180744-c8cd-3e51-84ce-8f2f28f607bf","authorName":"René Stein","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/17167694673352636541","authorUserId":"","authorFallbackAvatar":"","message":"Thanks for the article, Stephen. I agree, task constructors are useful (only?) for delayed task scheduling.   \r\nI am using task constructor as a workaround for some problems with task scheduling in my BOOST ASIO .Net.  \r\n\r\n[https://bitbucket.org/renestein/rstein.async/src/06551e00773c6adbf807c4b4e6b685adde858cc4?at=master](https://bitbucket.org/renestein/rstein.async/src/06551e00773c6adbf807c4b4e6b685adde858cc4?at=master)  ","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-16T21:35:44Z","timestamp":1400276144},{"_id":"4db02c18-edb8-3cfe-95de-3c884c1ea7e5","authorName":"Noseratio","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://stackoverflow.com/users/1768303/noseratio","authorUserId":"","authorFallbackAvatar":"","message":"​A great article, thanks. I once answered a question where I used a Task constructor to simulate a promise-style task: [http://stackoverflow.com/q/22704575/1768303](http://stackoverflow.com/q/22704575/1768303). It was admittedly contrived but still interesting.","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-17T04:32:26Z","timestamp":1400301146},{"_id":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","authorName":"Nick","authorEmailEncrypted":"ekP2KbH/M3XrtlnYq+x1YtBO+VGyUMcKTojGgsUIjre5s4X1ifbzvDXew8Vk2mO+Rv3Q2q0QSY2bJYiatkzfvipKKUEwjOX6F/NV+0+7/BDCYqyH/kDJlF17xgxfJCi+Tr9LaLvXZyJ6QEqmV3X29C5Z0X9jlR3Yx/QlQ1DvD6NatyL+sgaqSgAgx3nbVbdmW66rlMIgMxLWH4inmT3yYV27oXmGl0lngmKIKbi3n3PWrHuQIfImMztAkto6PV53BBWwpRzCAotkEXafWy/T7rFgNfBtUn9ukfHorrNFW1VVe9NMatNf+0izLm8w6To/igeFxOL0BH2P0ro5FkabL7TnQ5KEot90IZhKU2P2dyba91K1zhBuGeoFZVA8TyozxvSg45CwtikhqRk0SBXggIwa6Q5wLVSCli94AXKr/6/zL0yOx5aMB4r40/9IUvkJGwPjtFmtQ9dMyWJvMxxc2hy7maIATlefC5scKZumkz45EzznhUyRs/O4Wu9MlGAPKyx+wMWaw3wWIPc0lJQunFcyJOgWWW69YJZ89NvUq7zfXCxG94EF0TQUTj4jmSZ8+k3UOatYp4ZaFqHOgj0/TW9tAtMpiD76veyuaXJQDAFuJQQBnlPnDNuhHoNGfGwHc88ShJTllvUgHdA+KbKWXWj1Eg3ljRxGrcBgzZMVFcQ=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","authorUri":"","authorUserId":"disqus:disqus_podUK3vGs5","authorFallbackAvatar":"https://disqus.com/api/users/avatars/disqus_podUK3vGs5.jpg","message":"Hi Stephen, thanks for the article. - I've read many of yours in the last six months. Question on your statement not to use task constructors. Microsoft's Async example at [https://msdn.microsoft.com/en-us/library/hh191443.aspx](https://msdn.microsoft.com/en-us/library/hh191443.aspx) uses a task constructor that is then awaited after some other work is done. If I understand you right and you advise against this then how would you re-write the code they have below?\r\n\r\n // GetStringAsync returns a Task<string>. That means that when you await the   \r\n // task you'll get a string (urlContents).  \r\n Task<string> getStringTask = client.GetStringAsync(\"[http://msdn.microsoft.com](http://msdn.microsoft.com)\");\r\n\r\n // You can do work here that doesn't rely on the string from GetStringAsync.  \r\n DoIndependentWork();\r\n\r\n // The await operator suspends AccessTheWebAsync.   \r\n // - AccessTheWebAsync can't continue until getStringTask is complete.   \r\n // - Meanwhile, control returns to the caller of AccessTheWebAsync.   \r\n // - Control resumes here when getStringTask is complete.   \r\n // - The await operator then retrieves the string result from getStringTask.   \r\n string urlContents = await getStringTask;","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2015-03-05T22:49:06Z","timestamp":1425595746},{"_id":"64733784-e165-3825-b371-7b629299f4b6","authorName":"Stephen Cleary","authorEmailEncrypted":"cLppgzk3dQYDWPUgpVvx1OgCP58xfh/cWPM3O8eWfejqqNcBwOY0YSdEg9xZ2IvOJy1qRs4XW97R8MREAPvdntt59czZDYzLL5n/Ix01gtcLv6HLwPKpNDb4it9gou0wufqae+khFrN2rmU8mmJwdSnA4xXa49m/mJ5SkgZocWl1XJOXoqixaIncsug38CtvXcllmNVjrWY/UYyXK3Xc2EavsrUByqMc3e+XIAHyNA1YOgbOw8vqwnBHJoQDQHi6JzYgJ2Lw/OdR4qx5VJCNlNJan6LA9/h9CcjymOoJ4s7fXJfeaFdU3R+W+aIaxCaYudH5AUbH6wOza8u2PD+Bc3L/kfdToba8ZQ5dcm8i2ytvSuL7/3f0xoXGEN2RX+1hp0jZoOyoodi8GgEol+nHkAeNwKo92EiIefF0nqRp5GKjwClkwLKcdpZhSUPMdRHY56IMqGiKVzrQowv4CBeXoEeD7mrDqWmJUEI7zbof8+23xPHURhj44xHmGNyEtY78TDl2oTe7EBdwB9MZfTSh/tg8T4cKLSJJOyFZCccLEugNH4Vdw/AvWICFMJ296Inkf0bM+BkaixQBtvQtPPSPPX/wzG5nRsfMf0b7Ih9PC7Lvng7KZtoCFSEUESK8MncYX+J4c6JXz1CfvDBvr4PASmEWpC/W6RF7KrNgd0/KlZM=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"That code doesn't use the task constructor. Code using the task constructor looks like \"Task<string> getStringTask = new Task<string>();\".","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","date":"2015-03-05T23:01:46Z","timestamp":1425596506},{"_id":"baa8e4f0-d1ce-3bc0-9bfd-11d875aaa80e","authorName":"Nick","authorEmailEncrypted":"gGREVJaaNq2lTR30WU87C5H45j3tU7oTizSS6u2gEP0ZgLhb60FQSNE9MZcA/K5QZ/oXoHTt0sAnUAcAsFpWW/Yun+L9noPzMIPUg9zDbOCyPdENt42MlEHDAO3qvQvd+cItq72DqiCu7kxCfjoi6CXPQ4wfhLi1of0IA2s41Jk4RiRkeeJjgwqPEV9GmXYdkdGgxvwUz00hMzCrihgAmLHiwOjN/bbVV9PKgRppWgvhMOUZScj7D9Ty7QIKzmWtIDnRBawJPkWIxHEkLqwNMF4Xdoxzk4RrgSW691fxJ1nm0QuOfuv0jyiVWak0IMNGN8ETNMOkvQesjQGnXwyh7LszOAneo9tV8f2PmcZueg5t0acvriWMlUw2TSCRJq3bDOTz9SbRuoSsGxo3Q5C6GwbqedU5aLhO3Xy5GG9lmxLb3n6BSY9TdndH/aoVaZiFKTJ4n5AOXyvJNe/HLsL2GECrAPOKXxsVwDhDgaa1yjHBuQGfZbuSA45WkfVElhydK0HTPIhnpRaaCx481mUNWmg8oG6zjv7gE9QBBQtBTn7mQT4Vl9Hx7CkRbLZHc3Nayb745bWmzm3nPD11DAZpdbb5Wbf5Ms4qsaEn1YFVPUf+kdlOosou/ICQcq9R7kqXnkGa06GsJ8wDCNWHloT8Ln4oQF8ROJT4/aKAXmRKvRQ=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","authorUri":"","authorUserId":"disqus:disqus_podUK3vGs5","authorFallbackAvatar":"https://disqus.com/api/users/avatars/disqus_podUK3vGs5.jpg","message":"Ah sorry, brain fade on my part, thanks.","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"64733784-e165-3825-b371-7b629299f4b6","date":"2015-03-05T23:03:55Z","timestamp":1425596635}]