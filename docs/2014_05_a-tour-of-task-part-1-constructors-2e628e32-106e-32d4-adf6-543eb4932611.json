[{"_id":"27932200-3413-3252-94a4-403eaf3cd312","authorName":"Stephen Cleary","authorEmailEncrypted":"DKvFciVQWaPf2vdf0cbcdThPGTZ15pZvuISpfbu3zNzOrJS//eKwZP4El71GKy0XZ9qUu31c1JCliH795rzamt5hMsG4nxRGDVh1Q/SWvIuDjT2evD6Joz1akumfqFdyrBnFAY9EhLCixjIS91iFEpOfVW7M4xnfjIxUCdUGUi0UtHgl/MAL9OzMtOfCgUNHskWre4l3w+8MdvBhGZhSYLtAGuD2yFP3L8SCTTNCTopTaKif6AlRLmtfvjFUXe9M+7I9fkxQU5leSjt9Hy2kRyuuWkdfCXjBssfEvi9l4gzMwyBMRLA1NyeP0GrSoFma2wl63M+ABoNbixov1gsaB0dwECcq4lp7MMHcf25hAjDy+DPbs37mcMYEUTrTGVZG/wioX91XVd0QzjpUOmpbvEfkS4SH58L6MK9NJkOvs4BX094l/LyZmg24vKXqObAJdB8woOYPiG/lYtfSyTqWfVQNCUmTwUHiWqX9i5HXYy7i79V5LJRNiRRifr489yEx3DWPWOMPYGb1I/iuGad6zZnKSvfZtet6IZiLejC8pKR4VF9+W28mYy2RLf3kentHqGh8uoHy3rDdJjuP/ysmR+P5AhKECf9j8U89oLJp0SzjDbM7e+76D/z9lgt9iC9YGwJiwgLG4DjiIZpolRlzX7w7KFwSEItmMXhjJ5bbK2I=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Actually, I prefer using Func for delayed scheduling. Thanks for reminding me of that!","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-16T22:04:34Z","timestamp":1400277874,"authorUserId":""},{"_id":"b9180744-c8cd-3e51-84ce-8f2f28f607bf","authorName":"René Stein","authorEmailEncrypted":"","authorEmailMD5":"","message":"Thanks for the article, Stephen. I agree, task constructors are useful (only?) for delayed task scheduling.   \r\nI am using task constructor as a workaround for some problems with task scheduling in my BOOST ASIO .Net.  \r\n\r\n[https://bitbucket.org/renes...](https://bitbucket.org/renestein/rstein.async/src/06551e00773c6adbf807c4b4e6b685adde858cc4?at=master \"https://bitbucket.org/renestein/rstein.async/src/06551e00773c6adbf807c4b4e6b685adde858cc4?at=master\")  ","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-16T21:35:44Z","timestamp":1400276144,"authorUserId":""},{"_id":"4db02c18-edb8-3cfe-95de-3c884c1ea7e5","authorName":"Noseratio","authorEmailEncrypted":"","authorEmailMD5":"","message":"​A great article, thanks. I once answered a question where I used a Task constructor to simulate a promise-style task: [http://stackoverflow.com/q/...](http://stackoverflow.com/q/22704575/1768303 \"http://stackoverflow.com/q/22704575/1768303\"). It was admittedly contrived but still interesting.","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-17T04:32:26Z","timestamp":1400301146,"authorUserId":""},{"_id":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","authorName":"Nick","authorEmailEncrypted":"P+0tMeU/hYs8iQ8oQrsLdYpxskX+oYSXgGScKlsp5nP7glWNoKWXncpwdW19FzAoQOnVIYkg3fGkepBZxkokxlw+GntxhUGIczjYrkewnnivxX/FSppZxmqEV23uo/v8XQBz90LLH7ReBdZn/3HCg57/JIquxRipdxxZ7g8np7CpQ6TV2f+hJSoIohssbSyF08/8EgQa6+OPq1wjpYk4hpxIj9qhbiEwPfjMU4XzLAs4+2wro3NI/kJSuSYvnjDOjJqYOFYhdTY7mk0Oms6CCOoUqSXHbsLPw3GbxFo3z1K6SNKdogD0mgrW6oOhowRQ3MgSDvqs6k3jCh1QLj+AaH5WW5Kih1x8EdP5xvDx8oWxlgS4o1Z0ELZ819dKHwipQpNyiXjMXEYO/rrPTEIiN6uHB/0nxv/rYYNy0v3VHsbT8+bpNwzcT7kvCpjgrRivMkMSiJotlmouVfOm1yFjcpi2qBq257sJb/bWs1onq0s8vFWtQ4QckfjhmTDJH2/dZ8Ssj8VFMo54QnA1JSXy00beoCQSPioTtI4CYgls3if6SuAkdE4rsZRIAFi2TG2iXX63OQgjuxTgo4UMk/TK6Mjmx/N5AnLaakjCIFRz/xtyuBGPHh2Br/oRmh4vVc0ydu3f3uQu+rNBcC0BRYyZnXm1iNcvciHWVGRMfHfBLV4=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Hi Stephen, thanks for the article. - I've read many of yours in the last six months. Question on your statement not to use task constructors. Microsoft's Async example at [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/library/hh191443.aspx? \"https://msdn.microsoft.com/en-us/library/hh191443.aspx?\") uses a task constructor that is then awaited after some other work is done. If I understand you right and you advise against this then how would you re-write the code they have below?\r\n\r\n // GetStringAsync returns a Task<string>. That means that when you await the   \r\n // task you'll get a string (urlContents).  \r\n Task<string> getStringTask = client.GetStringAsync(\"[http://msdn.microsoft.com](http://msdn.microsoft.com \"http://msdn.microsoft.com\")\");\r\n\r\n // You can do work here that doesn't rely on the string from GetStringAsync.  \r\n DoIndependentWork();\r\n\r\n // The await operator suspends AccessTheWebAsync.   \r\n // - AccessTheWebAsync can't continue until getStringTask is complete.   \r\n // - Meanwhile, control returns to the caller of AccessTheWebAsync.   \r\n // - Control resumes here when getStringTask is complete.   \r\n // - The await operator then retrieves the string result from getStringTask.   \r\n string urlContents = await getStringTask;","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2015-03-05T22:49:06Z","timestamp":1425595746,"authorUserId":"disqus:disqus_podUK3vGs5"},{"_id":"64733784-e165-3825-b371-7b629299f4b6","authorName":"Stephen Cleary","authorEmailEncrypted":"aXIj+vUueNEPvFaXoIytKSRUuFsaatwJ7Pi9Y85AvIUNG6gbOhwj3bjIso1Kn2fC2Ndy4A9yt5B3DKZw1t3UYlgLa29HyZaUuJTphWD1bB6sJ+bEsZW36rXzQ7+RnXULH6NKB0aGixfvi4QoZwMXS8Js2Tf5fnmBSzs5ADUArQw775a0UqSQ0jRkb4CREcnbTzGDVE5jzCBQEX1zgT8gLbEfQ6bbfyp7GbeP6wqqv1WXzlmCxbNtKMdMuLb5HkvLQFSQHg3dKKAckOfoGbvATziHlNYPq6FeLylAhC0JVgM9anGtKOpaCLTuoHWgQiPoU1l6lXPM4pXR0JRmph83Z5OF17g0m77vr9+9mH4Knc6PLVDB5U5JuVaYBbkQu0R8+MHFpThJtf374ZOC2XBPJYWcfFtNYKQhkx1AVxg81gK1aRWS3GoCQUf5kg1I8eS+8eeqrpd7uuOrpD8qn682n1I5XNriv5CUZMh5QvbFEJ1GjPOpWqpHxo0P6QwLwofN6ZqwnlLicSt+HJnwV3qkgixdP63dK5PWAPtP5qk424yOqNDcatES1mL3DWzp5Lt/NOHTuQpSc+lS/ojkg1IZi0nSUw5rkZNZqH432HuM4dZD8VJqFcWhv5SD5ux9pz+A4Eh9dmaDstAOixM3z1JF9R7t6g2yTUlH3rBWV2/HTck=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"That code doesn't use the task constructor. Code using the task constructor looks like \"Task<string> getStringTask = new Task<string>();\".","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","date":"2015-03-05T23:01:46Z","timestamp":1425596506,"authorUserId":"disqus:stephen_cleary"},{"_id":"baa8e4f0-d1ce-3bc0-9bfd-11d875aaa80e","authorName":"Nick","authorEmailEncrypted":"OefPgyO5iiKHCM8Elu1O/sIMZpfDkqh+fRE5eIDVDMB+iO/Q9EIrhFV8aMkPIK4W9rf+ecbyPJJv6+Gd06QLrQwyHu4F++1rMyBpHvSgw9eEzTk/ZUXrCGdcd6UHSGE+74q8u+jFfWq3B3Arbdahsb7XnGKqYuLc9jG75UjHSHHAhCj4+G4U2VQETMKjphTBi1FQfuFYtbocI7uu/YAOBkZazKqYifXqB1uu2XnDIKoBPcKPX0VzFTgGSo57VrY9837Qru+zck7di4rFIw34ZnyTn0ujcYLdrwYhqOWCDjknbeBmKIcjFBhql0vX8+7MocwSCCh1vQhoCiuBZAjFgO/8pEbWrR2XvMfSA6lviV6NheM84DCRFUuxgZdlttvHaSxQtslxeRaGPkfz3teSMu9vteSZBV6D0rx9DkWMiL4hH/BbSRfNEFUTN3+VJhe0vRXheGVZ8Cyw2ntiOhU3X5f3TQgBx2EFO/Iy50HQNWkfDx1XSY0famAW3P9UTC+8JvvkG7qObDlbMMQaRdO1sIndkI3s9lQX2S9XC1R69GUOcCrsZC//TsJT3IlvBEBmEWjmrAR0JIyUWU8xJI3i9C1V7RsO4g8V4spnTiu04QS0DDiyYTkezbOYSn3izSPx9JSsxqtehfMpPXc6WEiY7IA9LDD3HprKDJampU1u/P8=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Ah sorry, brain fade on my part, thanks.","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"64733784-e165-3825-b371-7b629299f4b6","date":"2015-03-05T23:03:55Z","timestamp":1425596635,"authorUserId":"disqus:disqus_podUK3vGs5"}]