[{"_id":"27932200-3413-3252-94a4-403eaf3cd312","authorName":"Stephen Cleary","authorEmailEncrypted":"lBBRWdP5zixeNq2QuFk4cPGVIW7WI9z4r6O5vSHq9Zboqar4lWA13VqcyhL8BBEzcpZipro/iJkvxIh83OAzU6WPhsW54sQOHRnVZHYuMSiFdQOu9X9rp0BTNtamuzNNCZHUkoj5+JhbLpAhcQyZNx2qdlBbJ27bfdFZiSDlXH3WlPsJcaVN9vniliAObD25vNy599s3nvEjZkWKjMVgNlwl0z6v6Jw2FQT18Qdm8ROMNqIbkzelTiPKSYJhweXyP09RT55coC1f3HAmzQbdK1XL8LC48zwwC0kRktABHOkreGRCVQRHYbwSD271xp5MDGnwvnc+YSPrqY5dNFJAr/qZcUdhJB1dd8YYwmVWfwxy7OXGNBggzQsliA0diTHR0SrKQ0gqI00lrQ453EVGAQciC7nSGuTrgvPHGAfeilWVIyWrjz00h7rxDzt37FkoJMnlw7oyJqXOs92rF11Z/aoKvx8Hlh3Q1YrWuFIdYLfsaFuKk4GtGy1ObeywGA40/onyWENxVwVCsSC2Hi6YcpD93jCUTPtFN2noDEobTcaD5nw6e+BMtyzpfXoVTlFcddfdMf3XDxx8SJZaflmQQswWYmTNg3b/dcl91OgVEa+0lwbXp6PRIAZ4Zbxp8kY+zCHLbboSvc9HA8igtRH7lbePalhggOUAG8knRA0Pxu4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Actually, I prefer using Func for delayed scheduling. Thanks for reminding me of that!","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-16T22:04:34Z","timestamp":1400277874,"authorUserId":""},{"_id":"b9180744-c8cd-3e51-84ce-8f2f28f607bf","authorName":"René Stein","authorEmailEncrypted":"","authorEmailMD5":"","message":"Thanks for the article, Stephen. I agree, task constructors are useful (only?) for delayed task scheduling.   \r\nI am using task constructor as a workaround for some problems with task scheduling in my BOOST ASIO .Net.  \r\n\r\n[https://bitbucket.org/renestein/rstein.async/src/06551e00773c6adbf807c4b4e6b685adde858cc4?at=master](https://bitbucket.org/renestein/rstein.async/src/06551e00773c6adbf807c4b4e6b685adde858cc4?at=master)  ","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-16T21:35:44Z","timestamp":1400276144,"authorUserId":""},{"_id":"4db02c18-edb8-3cfe-95de-3c884c1ea7e5","authorName":"Noseratio","authorEmailEncrypted":"","authorEmailMD5":"","message":"​A great article, thanks. I once answered a question where I used a Task constructor to simulate a promise-style task: [http://stackoverflow.com/q/22704575/1768303](http://stackoverflow.com/q/22704575/1768303). It was admittedly contrived but still interesting.","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2014-05-17T04:32:26Z","timestamp":1400301146,"authorUserId":""},{"_id":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","authorName":"Nick","authorEmailEncrypted":"vExPRmATE1yHgwkAlsAUM7UKrNp5xTFfntkf3ca5CeCkDHz/gx3UTfv5LIsS6EnB+1AGuPZ74sp9WDiVZxSmuJVJ3ATfiQuJBZ70VeKgfq+SBquX0iizUaSyJtBNRmPX2wAy3/EGeLnu9jO42VjidrNY9ZpPIiQhezQVOfKHlX2WA8hs4y/EfPpsCM29c6zjWA8yl1kPb+RwRG7wf0qGbRTd/AMlzigpLM/VNHh1ceGMrAd4v6Y8KYZ7yHmeiUSm4S7r+yDiCp9ifOm/yngeVdN0H6Ua2r0U2CaKb1YFknrRMxKzN5ZKuHwvYqpjxWw0AJa+bL04GPZ3OR/u1eXj83iXxTSXzpyhQziVrbDMxzvY/mjlP3QgJHme5NCSld7IIDHg9jC0OHoqqH+ER4n3ckxJD/QlTITKLQDWf2z11Fwdudl5dQlJEB6YhIWJZD5TNBwAj+x8tG0pEeSp4pXPXQzyNnqrQXQNPIP5ptolPZa+f/Zss6vJ4RiEC0wc4A6vCqYae8qbaQuG4t0/4G1aQqAqMWNX9viC3AgiLyBUUWOELkGm2SyNhMkbzSA02nHCdqgeDPVdGWYa0bH3Dm+y7SCA8xM1gwEprXWuQ3bqfPBOFa+r9ph/BNY4T+i4DgBnK3sh32g9HOLdo6OTfn5AVe1TicX+8+7K/x3HU6R9Bes=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Hi Stephen, thanks for the article. - I've read many of yours in the last six months. Question on your statement not to use task constructors. Microsoft's Async example at [https://msdn.microsoft.com/en-us/library/hh191443.aspx?](https://msdn.microsoft.com/en-us/library/hh191443.aspx?) uses a task constructor that is then awaited after some other work is done. If I understand you right and you advise against this then how would you re-write the code they have below?\r\n\r\n // GetStringAsync returns a Task<string>. That means that when you await the   \r\n // task you'll get a string (urlContents).  \r\n Task<string> getStringTask = client.GetStringAsync(\"[http://msdn.microsoft.com](http://msdn.microsoft.com)\");\r\n\r\n // You can do work here that doesn't rely on the string from GetStringAsync.  \r\n DoIndependentWork();\r\n\r\n // The await operator suspends AccessTheWebAsync.   \r\n // - AccessTheWebAsync can't continue until getStringTask is complete.   \r\n // - Meanwhile, control returns to the caller of AccessTheWebAsync.   \r\n // - Control resumes here when getStringTask is complete.   \r\n // - The await operator then retrieves the string result from getStringTask.   \r\n string urlContents = await getStringTask;","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2015-03-05T22:49:06Z","timestamp":1425595746,"authorUserId":"disqus:disqus_podUK3vGs5"},{"_id":"64733784-e165-3825-b371-7b629299f4b6","authorName":"Stephen Cleary","authorEmailEncrypted":"Tb9eheIW8IsGifaRJ8j4lFsMDUnPCniYLvqeep/3+LqlUUM84cWu/Nv0NShRhRzqbcNCxoMCVz/Wu/BXYruCdLBnAXmecK/4bvMBChjrkbilr5xPhcI/K38+8UUK8z6H7o5mSoiTC50o6jyWlkLsOSwBNxQOoMXaTiK3UlDpV1S3EvqbP/YcK1w0+hIj4C7cc0lNPagrIPq23xBx9O/4+w1WCPYFnl9DoLfWcGf7TQDOlPQCsZTMs9MRtZNyEaEymM2xRUAgqxNCtmoPGZLtwEI9JdWsGdiBQdTfyWuWen58VU21Yluumi9HDmn0DjUTxSTJ07aFefnouroZUTfCsqIpvjxdkEVV0zjs0W8MiCh6t3lT9g/rYwU9e6lw9GJ62mNwruHsB6q7G05q67Ufikewlj8F2mg/Tb/yEYYaVr0HUMH0if/CMwEE1pfRmdDaT9z986cSu9u8nmSR/DgjeSiBqBZoomzPq3SxPg72YiejDgLUDVMmwUOJFM9jkETJ5m3lZ0JFQU0DJ9V40IxixEB0I4eM1zBRKBZGfqW3+Hs6vhz1Sds23Q6WQ3ls3RSG1r3GI9akJZp96mxt8KAjob3DY8jUugKjGtOH77YA3w2AMwA2KXXe8Q40sDf07Maxp9iVop5+Z8jB/wwLxmCCjwZmnKw3ipelVeJfMvZdreo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"That code doesn't use the task constructor. Code using the task constructor looks like \"Task<string> getStringTask = new Task<string>();\".","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","date":"2015-03-05T23:01:46Z","timestamp":1425596506,"authorUserId":"disqus:stephen_cleary"},{"_id":"baa8e4f0-d1ce-3bc0-9bfd-11d875aaa80e","authorName":"Nick","authorEmailEncrypted":"fMZp5cY5FkAhNt/ms2m27UaoD58707fDlrxQipbQsJCTKr/zJyAyY2MjeZBxziRL1Q7j1GzhDYUQMzBvAp+8ki3682GXfhUAfriOJ3P1MNaiK+JnpY3u4Kf5iEvXMzeJMdE89tP4vYBvauneXqh6WkR/25EJIHZhR7/GijxDwNkio84Rhbf8v7QZbNHPE1Xc+rbqDB4TxoS/whZ2+upO09BHoQ07ESckzCoGXHPqGR/BOSa5iadp38Cu0aaq4FejBZUGTjeNE0IJ9wI7k/l+AV+7ab+pb1YCW0aQt0yv3CHulEuFhsLuCJHIbLJ0XbjsKYQkUYrt/IZ8+DdcXc7mZ8u7IrazBYodb+jaX0SNkbD1SeK3MO8YIufoKwzGd6fM+ORH2PEtQBwgq9evtC11lIM4N9sKmsn1NmmZeX3tT9PbPhCo8riu5dsgUv697J+eTKx6M6V0n4EULDtazOzMiztz8zEaf3MKSZLf6TluDMHg5Rc3g66fjwoOUMP9PUVc0aVL/JP6XaYnkhppby0avi9GLp13ZQw6a/FQ9PeN69ZvzWgSK4sKOeeAGNkRdh8NOp7iP5nAdDWe6OAOR+PjjGP+N94ZIS+jI/lNPsAptsE2qKCuFLSvRU8MWYSvUovmwq1V/3d9Ri5CrejIPoAxnPO7rOZ7lLVVCtAOhaWbNOU=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Ah sorry, brain fade on my part, thanks.","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"64733784-e165-3825-b371-7b629299f4b6","date":"2015-03-05T23:03:55Z","timestamp":1425596635,"authorUserId":"disqus:disqus_podUK3vGs5"}]