[{"_id":"3d80af96-1548-3bdd-af96-a8bd2681683c","authorName":"Anonymous","authorEmailEncrypted":"","authorEmailMD5":"","message":"first link is bad","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"","date":"2013-05-03T23:22:55Z","timestamp":1367623375,"authorUserId":""},{"_id":"6ed613e1-af62-3961-9277-230ac5eaba42","authorName":"Stephen Cleary","authorEmailEncrypted":"Rj+7vY89sBDBOdczjMQg7RSjkJNkrtwlOJGDwARpkEydR34e+TYcngHRaGWhJwc8+eALbASrFSkvJo+TnZUUKUuYDadtThe5Tn1VkS47scPE866HO/ZTRiSdSFIPkDuZTub4OksE63/l6ziURzJOYJvpIP7aFLQFVdmEoWjnPVyM6Ez/itg0ENZK3fj5KsRAhb4/Wz7BN+lGswoUsZf/+XIYmuXKxniQdG2VT2o/lPTbrmVjTQx2DDB+N770y4Ax9AbsbgCtJQXC7YPOv7cXsg8FB2YMIbpmP+EA36+Al5QsqYySwDNGrVd/6UBmxhnvNndWtlr8RyghKgPr9VDWSQWZLOz8k/ebLMWHJSDYHWpsNT1WaNZmh+UIPF+P+uwtNqmG9ALp9e5IS+3CjJmosMUQFZkqVsZQWbqZAZgXChds7MSfGndesN9NIxerLLovyvr+W2u0aah5IxYOyBdVO8SZvp3qb1T0Pe8drPKtp5inbtr/aLAfGV1oVMnrxFjGRNzQIUWja/44gwKP1k8lmLfgNMLDAzpYG7nNddy2L/++R2rvN8iIvHX9R3fLFI8oUKU4xS1Usqo5OdqZbAWMifOVwBFBm2iIk2TE1mMgGGCnwo6/cuccdedlrxvqOGnp6y566mEx6XicagffrtT36J7XnuzxUkw3EuWT2sidUek=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Thanks, fixed!","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"","date":"2013-05-04T01:58:57Z","timestamp":1367632737,"authorUserId":""},{"_id":"a18c0153-26fc-3d80-97ba-0cfd969789e0","authorName":"Jedidja Bourgeois","authorEmailEncrypted":"kuHOxkHlzdehPp+E+MhwXvzHohmZPCHAf9WDr+1/FJyDK0kvyxRQcpES1U4tkc0yvSeZqerRuzskThk4SuWs4VxnUXVzi/Jf1wU5iM1toNhBKLs/uUAvMhXcnHgh/Zwb/ZTdrUTmGpy+By6cEsxQOWEfKrS/HCSeP1l91f0x5GJ1NhjaSmGjsK7s233SBePTJuuhaRdP8Lp18BlAmfo+Gnq0QDc010ywUANPQ5P/x+A7ZjH0RwGkrGzGVzdB9yjbERfgAKY+onRvzLFKLxySsS/fSHzi9VzOcz99Vw0pwtS8F0twFKuCYv4xt5d+CjbQKmSUqylsgW2SqUE0PBGsV2AJ3nFLvteHeApixVdy59dCVNDurLMVs/2h3YsBmOAErCbsTr6QdjrIBOaOy5RvARIXkMQOMleYvbnxVcRfzgL+ijrV8RN9l2ndOj3iyQR/WhtelhQCtqV/ufoS3QAfk7fL27Nm+G7JGK6Ch31KHbbFCZwuRx+YBVqGMtYuMtyo7+aPaj2HBQ0CO/xwAlnPrqOc1TM98FnqxroK+19N80WUZmn0ZajgGeWNsmkasnb8aCaBdQN1MmQYUv40U3RPD0ewoCS9izuK9y0LnKU+eSArnkuwOournh64SGc0Ohd77uZ1KOj9rEJgEPDv3VMOZFveMCaDzejdN0y1F4y+gM4=","authorEmailMD5":"a1504cfa978e0f99b67548a4d5ba28d2","message":"Heya,\r\n\r\nThanks for this series of posts! You have a couple comments about (almost) never using BackgroundWorker (although you do mnention it might be ok in synchronous work)\r\n\r\nI'm wondering if I might be in an instance where using BackgroundWorker does make sense. This is for a Windows Phone 8.1 SL app.\r\n\r\n1. (async) Get a list of images\r\n\r\n2. (async) Download the first thumbnail\r\n\r\n3. Fire off a background thread to download the high-quality version of the first image (granted, the downloading and storing are async methods, but it's ok for this thread to block by using .Result)\r\n\r\n4. (async) Download all the other thumbnails\r\n\r\nIn this case, if I use await Task.Run() in step 3, the requests in step 4 won't start until after step 3 finishes. However, calling RunWorkerAsync allows the containing method to continue and grab the other thumbnails while the large image downloads.\r\n\r\nDoes this make sense, or am I missing something about how Task.Run works?\r\n\r\nMany thanks,\r\n\r\nJedidja","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"","date":"2014-09-22T15:12:55Z","timestamp":1411398775,"authorUserId":"disqus:jedidja_bourgeois"},{"_id":"10bb7b1d-3380-3927-899d-663e573374d7","authorName":"Stephen Cleary","authorEmailEncrypted":"qnq+UTpLtb+KIdz6pcbNTGqUVztc8uzV+QIhWYHhl23d0KXnIOI67x0WYDHHwpDohBcIXhHxjrHgFMm27apGNzZUIdRRUVSm5JC8tRxZp0PMi3U+bkbQYykMwoyWHu5rPa09u7wCPU05xzjYhFJHWieT8kMPHnuuYYRBzGINMzezPZJNFsPTk2sfGvzR748zk81mOzO4efdqu4gq2LhXTt4FmpMU/hJTgdi1QdIw9/2KAQCja9lAAIWtpBXxkRg+PomYA8Ggy+HRK+k2GuytG50K3CIFuBEZgTiFQbOd1fy2140RISCayjLr9v3bGP0YfIHAMyOC/vnkNOxNbbou0iY149iRfhub0CHP0nnTk7iM+V5SO5F7+32utG0undnUPClvUs9OTu6gaN86Gsrg/ypePxLh7arvHiz2FzgG7/uFZfFF05CW3aiR0amczOZRkf/kDavfYr+mEGVproYO9bGuWjE6VGffsCYXOtbXzsuOdnhW3AUTpzP/06ai68QduroU+eqUkS+kznPEHWG3QQeIm+v4gNaNa8cWTyl72FK52i1NSyUX2aSLhtO10LnvZZpr3OgfG2XY2bOEMPAq88uVCMZAYdEsGxJ6MmYopa5d+PsCb1QGv5njdRF+biH1mllozewPkTnVdm4kFvvbFPoBhy2ZLpQzQfPmO6tUFH0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"First, from this description, there's nothing CPU-bound that the code is doing. So there should be a straightforward way to do this without BGW or Task.Run at all.\r\n\r\nIn general, you can start an async operation by just calling the method and not doing an await right away; instead, just save the Task in a variable and await it later (possibly using Task.WhenAll or Task.WhenAny).\r\n\r\nThat same strategy can be used with Task.Run, but again it sounds like there would be a better solution without Task.Run or BGW at all.","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"a18c0153-26fc-3d80-97ba-0cfd969789e0","date":"2014-09-24T00:46:32Z","timestamp":1411519592,"authorUserId":"disqus:stephen_cleary"},{"_id":"e02655d2-a327-3802-b13c-735ab86773ab","authorName":"Jedidja Bourgeois","authorEmailEncrypted":"RMBcIqY38i6Z/oQffoKEs51OZ4wZ7eMl0EigrDH99U//swMcp8Iud8zdd/7gfi/LF9yDOQbPD5IVlVFq/COGtaaChFhUlxdc2VSgGNp3WurvXRyDezxgFN8vN+OgMBro2Gws9veH6aZ1+kBAESqYQPjl3K3FzMvTHUAIFHcHV5Tt+3LKuY5CzOFIolqDpxOAoNyWd9iebCtym0st0b9+kr4yH2fA/u4mvcU0Ff+CMgKmdosL4wndan6NGcqfbedYFIbuZ1xVMiEtdfCHMPD0yCGc2D3emR7/TsTv0DO15fSYoPn0ta88CEgr6S+hK3cINm2UoesxCPJ31qm40IAl3+6JT3/pg5OV1kVVotJNbNufybzKGBKay9XwS5cR9zyr/Q0JCnkraJyI+NhFHZ9n+7PwO6oRy5YbrRyUL+tqgfYGbHlGZtmAD4PDqdfzKYdkUYtOPm/KJnMI4MU0McvOF55NsLJrUVqXO7jdP5odHgyzCU49+1lvClOBIggaQV93zScuY0ZnQIC/SV/asqiLvsG6eYQdnTTq9IdDCVP4sOFtuqBb2SlK3IqKSScM7ugLLOKJZGFAz9ioOsEgsUQHEM5/w1nAuY3mXfjuD+BmPljMWbHliQ2p105iYolGBAAUEJSRT0Rg85wckYBxj8d79CCbLXtl+i0wq0O+ly/7S10=","authorEmailMD5":"a1504cfa978e0f99b67548a4d5ba28d2","message":"Ohhh...yes I think I remember stumbling across a similar sample in MSDN at some point. So basically I could create a bunch of Tasks and then await on WhenAll (which in the background is going to spin some/all of them up using a similar method to Parallel.ForEach)?\r\n\r\nI've really enjoyed your articles and all your helpful answers on StackOverflow - thanks! Although I've been developing in .Net for a while, I haven't had the chance to really use this part of the framework until now working on my own Windows Phone app.","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"10bb7b1d-3380-3927-899d-663e573374d7","date":"2014-09-24T01:48:09Z","timestamp":1411523289,"authorUserId":"disqus:jedidja_bourgeois"},{"_id":"4aae8446-5941-309f-a4f9-3356cc1af7ba","authorName":"Stephen Cleary","authorEmailEncrypted":"DUa8zCR9oTynNdzbb/Mo9+cTH/MXVU8+cZXNWJkLNu+8vpYZpCyfY/5KgqNsYT7hF561tJsriK6omsf+decoFQyGmtPMoHSbuT3HNQC5Q8VnijEBKi55ciyIYISPJavS4MM9sXLUDDQxkSQGBOEt1CRdqknsYCT4THODo8xdHwP3LWEqXA7tH5Lf2O53HeLKEkyd5Z+NRpdi8mDm87ewnJufYOiiNzPxz9xY3uuGifthrZXbdgxA/lWZUGsuTw+67fkKDXtPC7fBeCHI5GoW/YmLT97Dfz91oroOqKcTmnfrEt4mAvKat43ThR/hlZ20uKI1qZEW9hEaXsEpsXFoErfTBss0VvwDAp3IM35U0i5ZfHRMMFNYKebfTxZz2mzDzVzBe5Hnp+mGB2G61ClAExYIpUgeYofIOWB5gGdXuagB3UOao7/sTPnccK71wC4b1R2VLMv4kdtnQjnC91iQx4eUt38Enu592btVvA2vRX1h8Lqk2NCNT345kmZ9/SuZeHxW0OGXiocCBlWwh/i4Y+lYV+2swOMs9kj2y+SrXpZGCVu1m/7/uLS5ZC5ey8HBV3X2KPcAKR+NBMAW4Xn0VLR8hib7S1Utxr4b7/5MZXeAfINxAJmLMnX/TOSpNo9/ZhCBBQrLJuJ3apCSBIes2T/6ul8nYwIQOcWLxwAFlYQ=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Pretty close. The tasks are actually already in progress by the time you call WhenAll.\r\n\r\n var images = await DownloadImagesAsync();  \r\n var firstThumbnail = await DownloadThumbnailAsync(images[0]);\r\n\r\n // Start (3) and (4)  \r\n var hqImageTask = DownloadHighQualityAsync(images[0]); // no \"await\"  \r\n var thumbnailTasks = images.Skip(1).Select(image => DownloadHighQualityAsync(image)).ToList();\r\n\r\n // The tasks for (3) and (4) are already in progress\r\n\r\n // Wait for all tasks in (3) and (4) to complete  \r\n var tasks = new List<task>(thumbnailTasks);  \r\n tasks.Add(hqImageTask);  \r\n await Task.WhenAll(tasks);\r\n\r\n // Retrieve results from (3) and (4)  \r\n // Note that the tasks are already complete, so this code will not act asynchronously;  \r\n // we're just using await to retrieve the results cleanly.  \r\n var hqImage = await hqImageTask;  \r\n var thumbnails = await Task.WhenAll(thumbnailTasks);\r\n\r\nJust as a final note, I do try to use the term \"in progress\" for these kinds of asynchronous tasks, rather than \"running\". This is because these tasks (like most async tasks) are Promise Tasks, not Delegate Tasks; more info here: [http://blog.stephencleary.com/2014/06/a-tour-of-task-part-3-status.html](http://blog.stephencleary.com/2014/06/a-tour-of-task-part-3-status.html)","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"e02655d2-a327-3802-b13c-735ab86773ab","date":"2014-09-25T00:27:03Z","timestamp":1411604823,"authorUserId":"disqus:stephen_cleary"},{"_id":"85a3a687-6e42-30c5-8951-e323fb2c3eb4","authorName":"Jedidja Bourgeois","authorEmailEncrypted":"qJjqVoPQYQUhhRXcVL8lw1scOyO+Pb/yGs7UkE6pBigLyuOlU5l6RWxf55mlZbOiYMyi1evpmlcbZeLt1qSffg0iSlv6Vmzuh0aAKvO01HmofwERXMnCTzkn90bm4SwHHYPNMUueypEr7JviH4Oyx6LAJHKLQeTm6OEdvLPsVI6+JSeoabvHLsY0jgL3Jd0KzEEUgEG7CBf7t+1EWRbG2f4nhGicp0IFiWSoEDSXPHH7gZ7cmRWIAYEqZHD3Md6ECgV3EZdZmZKO/6myPUDCKPKBlQdmSbDEpIiLhtRZMqBt7l8BZUisS8uhq6Le0J7WCqeAzzADXYSFiWs3RrbJzRkVkTxdkv5t/2jviaoWdhWduho70DQvj9skpdw7MMGRmmtdu1D8FuHxjCsg9VPFLavnp6LoGR5hj6fTyxcNhTk1y2oPJsSpTuWiupA22WhjYQPDx6DgPQFXda3bSkTtXwApZqj8nQ17AQiSVz2cVzRuO0gaG5Brqm5TNy1pa+vxWwNjnQ40i9clw9mtYzZUJVe2xaQk3VHZ7qcMWbVxlMxjbqbn3s1FHETBNlDiolsLDNTKyk4QZPrtG1w4xLrS8T3atulRWpsFHvtty7RmYXtuvznvMgmjPARyZCkiMr6jvwWfIm/dVugr/F7JfrGO89Zs2d9a4OfVI+YiNUc/sG0=","authorEmailMD5":"a1504cfa978e0f99b67548a4d5ba28d2","message":"Ah ok. Definitely something I need to play with a bit more to really get my head wrapped around. Thanks again for being so patient with people asking very similar questions over and over again :)","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"4aae8446-5941-309f-a4f9-3356cc1af7ba","date":"2014-09-25T00:36:58Z","timestamp":1411605418,"authorUserId":"disqus:jedidja_bourgeois"},{"_id":"80785c45-1c96-32b7-a43d-fbac3f87c7c1","authorName":"Yaz Zen","authorEmailEncrypted":"fZj2EXI5C9m9uypdK8MjqpytevYFjtNiXhRiXZS+H//FquOr87pqm1MZa/tjCJPNYxu1eVxIb5yvCFB/+Ajj8iQojAcYl6JApqdEZ5tI5/zl6EsRwYqfr/J6yTLqW2Dk4RVxEK6zKCl752SYNjH27n6M5h3AMOFwqv+X45QmydR7ysjgbZYXoCgF4M5PI1bcGqxdHK3/7c6D9B88Rr4KcCcSka4lVSgiHuz6EMZoF22gJku3ZTVW+luODQ/HpM/VBPQOMzcFi4R2wyb9V81VdeF2PtaH6dJ+gJe12nIvntogeaRsu8KOJpM84+x2fhkeZctXDu/ylSH0/7J7I31UfRsfyhXXW2D6Rl8B/seVAz7xYD2nnrTh3zffbb+9YpW0wPQ5kQOEjiRS/BmmqFkz/+87+nosoDy7nyKYMj9TL25Ha73cU5KDgLiZmQd0tnuiBp12GeKi17YBpnaPElY9E1wfzJ/vqKRAlmnoeNDfFMjeMct2cforD9gk/IA+XWK1Ay14VylSUglgTA1ZWR08++ypyMlXNSpeEvtiF8eD6KXH36eTjIwtlpT4pfvCPKgPyaJmUekHeY+zUiUNGfEduDxpZ2VxkCdk1bjV/guwA3VxBwYTw9zeCrIbrIypLsQjmtzh8WxJrWuU1VkMOXxuaKEXaUk7Pzk0B3BhSMJ7koc=","authorEmailMD5":"4d39564595188f69fc5af6e97d450088","message":"Thanks, this BackgroundWorker sucks!! I'm stuck since 3 days because of it, I can't make it through a 'for' loop, it always completes before. I'm going to read more about async.  \r\nThanks again","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"","date":"2015-06-30T14:28:08Z","timestamp":1435674488,"authorUserId":"disqus:yazzen"}]