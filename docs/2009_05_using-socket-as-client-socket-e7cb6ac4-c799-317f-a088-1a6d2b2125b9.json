[{"_id":"1a486373-c009-336d-bcaf-d779548484da","authorName":"TH","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/01711760374259717819","authorUserId":"","authorFallbackAvatar":"","message":"I use MSDN async sample + your length prefix solution to write an Async socket Client and Server class, 3000 GB data all success transferred under single client and single data send thread test.   \r\nBut when I use a for loop to create several threads to send data to server, I found that in Client side, the thread created for BeginConnectCallback were always have the same id.  \r\nand all ManualResetEvent mechanism failed, all threads actived when ManualResetEvent.Set( ) called by first thread.  \r\n\r\nHere is my Client side Log sample: ( the problem is why it always Thread 7 do the EndConnect job? )  \r\n\r\n15:33:05.100 Data send Thread 1, BeginConnect to Server 192.168.1.100 Port 6000  \r\n15:33:05.100 Data send Thread 2, BeginConnect to Server 192.168.1.100 Port 6000  \r\n15:33:05.100 Data send Thread 3, BeginConnect to Server 192.168.1.100 Port 6000  \r\n15:33:05.102 ConnectionCallback Thread 7 Execute EndConnect and mreConnectDone.Set( );  \r\n15:33:05.102 ConnectionCallback Thread 7 Execute EndConnect and mreConnectDone.Set( );  \r\n15:33:05.121 Data send Thread 1, Connected via Port 2650, Socket Handle: 8234  \r\n15:33:05.145 ConnectionCallback Thread 7 Execute EndConnect and mreConnectDone.Set( );  \r\n15:33:05.170 Data send Thread 2, Connected via Port 2651, Socket Handle: 8235  \r\n15:33:05.177 Data send Thread 3, Connected via Port 2652, Socket Handle: 8236  \r\n\r\nI can mail you source code if you interested on this.  \r\nmy mail is thlin.harcon@gmail.com  \r\n\r\nthe MSDN sample URL: [http://msdn.microsoft.com/en-us/library/bew39x2a(VS.80).aspx](http://msdn.microsoft.com/en-us/library/bew39x2a(VS.80).aspx)","postId":"2009_05_using-socket-as-client-socket-e7cb6ac4-c799-317f-a088-1a6d2b2125b9","replyTo":"","date":"2013-12-11T16:35:24Z","timestamp":1386779724},{"_id":"2fb63c03-198a-31d7-a0fa-338ef62f3933","authorName":"Stephen Cleary","authorEmailEncrypted":"Jw9XjjBTEUMtHNN4jXg57cC6FIqbOZIXdkMPAGHSxFMGkodVp2DC/ctmW9Z9Kc/rkRzMpxdACz/blOQ2B9Zsl289LwBy0NwdHMorQqKlRThsNoH85LmziFy920/MqPTJBqbPmPYFQTylPQNPR3AQ9qWpAdw2+4tJSp8lWlf37dlCp/pz8zi450fR/9OSt113JhTIfadEvNLPdPfGpvZe+uTkXn5kHmoK/t6/d7ZUji2toXUAZ9PChCTGnZaLfdPmOeFNm6zs+WH0ZJ6FrRTF3apQ4RY39YQjTUhjRnPkKK7ONIwVnCYiKLANHf9WdmbTgRaTUGJrL2SNy4hd1QHTjwoKdPhiT809+kKgobHtybvzpRHv+F5tugvY4eHnO/PYZ6CUXyBay5+zqwif6WawvLuWfrcGm6Z0A7bROvboNDUkofp15cDWS5NKKYjGqfIREJj7nhTzGNPFsAcbDbczMqi36w1uVIyySo3KSt9nffTByRsc2IBCjfaytP/LWd1I4RcUaQ/9jI6Dcima5lO4wVQqEA6b333nuKDaLNWJv0rEDCJueOVPPxXB+TGK771RWVREK0wJ3LDkx0X+vFMNmo7OOvSrKCBKhoFxyJP+hpdg+CKueTU1l931jHOMbWySK7YYEoGcBP7kvg/9xEGxjtRZCC6pNT7+p+3PpJ3g8s8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://www.blogger.com/profile/13192873941258824056","authorUserId":"","authorFallbackAvatar":"","message":"I'm not sure why there's a problem with the same thread always doing EndConnect; this is natural with the .NET IOCP used by asynchronous methods.  \r\n\r\nIf you have a specific problem with code, the best place to post it is Stack Overflow, where there are several people who can take a look at it.  \r\n\r\nP.S. The MSDN socket samples are notoriously poor.","postId":"2009_05_using-socket-as-client-socket-e7cb6ac4-c799-317f-a088-1a6d2b2125b9","replyTo":"","date":"2013-12-11T18:02:23Z","timestamp":1386784943},{"_id":"3686db8a-8d9b-3e39-8777-05048a51e8e4","authorName":"TH","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/01711760374259717819","authorUserId":"","authorFallbackAvatar":"","message":"thank you, my problem solved.","postId":"2009_05_using-socket-as-client-socket-e7cb6ac4-c799-317f-a088-1a6d2b2125b9","replyTo":"","date":"2013-12-13T16:06:53Z","timestamp":1386950813}]