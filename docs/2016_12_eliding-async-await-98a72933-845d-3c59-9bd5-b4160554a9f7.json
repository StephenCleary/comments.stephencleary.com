[{"_id":"3f2eaa86-8cf0-3b0a-8be4-906527397a34","authorName":"Stephen Cleary","authorEmailEncrypted":"dDymvBJGWdt4ojGBkK+O9eVd3Lj71dMhmjszydseJ/Yqqn/KIjlAfEx8L0JvOTDCdbrwVxj5kVM/f83uQ2LAIjDCMi4/iKG0/wOdaajb8mL8oQ6+/UMga/Xgu+mhxt5PGB9ejMAVDXwt5HyoWJ8yW4KAt+sR34hXARNLznaOvlVa9An5OZ4DZe8fTTKtrfpv/9X3xq3X9GVEmru2dTUft9GoFFvsTVz9wnYEgcUyGv52QEe/sXldFr9sXpsDIDL9GuuSoHTAuCOwIKf/uTt1oweCmiMz7CGjHNJaKKypKbCPKefpQEKPxbUOCfu+dgGu3a07dsgYwa9ZpbIcmNTcR8ArRubia8U4zSOVflaSIA67OA94lEB+Bf5QJKovihiWuGzkYgjFaJAsd4fL/3HNPHksBNo6lnAE4oY2bgQJl2e7vzLDdlhSdaaMsCG+PcnnUA0JbxgclqZLCmv2K2EQ6V2JwjYyMqzrxrkTJVSWvSz6Q3DyOpGezuepGdnoNxy554rO1Uxr5gsXw81n1pZK8ujFWDNcVfhlTSvxC2m0UNKq4/0C2M/qvVE5exu/myTt8T+qyv4V2DyuctprG+m6pcgWkrJM2shs8DKsThAZ8GIVo6xH9gnYDKwy5JA+zplVCWVy2aacGoqkERfpX1z5MebWMmTn/HrQuNfmz0trLFE=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, the original draft did have a section on boneheaded exceptions, but I cut it for length reasons.\r\n\r\nBoneheaded precondition exceptions can either be placed on the returned task or thrown directly. There's plenty of code out there that follows either approach (or both!). And for boneheaded exceptions, it doesn't really matter. For all other exceptions, the only reasonable approach is to place them on the returned task.\r\n\r\nWhether to eagerly throw precondition exceptions depends on your perspective, particularly this:\r\n\r\n> the work represented by the task never gets underway, so I don't really expect the method to return me a task.\r\n\r\nThe work *is* the method itself - that's what the task represents. So, if preconditions are run \"before\" the method (logically, not literally), then yes, it makes sense to want the exception thrown directly. But if preconditions are run at the beginning of the method, then it makes sense to fault the task. Jon Skeet is in the throw-directly camp, but I think it doesn't really matter - either way, precondition violations are boneheaded exceptions and thus shouldn't be caught anyway.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"854b548c-7547-30a3-902a-7a994c520380","date":"2016-12-02T11:11:15Z","timestamp":1480677075,"authorUserId":"disqus:stephen_cleary"},{"_id":"854b548c-7547-30a3-902a-7a994c520380","authorName":"Ian Griffiths","authorEmailEncrypted":"BwyIJVimXxjSIA9Mez+BIAlHv8qjU1d0K+4YCMM22WAE7LI+kTY18UExvtC0g+jHyD36iakM9C7l8mT/pJ0fzKSA/ZM8ohRq0gDyw0J+ujP8EoUlgRFqdUbBMph1LjRDxbRVCYtu2xLXXlPpIYE+CM4a2rNUZOt0/L4H1b95QeYcrJhLBhVWcxCNyG8FoZmkklgb6Ep0rBLvf9GmecmmxhAsJaMugKCuAldmlNJD0hp+5FxIkc6lagq41ov84NRKOiQwoW+XylitJ7YjNvUt6AsyutZygfI5+LsBopHFwJ0+tCVt8dHT4w/IKgxI829aEPxclSQPxYaOAFuvtWlPUZuysvA+2tot/aPf3UhWtcdzPTNzYz1/gQGNyvh8bfJ+1UOp9MyMSYjvCXu/Mmb9EKbtQD6HEJAwPvDEm30kZ6COjUlcyluykQXQi2C8zkUPkgd/rO6hJPs/4UqJB0rN4tsdiyFWE/lHq4IjuWXQ5Wck0AI/4GF1H+Ob3p6nVgDXZWK9o29hT2kFT+IL2PEVFmxfjGOd7qqFS6/nv4u6esKttho5ZThQ86Ah7HCVRVQ9Se4BqPRkFvyuUAhAnhBo/5f/Ofy44N1aQZj+z7AY3I3Uu7zVQz+NNknjv7ELmNUYSEcgT33nBZMjQwN0fpuwGGMOq85P2kiPU6EZa9LmhBw=","authorEmailMD5":"8c4da9b88e4f0c290c8441d06d37dfba","message":"You say \"The expected asynchronous semantics are that exceptions are placed on the returned task.\" This surprised me - I would expect it to depend on the nature of the exception. In particular, if the exceptions relate to input validation (e.g., ArgumentNullException) then to me it feels odd to put that in the task. If the input is self-evidently bogus, you're never even going to start work, so although, as you say, \"the returned task represents the execution of the method\" I'd say that if you're throwing what Eric Lippert describes as a \"boneheaded\" exception, the work represented by the task never gets underway, so I don't really expect the method to return me a task.  \r\nIs your description of the \"expected\" semantics based on a design guide that I should be reading?","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-02T06:50:00Z","timestamp":1480661400,"authorUserId":"disqus:ian_griffiths"},{"_id":"ea70a543-96f8-30f7-aa39-0ea46d6fc3ed","authorName":"Thomas Levesque","authorEmailEncrypted":"Qyv+rLgsHnwV1afPHZWPAv5/1PApzYh3VIjsGHpPbTuWARF/auGRuFZlavGlO0I2vBt/msPwepXlXNxeMizeV919BjqAzEG0pINhiWP05gM0E5jbF9Alt6MxVbqSdBBjfxc+PAE+qfjL9HDyYnmTSmCgU4Ksv/r+5viauEqLYJS+FcC9SW6nm2VtKzF+drft3uDz4liVKnmidM1FC7Buv3WFUqZ/2sz9QK6W/3FDPEnmg37l+aTk1v+2IcXCldn/PLK9NfhCe+rJD0bheh2OBqvyx36ZDcK5HOGTNvx0/EAzF229OtTrX7MOUrfh8ejoK6k922MtwROF/oVoKThRrqAZDpwU9OFfcWnGBxfmvo46ZRlO/lUGnenlHUDqSAr5zBViOydBYNpWG+n4rpHVDaNReXzMEyiYu3591gMoFvccdS/KKg7GASac5kMRc9b92qLyf9b5fuRfGcMGP3n4/CGLSl9bstCy5gp1eyjsMuFL37MSqEJ95tI1LzhsOMT5XsPU3kzvWbh7f9Y02cl8ogVyprER9Ewc4jHa7Wj7TG1LZZvycbcSMOowN+mWIpuVq9fJH7nTmr8J/aGpIotUHKCsLpNXDcMq7vBsi5AiT+TCQgvpateugsv/9RqXcco6KOvXBRt5OXdjSRLudJZaHv08Wq5acn9sgN30qn5sO6w=","authorEmailMD5":"f4acdb91aba11ddf8f03d4b12453f3d5","message":"I realized just yesterday another reason to not elide the keywords: the exception stack trace. Async stack traces are already pretty difficult to read as it is, with a lot of noise from \"System.Runtime.CompilerServices.TaskAwaiter\" and generated names from rewritten async methods, but when you elide async/await in an intermediate method, this method doesn't appear in the stack at all! This makes it pretty hard to make sense of logged exceptions.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-02T13:26:06Z","timestamp":1480685166,"authorUserId":"disqus:thomaslevesque"},{"_id":"252e2add-e7d0-30b3-89bf-0f0340d55ecc","authorName":"Daniel Marbach","authorEmailEncrypted":"Is8ZdaLsJ1F+EuP36RR74Ndbnjib5LdVAhYrg6Cd7PhtwFLe9rKj5kMJuuYnC/mkAUrkVa5A6gPKVMjA52kz556TGQRdDNuhFD174kuL/Tc/0EJjqSWVqMvjz9615ZdC0jOq65rSdbef/fB4le6p4piiS9yUZvXgUs5XJzyLDI9GTNW6VKPxAfEoFxUd7SQro4NDu/k7zpzIAfUeCHGpPJT+qzDRlb9UQH8VFYjiDC2fmFHhFlRSPRfVR9W9YSppk2KkHTfYAYEehCnLsC0Ya0uTW5vDzU6vQDX98vJ3spyuUPPjT9PBpqpVJ+CQEMVxBYPjhtAtth1dDlsotb5iY2M5vW+HjsadHeHFR/8xDSWMikFH8czfboDF3vuqiWFNcx6Kjj+/RYYvgbhS12yiZN3TNtM8dQBY+YQRBgN0vZFUzbtQpvrnoxEcJsrTVR1hCcp0b5TcXZD70c59vk45Mwn5IF9x5WF+wPsybiAcpeaB0ray1als/K6Ai5ce0cD15vVRXNe0E9X1ePMaoAS5EMSWdv9o7JJF1K3nJuJ1ZDnsgTfWw6/9g01XU9MZ4KyjiZ9hARJSubaImEyvzhAUXkrxohhxfn7VdtV62XDDQ9UBlqYac1VeiSrVqKhClpAitRM8fFam1qefGv0yR23TxTN6rxKVpwnV1YInv1Og6gI=","authorEmailMD5":"d0fb7ccf44b1c77d123981e29f4c483f","message":"Another great write-up. In my webinars around NServiceBus v6 wich is async from top to bottom I explained another cause why you should always first go with the keywords and then optimize if necessary. The case is when you upgrade existing message handlers you will not forget the await statements when you first mark the handler method async. The compiler guides you then through the process. After you've done that you can look at the code and decide whether it is worth optimizing or not.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-03T12:31:12Z","timestamp":1480768272,"authorUserId":"disqus:danielmarbach"},{"_id":"5a8f7c36-cd7a-3f40-8e3f-c84e0f1d8a0f","authorName":"Jason Bock","authorEmailEncrypted":"b0Func1aaksP+vfmEBEmpADgw2zPiABhqHCCKz1nmJDQNd5e8cNJ5BoHPbD91bcis/kWXKUs9mCCm4T6/Q5kKz2gn3r9FDAv2ijp0xu0vtMGYQC8Dbxxvx7YZyqen5c1bDFHGKH7PqlXR1EuliRCm/0r4U0BdnE8T6QikeAFoz1BPb9F1qVd9JBrtSkPg5BGRioKTo9HedlG0Bbb8BZh78mLjL186K3J6EahFdGVYNhH5vx4A+E3JddiGKPJli5pnnoOIAey2/D6TllRVTWR6+ePOxctW/k1t2wgmlUtEpwc2q7gvrXlm1Drz+H6oDBJsCAIoSRoroj18cQePB+tUFevsCB8m3LbVK8d+Jv3Ak8jiC2qDy9wRQPDKNk2YAohEKd+ZojOiQqE7vu865unFvYD1ZppLRRoL7Sca8yKOSzH3zF/IZjo0JjaowyYPgZvvX0vZHPMddiO7bLgR6sApyOekjTEzx1CPQmXdtgvEImsB+N7oodHhs6m1gt41RdAyc1LG5fLHNhD5SKRANlaUp5oyczE+iAF8ookPpKk3j0n7b2ZQNTF1mjaTiZUrH53d1r4tWhTLVSQD8L3HMm7dEZYUWHG0D5JmNR7Vv87a27r8+lc33WDupxvwe8tNuMi7ARSO9P+vIKYiJACRK4+o/i+peI+4ruLXOzZ1P3O1u4=","authorEmailMD5":"078b61f4e6f93716b54bb5fb434c8a60","message":"I kind of cringe when you show disposing HttpClient as it's something one should generally not do:\r\n\r\n[http://stackoverflow.com/questions/15705092/do-httpclient-and-httpclienthandler-have-to-be-disposed](http://stackoverflow.com/questions/15705092/do-httpclient-and-httpclienthandler-have-to-be-disposed)","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-16T13:47:15Z","timestamp":1481896035,"authorUserId":"disqus:jason_bock"},{"_id":"78a86ac4-941f-35f6-b361-f4620166e04e","authorName":"Ian Griffiths","authorEmailEncrypted":"FwI8QY1QK1mT2+NpEQ8+cAxR8BLrMmmSCN/sJ6MBSsz9MdZb71gawBGfOq3DZbR+bchPcPG2i5zzDwXYE42vZfuVTRXgBwxGwAJyqVnSS56MnKdnBkj3IphjYBSN4Airs95kbjU0aBqRpAFMbkoDkR2ybS73Qh0hJtpeSIYqQKlS4DKsryWA0+gcvw0K1uDBqWK40nkr88vIaBtvkbc3+Y3VHHvCa7djwsoXJozV0NYvOIGJQPDcIoHEyVaVzqg/1N8JKlIp6d5cprKuNU0VJvdIxW2INXgzy/sp2m9o3BFDKAFCHpTfxk7/OPBOPiFyuBXmMsrnTBabS4b0j+6hOKrkIi4Y50r60JAZY26xlUPmX+X58bQwBZ2OIQYrkjKrEs2cdjwapeCtu8OR9rRC5oCfl0z8MM4+Tdu/SL8tw+U7eupOY2niMFrowZaRq3XxkpcSQZgOemygHMYhU2aeeeOcoT6S+z/vlRj4nqvr9ykkV/tHnfZIV7NL8qxEvt9h+QK3UHZyQkYL9ltyItW6zKuY0APl38EoDGoGrMNidxp9m5opS42/KnUpK2X19l1FvqsKAjaxdVTqDT8zNVTrhKP129XtuQwP96DwrYxQ5dagj5TCa1mf8azkZe0HRw1tDMY54sydj5ltHRQhroPa1KGKur9B2oTB3FmWk++IK9k=","authorEmailMD5":"8c4da9b88e4f0c290c8441d06d37dfba","message":"\"The work *is* the method itself - that's what the task represents\"\r\n\r\nI think this is where we disagree. My view has always been that the task represents some work to be done.\r\n\r\nMaybe it's my background in kernel mode device drivers (where everything is async) but the most straightforward view of any async operation to me is some work you've asked to be performed that will take a while to complete. When IO is involved, that very often means that the bulk of the work won't be done by the CPU - it'll be handled by some peripheral. At this point, saying that the task is the *method* seems way off base.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"3f2eaa86-8cf0-3b0a-8be4-906527397a34","date":"2016-12-16T15:11:01Z","timestamp":1481901061,"authorUserId":"disqus:ian_griffiths"},{"_id":"7cd1c7ee-237f-3364-8434-1bc64a2f0b8c","authorName":"Stephen Cleary","authorEmailEncrypted":"haBqlwU3E6twvvryUldIVjmumr8nTw/irmvZfbwnhwZqvmf6WYEl3fzWyWIzByU1N9SPcE1owxs856WdxN0BpdOtb8NoLZFQTXqw3u5KMUNwCokrvo7S/UHahQimEctr5qdsOtQjaA+F2Fvtc7nefivtIJLQkE8cSIw5RIWkbk1UI0fTGfDfXHgLh6l+faGEY6s4h5Hst5nHWpg44abZgm5K5uSh5/3CGC5YoFm5Nj+4UHKbo+1yr7FZ5yj2QOw48szEBfnnK+Mengg3wC6MJAxzu3JKp7/o8HbqfaUQGEA5K1D0CliiwuQpWKPJGOHAixmY4XKOTkoKi98Z/fkyJPKCAOjTJI2gJK4OqIVVNhr4p/YJcBR2+8+XmPqxoamAr1pUz5rSYLJ5R6/au6tUhUdlO9Xyj+8reeiDTCTInpl3lD29i1aIAFU/kYhYi/D3qwQIz1JJZV5rllI28j1PNJJXJFzn1irsOPTw4YzjdcvCAFu0atGZ/k7K3fm0nRnV3lHX7rGbCLowyNyvjjKyKU6ZMdiWPOMQR7C3+vNFdKYDNvsMrTbxhACdC2bMuRmLi37UuM/ZAy2LDhM/pXtWWB1ckZDiakQxP80O9IcKP7GyVrR0Yf66ZyDYPNEgt3giCXSkrM+kwnmYoBXavI4QhoNsRFxo+P5XgPY/u1UQZ1Y=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, both views of Task are completely valid and useful.\r\n\r\nOn the one hand, Task certainly is a modern OVERLAPPED abstraction. It represents some work, often I/O-bound, which can be done by something off-CPU, and the Task will be notified when that work completes. That's a completely valid interpretation of Task, and one that is directly applicable when looking at tasks sourced from TaskFactory.FromAsync.\r\n\r\nHowever, there's another interpretation of Task that is equally valid, particularly for tasks returned from methods. When you have an async method, the async state machine creates your Task and controls it for you. As long as the method awaits an (incomplete) awaitable, the task is not completed. When the method finishes, the task is completed. If the method returns a value, then that becomes the tasks's result. If the method throws an exception, then the task is faulted with that exception. In this way, a Task represents the execution of the method.\r\n\r\nBoth interpretations of Task are correct, and both valuable in different contexts. It is the latter version, however, that most end-users are more familiar with. The vast majority of async users have that view, and really have no idea how tasks \"really work\" at the lowest level - they only compose existing tasks into higher-level operations using async/await. All their experience with creating tasks is done via the async state machine. And the expectation from that mindset is that if an API method returns a task, then that task represents the execution of that method (and thus, they expect exceptions to be placed on the task).","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"78a86ac4-941f-35f6-b361-f4620166e04e","date":"2016-12-17T14:10:58Z","timestamp":1481983858,"authorUserId":"disqus:stephen_cleary"},{"_id":"ed014c86-172e-3ebe-a17f-92831fe37f2a","authorName":"Stephen Cleary","authorEmailEncrypted":"GG7T65vlcuflzf4ORe8Sml8hQaR/JSAm7JGJGW/Z/1gofVP6EG6gtWxZ4Z5Q0q/y8vvNBNjRRV6DfMKap3uRAopGPRobdO9ZLACHd1jji10RbHn5a8Vh74DF87q3NYfjI3Q+8Acjz1cnzEixO7MtMM4GgSKR+Au3cbU8Q3VpN8MF6PM0enF9nIR5g6sBbCchcauslpudauqYtPesf1gNmXQ/TuDM8HnAeOt78k3w4XdGcjFjwJfkbS3URWjlrOZgZpuh3FVXn4qvy9cRUWuL5cjVd34l19POl+wPYniRPHEFkKr3/c8HWWT11uLakRx9ThO6Dha3bTCsas2phT7bokncOqZBxAEBq/tvv0wHZp1F4s5sRqOIq6JWlGzuynhTjscwXSll6sQ2ngb7CZjlcUqcEyPFB4+nI5ijBocG7nHzSbaKAdNrILIQCykbME5RNSFDQaJwV6MIDruyJ/PQLsX1udATbSVYSV7SCbHvHxrZ83jZc3RVjv8p56qJiLdwtpyczypUSSoz8/ZPux9zGQ6fdVjz2Shw3HNEv/Mf3AzzrLqeS/Tlc50n6jtsZ8otOg6U/qE84w7CdN6Q/iaVBBE7JhP+oRGFAAhrh8+z4mgPm3YC1eFNeUIfKUmc6W/CRRNygcqPMHvRYeRwx7n4e3qfkjhS6OZBx70L0w2ey9g=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"But: [http://byterot.blogspot.co.uk/2016/07/singleton-httpclient-dns.html](http://byterot.blogspot.co.uk/2016/07/singleton-httpclient-dns.html)\r\n\r\nHowever, I do agree that HttpClient should generally be shared and not disposed; I'll update this post in a bit.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"5a8f7c36-cd7a-3f40-8e3f-c84e0f1d8a0f","date":"2016-12-17T13:50:46Z","timestamp":1481982646,"authorUserId":"disqus:stephen_cleary"},{"_id":"07eaeb3a-ef4c-31cb-a3ed-63c07da8c3f5","authorName":"Thomas Levesque","authorEmailEncrypted":"lxnKgqxddniZkjyBoF2raBdjzPSXDYCzA2Kj3iQVQiagoWoz6hv3uSiL633H1Hf935SnFNgsQetekve3cs8HcDUmsceCYH6zSw+GaUYPKY67WD8z87VPGuXQgxiiJr5MCTS95fsFe3oNmQquCmqO07U+NVS6tKI6Mg4DZd9QCBSGl0BuN2C10p8usZ3Hm9TLmvTMQOUzLLFhMlUxXyCEfY86O1XPXabFyGzZJPV7YvvRiw0OSinXnG/wEJruV41C70p5Uyh+c3vPL9bOpUrYpQaltAqq0eNZoHp/Wijhgq4RCYYPtk4iDADkzoVdGMprSahTlpkoPZY9c5UggSrLHl1udsuI4Az9sTg4E2IKQlSmN9KvJ9UsCeHyDmsHbrPwpV5vOzgnC8QqtxTAI/NJo3H4ktDewZ380Qs+svVvkqX5YTWUuQTGMjmJpjKC4+AhtsmyRL5fVJkoX9eevt7+5EJ4oHjBoXIgv3ZukK1rTrFOnGvNrzSsi+mvEWRG/AS314EsSXC0EcNrcO5dq//nlfi2FuJ0yvzIYPG4GVcPeWCmqYBnLoXyH03fJiFFmEDtuU0J+dSvFyYPx2YHgiapcDHM3ec/HZPQ87cs4EEGd9ilgQWDhKTXugso09vyuAMkiNQBoKB1mWD2kUugXbPLvAUVibYTydbL0rjhFNEsgDY=","authorEmailMD5":"f4acdb91aba11ddf8f03d4b12453f3d5","message":"I'll need to check again, but I'm pretty sure I had eliminated inlining as a possible cause.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"f954c4c5-81f3-323f-85d0-944bf0974c6a","date":"2016-12-18T15:29:41Z","timestamp":1482074981,"authorUserId":"disqus:thomaslevesque"},{"_id":"574658c3-dcf2-3c77-b68d-332976ee6abe","authorName":"abatishchev","authorEmailEncrypted":"IKhzIwQ9JenYB/f7Tgf+3PyTouzIKsesaCDP3TkPP4rCi4BfzYiuPUHOyZHfZQNSMFMVgfrgbmri/MJGw43mqrlVL+ggEkyGK/QkSzf20qbdf/HV52upn/w6YD2JHs3H0wEyy2FxD2lrFTqKBTS+kkz3NRwO/8z30jFOTxuMcYPNxR0IP2BA9N57XQprEnsDeJM/m7KEdIMp/wIzq/nZB3vVAl5nxki37VUUtjypcmse+8Ta8cAma3WXOqqOYtdq+/u7K237AcDRbTqWMFNOAJlQfkRpkZWOrZT34O5520qOu5Oz7rTSDxHG6Sd0HwsKgpVhx8W6pi3UL02zWqeN+lQ3B5WNLLeif2znu8DgBymHFaKmO4Axorqu9sncllkgFKT/sjFedSHy5/rmlS8SohEdf9kDzIO7aUXHIkUiV7zCIJV3Wo3z5ScJ2nvR4mCDdBwxInlM6L9uHxeTsqqz/0n87azCXLmR0k/K5/L04Icb7Rel330Ec1a8CnvFFuF9kxKBicPAp2eSn6TIqGHLIOi/qKYmantn8ATy56ZeP4y8C3YnyAZjq4MRgyPbOMzk4UdHP9BoVabgfFjm4yuIkhJi0UJxJZr5h4WPAn+Twpmzs5Wste9H4KGk2ht29P4YfBkkrhpGzZk4ixpOkHUG0g0fy4xHzMENxUw/pwtYUsg=","authorEmailMD5":"b9da2ca6abf3a1e28fb470f2b3ae2c34","message":"Isn't this because type Task represents both an async I/O and a promise (via ctor accepting a delegate)? Some may argue that this was a bad design decision introduced a lot of confusion.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"7cd1c7ee-237f-3364-8434-1bc64a2f0b8c","date":"2016-12-18T20:49:01Z","timestamp":1482094141,"authorUserId":"disqus:abatishchev"},{"_id":"671afa75-d237-33fe-bee0-76d6f032044f","authorName":"abatishchev","authorEmailEncrypted":"HXA1eyR1NZ92XZEgW7jWiuoS/V2r6yLr5Ka+zIp6Kea4d0TBLHpoplRVfw8EpLfjbGWgYqRly7LYrDzmpEwBJq/dG2W3EayB5KIv/IhD+ZRz1SnhyR/EuLZNYq6ivwtuqa6hYy37FOs32jNG44usXoESyC0LSHzl2btVOJGhfvepO2BPTEPFRyGft++tDI7mDO4NMcKShOuQyoFlxkqcUbOp3jiPgVwm2U5HDq0WDGBOk60UqW8DUP4ietQ6f0+eVXFB/KTpemsp9IYFoFnOgHtPzp9EM99E654dUY5NZIdYTUlHqmzydBA7ORfQmzyCq82nKSD1c9xUPtoHuPIoSQdCi1rGZNJH7O2UXAPmRYmaW1rMUZ00s8+H4+SfwFcWJC9R3fWpQmGn84ElTl4NQn8a79e0r6sI9/EWzlVuXvHme8wCvjILxKgz01HX0K0/phxazfn514VdTDugPiMsMKhBSqv1FO8m1wmqdoMAVKQgHB+AZ9SZYZf1cYP3V1hXogAMtfWAVzmnEkmjWXz20/w5ZTA2haq1HnJtLuyLsCwSRgxfcMmLwPmq6IwD1NjIMzIaD/lBLb4Fkrf4ujd115zjhnEW+Tt13GQbDQHFK6gkrMK9D0YbJmUVISM8NSKUW7x7XwYhpDov/bDDS9uoiF+UNFhWIhq70ylMIR0RWvQ=","authorEmailMD5":"b9da2ca6abf3a1e28fb470f2b3ae2c34","message":"I doubt it's related to inlining","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"07eaeb3a-ef4c-31cb-a3ed-63c07da8c3f5","date":"2016-12-18T20:38:41Z","timestamp":1482093521,"authorUserId":"disqus:abatishchev"},{"_id":"d7a3b38e-37f9-372b-b4b4-211eaa3b154b","authorName":"abatishchev","authorEmailEncrypted":"HhjJo1O3jQkktk0rEVLowjaQQb/pC6yUDKhv30WixkqVZItaH05fLtB7Ni/oWAzcwUh2oSj/srve7WD7Makb0xwl/tVTCVDXVlnannyabVkylU00uZLWVSlMX0jgzsWo5521loNazXJT/yTOQMTmujnh3X7TSf/pzXgd8PYfJ9kzi4S8bSygNTdbKADtMRDYl6E0ta2UCPUSwHmqw/ZQ8mPX/wZYsJOlAjEuBTT4K7RSSQCxcaBX77oO36c/AMjfHrVhjnVDU+b6r6y4XazGROceCy3v67CoEvbRbHPvfcOpb7H7vrJcOBC7+Gvk8XByv3FrcWhDaEUNcW3m6BH/cRDOfi9iN77L6qzHE1sbxgDf1o2Wp9ATpSn3TNosV1W3jtEHz3H3AVP0V2j9nIHq/2KiSjeKgLi+ymLi55oPiWtZA5Nayl7UmYzXXASQUXmqnwY21qIYPYO2dgbDh2VZgS4OdYwK+el1/QDKBvbaqPhPHMX6xosIdHcuPLClqyQdo/skKcNOKi4KWmf5+JqQZnwiD6BGl1iVb4wikkmmTv5xI3U5bZ72jgLVJhl9yLroehWoO5dDnMreZ5mD7zesJ82Yp+ZyUmDBMkDMtGXvlH+M/2S/QnzUCCGmSPbuq5PwlsSIbcaVW3/f1MmhOkEhuHVJDaPSBClZ0NhukGsmb4Y=","authorEmailMD5":"b9da2ca6abf3a1e28fb470f2b3ae2c34","message":"One should not share it since HTTP headers are instance bound but also not dispose it either. I was getting weird exceptions from time to time in various projects untill completely stopped disposing it. Was never stroke back by this decision.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"ed014c86-172e-3ebe-a17f-92831fe37f2a","date":"2016-12-18T20:41:18Z","timestamp":1482093678,"authorUserId":"disqus:abatishchev"},{"_id":"f954c4c5-81f3-323f-85d0-944bf0974c6a","authorName":"Ben Adams","authorEmailEncrypted":"nhbAVJvXu2sVspj5lliuGzKqS+d64zyhN7F0mKF3e637J5qYOGz94y1Tw7zm5oJrundM2jSGBIxEgcpZkKSci8SgU4lj5+3+zPdvslR7X6GahiVCpLKxD6RJzNBxvEUP8BU8VOaFlUycH4ECffdO4+c0cOQxs4d4tF+2i+XI1KJa7tfSsudxZKDaWz4yFKg0tXtZrMmq0klhTqFbXwLzGGWfywtlKZ0hkbTQpFpS65JZnGhRWhHI9xkEVv7ZiPhzr77HSXDOUsCwrZdgsqnsE2aVxGTYhM3rsFA0sa+lcTHfpOhAJL0zdyG4GP7ESQ5ia6WCNZe7YB2hWj1L0u+jEirgMFE/Yyqk+JRIqTOHR7WnOLXi6Q9y5KujDYpiQC824qgNPKOnae2Lw0pnaBz7WtUzjNAp74riWP3SNhKaQaA06jLSU5URA54nkX12vT9bYyLWA51M6bYoajlFXOhyGK0TNpXLq3fbwoqefm//opGJLAjTDOiZ6zVoGST5zI8deHnrIMqpRy4F0/YjuZaQ/6zizIhyBt5TFAx8Ug8ylMm3zEV2s87t/CltEhpl5LZC+pZ9kr9i1HN7oAwbbJKqstrwt2xWyJ3Nri/S2nVBnfHwMXGM3xBf9BdST1uY5UM2Idn0WUSgJKavaht1pCF8OM6jIzKlzn5vMtzBI9EBy34=","authorEmailMD5":"38980d692c0ec5158fb2298a6a6be8f1","message":"That's due to normal inlining rather than async/await; so the sync pass-though is light enough to be inlined and the call cost evaporates","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"ea70a543-96f8-30f7-aa39-0ea46d6fc3ed","date":"2016-12-18T14:19:37Z","timestamp":1482070777,"authorUserId":"disqus:disqus_VELdEhJlF2"},{"_id":"48768b3c-8421-3700-8e98-7285662c1f9e","authorName":"Stephen Cleary","authorEmailEncrypted":"PZehQnki2002TFWNtgoRWuWqWSpvuxE6isQ66OOH+atXTfLp2l18FuSmJ7xG0gjBhnUgQDixB1yRhARRh1aqR6r155vc7bhC4ZNX7TfhzMcIjb1mjHX2fhArGOWdUBvDPUKznZ/1wTYbI+tjDle9XL92a27Yc8Os2C4u2tQPHTN5u+/LAhZ5Lz0rrNhqVvelGtAnzkWGAfniUhZl+YIoiXT5I0JQ72Ahuwm2JOJV1Pae9/0/0Hdr4JZwzrKKgLf5zQN4xYUBR1m7tt5NlecSKsEaLTby0z1XReNKLYhYmtJYqWCC05ieTnIhZCf/g/U0A0RIiyJfANL5qgd9vpVxqDMMY6S/BkHotLbszV18vyu8Ui38Z/VqlDFF+S8B8/cQLT5eplUT4WiUM4i39T8AAFlTD1iFsFLprW99AoeOAICwcAAn30F4LaLbrL9hCogCekU0PkQOV568N4+8jMWL9W4tfqq1ANfNbOXLN1x6IT3XlIRr9HgVC6LsK5tgCHxoP6UszZlOWk1VwAzZHYFl03vK1Ctc87K+amiQ5iuF6uD633kmDNg8HJHVDNGAvmiXNincUeXaL89JqH5LOQWvsw7jLbHK3Q2doEcaaPkpnt9yoB9RZzpBJZ+0Z+RJpHqSuruDiPxkEu6HjkZjPZXpPueohjaXtzoaEF5cjg+eT8Y=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"To me, a promise is more related to async I/O rather than the delegate-based tasks. There are two kinds of tasks, what I call Delegate Tasks and Promise Tasks, and that has caused some confusion. But in this discussion, we're talking about two different ways of thinking about Promise Tasks.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"574658c3-dcf2-3c77-b68d-332976ee6abe","date":"2016-12-19T02:05:48Z","timestamp":1482113148,"authorUserId":"disqus:stephen_cleary"},{"_id":"e063954c-70ef-3100-adb1-f7c3d4336ae1","authorName":"Thomas Levesque","authorEmailEncrypted":"dkPzGhwQr4+obsqjtk+P3vzhVD9RKVEmQ3Lbm0e71In5Z2fvDBQk4g/1hx8NAnVP74oZihZepJmNmjmy1gB/VbLapppsU675rPrJzI2MJM5HlwCyw7auQMLzHLVERGQlIrxlbgKiPq2ngq2FyU4giCzXMeWLXKx39GkM1Ah41rC/i9tdTkPVuObu/p75DVgyNmjIG6h73inN7ngTHFB+vHh+vM+juYK5ndoPpvImX3INBgnuDwdk4geJirsCyVltiYyJIQq17oCIW7DbAoaaSUU4pxiXtRtFVts1Rwx8SqQyQXOvmfZ3hi0gPdpfN+8s0tnZm9CEUicK3w4D8WDG1CPGZhjVpuc8V0f7z/1k+TLdNjWynCuTePHsSzD4jVRcSGWfq/MrOu4BFYi9vFPYEp71lDQ48uUkQ+o71p8Z34kVoqYIX0+fnmGmZNuPIpkVNAzNn+kQhNKSoIBE+cA5a25mJIB4TMEAs0jX+sv7F+xnbmKm5ESU7iiE+v03VZHoSm5lbjGfVQk9CW4pteaQaRxyCZRiBUw7RwAW91KXP8G6UEz03F3UeB7soD97RZVa5X/izTuBR3Lh2e66N50dfkQ0kIdToHgIJv+ml7GJ/1C320FzPAVMUk3df00D0d094l+2vZ1tG/pEp6C4KomLEi5dvN2wl2XJ40oww8Uqnt8=","authorEmailMD5":"f4acdb91aba11ddf8f03d4b12453f3d5","message":"Just checked with [MethodImpl(MethodImplOptions.NoInlining)], got the same result.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"f954c4c5-81f3-323f-85d0-944bf0974c6a","date":"2016-12-19T15:15:29Z","timestamp":1482160529,"authorUserId":"disqus:thomaslevesque"},{"_id":"9aee43d1-260c-3ef2-b381-0f5a6575ea6a","authorName":"Mike-EEE","authorEmailEncrypted":"iOo4/asBtgvUxrmPu1FEK8Qm6IKl6aNtNt96r1grK+CaaJXhoURvEPMpk+ziOHuoxm5XMZCTwxiLj5Q7Mm9mEIrtEfZ0Ddt7DZ6nWd3qnS1iZsoMlvZCBUn1Pnd3r0vY6bSSJjhvs6udY2E79DFgL9a/ia4RG2mNEhIpunIUQbotuciZDCFQL4Rfg3tVvtMxDX4WPm2NMSjuWiXekwggmzTyOCTGWlH6PeaQyPX8PEijsg5h4QEKLY44au3KCNeovG99DKLtq7Esk5EN80nblOtTSoxt7cHDYEKBW0hN7zu0WJTexZkX+5TPI23nc+yBH55Yo1poqhypF3ebZgqCzF1+0a+oCzaPvPM4BGxS18Rb3mbLhtaC7oNio/59MQb0O/4LkDPINAReUvL3GYK5PnntoIOoGikTWGIsDDrRTd8EjYuLRypvSSah4ZyqAXdjtIkBJxn7iHhU4dWAW+mQm3PNOynWeYQ6VcZFic+ZwjIc97Kvdp1li3elLfh3WQdH0sSuEpodDrQmdEGEK5+n1bv9ir/TB/A/iuoSD2NcyHLm+eABDLaDeXta9zJrTMNW1gu3efCb/i961QUVnfB/o0109FcSVxEF1vTUkPz+hpScIM+Gdkefd6tCaPusmoZSbXieqWoj+IDiLjZwR/GeO0RI1JvCCt2c2QyMSrPkBjc=","authorEmailMD5":"c7ce3b7185ea065d529fa4447263ac60","message":"God. Async. :P ALL THE DESCRIBE!!! ALL THE CODE!!! ALL THE HORROR!!! I've added this article to the growing list of constant explanations of TPL and its dubious considerations here:  \r\n[https://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/9126493-improve-asynchronous-programming-model](https://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/9126493-improve-asynchronous-programming-model)\r\n\r\nBut thank you for attempting to simplify it for us mortals. This article made The Week in .NET :)  \r\n[https://blogs.msdn.microsoft.com/dotnet/2016/12/20/the-week-in-net-net-core-triage-on-on-net-sharex/](https://blogs.msdn.microsoft.com/dotnet/2016/12/20/the-week-in-net-net-core-triage-on-on-net-sharex/)","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-21T02:59:35Z","timestamp":1482289175,"authorUserId":"disqus:Mike_EEE"},{"_id":"182bb037-afb2-30fe-9022-d544d0a3191f","authorName":"Jean-Michel Deruty","authorEmailEncrypted":"Ck6Osq5W12BZMUWqXfwvWSVKF17rX9QsZvQrhor+4L7NMCaZJEVE5KbpOmbFsLgxcfJPR8GGyPYHKWgmUadMueEEQJgz+MW6N93lreWrAb+73JegUUBDF1EuGFDHa7ZINuSBr0ztV4jzXWPrkklPodhQVgkJvjvkkRqd5KeaPGnyY2qjrcxu39lAr1ublLzBlm3v+Jp27Au+rhC7iHnMxFMNTjrGpRLuxbDf7XsI6HkC9/A4zc0CobfT+GM6g60/ntATpKBLA0y6FTij7tJ8eqEKVga2xgmnGSiXuFqAR2sdaJ200NCwB22Rxd0d7MfZ51aEPM6Jlnwq3BUFjlOqTuolnU+b2TM9q2YN9S0iBZZeoYn5uAOJvlzFV4JGEaFAgIwxYM1LiMLBd/3mCLoyjapJlcdJ1xuX5iTQ85C67gZrtLDo2iomvM0VEIgDvkL3JDgyFxBbmOG0XqfUREbY3wZDuVbCj0KDoHLsk/j+keH0QOLtxlhhWK6J+YcgcLG7qVIr7DIerzHya4bDqnU1xLtHGJDuFts8ruLSRY0ZfTsWN2s9zUsLMPbHu1ZHMwmXtDdoK6zFPrONAvU6D7T3RksOwloh6v7PqwxyucSzjRAujAD0hWLJGkizwd0ruXe74TF2zRHFz45IqCn98dzzWr2Gaf1fvugXVBDAnMfiIaA=","authorEmailMD5":"0abe631abd8f8496107e01ea7fcf95e7","message":"It's not related to inlining at all. When eliding, you directly return the task to the caller, so the logic of the method returning the task is executed before (or in parallel to) the task itself. When you throw your exception, the stack doesn't contain the eliding method at all, as it doesn't await the task completion.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"f954c4c5-81f3-323f-85d0-944bf0974c6a","date":"2017-01-06T11:39:51Z","timestamp":1483702791,"authorUserId":"disqus:jeanmichelderuty"},{"_id":"2782067b-7945-3011-9fae-a2fcef0b086a","authorName":"funky","authorEmailEncrypted":"kO28/62nBSYoBjeMQvF3qa8qIXG7F8grNDIbaeKUx5RIgRD6cS7iQCVku3ZSK7zinWMEwmDZWE8GUNTLGDEsWh1mbR6ewV/2b7hXp8YUJ3b5fhCLQLVFk87tBd8gHRUB8OGq5300VK31XZhVYsO36o1JL8+TBQQXTCgqsqOr/UopQMveR9LzaSSCCbg40LvqvnO4FeirDIdMKgWFOLMoK6C5L5dUxQrxBVwIKKti3L/hkjT8Yn6/Klbq2LmjqClo53SYn2KoZmNUFv57QfY9dstwIDsF5dc+2J2tdXYLqQk/4Oj3YS+uqZKyU3WjRj/IOCPWb3qCxxJGjoVjEfBsv2IfGstNLjG48zngvvyHaqrn7xVQqRDuOrEQJ9hdPzoG+op8Hh4hktKX6sv6no9gpt44wDUFkZ+aqSf/T8sikjtbZ5jKuuJ8RTcYwFintplNgeJWa+9SK69cnlEx2Og+SdQ0doIVThCPxyQ3JDJHsqtOmGRBEU/njbn33U3c95JypM2FJOhVkhRY5vVqge1h2lyHNmtU1Q06g6SWbZMhXhyv6KIZzV1mCUyWiPWlQQi4dLew+iYmTVJelwirk8gQFX+qPCdlp7gM1Su8gn9ITnAB9wI+KhJauMK1HoYKLS50RQWQeTrr5sWklIThlVypta7Nh3tA0PFX2h8/B6kdXvY=","authorEmailMD5":"e00a7232adc5934c03fcce176329e3a9","message":"Typo: \" task that that was returned \"","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-01-17T10:49:18Z","timestamp":1484650158,"authorUserId":"disqus:disqus_XJ1C82wFWz"},{"_id":"b7eaf32a-3b40-3de4-bace-bfe702f295d4","authorName":"Stephen Cleary","authorEmailEncrypted":"qzjMvTTDw+aO2WnNJeoAxxdlAMSn/fLQiMizGA45l8GeAo/a82nPeEm4CHN25T25byN4BEtBhgC5MbLCvcBr0V7Fd3A/9rH16R1FMsGqF6CdJNvTXNlGoX5so/008zpRuBvcHww2fDEziOqHBsdsNj+icRoRsXY3dK4bIelqXMblvm7ksub9h5IGpeLIuo+73LRtogwjxInnTQRkgUDdMDWlj+A+hSzT58HHaK66bGmwLkUcvl/HUiqzRt8tHnUaK6xpdwur454sPQ21xjVMSVyyqOmVhlpdwO/0ceKX2L361DPcq8ltQIhZ2oGaOcnF6R+0q9pxvdMQh077gcmgPlsw97RBcdrSPMc7STlkL954fYnNrm0nVnYEq7k7nQZMPfvX7efS4EbqGfKJo9dEzl75Ki+bEeXCP6d9TTgd4kXq2TXAb7deAmwlU3gLc3EtSy+vTQPxTOMF3Tny2FvuLyJ/34UWaCTJNK4cjVxKsCavsdZ9HxNnQlZm6qNzYIBiZSYaqsOFUidwghS3XpHLwq31kt8E4gt0EHo3FG7DiOuiIKpovaPDWBvuo2XmBU6tul9cgVwvmSlE40VoO52x7MrXkx2tKN1B5XmpHHKZ1Oei8MUdcTTxmsTpM5fgu+tVAu8aI0490m9lIoel42UWswbJCgZcX+vkjlHPddhmjU4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Fixed, thanks!","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"2782067b-7945-3011-9fae-a2fcef0b086a","date":"2017-01-17T14:42:40Z","timestamp":1484664160,"authorUserId":"disqus:stephen_cleary"},{"_id":"69efb794-eb63-31fe-ae5c-de009417c472","authorName":"Ramon de Klein","authorEmailEncrypted":"l3wCbNmjHJ7Gyy4zUZEd+BGYK8rmQonl33cU7SupVW/4tfoixDi/0/lfcuK/wQei+tNrdKcTg8NERHc0qS26q5NxIvxwuATasdoewwR0pVRyeAxAULrrXYUSWMjLHXGUNXyZaLaWsAlsX9JkDMdaOwQWUzecsjB/LjOaOeDgji8q0vW7IdRKWOL+0mPngyIGCgr9rn+VNBLKKVuVhijdWafqUvhZSv47NWuc100uwYluWPrvpFhv4snpeHFg1Vk862QZpEjcGOVAaqmHVS1PnYc3pxTPqUcOSudgV3ee6N1zc6sIzjAjv36R68FsRfsJXncLrSuGwG/m31A79zsc2l5s9Wx9WKCO5DuhjmcuGhLY7cnGuP+9Gtbb9AHX4sJHgfbneGNIRfkzdYmx2TXrotiQYAaEjK0ppskabCwR9wv80Z50X51Klr/KpQg7o/D0re30LCvnpT1F+FyhFAHWdqrkWtSuDIi9r3srBXyRcqKEwn7qZW+POYgjHyvbsUJQYJzYS07l6Q5mStiQIjw5zWMo17KiGDPWrATEbOaMcvniLa+qHpOVYH+/LFKUfpM26iBKMQp2PBrvqMYt/nBUVCS56JWP7qeNXrXq+aZlv1hLbpygVgw2oOqGgguoeDhsFYOgw1uvH2UmQkN5GQ97MVmSJuEDhoEBsnU9gum+QtI=","authorEmailMD5":"cc4787d42130bb9cc4070f11470139c4","message":"I have seen a lot of async/await posts and discussions by you. Then you are probably aware of deadlocks when mixing async and synchronous code. I have created a library to help detect these issues. When I look at your passion about async/await, I would be very interested in your opinion about it. Of course, it's open-source and you can find it at [https://github.com/ramondeklein/deadlockdetection](https://github.com/ramondeklein/deadlockdetection). Hope to hear from you...","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-01-19T20:44:26Z","timestamp":1484858666,"authorUserId":"disqus:ramondeklein"},{"_id":"47eaa8bd-f32d-3cfb-b822-31dc02dccbcf","authorName":"Stephen Cleary","authorEmailEncrypted":"kmvAmg0R5pfQD44ZX1EVZn48TN8CTQ4SKLE2TQeWNpc/csp2/g9/FgbaiAxopGNzzR+FMgvdGLI1AnlnJ/JphNVtZwnrBAekbmWNncxFgcEHRBHAnI9ZINjyG4xakGhXbUQIJC6spWokLTRXVgdE79ciXNPEBt63YY615MkW0n2XcUrReY/bMpmT7CnYpRr1CTDa86jkQLLTm7uz94vLEI6RjXET7ESsYB65uV4flCVFrSEnyLEEPl/wPGHfvgTHkWkhlj/fz2gdbOpkE4NhfYwjT9jHPxWS5QjdKUyFaDx17uWSuD13+Lny7ZCSMnUlujTqBLs1uSDNN2zuu3avX1+18XouKQGGY31IcI/f+rJOq6jBl9zQE0TopQ+ncQy55HmgNkiaOq5gU0df8dn5/iKemx2eyhvtP/ILXWntr+Ukj5xkx2e6ZyvqHIpYGwi83LiGga0Cj8LjgRYGFrbTgKjDqiBf/Bw/iHjco320nooLFznXbZ/fq6/bAj8/tiMkAOCR3/WMzpwuMI2Ta1rsai+3w59Ra5K9lYWIksmgxB9BRgpME/i3P79H8RCd87Wk88VCZqgz3TOIras4CPBuJ9j9KsKy2MyqeIQrWo0QMLg8B4qOFqtjDoP/sHOnDz31pJkoagERyCQOaja0BtMY6EDa+thSsXAHo+z0iyBL4Ns=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I took a look at it, and it looks OK. A custom SyncCtx is the only reasonable approach, but it can cause some subtle problems. E.g., there are several (old-school, not Core) ASP.NET APIs that assume SynchronizationContext.Current is AspNetSynchronizationContext, and if it isn't, they silently fail. Which is not so cool. There isn't really anything you can do about that, though.\r\n\r\nI'd like to see this paired with a Roslyn-based compile-time analyzer for deadlock detection.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"69efb794-eb63-31fe-ae5c-de009417c472","date":"2017-01-20T15:16:04Z","timestamp":1484925364,"authorUserId":"disqus:stephen_cleary"},{"_id":"594e37d7-3ae7-39cd-bccb-4b20203763b5","authorName":"Ramon de Klein","authorEmailEncrypted":"uEt8/x+c16t290sKsnPyRTXgmHQ3jN3oGYNHoC5WzuRLbduS8EOTnf4SsQkcq7CYbrcLu2ej8xetuXQcJNNeYsdW3u5DVPJGC6qhkqq6GdtJMOfjk746vfqNttl0QqCR6RiEgAN6JdzkXE8Q52e4kciEqjzpJl1YEBfxlMAJCuJi9YWDBr4KX7wbfvndpGl+1qPgWZIhTI5jlflyUCLw/46DWtmeqTTu6Xw5m/Izgk5LWlUCKfiqjoOrLeDMYFG+muPvFLXKMD35d9MZ0jV5SFdYrdQtCUctXkmbzR9hQf7WjDwME9uQau1DPs3svlysz9ckktQsU3+gdVfOBg0hV8gP6Z6EpNLkaIjy2ue4H7hFv8qPVd8CZ478mF0tq68PsF8aLHeAu6iVn/Tg7Ow62jO8Qe1/6gInIVZRHwhn26waoyl1goz/VLc6pQ/aw6/ypLhfzbmAF0s9okOuMgOVzp4rJT56DhX2tFN9OkVxvIJkk2UIBtUDJ1hfoViEnPBTGHtr2bPOb4dKjMJ4FcIPDPABMSRK9gKE7BURAQC2y3ZRyF12pwos8XoTtgCTzXscqF/lNISZc3AKCW4TkTvsExPEgPH+ymIA7YCWWHDtjfOYX9yZIZ2OfUtJFxVSzaMTQ7osfT2ZFpuOMglpxdOYNc6bVg+6uxetitQQtE4gzHI=","authorEmailMD5":"cc4787d42130bb9cc4070f11470139c4","message":"Thanks for you feedback, but I am not into Roslyn that much. Also thanks a lot for your numerous posts about async behavior in .NET. It helped a lot!","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"47eaa8bd-f32d-3cfb-b822-31dc02dccbcf","date":"2017-05-06T19:28:20Z","timestamp":1494098900,"authorUserId":"disqus:ramondeklein"},{"_id":"89216780-28aa-302a-99b2-90af42f1872d","authorName":"Alexander Høst","authorEmailEncrypted":"dWeKxFD+acDrFTp8FY3NOuMn827cqjtUv5UKqYfwsF2n97cwSCrixgl9pOT75EslMatlKNWRd2a5cLF34q+Zpzs9EDi6yp19Tac4OiyastQU7/xw7ealUq+GNofVFtIMfUOyTfaic4GPnYRUh9TOV8xEM1F1dlw1fOmkzsGX7rO/xjwa1/peRXXhNRMk69p88ho3tHPkEIYS5lPr6xKPMmgiKHmpAwrw/Vm3JZWHGrFMeIvL5Fxa7wb9fE2JpKrSbhbGhGYVb5MBu7moFvgNkRQlzj8afaebuSHkXFoeE4k+gQbGt0XwTNb12gut7rHsQY1M+4h/9U8ZWusfxtgPHXQyMuIt0TWVK0pVUKs/zhHynA6PnS1JkIUBAtCvJVYMTyhM/foklyEvfnIhfoNQiXADBjpGNRCutF/XKJw/mGdibY9Uj7CbPAFviQrpQovIzX02O0ck/oRhJgt+IorO+cN9dtj0kU+5zDYiztBEfQaACB1oZeWL8bq1SqWZlScYcRxGByN8OXSUOhi8bcJ4j0XZXGKfzb6c83X8sHGSS+R4HzpyAA0cgWXShMVf1ZwFrFXohRPGF4C6Si9geiLn0dB0s+1oQxRfHI53ZT9r+2C1sfIBb7EMszVWo91WviBSkNMT4WViDv20j2J0KBQ2XCZcAhQUTS5ONe0tpXeFBNo=","authorEmailMD5":"a179643fe18464a8499ecf75a59603fc","message":"Perhaps this is an edge case, but would it not make sense to elide the keywords where the only content of the method is a trivial one-liner return that we can be reasonably certain will never throw? Say, \"return Task.FromResult(true);\"? This is barring \"some yahoo\" changing the implementation of Task.FromResult() in the future, of course.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-05-07T18:21:26Z","timestamp":1494181286,"authorUserId":"disqus:alexanderhst"},{"_id":"aa40203a-1f6b-3ddb-8bcb-62633022ddb1","authorName":"Stephen Cleary","authorEmailEncrypted":"Ix0Ky76NfJgKb1SVxBilhWhTG9nkpAe+VpH0HKkn7TV5FyDpTZA3PXG1QZtQDnstUu2C4jBOyjA4YSlJCJurHJl1+nAN2aZlKjPVcZMsW365xZ/cG/xIk/rJJ7KVpyrXtOI5V0jzeOsNh3AJ7RbIWCoF3GQxOMny4PTBVTLyN30rJQ+P8ic+PhGgQFO3gVnm2/UzCVhfr1DknRFDBHay6LuTLWQQIFhHVXl6+baOEQBDD+1ng8DX2WZo+kvAG+CE5bqBP+E5SP2QC/txUA2mvUnV6tnutSSehgUAcSR59UPyC43Y4f3jO15YkQNc2AKNTEKtPtKt39MHLNOoNl5TeOBxq8Zg221n/g0+Bbwi7rlu6+OK5ffF7Q5hUrXDGsIkh2f10juh45z07oISSEGHktUC0pANa7Eqg6pRctLGoWHsJglIYyuGY7uTpmPo6mDnGklTP1i1LG+Jt5Fkfxc7cbi6/mCEjHRs954MEv4NE8oOLArQtXrXiyz1vW6unjgsFiQYt6EhtD7QfiBEFU3fx4cMRqYcF+P5rDqoysQ5pcyKbX/GSj+qkmDDcX5yNBJe/BX1U9OuF8XN+FevU4Vq+HAm6EaHUpBLxV4xUtmcouaaLDNu/XVlC6o3ROnUwAu2CDcIHmFnUJARlZsi0n6533at3gUbTHPM0LLH3QE/GN8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Oh, sure, I would elide the keywords for a stub implementation like that.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"89216780-28aa-302a-99b2-90af42f1872d","date":"2017-05-08T13:32:52Z","timestamp":1494250372,"authorUserId":"disqus:stephen_cleary"},{"_id":"04c25ab0-622e-3762-b97f-5708cc40564c","authorName":"Austin Salgat","authorEmailEncrypted":"YBE0YaAPmfDhY1KFEZImd3VPF6E67qNZhHDCBJ5iMG69VZvwZ4BpZJstj41D0QUVX3ZhnaKjdFjIgesoGn/KjRh683pRldt1oCJKIrDNDyFmzS4vdFbTt/w0j0vyBvCzfRQbYNSKzOFFcGg980D6qqREsU4W50RDO7Yey/ot8r182jGSSljBmPbgc6INSxDakIrry7IE99API8PzXFjd4NiVtjFLm0TOOgVnoMZ05SQpeoSkAtAMiklTxebxMzjI6zlEDKCbQUF/EG96G4WjAyw+RuVrY13W7bAuhz9tNgN1eCmiOJUa5JetWzLXBJeK/s0sFTpcqTnpWarxfEVvW6I0dawgtuIFV3YZWN7p/odWn1KJJ9/XlvQzJHg/M2IDmkwLi2ZyEeqBOK0A8b1M5VXMA8ROB1ccqaYR1nIg5X8UKCH7mwGkQWCnT8bQ1JqMLhIunjQ8gf+JDygpb4qN2V1oVAwpljx3je9uxHJ7aS19l4eZFlhD9P9N0Q8cH1jGnxnlDkm7MlctT1GeEZYi7BDNpKPrIcI23eptprZ+7otZXSCa8uiiz/iaZDON3L5IpXDqcuHibcB11KbFUjOZS8mbfRGC2wOmTL1K3JNjBqoo2FD9vYwA7h3ua0UpJEg5vIagGmrsl+ks1D8RKIL5vlUxEE76OQMratBfbGVf3Kk=","authorEmailMD5":"2e0681faba8eeefa837e950bbd004043","message":"Haha yeah, there are several issues with HttpClient that are frustrating, including how HttpContent is automatically disposed. I'm not surprised.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"c68ecf8b-eeb3-3cbe-8ef3-cea1d8a6d825","date":"2017-07-12T17:18:08Z","timestamp":1499879888,"authorUserId":"disqus:austinsalgat"},{"_id":"a432e6d1-7e27-39f5-8bbf-3f0bdd167701","authorName":"Austin Salgat","authorEmailEncrypted":"AjJcOYDGLQCOUgpWXHXtE0M3h1Aqccnfck4OLZM/sBbVsx8OuRrRIzXystmH2j6vy7U5eKmNX0d8Id+PS1V/kWf4aCXbqeOVKdA8MEYA3zivscmwbnqnDD5Xx1PYueSWXTsjYXDulFLXyBB04OT0uJGRNq/21+CxvnwdaZD+F8AYlirJtjhgydeXL7Q116+7qjowgl+S0LIUUmln+X5/ro0wSei1HOZ+SsADk2sehlxXoP3m3Rty+B9avyeg2BTcZgDOEB+5iBxgGlZ+UL4T6Qi48bjnKrerF3sFfTcO/0/aaGnVATQXIo3uJQS1YMd18cGXb9c0undUZMIPb++EcjzNnIFFcqLlfM7RS6sYPgXukTXCXxSeXw8QdWoGkzwVlRZRf1RX2eLuVI2SLxWKzJ/8P31gHhWWSWKSpIy4AM6y23mTcf3So8j2A6EvhTQBZ58dKLUGwXe5g2RR9CA7NntTDxVtIoqbCZj+h3s7NNUkiSJnLD7A/+Zu5IoWqP0+dTWhvGD3YY8c+w1tVgsSO0Qll4r0qNoet579gubr+7sJpqSBgR2kt7d+kNobg4ykvhaH+0fNr59VbKInrqqmLXKDfBxXpaqac6DHUCq3UXji4HVeH9JC5zTQc7oEtbwSR5mW1HWy0ubC7JKqq9GvGQTNQpHxDaCFqt5NKZrteIY=","authorEmailMD5":"2e0681faba8eeefa837e950bbd004043","message":"HttpContent and HttpRequestMessage support header values, you just have to make sure you only directly update the HttpClient with default headers used by all users of the singleton.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"d7a3b38e-37f9-372b-b4b4-211eaa3b154b","date":"2017-07-12T16:44:56Z","timestamp":1499877896,"authorUserId":"disqus:austinsalgat"},{"_id":"c68ecf8b-eeb3-3cbe-8ef3-cea1d8a6d825","authorName":"abatishchev","authorEmailEncrypted":"i2H1jrMg8rWWAwGoUT44I1LT44tRQ6hHyloLqBn6S56g60k/AygDNQ4hAd5jkLTUWLa8lVtS1uJJlSJHCcSH/i0m4kke4HJJg/CfDRLGMsOjHgwjZWsHGDHqi7qNK5VQglmTz2EPJBJ9gHN3o04jrsi0HL1sfKoSjZsrEiahZ3wjXfPETPnekVbhD64p3GX5CV3rYGIcLEP3AdkEtyNjaRwpwKeGObpBE68NzPwDn2byJChvZMrQZ0bPD9Q9rKiWvEycs0ObBIO8nitFuMu2W6t21aToC3pHyYw7MS/SJg8ToLyoqtg7+YMT72+fxw1puU4zVC9UFp3GncMIEVHp9IoaFSNsL4o2tY9r1ixAf5fPP0L+Lp76eyqfs3k/rgvOtNfK5k/LS4qFRp5ixLGnTv9JCLHJsmTraa0tPYlgLU1uTwhjXJbfjAWpCunsHlVly+eQ2dl9YkQ2+oexyvUGqE3knfVgSHiZEp0cHaDDmDwtgy85CIqIepwOqGqpGCm2z/S2mMBy/VrZVGOEn7KjIxo0aQ/7BNWmO5hwQplCe0PsRIDk2kfuO8qosU7crMslNfkTHxJgFEs5DzDXD0HsetwvOAjHf95JvLwQ2qGPWdXJAhRRRD82H/VIX0bTBYLI3jBhO83bQvCoD/bQwK5lKTsMKeDtjToqBAFwu3xcEuY=","authorEmailMD5":"b9da2ca6abf3a1e28fb470f2b3ae2c34","message":"This been discussed on GitHub at the DotNet repo. SendAsync() indeed supports but regular HttpMethodAsync methods don't. Huge design flaw in my perspective.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"a432e6d1-7e27-39f5-8bbf-3f0bdd167701","date":"2017-07-12T17:04:55Z","timestamp":1499879095,"authorUserId":"disqus:abatishchev"},{"_id":"33b09173-1e3e-3778-8f82-e7134cc57fbb","authorName":"Benjamin Holland","authorEmailEncrypted":"HHg0Y8Obkv7m8Bevpvs4boDnDB234zyrD0CigFsO2U1qveDMJVGUFQfcOrfGGX+xrElgs1P4m7oePNostSQXftxvI30tAvLOR6OCfXWKw0ShHJGUrKNIO2vf8XuMvTKtZWVGJLErCV7z/U9CE/G1RWjrN7eVHsxf+it9jMJe6nmX64Q0C5EVavAPS7j3VLev8Cbn5v1CIUalIlw7DqZylaZKd34PtyxbXs7qJYBEn/M3Ao1ZnXrBJZSvPKsuQOnOJwmONwFsQVAyeA4LJnnV2R405b3KUT9tpOE9ioUKfk/2dn3K2/Iw64uGljk7QPCKbIhhIeiQUi4wwYsT11mdOBIau+hIM+IcRAQUrinT1BeOi2bEKOtMI7a/LM5SFGiIcvlt9uBLO3Qh1RWYRUTzDlKF4pnnaVcoRSuxi1gjVoOrzlABwIcxSu3QA7gjGrW9R9gJEFhbjz1+nQZ6VGPeVfq1Y9blOXDKSD7gJruIk5w1O6AKuMX+Hk7sH5yCm6kU9f1KDl76sHGL7kpZkBFRjqnFtMOEeLWUnw7VBtgkgFBT8B5hcByJrT1eT5ddFfrichuR+J9uV+CHOlrCVn3CA8zKo/nUPY5hlUnuAHNTj8bpJjjCICymSPc2Ih0tPIdY4qOY+XiiSeaOPoyMUifViAgYUfich7bWRMreurRhwJs=","authorEmailMD5":"ec08164333e909baef436d182e7d8c0d","message":"Reading through these again as a refresher.\r\n\r\n\"Task certainly is a modern OVERLAPPED...\"\r\n\r\nThis is extremely true, and it's also ironic, given how little interaction there is between .NET Overlapped support and the TPL :P","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"7cd1c7ee-237f-3364-8434-1bc64a2f0b8c","date":"2017-08-16T18:35:44Z","timestamp":1502908544,"authorUserId":"disqus:disqus_ClNCtMIgGo"},{"_id":"ac261a71-e24a-3102-af3a-1a6102249239","authorName":"Joseph Louis Lagrange","authorEmailEncrypted":"Kh9QwkV6Xu+/jyYZrqYP1PhfqZUjCIIKJ82BXaE98SHH1Il5g+t1iVqZ9h1tXrCnxp7BpuKF+3pMfb4HdMVEuTBKQeEoDbcJy1A7f6W+0uL/xMphzwm/175qH4y4jwyT6zB3JOf9/jJHrpg4IoI/KUhvJQ+A9cWvAFF9nkPmnWvXFWg8/9sHyOXoP3JZI1ps3zJg8o0xDQ+OJMytumxXjAqS+EDS89/pi6SImMiGmMZRYfrzRRf/A9DorAisStNoO/39MKy6s8KENNsIYU0OyWsJKlZ/3As36UJkQ8wwQAILqb2sBLleBnxnVOOrS9famN0ZULaJrlmUwH0CBIZsq4QbLr20kZVnM1ZhK4VZD7I9X8HoLGypGzBAs1eJLVZw5Xo2T9S7Z6//T9nB8Ceil6q+5QBCeL8LrJzkkch0h/8vPZbyYGry4Wn1fhV2WXDaj+Sun5kY5R6qUmW/3bqIH4jBQi6DFb5uHQiTqeA0ehLIhIgVDMWLMVAyzp/b4Vrmy6AX8Fbip9WRqCAdU1NmHe/JNlTzi0pG2BRCRAW61Th1jRS9p0V1vOM40Fv6J1gLbYyAxMYhFEe2nUrKbKB0UuDSn8Ddw/60tPig524ppbOY9bigsYraCUkZcWBJfxnhmU369k6PYKBW6eY/3jQ35XnHkLZRqBQgKQfed/BZlNI=","authorEmailMD5":"7e6002f0e0c986706f0d834f7db3c134","message":"Assume there is a class library MyService with a static hybrid asynchronous method HybridWorkAsync. The \"hybrid\" means that the HybridWorkAsync contains both CpuBoundWork(); and await IoBoundWorkAsync(); statements.  \r\nNote that the etiquette you explained in another post, the CpuBoundWork() must be not wrapped with Task.Run as await Task.Run(()=>CpuBoundWork()) in the class library (implementation). Later, UI-based consumers have to invoke MyService.HybridWorkAsync with Task.Run as\r\n\r\nawait Task.Run(()=>MyService.HybridWorkAsync());\r\n\r\nto maintain their UI responsiveness.\r\n\r\nHowever in this post, you \"suggest\" us not to elide async.   \r\nIt is confusing to me because I have two choices when invoking MyService.HybridWorkAsync in a UI-based consumer.\r\n\r\nawait Task.Run(()=>MyService.HybridWorkAsync());\r\n\r\nor\r\n\r\nawait Task.Run(async ()=>await MyService.HybridWorkAsync());\r\n\r\nPlease kindly let me know which one I have to use. Thank you.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-11-21T09:39:07Z","timestamp":1511257147,"authorUserId":"disqus:joseph_louis_lagrange"},{"_id":"0aedcd23-15f2-390b-b644-3a09aab85f63","authorName":"Stephen Cleary","authorEmailEncrypted":"vnQxqklr7yRQdME26vwkX8XQbE0gKcrJEuFOdQXtfw3ZaQ0gH5LiY7e5cmJymIGmuO3MPAiaoKmaG8eOAc3s8dOZ+BzPgVBbftDMH8QxA4tJqs2pVJOtfem6tk5zBHt83Ja5usz+BO7P8KVwWGTEyNvJ+whCwJ7qeqMU5V9ywRdvfuivQzWGsY/92l2Fe4sjxpNMdO2B4d4dAvYKNOBWfBW+l9PPP4hmSZTmjpYli9uvVg7tR/FdyNfRcpUsizvunQPD72FO4yfMDz5cGp/6ymYji4+fGNmTToQqB0nzswungQOHo4XbXKMcNQUz/DuAoLogjd9eHyPFoRMalWpbuO2xDNFAv3LdtbanKJltJ3Rm9qlv4WXcBpZdzrUy46CcAQPgwhEhAUbUoTPDeIbIKcqu6UdHnVr6vqZPMyF6mA8z5t0aD7wyT0lDrMlxKSe+91WeRROmyI4eAOuN40+GuncX3Vcu2tbvYbQ8zbmdYOq7HJQyU252PJ9fp6a0NDGDENQEdl25BF28Vc0/R1vj9UhkQWgBqxVKHB9jZzOZK6AVRluRZG/3UIDg3wku5YqX8c9/cSjUMs/IsAXl9URmKp44jFAolnNRA+q61DT2r7ABtV7LUwslslwGTH/hyRrv5AZcANLzXSH7+iaN1x0uwTnjZaehWK85dXK3MNldwUA=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"You should elide async/await inside the Task.Run, since the lambda is trivial (it just calls another method).","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"ac261a71-e24a-3102-af3a-1a6102249239","date":"2017-11-28T13:30:51Z","timestamp":1511875851,"authorUserId":"disqus:stephen_cleary"},{"_id":"bf1e046b-279b-3508-91c9-eb7a196a31c3","authorName":"Hamlet Hakobyan","authorEmailEncrypted":"Qf7ODY8uel6OT/AzvjgHkufYi3GHT4icyjYc0ayF6sEL8C2wzVhhnFIS3PRKeQAD/q7o8VPEHboh5WXo6JaO3lMhsNmHWwc2zk+4hoAvTplCx0Ud9+kAfimsBpvV1Zw9fOLLskhx4/ZH+aE0OmuM8C80jciAcNRqki7pC8VU5Wbhk3+tulfkOOWF0+v1eElj4w9rcSO8fERwwZ/P2PUJg2cfNPFk0tofDua0cx34/dA7Mwteovn6Ne1dhWkr+6kZiuTZfXzuq0aDbsywO/bD3fuirNveGOtFNDkvbs6nbafYOGc+OH78F6UXo1K7OXbOAWOBT8M+6irITiL6u7qkqywksdvnbQwnJX02xMoUMSDlgdU0lib624FJyw8/uvwJVqJLHAcpqBBbZxn9b1miEq1gFV4gpAlii9fEFFDml5/PcIparWIj14+cTSuXC8cywBrXjg1zKTg7SN+oUkskT/0rhATklIgq+TJkqXwbuQbpyPmJI+Dwdx1Twc3xhu7D/El7dNKRWDeOozWSmKFoHiZbY98Rr4ito+pAK0hlELoWq6k0j+5IpDOPsQ/81I26OVXB+K5zJ3zs+mFD5WamHRcVM7RWm6UyG0fv69oUMHm3QoX4JKQ1mh3byAmXsTlhN3cfmP4VwVFWTXln0nFdvxp/zxZBTDXmgqlF8QGWTcY=","authorEmailMD5":"185a3c9b12588493dd3361fe0ca977b2","message":"Hi,  \r\nAs usual, great explanation, God bless you!  \r\nIn the last snippet of \"Exceptions\" section IMO you've muddled together comments by its places.\r\n\r\nRegards","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-12-06T21:16:23Z","timestamp":1512594983,"authorUserId":"disqus:hamlethakobyan"},{"_id":"1b968f79-3b6d-3cb7-98d9-985e29c78fe6","authorName":"Stephen Cleary","authorEmailEncrypted":"wq8wGYFmrs9n2/lNBG1KVRc+rdaDzAhoqnalk8VHZqwWyA6KSvqfDXvuSK1xy4cVEadbwHiqOWyKFHIeLkLy7g8sJ/p9ig3hJWrgv/egkks4o9b+qHJ9iGkIQlFN0iSPallwJRnkuNjJ/Wxb8SNivvhUKGfgkl+v3EdYfjIZnRs98A/Vkudwz9yUzMBs+eQ2Jd319pLzWP4FdOSKJQgOnBWY8r5GfJHo+kljClejzBD/wewlM+4Hq+vPcpO12ADKYy+hPX03oOEsMDNWtLtL9bbli/sYqpYLxr0bFoYBxG1TFwTsGe7sLn87k2GpJQvVWt9RGoamIi6S1piVgrrsRnIHkzXryuLBz6ZGdQbzOBtyEG7sYXeCZUDgunUMM1p/8jpDlPX9jLzvdGvwSTJyw0NEMgDcVy8OX1zeNy6aToHgID4rff00EZicnxXlbjlm8RI8fVf9rwm5cgReT4FBVWUhUCLtqXWb9nvMOSOpNVWh6a6g3kHi9KyyJVDTxkV2Sep3myWdMaUiwIit5IjwCDnORKkPGjrho8eiA4xhO7nLwVu69BgZS6jGVLEV50iRNmPQeRMAePgZXD+1A2ef92Lr8Zvnxu6J33mCZQjpRRxat/y/9mfOXrzLyCRO7LnXwUgP18GW/0vfVtnTay8I8gnks7l+9KWsYUpBn7k806c=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Do you mean the comment that wraps around?","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"bf1e046b-279b-3508-91c9-eb7a196a31c3","date":"2017-12-07T21:41:55Z","timestamp":1512682915,"authorUserId":"disqus:stephen_cleary"},{"_id":"10228738-52fd-3bc3-a9f6-10b239a034e3","authorName":"Hamlet Hakobyan","authorEmailEncrypted":"kLArS6yqqo0iXUiS8uOx+BkBzMdW4bHCnLX6CveyqnX3LNHz+xC/63I58PRBXPE2gOdmeh528kyLlYMDNDE3YlgBAlIqK9bis7YPTT6eQfrC4Tq3UV3GiFnULqr6ysicQRoiJKUwVoq0Vo/mV+TPPeUGP3D8yfxtknBTDMqG9TkDM7B9qEgUgEUk1tRCjZmOaSf4nBmRLVczfPO0ZrOthdgdajRfYHb/xtuCXKiSHVEThgJ3h7hyfno+btw2wq7u2X7kD/I3R0UjphUnHQToWAR/lPLcPLdlRZX4tZZBvttW/pQ9OrbT0dah+wMBRzVewRLbLtyWiVZATDOmOrAOdQedkBcff7PABZn/Ct6I7yApKRO/QGSErwkQNlAfDqsuQNrStv9MyNDAtY4Efs8tkiEKIHH/wZUUqG/iAJCYgJrmfFKD8Vb9vCQqgudu+5u5LfvrfDUTurUDryNNT1lbMZpR37kLvvEwDAEvZKxyNeYLp3iwGWbOVLXEDVXZeHWBskFUBHCypWLtuPItk2cVZtAG3tpoUtCucAuVAdOn0XWNIrQZausBpKWgEiff9octSnddanWHOYH8DIVtG7WG5RoksGVrN5Nvneetk9n3xCUhYwFYXeYHsLs4sFr/nnCWZuxk+Lxr6P2DudOZ+DgZnpXiR4BuXb7ejOsFH0et+Dc=","authorEmailMD5":"185a3c9b12588493dd3361fe0ca977b2","message":"var task = GetWithKeywordsAsync();  \r\nvar result = await task; // Exception thrown here\r\n\r\nvar task = GetElidingKeywordsAsync(); // Exception thrown here  \r\nvar result = await task;\r\n\r\nI think in the first snippet exception will be thrown on method call and in second on awaiting to task.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"1b968f79-3b6d-3cb7-98d9-985e29c78fe6","date":"2017-12-08T18:31:38Z","timestamp":1512757898,"authorUserId":"disqus:hamlethakobyan"},{"_id":"d631495c-5c19-3a9b-a477-a5fec598ae4a","authorName":"Stephen Cleary","authorEmailEncrypted":"ijIbeFpe7Iy+zC95dl6gof6ROMNmc41F32DxfnMXDWxZyz7AurPqWz+j8H3y4VxOrYSco0fEdtOF0pzLxn+cit7rPD34iQbMxUMXlsyDGywycCUd/yeVZCgzWEP4cSMSycRVuB7Ebk07oMTyEdMtGZLVqs6YadxzRTv6SJI2cTu2uEAFyTmYBq9NAYNv8PjKYOpuWrtPrlS+eD45Py6/7bhlXJi9UG7GhFEAWEbysPytncZpdUfI0JyOYfRigV6eTabAVSvravue+JbZ4R2+mGs8rSIUfgsG1banrCidnVb8r6hBIawC0wkZLKqLHFqNB2+TLe/1Nh+6Sl9kpS9GA1/dqyOC5Cb6wamCGzpWBxuzzivRmywi6hEmSi+9FGKk2ENFvt9Pex2lMpN4NKf4XCjbvgOmMYTExIm6te0BhOZCjE9H5ko0kQQlhn0Pu3ePMWBXWEoqFpnrQrKfyI6+Uhg9CQgBfvtpDeEfpmoszoKjLeH/jX9WOc0JO6JAKEWiY7nL3a0UWCqdvrU78NAxBJqsPb+jKK0QG5aisTGQtBy92ehIx/tkHqCcJi63YzskBIewVvOy3Cb6nvVcpBkdJlLt0t63HYRDjz9QhBn6V1R7tTmde4A9Y9YPc71VDjSvKKs65AhVK+k+lzEY2U9Ievv+dNqr3ngfzEmSRRUOhrs=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No; the comments are correct. The async keyword establishes the state machine, which catches the exception and places it on the returned task, so the exception is thrown when the task is await'ed. Without the async keyword, there's no state machine, so the exception is thrown immediately when the method is called.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"10228738-52fd-3bc3-a9f6-10b239a034e3","date":"2017-12-11T00:30:02Z","timestamp":1512952202,"authorUserId":"disqus:stephen_cleary"},{"_id":"331f5757-6a7d-3073-9675-2bbd619e8569","authorName":"Hamlet Hakobyan","authorEmailEncrypted":"KbQXBlKLPiYuJoRRyH4saq3MM9WwAk0zATrdlUOZTQRbBaRkCevdtGcSBbMY5hwh44VoSGzK+MHHcL8Y0rNXL5Cycgyd6z+X5GaUspBtshDa6axfnpYkbzpVHX9sAQ23wjRniieJpTDwWlM40SQAAUwsY2NiU2qnTPYGQPSmoWwFecseqOeLKQtRuojaiga0d0aiACSxqjIAm0u7+Kfl9YP1hlB0SvtWfv7OB+IU/CdLvWqqMc8zUDIACaH6r9b5itkIWxyqNRN6lkuWrPrJxLYPl2Po1WikeUIdKii+oAjkr3F8CJsP2GxSrLYMygouGHNeZGlJbKRILK1XKOV+NePgraDG8AQAR2fS1ZcnNNa3mtaoskx/us687KEEfOzxe8F+lcutyibcT19d6IhUNA1g+CTR3ta4ZshNP63mikU2cqNFE9jN9m2JXDBe5jLbW8GuTFi6zr4THGjFVFA4DTYXvvSm/0x6KOs09SD6ihBqRIvV+e311JDMBh7CBrzoDy4MMpzifaSsnOT31b47XpaelFQKtIw2Jt7GzkBa8Gpy06Gl+B+WHFKWEGzdHtFTan6jseP/QW5RKHV3BjwRtWOXhXlUPR8KJexeuPp12NYVyFXjbm+TT7L/9Ofpy6eCTlSZgObD9WJeRMXe75YAw5sBwO5UfdtraqUGWYv7nyU=","authorEmailMD5":"185a3c9b12588493dd3361fe0ca977b2","message":"Ok, I caught it. You mean that the method which returns url string throws an exception not the DownloadStringAsync.  \r\nThe examples mislead my.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"d631495c-5c19-3a9b-a477-a5fec598ae4a","date":"2017-12-13T12:06:14Z","timestamp":1513166774,"authorUserId":"disqus:hamlethakobyan"},{"_id":"af4574b9-718c-3bb5-9506-5ee0af8c193a","authorName":"Joseph Louis Lagrange","authorEmailEncrypted":"sDnLFsTj7Y1ITiiIhgo9GGyd4cY8dwwqkx0c9hmYf47baGEcCubaz9DTn6SLeY3OqhPBh9tkM92vAbfxoU+8Gh7UrDtg9qB0rfUDaSpyuT99LOmvAGOQubidUWR3uy9Bq6Eh1SFOXm5On9GSRtaB/ZImvvN8nefb4Gcz9CkzxwYk0KLdDpjR8ABLsDSTKbFjBYiLNo6ErcvQVXNcL1IRl2tWVEADGJ5EF6vkDe8zXZVjAergx3H8iSnIBXcfsgbSDnBcsNNtVyV9y435NIvuZM8kwN9U/827xafq/2O1XfosVaSL3Vy2zYH5x9fX27dc+zzGbDRsxgolToCd1s+am6S8sVXCMAwMFRZ13SvxPNV/ZemeGuRytijoWlG6fXs6ZrVncq26Wr3+WDGcQIfNu6mqsAAuKoitKpStiVFS0lFFNkvZeaHxfgf8mNKZiZP9dWdQfS3Pm+uzT70NbM3ppRJBvhRc4GgdmRWLusyH8UbMSNBbv51rFMHKOyJeHWbK3LyrCYFHaKNfSbet7Jl7c/AYldk5cKQWLQfF31b7g7at9q/L99+xWyk85irsP+ucCwZHX0VeiTEpUCUKhoNtKlez4LB4gtSm45SHKn/qefeZtqGxGsqrZ+DlSXXmYos3Ue5xd9PZAKjjvsVrtCI+Z+AKd4YNSKpq6VOLoVr08fc=","authorEmailMD5":"7e6002f0e0c986706f0d834f7db3c134","message":"Thank you for replying. I have one more question. How about a method that returns Task.FromResult? Is eliding a bad practice here?","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"0aedcd23-15f2-390b-b644-3a09aab85f63","date":"2018-01-10T22:01:22Z","timestamp":1515621682,"authorUserId":"disqus:joseph_louis_lagrange"},{"_id":"17b2875b-81e4-3963-acf5-81e0a2016538","authorName":"Stephen Cleary","authorEmailEncrypted":"SfuetbaTvuQZDsZFtXQp5guzcJQXW5M6pmuxNYqkQjSkl+PoFT3buhrAvk68jzvIMMxNwmPRY+5Jkts5yav0LafbjHbKbSW1ld5T9pgBYskp5KafQnJ2pQRlfp0KOBH3ayYkjJX5IKKhzzkdVMbD45mlEd8o0ArPQL6j+ysxVInRMIs7KXzsRCDtSOKhbbXpY6pE1E+9d0UMFtvLcS34fXUFyrVmEZKjV7fYul/D6g4hxpiHffS+jO5vYDHxoDISvy+eV46WriSrOePKCFPlBoKGnhN/bLxyN6TeW8B1VDJjL1iMbOUw0c9mNqkU7+QHsCW1CmU5SWu5NBJQ5V69YypLvp7JvZa6Y/XX331vhUe5mhr26ksYJF4J7y7PAF9ZJLhYAOQrRq4plPXjT0XqeLFkV+axj0Bc8jbJ0K8MbGPrOFLm8bVUo7NoVV9wCZ0YHRNFzOAq6wBn1klD4APXeG3hOrMaSY6P91QBato8VvwWKUqCoWpmodJQRe87xCjoEd11x4P4q/ffkPY3iR9ifY6T81F6eR1ye//wm9my7QtQXkVreZJpWsDK2BLbGsN3N6CxcaIm7PedGAnvkMwz4zUMsHdpAwCyfPCXY7TrY2INXY11T0RbBgLFUu1K/3ppSZlONq5C0U3JL+zFERF15UPw86/3NnpXJ6Rltjqj4J4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No; in this case I don't even consider it \"eliding\". Since the method has a Task from FromResult, it's just superfluous to unwrap it with await and then wrap it back into a task with async.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"af4574b9-718c-3bb5-9506-5ee0af8c193a","date":"2018-01-11T02:05:44Z","timestamp":1515636344,"authorUserId":"disqus:stephen_cleary"},{"_id":"78bb3f69-4cc2-3df3-96e4-2dd7b883ded2","authorName":"Kiran Challa","authorEmailEncrypted":"","authorEmailMD5":"","message":"Excellent article!","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2018-05-21T23:36:57Z","timestamp":1526945817,"authorUserId":"disqus:kiranchalla"}]