[{"_id":"ff814540-4161-357d-b4ca-cb2f7d00d82d","authorName":"HeadInTheBox","authorEmailEncrypted":"","authorEmailMD5":"","message":"> Currently, we have Enumerable (pull) and  \r\n> Observable (push) models, but there are no   \r\n> easy translators between the two (these   \r\n> \"translators\" require dedicated threads).  \r\n\r\nActually, Rx does support (several) conversions in both directions. As you mention they introduce and remove concurrency.","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-09-05T21:17:56Z","timestamp":1252185476,"authorUserId":""},{"_id":"3ec7cf88-05ea-3dd4-a7d8-a23b32b40a41","authorName":"Stephen Cleary, Nito Programs","authorEmailEncrypted":"TIAWJBIkwkoSqBLADlOR1gL/qTUPQqEBRV1Oh6FoMaNWyJ5Dpux+OOadYl+gT/Xg9LldrLp9Q06K9kHFBN/06DQftd22ErSJXINY2OmNqYqC5IKgA2yOvtmLqWSzaLrQoheHGCmUZpnDGRVys53Nzyyjb609GF9ztw97xTEy44/imqRHS8nLkpX0DrGblTXKb3Nq8029QOGvLnDZ3NftFOxQIJSaZZAR6g7rMx5uwRdLbta7LZq8Y4FQQBCM521Zwc3WjZnZlFuJIJylBJljI9UOib7BSGxUfvSQLhY4Tk8e9YirJG+QjMBZJiEVN1jD81EuEGXbEc73ojBRwfe/9lDz/xFwul+xr44LCTautvgQxBFt56DLuPj6RE3sVTKIk5On4Dt0NmUE4/jkQo1o/M9thnL6MIuHU42apNZpQXD4p56nKTggjrs3WWPOSafAXsCs6t8sbMC7Q2n7oEmSC92vKM0XgGfJaY8zpHUgjNZhRIL1Mrp9sCI/4iB2I0HpCKy4+1RbkLfoTpnNyfvKoDu+Qgcmt7eKo5KnWvLy676jbjW2sJDHO1exe832bn+JF+Qq7iyeRU6Ona9S2a9J6IAk86WnaNTLKlcnSoy2jCrcN1SkWb2YrEg9m9tsZ/YHyhWNCprRwoAPmNEnzO5XhnbFWCsBEBng36nDbWxG79c=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Correct; the actual Rx framework does have these conversions. However, according to another Channel9 video I saw, they won't be included in the BCL. Last I heard is that they will be offered on CodePlex after the 4.0 release.  \r\n\r\nI'd love to see this change, and have these conversions in the 4.0 release.","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-09-08T13:06:33Z","timestamp":1252415193,"authorUserId":""},{"_id":"9c14e7dd-45f9-38cd-b741-bf4af99772e6","authorName":"Corey Kosak","authorEmailEncrypted":"","authorEmailMD5":"","message":"Your pseudocode (and Erik Meijer's) has  \r\n\r\nvar d = new Action<T>(h.Yield);  \r\n\r\nI think this was meant to be h.OnUpdate (there is no Yield method in IObserver<T>)","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-10-27T06:11:53Z","timestamp":1256623913,"authorUserId":""},{"_id":"d9828e51-041e-3da6-a8d1-d95a82864510","authorName":"Stephen Cleary, Nito Programs","authorEmailEncrypted":"Qc7srcCCUVOTkYi81+hCxrXniCdcL8UdK94FSHaobuoYARQM17hJBQOFokOqCewBJ+kd6rrrpV3HcdmYLsMsd2Z9ne0j3Hvr69L5KW5+EFMbMrFMemrrZNfBJyWaNNRAqfO5039ys6pq3Z8r7+s+zu4ZoYnme+umWjjr0EIewMSpHM74+yb04JxTmTzj21xwYZ3+opFVP6KLUEsQljsW8qv41AKvSWjCibMf+LAmEcAcZ/NyytylhOucQGcW7Uidcw2bqqlUQut7L67vlwb64bOiCdeFvncFbedlkMeOPvQalvqnqpNcULATPy5ENe3M7UYzJRbaqnJKgoV4FIMblaUo5FNoA0TLOZHDb9lA3gzAg41eB66WT0RMYC0uZu6TNicwJ8uOfsG8PUomCx578V6s4rG5hpTSWiIYU8te+M86EKOg+eAHYRy8LGzEnEVZPS/uZRho6lDxwV6I7bHWYwr6taperXD9gviTqciGCRITP6+IxWTYTIO7jnTf7TFONJdbHQ4Z9eBMzSO8Mc40iH07CcyN3hV/lcqEnRy4JbzIxdscyDbJre8av9JCkmz8R0nrsC7BeOPxJsZcnBcnw5IWEo2R2vOvUJXSLZT25bpX6UsFDC9kScCn2+dZkKzcZ/xCVmShbwt27Tsn+At5wZrQkXxbw6pIHxsvw4l9LoM=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes; I mostly just posted the code from his slides that he skipped through on his talk (but I did add my own comments to the drag/drop example to make it clearer).  \r\n\r\nI believe it should actually be h.OnNext. The names of the IObservable/IObserver members have changed a number of times. The current revision is documented with the .NET 4 Beta 2 release here: [http://msdn.microsoft.com/e...](http://msdn.microsoft.com/en-us/library/dd992814(VS.100).aspx \"http://msdn.microsoft.com/en-us/library/dd992814(VS.100).aspx\") - though it may change again. :)","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-10-27T16:48:29Z","timestamp":1256662109,"authorUserId":""}]