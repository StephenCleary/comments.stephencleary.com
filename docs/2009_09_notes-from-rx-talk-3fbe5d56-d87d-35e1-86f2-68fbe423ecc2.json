[{"_id":"ff814540-4161-357d-b4ca-cb2f7d00d82d","authorName":"HeadInTheBox","authorEmailEncrypted":"","authorEmailMD5":"","message":"> Currently, we have Enumerable (pull) and  \r\n> Observable (push) models, but there are no   \r\n> easy translators between the two (these   \r\n> \"translators\" require dedicated threads).  \r\n\r\nActually, Rx does support (several) conversions in both directions. As you mention they introduce and remove concurrency.","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-09-05T21:17:56Z","timestamp":1252185476,"authorUserId":""},{"_id":"3ec7cf88-05ea-3dd4-a7d8-a23b32b40a41","authorName":"Stephen Cleary","authorEmailEncrypted":"oeSkoS4uopywH47JjoMstmn587izw+eEODOT51tGCjd8XDJIfaDsd/xwzbJFeQDbRNmdWf7GwJWdqAoOU0JafZmkF1S9CzBHkBkI7/gDK6WE+YW68xe9KoOYxTZzLVxQ296+4C9l8xhnwGQQPX+RJSgFRLM5LXeSwpelw8+CEEbJH1GVVboAjB9xpFQ1Cpq29FGvKTeN5CMFR01GFAXTuTtf50MUgGYMZquBWoNtz/b9vICc6mAhmhZBtJ4ozPrkLF0CySCvm0EjunbmcqIShCPtfe6rGDao9SkFSSlGmE3IAqel3phaAaOovLJ7F6ikGLlZnjwOK5IdPUezhyhe54zNtboS7SN4mAmgpGdw1NShmbt0U3Vj7b4CQaOQLQnlI37meffNznY0R6yjNoy2GsHJc9tWzrrfrJffjHGEbvye33BXmgHsucDqjxFXCWrEk6HcdMKabYmKmPOikv7YCev2z1La5nzJbXlKvtya29utROVIvC9xMK6EPTkDZtsdwDKvaIMM+7rQ7KqdnqU0lN3ILP4+Mmq4Ivg/ieXv7SP8qK07Vc7rpl7CB8fUCSqmyOWIHSNm2l2DJnNI/CQpuZKimmkG4it4alOdf0wsW4/eiGZD9M3j9t2YmBUYIh6VkjdbtwJ+7gJ/8iK8ASWlJVQHAKX5mb+ymvytkHyPxUk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Correct; the actual Rx framework does have these conversions. However, according to another Channel9 video I saw, they won't be included in the BCL. Last I heard is that they will be offered on CodePlex after the 4.0 release.  \r\n\r\nI'd love to see this change, and have these conversions in the 4.0 release.","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-09-08T13:06:33Z","timestamp":1252415193,"authorUserId":""},{"_id":"9c14e7dd-45f9-38cd-b741-bf4af99772e6","authorName":"Corey Kosak","authorEmailEncrypted":"","authorEmailMD5":"","message":"Your pseudocode (and Erik Meijer's) has  \r\n\r\nvar d = new Action<T>(h.Yield);  \r\n\r\nI think this was meant to be h.OnUpdate (there is no Yield method in IObserver<T>)","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-10-27T06:11:53Z","timestamp":1256623913,"authorUserId":""},{"_id":"d9828e51-041e-3da6-a8d1-d95a82864510","authorName":"Stephen Cleary","authorEmailEncrypted":"o7Qpf5pS1cTtm2VY/DdF1eC4JtBLkubH0O8haC4RYnxkm6i51caAmkKDvNE5HEtqNQvwD737yJtS4cbgPhl1B3Vm8YEys42v8K11xk6ZeGKDhnT/nYaxTA8hLitABn7kiQIGvhdWrX8wkJq/NLfByTj9MfErYiktnViiE70f54adjdujbX259AP555gs2Lg9oMImYF803GOixKk1Y16rU+y3ATO+NMzgtDCQC99w7nXqQTUdn9FCs0pgCOmx3YtgGniqI5Z2Hq+rgVI16BhJhKiXJYdGgRGJIhCMYZgwCmNSQVJ8UB84sBPiZETIEs3kN6y+HcISTauf8uhrMA52Z57SSLeTL63THbcZO2f5LM/kqZobt+hUmLU/Py2x83qy4tfT/xCSNcbJxlSEABzpOblFqvgeNrmr6x1crSGDHUBgySBv5SAeKltI7fCDbv82CbJvV4og7WsoR0PjvT53qYHZf6mgADwerjV49gbksXigClhwoX2dHXaluAP+l4Mo9azwFEXFDbZU+Zc30oNsYqwB/5+J6zbQEB8WNfT8JusmpNvWiQ6NIzaiouvV34PjoJOCDZOd/nphpydUlciRxCnj5euhtRbe0Hi/eGLmh31K56sA1qltYA64lHg9u2pKx8/+/EmDXrXlpeSSEurjJoPA2a10F+4QoyIgw+ZA3Is=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes; I mostly just posted the code from his slides that he skipped through on his talk (but I did add my own comments to the drag/drop example to make it clearer).  \r\n\r\nI believe it should actually be h.OnNext. The names of the IObservable/IObserver members have changed a number of times. The current revision is documented with the .NET 4 Beta 2 release here: [http://msdn.microsoft.com/en-us/library/dd992814(VS.100).aspx](http://msdn.microsoft.com/en-us/library/dd992814(VS.100).aspx) - though it may change again. :)","postId":"2009_09_notes-from-rx-talk-3fbe5d56-d87d-35e1-86f2-68fbe423ecc2","replyTo":"","date":"2009-10-27T16:48:29Z","timestamp":1256662109,"authorUserId":""}]