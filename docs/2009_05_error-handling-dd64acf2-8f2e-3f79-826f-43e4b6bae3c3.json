[{"_id":"7a938c53-6f09-3640-8191-8c0941e33c33","authorName":"Autostorage","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/17409399800113624605","authorUserId":"","authorFallbackAvatar":"","message":"Thank you for useful information! Was looking for a guide on optimal timeouts for a long time.","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","replyTo":"","date":"2009-06-13T20:31:55Z","timestamp":1244925115},{"_id":"250a1d77-49ef-3a45-a0e4-5874be62227b","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"@flatplanet: It \"hangs\" because it is waiting for the rest of the data to arrive.  \r\n\r\nYou could add a timer, so that the entire message would have to arrive within a certain time after the length prefix arrives. The length prefix example code has a maximum message size, but no timer.  \r\n\r\nOf course, the best way to avoid it is to fix the other side so that it sends valid data. :)","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","replyTo":"","date":"2009-08-05T16:35:16Z","timestamp":1249490116},{"_id":"8c957c62-12f9-3382-b488-a0a7942c8003","authorName":"flatplanet","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://x-world.pl/","authorUserId":"","authorFallbackAvatar":"","message":"Why on Windows 2008 (r2) on reading packet without valid structure (lenght prefix + data) system don't throw Out Of Memory exception and system will hangs? Is a way to avid this?","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","replyTo":"","date":"2009-08-05T13:38:26Z","timestamp":1249479506},{"_id":"1bc1c5d6-71ae-3313-a026-f1cfbc4d382e","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"You should Close it and create a new one IMO. It *might* work to reuse the same instance, but AFAIK it's not guaranteed; the standard error handling response for any kind of error is to immediately Close the socket, and I would apply that same logic to the connecting socket.","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","replyTo":"c43043d0-86cf-3f79-aed6-0780c8c35d68","date":"2014-08-13T15:42:11Z","timestamp":1407944531},{"_id":"c43043d0-86cf-3f79-aed6-0780c8c35d68","authorName":"Guillaume","authorEmailEncrypted":"t+V7o7gOXLkeWdQiauwxMF1Do4weVBfYqa5bcW0RDzVY+klsFN6thlU2nzzGBX6pOr+zxqMhS5TYhKbQl6tU4NAhpWXvzkdaX5/E+ea0MinQxhfJswmsV8G77iuA/J34NccsTiY8fpPcD6DYpGhb3Z5u7Y2wV4YUIcDZ3RG2QH+0iNaSuFMZpR4s+8l+DM6Irr337Ncz4/AZB0V0UKthV0E1wigMchXAEcAP3DTMRtZnGYPyOaxjuijbZTxynSuvYiRZNyA4pLX0wSh1meQXWELJwpjOA9H/JOjB65KE8NOxikKjJcWduaPClKnI+rE5PUjRtArM0eE24N7h2OwsInAFGi9kHDqpnp6Hk7Xm3JOQ0FVXT3U/N5Fac+yIwFi+1ZJbni3+TpOZKWagkr1EJF/yDPOTYb8gHGz5oExBEncDFHFMlmUpJcJDXgoi/1/ED+kJ2LaX2qyd4bwEcb1GS9Ez7YuQkUsGKyKNbc+ZVohyA6GWKDW7Qlbu1ZxfBICC6F1NNo1qKPOkiMQ8aBu8Yp+pqbMP39FVK6CUsfynB5EW46w4Nqodp69Nd9qja2nbyugH6JaDBsul2qBMPfXWmlL7yBF+K4Xlt+baC9Pun3MMIvyMRvVvpDkQZ4WnW9ins/NvYqhnwrfaPmKDaO/dqeJs4UkCqaY+6b3lQx7r/FM=","authorEmailMD5":"3728e6f4a8b547f08329628b1320b3e2","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"This seems like a mandatory complement to the MSDN documentation. I have a question about SocketError.TimedOut. Can I then retry with the same Socket instance (using BeginConnect) or should I preferably Close it and create a new one?\r\n\r\nThanks very much","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","replyTo":"","date":"2014-08-13T15:36:57Z","timestamp":1407944217},{"_id":"d68a9760-90fe-11e8-8a29-d7cdde0ce4a5","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","postUri":"https://blog.stephencleary.com/2009/05/error-handling.html","replyTo":"a09985d0-90e0-11e8-8a29-d7cdde0ce4a5","authorEmailEncrypted":"CUPn2uWrRsSDX9JQD2zvu4PmiKHjmEmzHKYGYhJfYl95/SQjcntfAqI7y0RXO3kkqx4YXr4EtMEltbjyDnHXG8a0NzZeiz/om+8mEi3UlvjC+9bkxEO+SQs5S8mnYLk5dZNhlXiZq1ArmhLZsrq9tnOq2OYq+m8LvotJlcJfHlm7P7NOl6rJ/TzR43rKZu/jYJctSsGDLNm2816BiFbzZ1LcxH/hMBqka65FpQuwfe1buiTOZQEUPDmg/013niBYtRlLnLzbljv75x4Equs1SBI5iHXWHureYBuGgP0/u3Bf2frIU7ek5yhlpKV7TSXI0tOEm4EOW3hODsNE3RP/es0zi2k26jgj/oeI3sFKn18cJmoY+xB1axVdVeP9qh1GU1FmOO2nWryexRydWQfJ1eVuUloRgPd48s1gmRX0L1s1Op106d8Nh3vHLqgjQHSs+r/F9rqZ1LKQrdVqxR3jxhuSE0vh73DCDYFhyazvOR6Lv3A5J3ti6CjILIinuhdT4R16LnzYVLVG2XRNg47beV0px5CryLoHXcUDFv+eNJ+5J/KXIb11M0S/dz3XSDFE+VE6oFX3l9uZsLUlLKWi1X1amgOcwM5XXxv0roUoDMzHojIaPQsMmPhJolCIiIKTRA2f9Fs6yJp9oYferFnv1bclfkc+FkrmOM9dtnNogfU=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The only way to properly monitor a socket connection is to periodically send some packets. The easiest way to do this is for the application to periodically send data.\r\n\r\nMore information here: https://blog.stephencleary.com/2009/05/detection-of-half-open-dropped.html","date":"2018-07-26T18:08:03.500Z"},{"_id":"d8a6c130-916d-11e8-8a29-d7cdde0ce4a5","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","postUri":"http://blog.stephencleary.com/2009/05/error-handling.html","replyTo":"d68a9760-90fe-11e8-8a29-d7cdde0ce4a5","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"G","authorUri":"","message":"Yes I understood that from your article but what of the Server Listening socket (sorry I should have been more explicit in my question)? \r\nAs it is not a connected socket we cannot send data, so should we periodically try to connect a test client to make sure the listening socket is still working?","date":"2018-07-27T07:22:41.229Z"},{"_id":"a09985d0-90e0-11e8-8a29-d7cdde0ce4a5","postId":"2009_05_error-handling-dd64acf2-8f2e-3f79-826f-43e4b6bae3c3","postUri":"http://blog.stephencleary.com/2009/05/error-handling.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"G","authorUri":"","message":"Hi,\r\nCan you elaborate more about what is the clean way to monitor the socket availability/health (especially of the server listening socket)? \r\nI suppose doing a stop/start in a catch statement is a bit to simple and moreover it does not monitor the socket but merely restarts it in case an exception is fired during the Pending/AcceptTcpClient operation.\r\nThx again for this nice FAQ","date":"2018-07-26T14:31:48.029Z"}]