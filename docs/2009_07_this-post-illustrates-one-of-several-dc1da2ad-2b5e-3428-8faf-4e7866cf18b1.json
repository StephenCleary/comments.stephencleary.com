[{"_id":"07394adc-2610-30dc-82a7-3995ddd69b9a","authorName":"Stephen Cleary","authorEmailEncrypted":"E6VIhA0y7ysgShIKJubYlT7iTjUuozJ9D1uU+cpejeWGW19ge9nHlGw76uvQ3LAqs1EthXq6DG6XQ0oBG4IleRlZLa1cHbMZpbcDppta170IeP+9+Y/QdsKL5K9PwF67204XXv0lU2r173+T2O0YZ6LIDQOgUFRdz3pn9G6m7FbD02etD9TjKMgd4M4IEfG3wqm0DCV9cTPYp1QUIiFJpFq6NqLQFMS+PkMrHtFyEueOEgT5n50secbfA7iDa2xaOD3CUlmUfBrNSwQ9VBPTKsxzlaJ+H6/UUc4K5MXAWjtGIcaV09Z7r4/PPhrAhs6N5wNCOHEyOXoDsgHSPLcEIWBTaNqIMG4Ct85BhQ1MB25dZ9uwk+itojxiV+2AcwdFYmF68DZUxMp0qNic3oYTtjl2AUEM2XEDpY1jvZ4HJYSmh9KA4vOdvRXrbljJwnLe++Wl8VIYvkj8RIaa9RDuMBX/U6q+T60zOzFLivg2Z784jk91m7ENv5Rtnkzj0NTyupTvg7K/7+rPyLK33j/Ez8LYaC5pxLikp5jqHnXSW7JlVIt1gdtmY2Bt6r/19l9JRv+HwFOowFHqwgNKDe6h9DGXGEtapntucHffGK6Zz+s21+9DsoNob1iIMYSJ5MYnhbjCd1J3EYCTOLX0qY9aOE8OKzTl0rffkAGhk+TWNm8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes. We also use (abuse?) IDisposable for unsubscribing to everything at the end of life (this was a more controversial decision).  \r\n\r\nInternally, the Path is split by the member access operator and a SimplePropertyPath.SubscriptionStep is built for each member access (so \"a.b.c\" has three subscription steps). The (private) SimplePropertyPath.Dismantle method will unsubscribe all subscription steps from a certain index forward, and SimplePropertyPath.Construct will re-evaluate and subscribe each subscription step from a certain index forward.  \r\n\r\nThe source is available for download, though the first official release is still several weeks away. SimplePropertyPath is one of the more mature classes, and could be considered in a RC stage.","postId":"2009_07_this-post-illustrates-one-of-several-dc1da2ad-2b5e-3428-8faf-4e7866cf18b1","replyTo":"","date":"2009-08-02T18:26:32Z","timestamp":1249237592,"authorUserId":""},{"_id":"70778034-d0ce-3649-8ff3-4e1a987937fc","authorName":"Josh","authorEmailEncrypted":"","authorEmailMD5":"","message":"Interesting, do you guys take care to release event handlers if the Child property is swapped out with another FakeVM?  \r\n\r\nJosh ([http://www.thejoyofcode.com/)](http://www.thejoyofcode.com/))","postId":"2009_07_this-post-illustrates-one-of-several-dc1da2ad-2b5e-3428-8faf-4e7866cf18b1","replyTo":"","date":"2009-08-02T10:48:43Z","timestamp":1249210123,"authorUserId":""},{"_id":"ecfba3b3-deab-3489-b033-7fc56e9c73f3","authorName":"georgebirbilis","authorEmailEncrypted":"q5Ys0J5iLLI3ah240fqmt2f4XrTADjnCNmJ24y2fauYD4Gx9+idtkdg5w5aOYOBMGl1mIR65qxJq3oq8yw9lxrQdtVfs6U4lbbcJ2F0GgPTEK085bI9ZPvDAjZVlaHvBChYDKZRq4/MQHl8C8mpQIyYLyxFApI/zJl4GznoTB+MKDgEcRZiEcMRl6uyaylLDJMYVkutoLoW2261EaVpogk4741MxonIdgZou56lNv4uBs0tLna11HjIeQ7P+qpGnyZTgHaarHKyOJhk2Si20UclY0zjF+ex1lxyGuHy+KzAEwOa/KYY2awuzT/AIAxS+L5aWOJ4xUEwqGW2Mw+rZ9bmdgmWx52ZlovARjJ5ctqJilezV3vgYaI/LEVkv6WTE3GXXR9kCA5zYMsOZCncgWdVC32PSXUeq90FxHt0if4UdH6Y8nUNzTmuTqFtSnjfjEZ3wA7uSNPl899a/Mej+IJhtANDjhVYuvYaGldpLEcRnQewA1Rb3l/6P/kM+xF3XamsBluA0i4/7VUeNkAPYRVBBgLQeNnFqCzhie0t8G3rOnO0A13CU9Qq3UtkLfsjbM/97e4p9BYZi6McXgJhEIF0cp7WCN2En3eksX2ybu9rbSWuZyKQkuR+HZKCWfW8jGu3V38BLhmbl1BRuNgbUKFYfpYOd6C2ESFEz8YBqFDw=","authorEmailMD5":"3105d7c221ad6c73ef4ae3568c65f556","message":"btw, to bind two object properties using their INotifyPropertyChanged interfaces together, can also use the BindProperties method I have at: [http://clipflair.codeplex.com/SourceControl/latest#Client/Helpers/Utils/Source/Bindings/BindingUtils.cs](http://clipflair.codeplex.com/SourceControl/latest#Client/Helpers/Utils/Source/Bindings/BindingUtils.cs)","postId":"2009_07_this-post-illustrates-one-of-several-dc1da2ad-2b5e-3428-8faf-4e7866cf18b1","replyTo":"","date":"2016-03-11T06:34:05Z","timestamp":1457678045,"authorUserId":"disqus:georgebirbilis"}]