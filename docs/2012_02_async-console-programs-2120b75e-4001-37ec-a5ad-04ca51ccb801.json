[{"_id":"246ea2be-d1ab-3862-bc69-4cee8591ff35","authorName":"svick","authorEmailEncrypted":"","authorEmailMD5":"","message":"How is this better than a simple  \r\n\r\nreturn MainAsync(args).Result;  \r\n\r\n? This would mean the ThreadPool would be used for running continuations, but I don't see any problems with that. Is the AsyncContext there really just to save one thread?","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2012-11-28T23:05:46Z","timestamp":1354143946,"authorUserId":""},{"_id":"00dfbcc0-8809-3d57-8c79-df58eaf3e7e9","authorName":"Stephen Cleary","authorEmailEncrypted":"jeUSBAVdjPbCLufkYXj89qS0+a/PSWxND4nGhqo8a6SVefk0a7HHeWcTAORXozUCJZguWcd3K8GtqweXLH2xtd0gBEmDerbAZrv6kkRTZENdbLp7MFqKq0aMkki9VOy+8jaQRnAvJzp2yLb9LmVeaXDizuTou8JJJlgXdiS3VsmhOHNkp1HctGmUgk9XuD3zqJsxytOmsfC5GNx/Ig03aJWxSufjSKREHqz5XgYM7T4VrLInU+bdwQP4tY60DIaqoFtlTsvGazhfh7h+OIEcJyQ3mkQVWFVbF9vplC6YjsWO/1TIGs2s0/HGUAiD93/poc8TBV9rCtECGKaONkXPz9h5uGOgLNiynNqaKlnXM6/rZAXFMO9+p6vBQNC8XdIA/GxmDc5l66/niZNOr2cuwrVAtk3ZeQxQseMCdxOs81I6u/aYBQb972ZL5PfDGJH057a/2rOfQ4E/ttn2k+jP74DA1yXpPlZ8oCPfLMeWiYQcosM6qtSyhC8qXnVQTmU99fkzyWdkOZXiazOMQAdokvOQSJ076l3cFp0FmbGBKNmNBgByVhUeitW9EyGpqnKVP5pFB8ORCsmu7reYG0Ku1U2+IYaZ9aJIorTZJrTskkKtZ9eItLYnRUpNZHvz0DQPvTb5yvBgYrbUis0k3uXWQL86HAd7HDkhiAhuG23s2kc=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"AsyncContext.Run also unwraps exceptions, similar to await. In my Console apps, I do use this to distinguish usage exceptions (command line parsing errors) from runtime exceptions.  \r\n\r\nI think of it as a SynchronizationContext implementation for asynchronous Console apps (and a handful of other situations). Simple apps like demos or tests don't need it, but I find it useful for my \"serious\" Console apps.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2012-11-29T00:08:02Z","timestamp":1354147682,"authorUserId":""},{"_id":"3708d8b1-4551-34c1-9b4b-daaf810ac324","authorName":"Mikey","authorEmailEncrypted":"","authorEmailMD5":"","message":"Aha! It's not built-in. Also couldn't find it when searching package manager, finally found the page for it though, guess it's not listed because it's a pre-release? Anyway, after much link following I found the package page with the Powershell command and this did the trick:  \r\n\r\n PM> Install-Package Nito.AsyncEx -Pre   ","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2013-05-12T04:38:13Z","timestamp":1368333493,"authorUserId":""},{"_id":"59b24f53-1b78-31b6-af1a-a507fa44881a","authorName":"Stephen Cleary","authorEmailEncrypted":"ODb6j4mEnsceuYsvJhEM98yTW/hHevpd+cZmLosWZkso5uZN5C8X8c5eIKnlRogq/ZFakOlBTVPoVNQrF3mRg0OL6JauFeycKJmc2zLnBjj9ruJHau2MakyNBJJ4jfj4tEElGKx+8oVRLI69mEe2DxfZNarOxuIUw/Iw5AqEf0jHf9DzrszBktFC2JCEpe+jtJDEi9v/zQjrd4QDpjJU6whAVZfgY5SDiIpzZX7+Jh1dbMmi3zY29Th7AFv88i8OXXFhC+1Is4bqjOwx+5ketSrrnenu7E8XD08Pl964I1nsCU9esMRdDTpcP7WIEnoE+jxGnOFar4KuUSSz40Ppb+pka5mqfYs86wVkXxohp7WGttPHNERm9tOfOexbxh5Wd400oaYjyZJShTMilkdch8YAceBHdTKtuojvwXrbxxSs7XfK+O+yjYLdH3mU43mB/isGnJuDGhuyM9k54sy8rpaN2yCsWCRq5TCv0aGZzFziwJ7uoXU8R0ky10ZRYyDtx+ef++Yca6ST9aMWMqLedgS+EN033oskfMDWM55lEgEQKHr8BdlX3lMKGeOaI7+fdUvK+TReUompXPS7GPWv73Z0EO/dyGaYT+n3NRflJw7IxkB1DwggsL4ox1j/up+h5OH32/JpyTAysWuUgzUQ75V3ZDKNjX2sa5Rmf1fJ+Ho=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Mikey -  \r\n\r\nSorry for the confusion! Yes, AsyncContext is a class I wrote in the Nito.AsyncEx library. It came out of pre-release in a stable release late last night, so before then it was pretty hard to find!  \r\n\r\nRegarding async in console applications, you may find my intro to async/await post helpful here: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/02/async-and-await.html \"http://blog.stephencleary.com/2012/02/async-and-await.html\")  \r\n\r\nOnce you read that intro post, this post will (hopefully) make more sense.  \r\n\r\n-Steve","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2013-05-12T15:53:03Z","timestamp":1368373983,"authorUserId":""},{"_id":"c51d97ba-816e-37f9-b836-4547c8d41da7","authorName":"Mikey","authorEmailEncrypted":"","authorEmailMD5":"","message":"Sorry if this is a dirt stupid question, I've been using .NET since 1.0, but I'm new to all this async stuff -- playing catch-up now and noticing that none of the examples seem to execute correctly in a console app (they work okay in WPF apps) -- I'm hoping your solution fixes this.  \r\n\r\nMy question is: Where does the \"AsyncContext\" object come from? I've been doing some searching and nobody seems to mention this part, also can't find it on MSDN. It's clearly more than just a using statement, as I have no \"Resolve->using ...\" option. What reference do I need to include?  \r\n\r\nUsing .NET 4.5 if that helps (pretty sure this stuff didn't exist in 4.0 -- so maybe it doesn't help). ;-)  \r\n\r\n(p.s. -- sorry about that deleted comment above -- it was this one, but it was in the wrong place -- as a reply to svick instead of as a stand-alone comment -- hopefully, this one goes in the right place.)","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2013-05-12T02:51:36Z","timestamp":1368327096,"authorUserId":""},{"_id":"e1d067ad-1a51-36ef-9333-c4736ab2e144","authorName":"Mikey","authorEmailEncrypted":"","authorEmailMD5":"","message":"This comment has been removed by the author.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2013-05-12T02:49:29Z","timestamp":1368326969,"authorUserId":""},{"_id":"0741123d-8e68-383c-a34b-b23246a88942","authorName":"Prasanna V. Loganathar","authorEmailEncrypted":"","authorEmailMD5":"","message":"Ah, makes sense now. Thanks.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2014-02-22T22:54:11Z","timestamp":1393109651,"authorUserId":""},{"_id":"65e69bed-5c31-3387-9b1d-7fa9c8b999c0","authorName":"Prasanna V. Loganathar","authorEmailEncrypted":"","authorEmailMD5":"","message":"Hi,   \r\n\r\nI was playing around with the AsyncContext, and suddenly, got into a situation which I couldn't explain. I've written a simple example below. All the tasks below seemed to execute as expected, until I put in the Console.ReadKey there. It seems the tasks complete, only when the AsyncContext ends. Am I missing something?  \r\n\r\n public class Program  \r\n {  \r\n private static ThreadLocal _localStr =  \r\n new ThreadLocal(() => String.Format(\"Hello from Thread: {0}!\", Thread.CurrentThread.ManagedThreadId));  \r\n\r\n private static void Main(string[] args)  \r\n {  \r\n Nito.AsyncEx.AsyncContext.Run(() =>  \r\n {  \r\n\r\n Console.WriteLine(_localStr);  \r\n\r\n Task.Factory.StartNew(() => Console.WriteLine(_localStr), CancellationToken.None,  \r\n TaskCreationOptions.None, TaskScheduler.FromCurrentSynchronizationContext());  \r\n\r\n Task.Factory.StartNew(() => Console.WriteLine(_localStr), CancellationToken.None,  \r\n TaskCreationOptions.None, TaskScheduler.FromCurrentSynchronizationContext());  \r\n\r\n Task.Delay(100).Wait();  \r\n\r\n Console.WriteLine(_localStr);  \r\n\r\n Console.ReadKey();  \r\n });  \r\n }  \r\n }","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2014-02-22T20:25:23Z","timestamp":1393100723,"authorUserId":""},{"_id":"ff734681-4664-34c0-9ae4-8cac32d96940","authorName":"Stephen Cleary","authorEmailEncrypted":"ZGBUMnuTTtZXfmmZGdV2lyJpG1eYiF+foYIuuaCsrKvGeg+84+m/HsaUNwt4waotB8ivXlbjCBkM6wv62Tox3HVBnhb9g/lSg0mJGPesphcU5Jv408at5AR3Jsabr8Osly/1oIP1jUCCBFDD3c8GwO1NR7VD5FaI467vrOMsewbC5kPzobUlpX7xb4b0oZ0kLe1e5XtYN0YeWvblvvz95xaJ7RU/8Ocl5mB23Da7rWdcqssaPq5ORJEb96iyMPsyWGkihL/qJN+rG9jy+BkdhuJPD5a4Xo53hSK4nhsUwh2U/66QkEy2bYDcfTZaTsTg1FuM+62hM0IS/qgGYf94pAvVhXtkzIddf0+ZcCr5su112FMJXEA1ycSyHDIIE5XLQH4jacyGwbN0B2RYDi57oMWulHhimz2qcr6T7AwP86ltoeTidWJJExb5Df1s3DGBSwm9r2WD9F/rTIgCrxl26ci2UZF3WTD60ShCqVerbw7H+1ozTsBEJQoxSbjT4MGXKi5IbX6Dpa1VlK9PU25PrByhzPaGhK8PR6EnewP/tlU6RrjodeyDkqSMdMbvfPP3qR4147yMha7R9cZHiHOS6SFLlHiAMN9nuQMN5b7M0dPxEoG+1+lCY9Ntl3m6EkaZfYCZ3RcKntcz1hF5K4W8brQ2+WZ1XkwY75d6aISM6hg=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"AsyncContext only executes one task at a time. So if you block a task (e.g., ReadKey), then the tasks queued by StartNew cannot execute until that task completes.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2014-02-22T22:07:56Z","timestamp":1393106876,"authorUserId":""},{"_id":"42a39c90-99ed-3f35-8b26-60b74ed0533c","authorName":"Prasanna V. Loganathar","authorEmailEncrypted":"","authorEmailMD5":"","message":"Hi again,   \r\n\r\nI see the number of threads being increased after an awaiter, even though its supposed to just queue up, and execute on the same thread.  \r\n\r\nI posted a piece of code, on StackOverFlow, with a simpler synchronization context with no use of extra threads, to try to understand the same. But it seems to double the number of threads.  \r\n\r\n[http://stackoverflow.com/qu...](http://stackoverflow.com/questions/23012279/no-of-thread-spikes-with-async-await-on-a-simple-custom-synchronization-contex \"http://stackoverflow.com/questions/23012279/no-of-thread-spikes-with-async-await-on-a-simple-custom-synchronization-contex\")  \r\n\r\nIt'd be great if you could take a look into it when time permits. Thanks.   \r\n\r\nRegards,   \r\nPrasanna V. Loganathar","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2014-04-11T16:21:49Z","timestamp":1397233309,"authorUserId":""},{"_id":"8ff80408-4fd0-3b18-82a1-db884a806808","authorName":"Jason Bock","authorEmailEncrypted":"oec/fO3l8ZUe+C98OE3KxkdEzEkGYaAbHkZ0FHm/FciyGc8o2ZXynFHT3ssfXc8yHd1OipTAowgBVdASvIyQ0KkjZOILK933SCrC1JW82+HNcjJQMx71z3wQBtm8vyZV3u/w4xfYr2U3oqDlQCFeLnxEMuqBorganmNEiCh/R10eY09H3bK5zNlEHpmNvqjIf7jryB37UBw3TQpfV3zPEjGJ9HVXuJfggjrB9HYe3vGIVRffAi279T3HERko/pNizsWEFca55XEApKdgH8ttprofY8aPtA16yo4EZCdUYJ0jSQ2QSydPUkEqad/Kr571lp5GXFOEVAMHQXKauOH63yEGTQV0dfOcKul7I/stWy7TuJyW49B4R3Ufmr53h6S4W+QV+N7MJ7ZkXhf8HO/C/ktC1pAHGPorQ4SvOpO3PGFa8uvsXVXhkaPjbmANsljCdP0IUOyWSGJCoVlP/kZJ5aVyufhaFXPfYX2lFI9rqzK0sPst0Hh2gP+Y7dyCzJpjm9OAM4nZy96j7v/4rDw2oGWH1oT5MALeJX8hqbDESBaz99UW8Q1jUWEPN6BWduAvCQNFpbEAmOvzg3KD+eO8WyHNSRsAS9/LL64l+nM+9aCQRdNOftgNLFTjv6385YSFFH43gLXJN8e2BVsiIedu+lnlmKoNdVw5ULQScIGA8gM=","authorEmailMD5":"078b61f4e6f93716b54bb5fb434c8a60","message":"Curious if a similar issue occurs with WinService code. Would one want to use AsyncContext there as well?","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2014-06-24T12:39:40Z","timestamp":1403613580,"authorUserId":""},{"_id":"2eb53275-b95c-3eef-916c-a157ebc7a2cd","authorName":"Stephen Cleary","authorEmailEncrypted":"d+7utj/n7Dy+CmomoSG04cgm6iv1CN6FzA20HveJZo2Y82yrwJueyhAiP45UahlazFjX3nn6HshHMF9EGFthmywMHlj/V9CacMMHPGMXPNwJLo5GnVeG9OF41Qsyyh+yVAduwhodLNHrKXAaQB65cG+JvstWeoCdZedNr+yVqid6pOSInQvaUYUZGfNhbD2wRktJhRDPNsFiHHnAnBjw7R7823o/3Ii0HOstmKMmPgTuK7iWELhK1xClzUAv1G1OQLWXsMkXD+PGckiwIvgeOKTA34CjW2QwlT8Y12TeEltiBDxDQu1QSuPJyDbZMrtIpGRui95b0jyW50FvZhf79MO4vytwPb1MWelcXrl+la9P5hoW2C1Y4gpv9ixXcXEPVkCddRbdclqGuydxlemy5DMMe6r7LdI43Es7waAyc/icCu6VwZn+GlrAgLhTsVHEMV+0vID/TpWQopRZIP7bavacQ9YGzRXpyx7vJ1hxko7dgL0eYeJyP+/jik3OqG9QTf8rJsbUkcqvvjxzFMlA4lr4R15L0ypaFC2ef00yqW0KP+48PcDbk3LS839ex+d1iL3JJcJdsMOE65x7yx7ixrk6uU9/BVpwt0GrbG9fGoby1EhAIZ1OEofYX9VqfwOMVm9djQkJlsotsM1OQo08TkqzSBwaGk5NzRAPkO/J8h0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, though a Windows Service normally needs a separate thread. The entry thread for a Console app belongs to that console app, but the entry thread for a Win32 service actually belongs to the Service Control Manager.\r\n\r\nSo, I have an AsyncContextThread type in my AsyncEx library that is just a separate thread running an AsyncContext, and I usually use that for a Win32 service rather than just AsyncContext directly.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"8ff80408-4fd0-3b18-82a1-db884a806808","date":"2014-06-26T19:22:52Z","timestamp":1403810572,"authorUserId":"disqus:stephen_cleary"},{"_id":"cde231f7-53e6-3786-9245-0cf4aea2dcc6","authorName":"jbattermann","authorEmailEncrypted":"HHTiPukdt9mm/G10OH5+/QRujkqNx2FC9oBjqoA1IRk/SsXN3QdxBhAHewW9Yo0IwkQsZHH9XsBLMk9SIWnu1+GMtvpsAb8JAXwSsUYQl27K7aU4ohjH+bA3ZSF+AEVvVC9A/6ZK2Ugtepue/2Zta4AHOHOtv0gWXqX6KnzbdiNzfTYJi8sd4u+z0PvhFefJ7EjzSYNx2YiWJac+rWSHaWVJ3bymWten9bzpiPKMbShSfjAfTShUCANh2XDgOxbqC0GUuJvw2eXwXOKm7flS23sToSATZuiu7ta8KshNbLa4IRY2zQnGg24GfQkoYT2sa7MMScj4g40cKj6FsShkO96OCTE8NafP1R/briL9aCJYtbqi1RR0G7mcc0fXW2HLZtGvDqkwufWrWoJRe4JQBFkgQN3D6WNYiSWTbkWEbT6woUXBL12/zcbxmUYH21vJxFPuWjh6G9JWzOysRDqjPA8HB0uYvbz/B5dMAgvRETJCE50l7pelx4r9iM/PBtJb5/wR83uw95OhOJNGVginvMiEcw/EsR+44jzx1z2g298RaHmdCjbTLZhp3ES7uGYD5urOcuFO6KaB1omNEvo9uWfQ7qnztI0DGAYGRrKh2Hb+26Q+AjXIEeGAEzcL2WKRN1rdHwaIjT4VUEDPaSKpPqOR/IQG6sPNjwgV84IsSUo=","authorEmailMD5":"854e9287641aae13c1045bc7df24bfbf","message":"Stephen, is there any way to circumvent / enhance this behaviour.. so that more than one task can / will run at a time?","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"ff734681-4664-34c0-9ae4-8cac32d96940","date":"2014-08-28T19:35:50Z","timestamp":1409254550,"authorUserId":"disqus:jbattermann"},{"_id":"a9a030b9-f914-3f0a-85d8-f7fc6b820abd","authorName":"Stephen Cleary","authorEmailEncrypted":"eDBQ++/DJhV10SqVbXeXN0/QBL6b1XFvMfpgo/dGBMKcrS4RXGF/Y2X15rBM3p/XOTWjrofMds4cbB2LQqmIsStk5bFGbgtYVl2q+ysO5qvzghFRAlJr3MnEnPyOxb7/L4E0R72QAoJdR0itlfpm0x2ytBmK8YuSiKFy74mbyEtoyWNI6TpYzy9//OaqD2U1PIXFY5miKFdvddu5l0sP8VTWYdrvMZcc8cToX7w1htc+qtBYBhhGvDwPNjizZMWuK7Oh04zofRba6sSFQk8J4pErnr1q+zD8Ep7t+C/ummqcxjLTOq3OxLc5+hVPvwBaS57LUee9gjAmeAYzps/KyaJ+n4NI9ZhRVKuCkLrjQ3RtpGAo+dE85cUbx8pLkd0mahPTG/oS8kSiEMuOEn0zVFKScGVBed7aEdFcr9VRfNicc135cQkIBPWQ58EpxH1s/atwE05UHV+Vqjs0qla5E0oG2gy/MW3TiTutFifOOUqNRd2w08X7Gfqf138PRCYrK9jZRKTl7pGmJsAJUtliWVV9gbTO5ii7TE1IQErDbfY8eawVPg3yMqmhUp2aQabo2acsSG4cz+3VC99mzzY/rd0uhM0i7z0uPO4X3W461A2hM3Iy/yrDfqHjE/uDtpoFR3JBHDtosmvS6eHyVAbwyHR5tbf//CA+qTOCJ8fCLkg=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Answered at GitHub: [https://github.com/StephenC...](https://github.com/StephenCleary/AsyncEx/issues/1 \"https://github.com/StephenCleary/AsyncEx/issues/1\")","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"cde231f7-53e6-3786-9245-0cf4aea2dcc6","date":"2014-08-30T23:35:04Z","timestamp":1409441704,"authorUserId":"disqus:stephen_cleary"},{"_id":"0e0d29f1-29ab-3f03-834b-1aaf150a0ac1","authorName":"Madhusudhan G S","authorEmailEncrypted":"GO6rQNvr/dQqR/n2YSxPWKIiXhScmU+VQiEeJkSAnRK2hDP+DBgF9SVT0v6LTlKNT3uCq6MuHQvRXdkOz4c6lmHFjysabe+VNZYyoz6xawUATGX1XvMmKqrFB5MySlBVV3LWYGBa2iHIYPJAj38198qo3HdpYFvXmCRYn+4v+ZDnS3pMO2d8a/1a/cxgxKy5NUSvYV63JRgyz4qMfxiGP1vs9DWO3Kos8yP6sFdbrDmowUjRigzsmehR7rRDL/1s+6mZC4J/WyVQrLzBHpRrpgYRLNfU16Zo6XPnFeEdfufLfTEYygrJ9jMe3wGxaQGGCnUOxkJWrUzgutx33D9CVIVDf73V4myV2P31DDiH12S/ylvCsJ1CYXCpevszeEIJdlwYHQBJowamF00L3OwHN6gq8pFVig+YKkD+s6XduiKHadGJ/XP6TV00Zh2xStEFJj5ZGPFh5MO3W2XLJcXZvRnHan5miL/2N+Pl5l87MNoIWgIAF192UzgVQ9zRjy3baC8l96RkGSNXvqArdvJXMxzpeutUuUKwWOppWhic+5ZrHACAbiS6rzjgd9LksXRsWjC9ZL+MWDGF1GM0HXC6Ywdm1LWA0U0m1MdVmwwITyMMfIVoaP20xmkfj449i+qaRhC3qp+pTsN8ExrOQjQF26zpwlBUP0TfGnSVjQ7yReU=","authorEmailMD5":"06acad583bfb83dc47cb3e94922474e6","message":"Hi Stephan,\r\n\r\nI have found this article very helpful.\r\n\r\nIs there any nuget package which I can consume to utilize AsyncContext in my source code ? Cloud you please point me to a right nuget package link if there exist already one.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2015-01-06T16:55:49Z","timestamp":1420563349,"authorUserId":"disqus:madhusudhangs"},{"_id":"162512c3-29d8-3416-9f92-83573d14b398","authorName":"Stephen Cleary","authorEmailEncrypted":"dv7ZLOAFfHpOHc1ZshWP3GUu61fJjOYo3M4cQAJRHU7JnXuy3bq6GuM9hh0DHsR45lgGD41rBTPQDa+wNO4xoGOD9rFv8WdMxGfIs196YrZNzgyDw7uXF/zWEr1UNfi8SeBuzaFz0dXeQYkRavrnaZv92hZVWhhuxZamHpg6mSEy9Mko7OTvP3UlAXvj0eyqLcLryKLx8KiLe53P9+/dCqrvC9796nEeoaSnNbKXupoyrOdNcHAuiVXfKuGdQpsz0JntKP6IiBU+CsowfXu1rmPzMix01Hy6RZQXldN4E7PMxpBAzKwNji2S13iYIKuT2S+0AZH5b/oZ681WWR7LenCRZFVgpTFEKXNH6Fs99uN4ZjfS49KwgPNFarqUH0/uY/RffWwddAg6eEYHFmUWEBwYXG36vwj0Rf5zQ311VcR1IAsgJdCLubToMJt/AfNv1KF4IRogGIPhorFUtk9eEDTrDc7dOJ/Sjqmfl9p4W6PYqzSYY0uTut92FyGlBW195jMVygLGtdZWZSi5huKsOVxGNPBSYJsFRdsMnFEgeJgMxrsCNy0eY6d6u3vbnTyCJjlUyT9pkkZdMin4mfpatRduuP276wu0GjqAje61oUofQd4sIzWKXYbhgDTD/9ikoGtEZiqdSUICoCH8eliySNQwA8Aa/HSAdIK1dlAWl0g=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The NuGet package [is here]([http://www.nuget.org/packag...](http://www.nuget.org/packages/Nito.AsyncEx) \"http://www.nuget.org/packages/Nito.AsyncEx)\").","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"0e0d29f1-29ab-3f03-834b-1aaf150a0ac1","date":"2015-01-06T17:32:36Z","timestamp":1420565556,"authorUserId":"disqus:stephen_cleary"},{"_id":"7cb57766-4688-3d38-844d-4cd709a248d4","authorName":"Agent Bond","authorEmailEncrypted":"v8CMn4DiQ/L3TKDtauPUKMlRlIqThLXNIji5IRKDE1gNmu2Metpw8ujcTCIUkDQyxWaMXWoanyYM769EvXOTAMyLeoy6FUHidZQ+J5gMHh/PMXVPQD4XY+R4hA8mvLwp8HMwLWFYAWw6T0/vjCtSt4qW0Qyo1JbNpGTZYE+U587X9zJozwipQH0hjGpQE3vk/7VA5RfRRtr+7f9IIzSBLK3hdaEixOriQ5F/hjw/un6QiXPbhg3bNxpm75NxwF+xYZxVlYOEUS4fu7jUJXjv+FQ7JkhCtr+PVO5XNM6j+pWRKWUEiiDksB90nTVaKnwzY5q4hjcZmh3mxNbdMFjRfZtUbgDik87GBki2EiolblteILjKw8x2k0R6diceI3qVWCkjH65ETprxnjEk5O6S3Nuuw7Z/oLMz584KpCjb4mzejQLBbNLwerZkk+gpOkV8rhgbP8QHlsR/Ubn8nbcPt5tR5vDwUEHnjetxvXPIf+nEH6LYYKHJ7rwJ3pk/Zm43zoOyH2WIsLpOS7KrESGve7MUV9CMkufzsKVjRCqytuzxh0P6naJxzZ/tEwsvRw9cB6nPtBnSgrr+Fa0OGSoIcJus8qz+WiSsqKfJ5dGYhpZkG8Nw7gFCX3L5ON4E8SZ5nPAkaltU+adwibfLoMKCkZEBYsLxLDphgweHS9drBdU=","authorEmailMD5":"12810a7e9cf2d0d2c6da069ade160ce7","message":"Thanks for the post. Would you recommend using AsyncContext over using \".Wait()\" for awaiting an async method from a non-async Main() method?","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2015-05-07T05:47:08Z","timestamp":1430977628,"authorUserId":""},{"_id":"d7c142d6-3cbc-333b-bb02-ce5f83b91626","authorName":"Stephen Cleary","authorEmailEncrypted":"gwj0+4+4NFqilp/7UBjYX2RgISOGOinFVN/4LKR7TTriq2LplY+EiMQsMil205MKYOqqkkYE6s76sxmupreZ6wg1uyThm5NqaaaAFE2zmTU01tUlmIIq7Agbq42KBiQ8F5A1xMYNVSYX2llQbVyMudROES6ZJKUt1KDIlWHpWUpyWUEsEuf3+TQdiUtS0ru+X47JHVP+gZAp+wurRcbF+mWjmt7w9ZAt4elR+hZZUfXpGinulISV9L/BKwaBOqDtvQuk7Ujfl/MQ2Cqf/6oeeN+JoxrIP0Ue12FROpIM2JxtwM9M9kwFL8X+Ry5DymuJ3McrLFDMPKvTLVjvqT7MXTMWLrHswcBu3YHqkya1qRvXzCpPaei0rcAPITU69C6qTn+7KrMYd3a88KET3gplbEC6GaxXz3bvdPXFQ3SJAPDA+fNYr+DhLE0CeKsA9Bnja8lX8AKuljTOZ5+4j58mkpvjz4DXY7SrlHX2R1xIvnISQhC02uovK79lZntew2SnxjA8B5sDJ2yupZJNA+TTZB7bEo+McCiF8icca0uOLnenVCstIySnjU8G1reOjaEioBsqmw9YcP4tDsVomT1VV8NxpoapMGe+tH/6+pWxR9fYdRDv33ByVdAOQ00I7Yw6v7d5tyTTiyon3wxeECREHWZ2EIeyhVJs0mi+YgMqKNk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I use either AsyncContext or GetAwaiter().GetResult() in my Main methods. (GetAwaiter().GetResult() is essentially the same as Wait() but doesn't wrap exceptions in an AggregateException). It just depends on what I need.\r\n\r\nAsyncContext installs a true single-threaded context on the main Console thread. GetAwaiter().GetResult() keeps the free-threaded context that is default in a Console app. If I'm writing proof-of-concept code that will eventually end up in an ASP.NET or UI app (with a single-threaded context), I'll usually use AsyncContext; if I'm writing a real Console app, I can go either way.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"7cb57766-4688-3d38-844d-4cd709a248d4","date":"2015-05-07T10:51:51Z","timestamp":1430995911,"authorUserId":"disqus:stephen_cleary"},{"_id":"aeb8bdc4-fe97-3356-9d73-eee63239d826","authorName":"Stephen Cleary","authorEmailEncrypted":"jiNYxgm3rfapPFE+WWJqL3TbOgJiUplPJftIbannUcaRioxFuj9Ud3F3uN91aCtcQPcHG4fzr+CMiM/OmXDdKXG3uKtGLHBgd4hDGQLVAwzjThj4GW9SHA5wyuCEb+2i9Kngn3xSF3q3/IuA0NGqtkTThv1yJfisRDN6667SvqCWX/VFz0Ku+6Bt/ecFHz9ZSEIfTiu7E2ZOV7tsQVqrbFiEoEdy+lgu8gzOo6EGfx6XHapJ+/mo226NFP5vJaz/zsdDvBqrlL3Me4jtnv+XxuMl26gBoSe8m8loUSCBV1HSvRRvYN6Rqxan5Bi3XrQY0w6Nv4poJSLQTkkZIW/fvZ0WEsSibsq8scZfoT5gG+hJuTlM16O5Mxk7KEnUqnj0w1BWjKoWFqWIq/tTlJ6TLBua7QzJUF+RR1P6wNHuoRhfp+m8CPw0j/ZoNCJvcchD4m4SXjp4Zxe8guyDLjpR0GEZ0gOSuGZjb9AQbcivnHBUc+Mb+VQsvMMHVXY9perZwDCMD0wT8gzafg6x0gNQjd6srXoHsBfaG7YnaAWoQZNHMh/S7JgyOeMb3T6VA6KwCh/P8m1sE0JjOMeWxbK443JCYNaoSgtNM0qJ+fvI3Df+AMfc9u7udsPwwelVobrR/Bwte7KoyBYrTuaq+WxyzyTIPcLjX6O7tgxdFoyXNUI=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Essentially, you create an `AsyncContextThread`:  \r\n var thread = new AsyncContextThread();  \r\nThis creates a new thread with its own AsyncContext and starts it running.  \r\nThen, you can queue work to it using its context's TaskFactory:  \r\n thread.Context.Factory.Run(...);  \r\nWhen you are done, use `Join` or `Dispose` to cause the thread to exit.\r\n\r\nIt looks like `Factory` won't show up in IntelliSense, but it is there. Sorry about that - I should have added `Run` methods to `AsyncContextThread` directly when I hid `Factory`. I've opened an issue for this here: [https://github.com/StephenC...](https://github.com/StephenCleary/AsyncEx.Context/issues/3 \"https://github.com/StephenCleary/AsyncEx.Context/issues/3\")","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"cda06c30-3bf3-3106-bdf9-ed434a35b57d","date":"2016-10-04T17:08:27Z","timestamp":1475600907,"authorUserId":"disqus:stephen_cleary"},{"_id":"cda06c30-3bf3-3106-bdf9-ed434a35b57d","authorName":"Binary Worrier","authorEmailEncrypted":"dd2FlAZztyOYjfFh6CxR/S85lF1oGqUSOrqmXh/qB3UpPplmEzkXpp10M1yvZ5q6mFBzOJdWdU/GrK5+LSEe71lT4NpW7pgxW0j7b6wnmpnVQQoOtxq+s8wOJi57C5cGY81km8mYFNjLFTQqu+uRGyY7wIQmNvvR4iGFYlZofAMxKOpDnbv9UVDXU/dOVlkM2+3mQFDqhfzMUETs3o/LfuZWY7YzfsIQo+K7bN2ZQv2vSk2+2l4fEaLLqBk/1bXkLbNZGyuO6cLhra0sqhW9Dxyqqk3Pfw5UFpWQCzia0v0AKUkrNgEi8Mj6UYPl2PKv8PWSs6GevEdTYaufSKJX1TjZLdkW6UStOFgOoWwZdTz96d6fyC1/K3FSo9qoaidf56S698aOD2MONmZh6KUJqeT/D1xbPG1sVpfzLhREswwXZrwUh5e0k3xykXyHgxsAzfzAtJ8s+r5AeKevI2CrpRZHGI3WfbNqA/xMW+/bVpHxEZnNr7GBkVRWnSv9bk0CujB7F4Mnkss9c4nWEUfkOUspQNwIc7YthR6Yapoadme9Q2PF2yV2o301DRB/QFwvfiH0oV77MttRuodukc22g05NV0D7GkAKybEiyN3SQ2wnTygfyn8yqQO++Ex4T63LZNyioNTDd7glS82Kxq8THdcsOSfVkecznlksI8uDz+s=","authorEmailMD5":"46769b2f2b853cad9b21b11bffa3346b","message":"Stephen, have you an example of how to use AsyncContextThread?  \r\nI'm upgrading some Topshelf hosted Windows services, which have some async methods they - now - call on startup. They're working fine when run with AsyncContext as console apps, but aren't starting properly as Windows services.  \r\nI've looked at the AsyncContextThread class but can't figure out how I'm supposed to use it, sorry for being obtuse.  \r\nApologies if this is the wrong place to ask for clarification.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"2eb53275-b95c-3eef-916c-a157ebc7a2cd","date":"2016-10-04T11:50:58Z","timestamp":1475581858,"authorUserId":"disqus:binaryworrier"},{"_id":"68b832df-1187-3aa3-9585-4f0dfb9274ce","authorName":"Binary Worrier","authorEmailEncrypted":"QsuTfigC9fjQDVAu6KM8ck9aDC7jqdz/HkrNQUuSor+byT1ei2VqiUlSD3MeRW8Bq56tykemx6X8hYGYNjpmUaCZ0hX8FQmNtLj/V08QGVRUWJTU/1Q4nFS1GIRJivtmnHVj1tVdLdPkWVPIHnG+ZjsvAHPYpy6MDBSMz18bBPF/o2zOTsZQr7s/HUhlp2npancpadbeaA8sAkb6QgAKqgyzBfgy0zbzUPckQojLO+/x7Z9PBKbJYCL40nOkcpHPG51LgUh9GOUfEEqlGdsdrTuARTF15+NdwV2IuTrjEgP9hZbTmrQhcNNdHJClcUmyym3UbrqUazXHEo+PbSTNP7czt7u4HhNwNiQZo3XllBuZuvQa93yNl5AwAFkzXYWIkSX2fgnY7E7o6xbxvArGm43nxVmVREuv4TH/wtNl6GwGjdypX3Gn/DcRujrZgoHli5GBdsDvElCLbbel+mGEy3fDIAsnaRedtZm89ZK5cnHeeLwcxsHSG/pivMfbLMM9Mh6CEVchMsa2sMI8YBnuUBnaqmiKlzcnnlU3BTjVkwpzx4o2geXtwj+2tziU0CXEkn6l52N1lfos0PI7EzK6k7vTyhUal/TiIsqcY0UfZkO83ngs8rZr9eyg73VRsFm32ej5c1DdhsmhPuI/HgGCAkble0tgKcWbzjQLv+UX7zk=","authorEmailMD5":"46769b2f2b853cad9b21b11bffa3346b","message":"That's exactly what I needed to know, you're a scholar and a gentleman Stephen, and I'm very glad that you are both.  \r\nThanks for the library and the extra help :)","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"aeb8bdc4-fe97-3356-9d73-eee63239d826","date":"2016-10-05T11:17:36Z","timestamp":1475666256,"authorUserId":"disqus:binaryworrier"},{"_id":"204754c9-15bf-383a-b900-8fbd7ab26a45","authorName":"Daniel","authorEmailEncrypted":"M+TLxnGKZvKtf8zSrUrt/RhOkT+eg8FkoLoTN/T/eTYNBDs/T4CnIcz5m/nFZuSv6zqFchxeBYUsArX3hQJDl7y1o7wVU2ll8DMfTdAWzBvpL06zj12YG+PfLlGgTEswbKTgvwV3i0xOzW7qkTZCy/7/hQw/N9NydAwq5FYFpD5+sc1ip5Qd6RiHssewqmtaYFBHAM/PEZWdRAlb7NWkEOmILxIpAsuwdBOy16tBG4PN+LFIT+unALeR3xEy9MssyWanh//q9bpCU4UoNMPhImyjlirik83ge7DmW56heAaBYB20no/R2erGOvDmjmkrO5p8PCwIaSQrz/5BdEyMdUbtCZhNdmutZGm7LfcUZp91CVEGr2Gh3M8IfOO/nJPrh1maqBZTlVS+9VbLbxs90JOYatZsZBsjz0QSlT4HdoadQJ8tS3N6Oe39xO2ejUsBjDCMq+Iexi+FIkjpPp5bYcQHmN9Ip5qtnpvJC3t3C/YDWU7X3fZx4tA65ivRjd2PNxG1slHHRRjOR1NhWvR+6paqrrSviG3fR316M15V5qQwAIZDn0tAujWxhKlIZ/fvgeJV/9MGTQipXyM0XP5b2bqBshZBwJxNMo7iWcE1rCzv9n+mabCT3tqRTHcLe5nhV3M3QL2mUzMDkT8pQWDFA5doDjkUT2ZbLBKQA4MCKLM=","authorEmailMD5":"e56a86c48c91998d74f6a66e901eec0d","message":"Hi Stephen,\r\n\r\nI'm seeing something unexpected when debugging my Worker Role in Visual Studio when running multiple Tasks inside a single AsyncContext. When I step through the code, after each await statements that triggers I/O the thread id changes. I just found out the same behavior can be observed without debugging (by logging the Thread.CurrentThread.ManagedThreadId before and after the await line).\r\n\r\nWhen you say 'true single-threaded context', do you mean that the async code inside the AsyncContext will always be running on one single thread, but the exact thread (id) can change over time? Or am I seeing some odd behavior?\r\n\r\nRegards,  \r\nDaniel","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"","date":"2017-03-15T22:57:33Z","timestamp":1489618653,"authorUserId":""},{"_id":"7c9fb4f0-80fc-38d8-a634-066caa1e2823","authorName":"Stephen Cleary","authorEmailEncrypted":"YL/6NaK8eXKAD8QwtL0R2qIXZVA95h2wXt9znzgwx7vE7NDkAo/EXbxCvpyjL1RzG1eIYIG+EhfYSRLG2pR66Kdz35cZKVg7C5KHG5Zv/2Sz3FRYFvMI0HSMPBfKfe0LCNl0Zvdsx9vQuiKJrto23M0F6mQ8rPw0uE+YSopfNOA2X0+Z+b9alY0nFT0Di5NXvKMGVSkFjjAotQzoRG4TW9bXIT53xr45S3UFPv19HzLfLfsQSg/09NJsoMR7FdBixfKZmd+Np23S7ihxTISPDf5w6A/CJK6LBNBuModgEwLiPJMqQWbZwojskyGLKmC0RZCR9WorTKPRTzF5noubaXus+ibcJmwD76mYwbt3bSEfRQ7e7NTjHL2r1dpH65r1C7CmgEBVts1DGsoksQN4VmiacYql2DIEYLAhXO8f1c+k1a9gOYoAfp9Q8Uki4JfRDy/EdR3LkJhmrDFwDJs+zBasiKu+I1E/1tKQL4pRJGbD67Ncrpu+HQUeSn0QYJQMv1ck9817C+BoXpjJnhtT2IYwWpx5zDZazVuRoGB1TruXOAXN2lWrfil58mQHEi13qFhvYI3vitPB+5Mxgjmc8JMSzUpUY122tGMIDGPzZ4nL0GVnXOBVE/aXkBl7Qcf1GGyomvd8HvRFGTDFrE5H551bzNcGWfqccsv91VpKVAk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No, that's definitely unexpected.\r\n\r\nFirst, ensure you're not using ConfigureAwait(false). If you're not, then can you file an issue ([https://github.com/StephenC...](https://github.com/StephenCleary/AsyncEx/issues) \"https://github.com/StephenCleary/AsyncEx/issues)\") and be sure to note what version of the library you're using?\r\n\r\nThanks!","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"204754c9-15bf-383a-b900-8fbd7ab26a45","date":"2017-03-16T12:44:03Z","timestamp":1489668243,"authorUserId":"disqus:stephen_cleary"},{"_id":"15ce7aae-25c6-3849-90f4-d92dad38219e","authorName":"Daniel","authorEmailEncrypted":"dW3nAFu8N0RVosgvxHVl0PQk5GdEFslwGal5K3nwTS5rHmvkk/oLcQvrahnkRPLCu+nJl+UANipxhkqadz51pZSCZLk6AESVWxD/4T/XXadRblh7ahDA4zz+nCg/Uj3oUFUVZJ483ypwvX8Y9xFU3XoxeCWK1bwtKlKIsEW5mDD65JMHe7Ir7KNAUrW1JuxZDA0JYavz1V4/nzb1dwZLpMm1sE1CDRIpd+PpUuxmM0aTDz/owKMGT2niJOpmuH8OvpV6ge9T7gQG/NIl5KVMRZRoBoi197D836P7SvnyzryyfSfU/B0+Tj1xboeDaC38g2ZlUrFCHuK/gzbe+k7eIIGoJ//oYuT9+1sflssL4qp7ZQ/WRlQdJuGxnH9o0R5Edq1eiqrQX5ffSjzwpvb5HBtjo1ApmD4l2pCYtglhDbrHKOu7742RHroWwIRObKaeA1f9MMoF2kUP4utwMYpjlzYNVvQRNkbMk2uT1mXHPCTCV6yQocWvqHJq7/jlZDSWEPeZgMtMeF2jeI6jv/1Hq77sCvHXNivkkMPO/Ko2QZZbs3verhQy7LIGPVUHxdhxEC5cSwTP505plDJYQMjksYpAJhiMTayn3RSl8I8f+fNUSgAtuwmFv8WzxBhRpAUKpXvra9Vr7RPN9AQ/OSPU/45T91wbmrwEF7uo6ZhU/+E=","authorEmailMD5":"e56a86c48c91998d74f6a66e901eec0d","message":"Sorry for taking some time to respond. I created a simple solution to reproduce and created a new issue. Thanks!\r\n\r\n[https://github.com/StephenC...](https://github.com/StephenCleary/AsyncEx/issues/81 \"https://github.com/StephenCleary/AsyncEx/issues/81\")","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"7c9fb4f0-80fc-38d8-a634-066caa1e2823","date":"2017-03-21T11:43:39Z","timestamp":1490096619,"authorUserId":""},{"_id":"eed7fb29-0f16-385d-8ead-5650879a34f2","authorName":"Daniel","authorEmailEncrypted":"m4atfI3qRDzOHwmCNK6TTaAGjkFxeJ8nVIIxL1GI0QIFC1qybxDatPMXwplzdYvs8ezz3JlaMgLK7gGEoCT0BGx8+ZEoKJWnqygDQdNPGmYOyT/6jP1gS/tNc5C/N9HPEBlC4CH03tl7JpRQwFFSCISbfVXRxWsbQAq5i9jWrWCvav8CxluNbZDb/jjDHcpP6Vezx4CnoQOVH9Qy9JGgX1Qedfrdo9q8uFtn/J0F/ITm5w+vHhWbahbZqXWR4BPj0FTSkjHMB6CxvVzoFbQDstqvAjIJ/9ffNOsH5nQspKoGGoTvf5kRZMFZpDlVeqf6PqFI+sPiAJRCyNH8pMpEmurh56+Uk/JCyYTnarrfrikUMXCy7Rw7A9nYOzawDXCJrBhgrAyY0HCsHWD9Bmz7kI040kUa0dVkW1KuPhWuuYlcK6A1dgo9DQXqFelYKd1zpbbTLFn/vG7MPsSeWOs2DZk9xmWgEoSmUb14HMui8/eevp1NRtBG2n91AYkU/YQLYLt6SUdPQxFuCi5jRUI/M4gKP1lLAZXNrvAjtvSatYn7+1bGsfoeJrqrQdt64AyWWflqdsYurpIj2+EUFS3mfdrUZqqcpC0dlBMRGMaeNNNOnRsM8Te6/Lh34/NXzKNhMZeidJR92BemqeQGU1hInJmmHSvi5Puq7u+JeURv1Jg=","authorEmailMD5":"e56a86c48c91998d74f6a66e901eec0d","message":"Turns out my problem was that I started my Tasks outside (before) AsyncContext.Run()! Thanks for the help!","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"15ce7aae-25c6-3849-90f4-d92dad38219e","date":"2017-03-21T13:10:48Z","timestamp":1490101848,"authorUserId":""},{"_id":"1875d935-70b2-3bcf-84ff-2b91122361f4","authorName":"Tom Stonecypher","authorEmailEncrypted":"BPabrWCanbgREHhwztbZjgijP66VMFfAn3xzp8+ZGG9+5i0oRrHzH6NQa/WQUzBVkrUFpuwZrA5hLh5OZvNl6VwkAcHGFMggkvgGFJyJi7+u71KsVhdOyJJzyxD6z87TxL8u5w8P0+pads9k13+5UxwUqKe0LeDMpXR70VHRn1BLvkeB47gFvYhcL/QfuQebeOH0cHT57ygbm54ADBxkJWAULHItzvsbe+Y+8vqWdkduWL3lVAEZWBcxfUR6cNtLUpHJIfACDoJszMTPem6yyjOPQW5rqkELD/wDnqQ2FDkg3KEUpcgN4Ho6LA/JmUoMWRl69bbdBrPOaZ7f3coqe03huzTyszX4qHKMvflAc4e3RqYNSHYRAdEQgeKh8hRhSeuUCVcIOHHzK6B3WldCSLA4Yj/nMzI2qcqb5R3LyEYK1oOx+Y7v56CC0hXK373c+4D/zhc/0+m2PeWM//PeXwnPUyapYbA/e+nwh9FKzYkTQOvBedo71lBLyUJEHdfAgSNjUqvj88d0r3lJHtl3ubcJ6m+OWC/LbBlN+JxmxUbS5xNdL7TCHY4w6OBSApMVq7hSKJ3Hao7rRMXzfshXRbcbihpzkZxBdHJfZCpsvxA7GBbq9NZcdcmzG3yGtgCDpnHCu4Z/dT+6J3G+vveyh56ZL/5GaDMepV4kxenl6Xk=","authorEmailMD5":"97ab77c9b3dd059e9f39d46cc302f25d","message":"Hi, Stephen,\r\n\r\nWill you please recommend best practices for avoiding / handling UnobservedTaskExceptions with the pattern you've outlined here? I have a TopShelf service; the start() method calls my near-forever-running async method on an AsyncContextThread, like myThread.Context.Factory.Run(() => myMethodAsync()); I don't wait on myThread except in the stop method, e.g.: myThread.JoinAsync().Wait();","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"aeb8bdc4-fe97-3356-9d73-eee63239d826","date":"2017-06-23T03:32:54Z","timestamp":1498188774,"authorUserId":"disqus:TomStonecypher"},{"_id":"40bcbf7b-36d2-34e6-b58f-e0fcd0228183","authorName":"Tom Stonecypher","authorEmailEncrypted":"i2/z2h459iZLK64ljdkhiQZl1Ugc2tBGW33+ZDtGxbNcjTFefeuLwqf97eeBbA6shtiUjuUcxO/1BV5fqu7jOnBoSiGTnekDZp0RoEoxgo8PDiJIXhveLJUYHwjbYbQfAGvup7IzXZ7uhYJTDbiep9DMkv+A7uoBPIKoEIjAiTpClEuqaeUvdxUnh+Cyxtp+q+QQJAhMNyNs2CLHiZu988xL607jJQVivMr0NllBvKyLcrFlX3FtKejAukRTqSRfMZwOvWyyGK4iG5gmJ4dFk3OBlRJ0h6MHJWEiyJZfQ1W9G6qirO0lv3RoEU8L+j1jm9aCgeyC5cGGuF0NPTl57+GhM9dg86f7jazBJdUeQ5izJKQUvmV0w+Aq5kVkJZcJYk1AQ8dPzl1RLjZLr96CJVu1WHBjwNBR43JbtBno0vrHsxRFf7L0vinThEecF+4DbSALOaSgnTDWGCiFYeXDdrwgxmIXfqbC2NnfTAmUVdwTfIaymnfCIIw4jEQCXD0mkiNQy0AOQfiUFzsQcH584//ljLf8fidHwM9wbzngS9VsfZTr1ork9q9Ayw7tsttY8rYhSPFFUOveGJOAXuOumECOYoNvZKey74ESb1ctCZyrC5CconaINLDus1cOuYAL6IZcCprcjC8LNvfv8BnVYH8SVZH5XNizdheVeGE7nEM=","authorEmailMD5":"97ab77c9b3dd059e9f39d46cc302f25d","message":"Yes, makes sense. I was throwing the exception from myMethodAsync as part of my service restart strategy. I need to have that method log & consume the exceptions and also handle unexpected termination of myThread.\r\n\r\nThanks, Stephen!","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"5efbd3e3-5fc1-31f6-a888-945ef66ca692","date":"2017-06-23T13:16:03Z","timestamp":1498223763,"authorUserId":"disqus:TomStonecypher"},{"_id":"5efbd3e3-5fc1-31f6-a888-945ef66ca692","authorName":"Stephen Cleary","authorEmailEncrypted":"n+WChcKBFP5gYBhWwhmBgsOiAu15bQzTtC1dgaqP7FnmMPlg9TZVi0B2zCplnv97XmzitkfPJt4G9VrPo8RKo+D5pIN8GeJR5pEffO2MAfk8AoOvrT6TQenpDflGQf8AKMA85wiZazQdkHRsUgIdjaTXScZekQtV+LKFcrnqqX+ALeDJEQhmi7sYbrbeNqOWdx5WsJunXfuPzJdKAvr9wQpUsVqZaBJZuGce9IAPpnWaUtR725R/Vxt66v7is+SLnK4g+uer0JsPSKL7mqJz8bN3UDlmKNf2LiopE4li836Ii+TBudo2HQGUdsMoQlY8F6aSyTtpxs1gDTrlgTHXuyTrqSWauGfMETz3ER4QvxPNLWI471IiE2FpaLWY30kLNkWNzrB/2cmZpDKZ3diYZmMq24Y/zXuxjDWJb8FwoJUAXws16s9LW0m+R7o0sQElInLU53oc+IpvzFsK80hulpGIpPv/ydR8pjqbpEScKDM0F+pLtGSqCycvRx27NOx4cqzKYbfxC7QYmpt8xatvQQ0CykvhNJCW77SobLRct92YPlm0dD6+aO11awfBljGTKT9O3HHmgwiuxki6vK16PLWleXnjnWMhHSi7Cr8BvkVXgsBl6A9+tQtOselUQ/tlT2hn4v9IHr8gzB65qe2cACVk/eKgGZ8dUEULAwKzjug=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I think the easiest way would be to have a top-level try/catch in your myMethodAsync, and log the exception there before returning.\r\n\r\nAnd stay tuned - I am planning a Win32 service example with AsyncContextThread as a future blog post.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"1875d935-70b2-3bcf-84ff-2b91122361f4","date":"2017-06-23T12:50:38Z","timestamp":1498222238,"authorUserId":"disqus:stephen_cleary"}]