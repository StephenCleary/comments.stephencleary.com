[{"_id":"98d753ac-eb3d-3863-9a76-7134c45d03c5","authorName":"Stephen Cleary","authorEmailEncrypted":"cehCcmGkMvZdVjO/0qUhMYgPurQlXbIxMKvXj/yqfYb/9HJECy+7azrC9lHbB4dwi7Adm2l+DtRpgjV5GWqiBYNamY4NCJAaWMhZAy5LroO131ENCyU1SlvhKY3MhE85IjgmDnBHq/+sCZ0aGWeWOTGM2cIt9NCooSQqAXyHK6fzQMhEY6ljvfmcPYx7U4eF+dV3Qc94lcTuEAqWr4OtfzfdoMU0GkS2oK575KxDFqWs/L4wqRH1qyZ8zNwwVXLcvWrNHFkd2Pi3F1Mgt/2/emNNnBNuLljGtyi3YVFcEW+OR2tdnay+bHaV/SWgfJy/vpNYC+CV05GUZLnJwN08sW6vzCUJSTeDx5hkJZOdL5pjlOpNte+4jJsnatvUuIGHdLtoYQakhBCI7mTOFFXHr6kUsneNdtEknAvcP5B6bCmn7/981Jx7Zc4p7fzmMJszs+7tMfkgU9JMriy/Y2sv4gPOvJT9ZkqHnMFhceVtayuSZKV+uGaPUujpE+o0KVIZltMNoDxpY1pp58q8+VniZui/OMWwgchlSFdX10P5rN/w+vwK+tLSgsg3OL60smf7b5s4FMwo7iubEbLJS6v1f7uHWFU7n66Z0UInl8VRm63837pckBL+46/XcWMX0p+msmd4dNmUuM++eUsHFvbs3X9omfx5xl8G+oa3gOdQmqQ=","authorEmailMD5":"36e44ea0274d8207eb632c566e60ecc7","message":"Unfortunately, I've never used ChannelFactory. I would take a look at the code generated by VS2012, and also see if svcutil has some options that would work.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2012-08-06T17:23:18Z","timestamp":1344273798,"authorUserId":""},{"_id":"dcfc7462-9f13-3210-8922-83eb4b738520","authorName":"Ahmed Ghoneim","authorEmailEncrypted":"jBN1EMENuPQowOzh7KNx7fyw3ItD/pt46pVh7fL6sCWRaWDjYboM2Sxj09z+vnO5p+zx9A0+1D4LlPN17p7SbhgGt1pTArEQZE2NBao8h3XeBy8YnrupH4s4X++5g+JuOdbyX6p2SgQ+V8jm8Au1MNDNhRUkZhlSl32WpOh3zsMwE8WhXCSded/S5ejHBFYqQoQ19C4RSzGs2p412Z+/1hifaWBXMEficjiu/NdmDWEDxHLMnasYiqFBmkBayl1qFpKHvvr+xVUCCX6rY6mlpeQ/TrVhfOq3GES4T4QGs5lZ37R4p+Knz9NB+kbvP4Dxyg6Z2qTA9dnl4aA2jK4NA+BFu6EN6YCKyP8kVUvdE8XmWn9shFeYTolDTp94HkvUHS2hUBaiWqmuD46n+RHkmQSEpTmcaAkoqQI1BiJBrLtYfQaKLpdgOCdSGBlQqd30IxUOZehGtqrUCFy/oaHl9ujfnhz6yn200C2+HIEKfXZK3HCG1d/LMIO6hLUaO28bgdIgrI8pwcbfMe8V3A6FOBjBUN1TEXSC4v4XqESePJh3f8LKodeB0jPj5PuH7bIzQO4ha6LMGdEtxYoQrZ53yjFaoS6s7dYDaiRPAdA9VZKAqt4Yq9a7RIown0H1FrA63BdHcK+2XQqJtI3ih6qgI4pOPhYHuSMBR4fYjolX1ME=","authorEmailMD5":"3b9cd6fb98433576688d8f32687682fe","message":"Can you add a ChannelFactory based client tutorial, I'm having many issues as I don't generate the proxy via Visual Studio 2012 RC","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2012-08-06T03:02:22Z","timestamp":1344222142,"authorUserId":""},{"_id":"163d416b-2d22-3055-8304-32356398a0aa","authorName":"Stephen Cleary","authorEmailEncrypted":"Y1yvfyAuJ9o2UUv4Zn11W+qEp4A4+a2JlNFyWZroW6oLeZ0615MxTmtgs25a1X0PUHma4wdvd+lhaMC3e3YOkDhp06A6GiJw96AlVGFi99lT4vGletP29G8j++5RHoWYFuIhxeL3gw2q7yyAKg4242p3Oeatj4NZCkIHFeV2IQzzhANKXe5GU+qP24jh1Xl9sG3buv6HxnvFBfhyxWa9rUXDRST3+6tKCN0Y57qmIbQWOcpZdZbkUZ3HcpycfcWIEUMJwNxoR2jXOgdvvj8UnfEd8jCx4wHyj3hnNKSuqW7dNg7v2tLaPI42aegJf483yO0oDhSnkj5TpMgAP88s0QwPymNemV0S1fQ/sEmaKvi5wWLDm/2Y2fBKPIgmQ3Ys/fJeM1UyRULPLinJXdAd57+H6lsqJuqKvaPe4heI9M6ETx64bW1rhMNhAbCxNS/vFlWG0S1iQSwpM3+gp77AGIs2bt4IPxlTr32pk+I472Y4JtZiM/nxdz0nrba/vlYWgvZGcDA6Vgc+LyqYC7lvr8xISMXgvslOgaZTtALGIEwugVrS4pJEFGSixUeLdZLEVaUmfNaiFMh/6VRxIKJKAHidbpf4pfw9K/egdEF2Iq6fUov2R0j6eAwE34c/8of+mYv2geSs/BOUKCnkaPToGLyJ66gcezuCVzH7IIrsfBg=","authorEmailMD5":"36e44ea0274d8207eb632c566e60ecc7","message":"Yes. Real-world code would probably not use StartNew or Run at all in a WCF server. It would deal with tasks that represent I/O operations.  \r\n\r\nI find it easier to deal with the exception translation at the WCF boundary, and have the \"real logic\" in other classes. In this blog post, the \"StartNew\" represents that \"real logic\".","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-07-03T05:39:32Z","timestamp":1372829972,"authorUserId":""},{"_id":"56cfee55-b735-35c3-8df8-f4cd15ff5cc6","authorName":"Anonymous","authorEmailEncrypted":"HrwGc7lWQEsvK+UytXktoeqNuJpBLVGJncyh7eLtV+fXQ4FhV+ZMvtIlnAK01/4BEtmWUSP03XqWj7/BFEgsMlFHRUhBnMTGbnOn4qPHqkYd1hg8ahv8Hyci3xhqIVtuxo3g67KjxIkOEnDkW6ikZwjx2yFT2h/XCtlPe31lN6qrGh94IjrVt9fvM1PP3rL0HVK43g7UrNu/1dT6GKvimUM23DSnnRTPm+GxRmy47eRhVS8eLT0h1aFOA4O1GT3oor+Dnov/AXwbj9Ia5oHLFM4PDxnR4HTfAHOServRSFzCE2IBWove7EsOQ0rgSKPBSGYgDy2HWTPWGx010VEbQaMzwGRmAXtTlDrJAMdPhaDpBkaGlF6pKmBvQPrwIrO+eRsANnFmn2sPzEHlxjNVgvepAsmhsZ5aEoJOykYCSuox9yMdmERE1FkhL0LDrtbb0kORLWxc14CraYKxXMViY0oB294aJQN+f/G86n4WnY4hvS3gwhNp8TprnuRXuBOkIU07K8vl2DW59i0w6H7rgqCaRuQEAvPYLEEqkjp/wMyOMCNGeM7GiS+76pcUmbwT2lvulFwFncy/RYy3vksPG9vdxSjAlwp0X365jnJemk8owJJ+/wXnqweqRLn4WWcuqLSs6LeG2x9+K8w9/cw4c+cldW/vrAvwSwXToOJNpU8=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"why not just return Task.Factory.StartNew(() => numerator / denominator) instead of awaiting on the task. is that for materializing the exception and wrapping it as a fault exception?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-07-03T02:56:38Z","timestamp":1372820198,"authorUserId":""},{"_id":"209f7521-cf13-3a06-a30d-187acecd19e3","authorName":"Anonymous","authorEmailEncrypted":"ifPBN8D4lLkC4J40BZEy7tmfkQ8fTlYTa00KQoxWd3Rjdw7XaCr7vfz2jfZwKm+E+ttKI0TRmGhuY6/M6MrZdnsuE2WY4ua/r5sZ5nOEIO22NDp8HILEaKqqUjZKKX5k5GEWaUtp2ARIh9HVXcCxak8/bp/I47TL+zurVOlKVOT8QDYB09Wr7SuP5H5nMEao4H4f9/ai8s2IYnFspZbigAPIt09FqkE3lkTEquGSox47XVgO2Xd6PRa+y1wK9i2nzZvniH5OcJephtr2uZgx0XH95Vt2DuM7ccLiekR/gAU7oSmL7RlGDydHtC2+89uKkYbbTvqBdggr4TkG2h46IKh7593xbeig2SuUXmjn0QrOOALAOC7hfINwkEopE2SP2bJPPwwF9ErqqsIxsrunIgKl0JUyZ8gv57LGZ07nDZv+n9r4t+EUvlyJ9YkIf3vj7mdYtgS3fqlNGaht57hi040SxbZEvskUriDOPyXEwrroINg96cGNOvmUH+YzaGuJBmPmueU6UuCtuklfLd1rA6S9nfuioqg6IFukV+wS3/xUr09SauWr5Oygt4Jop+QxG8/exxzFhP+P0CX3o8ItP9LBKSPN1wLTB7oP68VVlJXQw5V3bzRgTKxS6dBraTgbQpdIUBWoUAEvTK/wl8VzppV53cqM8Th4DogOqUayqdU=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"Hi,  \r\nAt client side Instead of CallCalculator().Wait(), how can we delagate result to another function( like old callback functions)...  \r\nI try the following,  \r\nasync Task CallCalculator()  \r\n {  \r\n try  \r\n {  \r\n\r\n var task = channel.DivideAsync(10, 0);  \r\n\r\n task.ContinueWith(OnWorkCompleted); //You should see result at OnWorkCompleted  \r\n\r\n }  \r\n catch (FaultException ex)  \r\n {  \r\n Console.Error.WriteLine(\"Error: \" + ex.Detail.Message);  \r\n }  \r\n\r\n }  \r\n\r\n void OnWorkCompleted(Task task)  \r\n {  \r\n\r\n var result = task.Result;  \r\n\r\n Console.WriteLine(\"Result From Async: \" + result);  \r\n}  \r\n\r\nIt works but if we try to divide by zero, I do not catch any exception at client side.   ","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-10-10T14:57:24Z","timestamp":1381417044,"authorUserId":""},{"_id":"7ed4c3a8-01e3-32f1-97e7-28175823de66","authorName":"Stephen Cleary","authorEmailEncrypted":"Rb4ToQ/FCb+1C5d8i/2IVSckbY7xQcKUVmXZo4UNVlmNBnHIcLcbTQLmgjgxsBJkOEftyESWFr+PICB+sDqZherCrLIrOua2dakM36NWe5wzCjaVGCBtJc9RyXA+3ujM8hVC51QFpkI5YI+UH5Swm1WPL9wtdEdr+YWFCQ3C1li/sH8wJx2lG6K6X3J7vCbGAyMYUI/zQKw4YtZV2LjeuHsxUmF4YUfE3mJTySxKV49R0iJDWwgEw55E7ulTov7HuTvixQSnqAJA+yS//bl0bLM3A/E3LSjq/dlXjJCnA/Fxb/NxrKVEvU4UWLYn/kR61K/LBwqQNaZsq7mGyieQalhIcNpxzSBNtNKVIyMHw4S9g8iSt81iMC9ZGb8i1ZBYxn8izprQI9vgBJcgv6T3pybyKFOVpA9bHLjt6HSdivlnSRWo7QA1RUVDAt5Ur/f93aWmyDw6kEN9lOn5xugUCOufLEHsEFYtGTDPbIP/HBfos1e0o+7Q/gZsCyCrgNws4k6kbtb6ZCxpDkkhVs7bnXMiYEdhzZq+iUUVp38f00Wpgh8SXTY7jNC+8pSWoZximT3BWHZYLj/m1QPbcfAlOi/aL86J1AtD/c0dWQxQo1o5sQ5wY51y+5R3k6YUrsh6DBoKdEajbns/ahTzEK/qIQvTZjxdECWmtD3JMxgMGQI=","authorEmailMD5":"36e44ea0274d8207eb632c566e60ecc7","message":"Answered on SO: [http://stackoverflow.com/qu...](http://stackoverflow.com/questions/19294372/wcf-async-lost-exception-at-client-side/19295798#19295798 \"http://stackoverflow.com/questions/19294372/wcf-async-lost-exception-at-client-side/19295798#19295798\")","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-10-10T17:26:43Z","timestamp":1381426003,"authorUserId":""},{"_id":"1e453095-7ca4-3a19-9269-7c19639d8dfb","authorName":"Exploration","authorEmailEncrypted":"M3bouSkZVXPbLMHT4QFMYoRo5MM0UknvuXDbP15KH2s+1bgRu8XKqcmrUQjRiS5WL3YVDW1K6xAvxBiN3WmBDfmRWgpQxRsNGbSBnZyesoJpAiSQ8Vr4CLwBTYeZh2Hwo2kgMTqFWHhmBNThclPIOZzcfpTU8mAomkZqCqfDnvdsRZtTqSAo2LQq+XXduEmVb/TIhu21TuVrty8in+qPCrNGEgMvAsMAsOhH9QR9YzKuu0Oi7UZYaXQcAOZmRSjn1zU64aqKH6CAZniN3HosZsUYQwK14KQw3bAbUKZxKd3AO7QMoAgA9dZajkEf8b5FjqmvF0KrGzMSb0dJh+Y9nbTvpPB+FjWi90P96Cbz0EG3HStxjJqNxQTcXOmjb0T1tvEJn+CLSTdFn+cFndTHf586YBXdbk9rkPPpGl6Hp6vFrGdPcyK5kJxwxCkMz37DuDSewfQ9VsO2SVXL+UHj/c7suyJih2BOyHujdCRcCy9c6M3pH0H4qTY+GhyH4Q5+NC3egHGDRvbIfLFNnfTX502x1g42hi7B9ywh4pI0sqsVHqpAwtCgcryrDlMYdNh7zP1yfI+7sWGmSOixYPnVG3ckDEBri5j5JM2xWU1GvpgsNNhDoj1yOtfj8uz2Rtbz3gr5izO7V0ucPqfr69sPIERNnRAw/o0dFhsece2nakA=","authorEmailMD5":"17af4a0b233cefb3fc3084a9f3942ea8","message":"When i put this in my service the EndCreateTrafficAlerts method is never called. When I set a breakpoint on the callback(tcs.Task) line, I can see it get hit but nothing happens.  \r\nIn client;  \r\npublic static Task CreateTrafficAlertsAsync(this Release2Client client, IEnumerable trafficIds, TrafficMasterAlert alert, Release release )  \r\n {  \r\n return Task.Factory.FromAsync(client.Contract.BeginCreateTrafficAlerts, client.Contract.EndCreateTrafficAlerts, trafficIds, alert, release);  \r\n }  \r\n\r\nIn server:  \r\npublic IAsyncResult BeginCreateTrafficAlerts(IEnumerable trafficIds, TrafficMasterAlert masterAlert, AsyncCallback callback, object state)  \r\n {  \r\n try  \r\n {  \r\n var creator = new TrafficAlertsCreator();  \r\n var task = creator.BeginCreateTrafficAlerts(trafficIds, masterAlert);  \r\n var tcs = new TaskCompletionSource(this);  \r\n task.ContinueWith(t =>  \r\n {  \r\n if (t.IsFaulted)  \r\n {  \r\n if (t.Exception != null) tcs.TrySetException(t.Exception.InnerExceptions);  \r\n }  \r\n else if (t.IsCanceled)  \r\n tcs.TrySetCanceled();  \r\n else  \r\n tcs.TrySetResult(t.Result);  \r\n if (callback != null)  \r\n callback(tcs.Task);  \r\n });  \r\n return tcs.Task;  \r\n }  \r\n catch (Exception exc)  \r\n {  \r\n Log.Error(exc);  \r\n throw new FaultException(exc.Message);  \r\n }  \r\n }  \r\n\r\n public bool EndCreateTrafficAlerts(IAsyncResult ar)  \r\n {  \r\n try  \r\n {  \r\n MethodLogger.LogMethodCall(\"Started to execute method\", MethodBase.GetCurrentMethod(), ar);  \r\n ar.AsyncWaitHandle.WaitOne();  \r\n var task = (Task) ar;  \r\n task.Wait();  \r\n var creator = (TrafficAlertsCreator) task.AsyncState;  \r\n return creator.EndCreateTrafficAlerts(ar);  \r\n }  \r\n catch (FaultException)  \r\n {  \r\n throw; //just rethrow  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n Log.Error(\"An error occurred in the EndCreateTrafficAlerts method\", ex);  \r\n throw new FaultException(ex.Message);  \r\n }  \r\n finally  \r\n {  \r\n MethodLogger.LogMethodCall(\"Completed executing method\", MethodBase.GetCurrentMethod(), ar);  \r\n }  \r\n\r\n }","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-10-25T22:24:23Z","timestamp":1382739863,"authorUserId":""},{"_id":"1958e4e6-5f67-3da5-9c56-84b88d03b103","authorName":"Exploration","authorEmailEncrypted":"cFHo1r5/1FBLP+M46lf/JnBfTC5qdd4FX7Qos0heb5k7Vu6Ax/TFAemIv1wW08MULSju3doTByk9cyEFG8/TDxpM8wxTYOpI92lsI05225JUtMsEVYgNTYQwbBJa/ZhXH9QWOfxKzEKs31S0FecMrqMIvo9buMAhPLXepeyfOvJANK2JsYdaFC8j15AINpbXsNJOEUK4ahDgJ4IMaOFjm8gASAHSflQLXrawjMRqzyFnQ82tz+GqVG/K2txiY3tc4f1wpsLD8XqAQfbbfIHmyVgRX1zxku49OUrgqV9lySyuWYnObels1NOvF2SqvSJzm0nbSh2pcQlO5/SbthuSeJq2a5CKtXxxuW1qHd4pgPctjiHAkBfQ+eZVW3EqDjJBYUcwu5PVLArkz5zhznkX8uxKI0GcIDMxy3JRlvVNt6IaEJ0iZec6pQaQc7PIpJHZXuFPy956fq9mqwB6Sj/dnU+u7zKsRbbetLh4oztuiPptS9ANNKzcRPxw6HO8sTwqYpbfLXZrwuwnhqaDOIYIIXLaGPwIg7fXIXM8x6Ka3Q+vEfjeYWJKluwZOLqhst6ArlbRND1YvG5nTb/1pBBlouDpc4V6I5JsrRF3qF0Jfzii929ujfoTMuJhKqyIzOuhA7cxpnzlZANgENqEje/3q1k7+X6ns1KJvWRJk9prhYo=","authorEmailMD5":"17af4a0b233cefb3fc3084a9f3942ea8","message":"I figured it out. I was creating a TaskCompletionSource with a state parameter equal to the this reference. (i.e. new TaskCompletionSource(this)), instead of passing in the state object like this....new TaskCompletionSource(state).","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-10-28T19:11:03Z","timestamp":1382987463,"authorUserId":""},{"_id":"fd6be2cd-6f5e-3118-9ea3-1b69afcf2828","authorName":"merdan","authorEmailEncrypted":"vCj++06wB7NRZ++UpsTmgrAEwTZ6QzTH3yibZgaNb04u9aSYl2ej+8Zb6uPg9mQ01zccbws9nNnkgY/daE0NXd4sB6tzU+Lbb5H8bKthjUyFted7ZkmE2P/LKMcjpMnVKcYzmFV73POYmKSSTc2EpsmJ7/rdDjdiNnKIyAx0BLESp9pHhu94n+kjbNDfg4cpr2AqRTbEg+RK7M4ltwazIrbJHqNiGZkdDDDFQFLXLbUFYGXQrVeJeVkdkccUyQ4ZNkL7ZI5nNGu0Q0G2xgoA5MbXVyKtmo5ZGouNqXXU3+rrIvYqbmzFwZDzH5/Ti8xb6f6pad2Tl4l058klY3KzeJJotSlcP9lqwSBoxcHRbd3Anslcawbixq6B6odXvBxg+yENCdZg1pXgpU1vsChFwxFCT0K27MDESUqNFgnP7aIG373qcdnvUcg8g7jp/fNO1sJWGBTQWqY+2eVWRhvedHhxKUWfSH+H0D2T+kowhBDNtslcvkVXkVScCzvJofedlAz/Olw/DQWNFq3azeEl0G+gh5lqcyoovxVoa94AqW5v63RCqKGzpfeVndaCdUyNlLqMHHohCihXVU1PjSJDFtwHxGFySRCnuuaUv6qP37oZE2aA8UrGrplnFZmWRRUl0WwR+xfTsN7sc+Z0FXBKoQNoxKYuQQQNwl8KY5lQy7A=","authorEmailMD5":"27bf19f660f6ddf41e1aa042b9f8b68b","message":"Hello Stephan, I am working on a cross platform project that targets WPF(Desktop), Windows Phone, Android(Xamarin) and iOS(Xamarin).\r\n\r\nI used TAP pattern as you described, WPF works with no problem, but mobile platforms are not.\r\n\r\nXamarin throws SerializationException, saying that: text is retrieved instead of task, Here is a qustion in stack overflow : [https://stackoverflow.com/q...](https://stackoverflow.com/questions/25376930/wcf-task-based-service-consumption-in-xamarin \"https://stackoverflow.com/questions/25376930/wcf-task-based-service-consumption-in-xamarin\")","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2014-11-10T05:25:59Z","timestamp":1415597159,"authorUserId":""},{"_id":"b9c33e92-1c51-3e10-9784-7dfb34e2890a","authorName":"Stephen Cleary","authorEmailEncrypted":"sOy7642glPCdhXrxzdkallr11u12MmTqVa/MNtzNQUvP/rF/Lx4FTInLYFvsfI3GljfjgoA/GYg8g2t6L2eLkwpddIBHfDZDSJs8YzsbQf4XIMVf6tOkWsifJ0X4EIOReFam1IFrrbpeKLEKlj5iUYkg9jDRZ8ayP5siPUOAswA/86HIIZmcYpOMVc2h1cSgXvgNLmShWY/ck1TsgfW2C5+ZiRP45dGPTKkUU9w2l7ZCQx5b4eMp/Y8jwuK2nNNXzJZBk+mCiokWiwXFeAQEPnaOtbPkmMeNonMSv+ue4J+TTN8BW0C/e8dQBvNwfba50VxNO0lESirDMkGjfxoakUscNGFyZ1JMq2hpS9PViCavD8M4qViwjgAXoop3ih6EpNHb4mNWkBsm0Agn3E0aPmvRfH85JTqyG4OkW18SjqAuFUBr91peR9w+M00V77dCfUMoe/WELixQEhxOZg/e7VkibVZemg6nfZXHWrxbQYlsYRpzEYQn6/BGH7C6q3p2qdK230oSDTRkUue4KNE5Cma1DgGoC01WolZyKYzoA87lbq6Z91UssL5LK1sofz3nYRT1tTHUQpRBx+CBaAHoBia2o4o+ALFuJYoPNBpDe0SYW1lK0op0OHuv6M0vBGgR79nt4r6+okH/1N0QKhvhvc/ylMrUddOoqm+pr6bU3dc=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"I'm guessing that Xamarin does not support using Tasks on the client side. Try using Begin/End pairs and wrapping them into a Task manually.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"fd6be2cd-6f5e-3118-9ea3-1b69afcf2828","date":"2014-11-11T19:35:56Z","timestamp":1415734556,"authorUserId":"disqus:stephen_cleary"},{"_id":"fccc702b-7bf0-3bbe-b515-fcfb0af05216","authorName":"merdan","authorEmailEncrypted":"aPK0QcpgOBTpZ2Zqdabe2H6NapdanHW+aK1o+11/RyikmEzKhIM6RVpKaB5wHGtRZrb6Bahdr2JzIyRhGqhSodoX1c8UxO2fuR3Eb7IQMmRo/LMPoXtEROIflAAZpCODa+UhMNvQ8+CsCftH9cG0P/Kbo/XlqsVATH+SJbvIWGZZ8tNzzZuQNOkgNvwrOo6GAAFyl8sqtUsYatUEbLx2v9m0cY7esY5DOjyhMppQszaMjCqGpLK+D3kaoEX+36LYUlcFTPfWn13XstHmYy6xxA+KHBJdQFhqQg4w9vVopXJrmtJV7EUanqW9D7UAXtF/xnx2OwIE0jZoGwdrMQi+/zPd2AFG3vwEU5yXSZXY4pXZaMZVXjrRpeYBfTlDiSkG/nSp4gzuugWIVkDaLdICfCibS8CbctUdMuN3wJPmIhdf3gJ09GVazO1o7kcAAdrNTUiPHw5O9Rl0cC4ALjahoT5hjz+2X+zbiu5+gfsQhnw8ztSVTbsWsgJ7ItUMiRXt07AdyreFwm33/+Xn0Q7aC24W24fTWcQwfejkYNXNg9Im3n0hS2zyM3R/CE8ovycDGDnUyUy1h0g0uLgbNwzDqtPSiq68a39g6dY5zyTss1eZYkV/RnK7WYLtLNtSKuPwfsuW/fGnYFyvX4J/pJ9k29XjrnuKNIFCypxhM7dNUDw=","authorEmailMD5":"27bf19f660f6ddf41e1aa042b9f8b68b","message":"Windows phone application also throws System.InvalidOperationException.\r\n\r\nAdditional information: The contract 'IProjectManager' contains synchronous operations, which are not supported in Silverlight. Split the operations into \"Begin\" and \"End\" parts and set the AsyncPattern property on the OperationContractAttribute to 'true'. Note that you do not have to make the same change on the server.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"b9c33e92-1c51-3e10-9784-7dfb34e2890a","date":"2014-11-13T07:14:58Z","timestamp":1415862898,"authorUserId":""},{"_id":"934f3e48-53f8-3747-bacc-4a76de24c838","authorName":"Stephen Cleary","authorEmailEncrypted":"Y2VDNtzB7uNddApAHLi1WBSdhXS628D7e0e203e7+krzYL2XBEu2/QfidiYJCxp7wenz711tluRR7dSwn8NsbTrMqPPEohY1w4+CrcqOhURPKZr73twZ4z7d5N/wljvxewlPzU6U+S2pIsOjFJUhHTPpVGEWfbANfrP6TMBHkCUwrtP497XiG+kPD8A1WI48vrAN4ztHeMTdUTOkyim2aRXYuJyl2cjoRI+kGWtHStnWu3bi9GPMWleFC03UxuGkfwg23lek9MUU/MvLKFhcePyKc0aLCUhaLOlWExn2VP+d2x5i2wkL+52ycduEH78z7q3QsfLnlu8dzFu08ImzObUnjFqsBGhXiaunKiwGoPYVS3VR/sb9Ykkvhn/Sajaa7Gw3HHe+fbqNFfgbpHRY9Yv8RE/b8L3z4T7OfaHX2RsExMZHlCvxtT6k9kGaitokRYemjTliBTF8uHTAiv4TYS/vSpmjhPlKFXJ2kfNCk+A5xQPBu13f5WKg5GvB5FyOD0MVEXjb0A7e0f5jBTYT7F/7KkBJF2CWSzAKRQVUgf1xLiUBXHfFcoP4ZqZDZRHHIN906mGvUoM+Xnw8L9xdB/b3WmMskN+3Mr5eRWELSWziMIyWvD+Ps1PgEgymuMcCVBDeZZ8uLw4qO+g93EeSoTalpsSp+jlJ1dxsfKdJFq4=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Yes, but not in 2012 when this was written. :)\r\n\r\nThis technique is still useful today for platforms that don't natively support async but can support it if you have Microsoft.Bcl.Async installed (e.g., .NET 4, WP SL, most portable libraries). In that case the \"Task-based asynchronous\" option is greyed out and you have to do the wrappers yourself.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"aa420480-3d8f-394a-b6f6-8555487ec7c2","date":"2015-04-15T14:27:55Z","timestamp":1429108075,"authorUserId":"disqus:stephen_cleary"},{"_id":"9ac851e4-94b8-34a5-9a19-3db28da11ef8","authorName":"elish","authorEmailEncrypted":"sf4IHfGxL5wRtZxYAelXgaO/pGkqGZHLcQOvRARiUvgTHAJoM2UX4x6ObVi3NRDDQ8Zm5TI+8bBrN/YLZxGW5yZKJkL9nnqyUzVnjAzSMrcVx5ldKobbhxlJMv91BmweLsOb9x4LUFMxt7SFTP+vvZDh4IdXjk6xyTB9e0Q3Ui5UFWdP1zxu7WhaRkNnJFWXK8cchztwwb2yuOC8QiB6aLgkwEnkzH+JujS7M/Q2lsY2/RZELzi6mGDsoQ0g39JzBWKIvvaEOEmRHCTCYtxl71AiK2QmGezHwB73L9NhuK2fceI2GS1hjsmRVkF+LZ2oykwrthSCUqatPLtkzjbuDARypL9TgwbQ/yyMuELQRyaYDUm+kXFJC4vWJOlc0KgpK/JIxPo3maHFDhXVr4vTW+R3BuhGoXF8JnuHxAvpDpM5ewwV0ovFPvI2lcbIKWKM9qG+fJPkPW5LBZN34EJ/M6fiLPSW6VWPVCIcP25OtA8pB44Hd9e5ch0NSPFtkNeU8It5ZpGqeeqG+fLBZX3n4QFtXcmunNzVTvdHrYiAKyh3vsslBYtnzTECMDYP00TqOn4nM3+7Unl88fju/goVyC3YnZCPKx+76Z3+UeiMLfsTJOwrga/BO/6R7zHPpc7KIipbLHQefJ5cwWK2UUGrkzI5JKuzziQIDl0JGK5KL60=","authorEmailMD5":"0238e17d220b34fcfb0f494f9f26ced1","message":"Thank you for your answer:-)\r\n\r\nI understood that it wrong to leave the mexendpoint in production,\r\n\r\nDo you know why?\r\n\r\nIf this is true then I can not use the service reference because without the mex I have to do it through the channel factory and then I do not have the generated async operation...","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"934f3e48-53f8-3747-bacc-4a76de24c838","date":"2015-04-15T15:31:50Z","timestamp":1429111910,"authorUserId":""},{"_id":"aa420480-3d8f-394a-b6f6-8555487ec7c2","authorName":"elish","authorEmailEncrypted":"UXJ/v3D4CIxDAa2/dH8UPcxC1YApFYuuwfAb6av4++LED0Xw1PoCeibM8c1/Sv4lb/KGG2g7wICSbfJdYsYJzu0OfDuULWkjRzo72t4f3LRBuKxL1uW4619UsWLLyVlYvZt9F1iWTycyI2Hw+sQhp4srfQ/WK237YI7HIiRpYGH/v9dq2fam0nWmea5rwDJB+vNi0WD+j8wfXZYude/pxtyCJYw6dV29veMZsjPrbq8CGpC2XC8H1+iMWPbqZoJVS7ODnPG8n6J2s0gVvWzdkcgX50ngWDpEP7SDSr3COBVjl+9HacrF+Emb9xmpnFRtJBYAcILWVCDsWY7P5O8hUi+zVHiaI3SgTRG9R/EwFkHvWsQgY4Wo/oigfFSJfi3yQUeTXuDxZeFwrLYTY5r3IfZTyYEp6sIKEEL39sXeCgjkSG5oakuXMjOqDskm2kYG7m1ulP/rlaUtrblDMRtmJ0JCFT7dDh5WTtxxRL3oBEVYfyKqFnH/ib+CGpEn0dGU24rb1y0Epk8fWnlgbLEj9mKK8jwXt/rTxEailIqdD2GyfQdz4CkX5i9ky60rOC0QzBT1/8vyLvkzRWJgECqwUuf6yGhk8tBP99PZuIKC0mnXceN7pR/IwBogw3WBhckQSQaASHWD3SlrrOUCuqqvtYhd89b05NToBHhUcAIXk1M=","authorEmailMD5":"0238e17d220b34fcfb0f494f9f26ced1","message":"You can do the same thing by adding mex endpoint and use the async operation in the service reference dialog?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2015-04-15T12:52:24Z","timestamp":1429102344,"authorUserId":""},{"_id":"b8fb0272-36fb-350b-9c6e-f94289be2f31","authorName":"Stephen Cleary","authorEmailEncrypted":"LOk4RsG7WD6p69Cpu6OkHMdWTC8YO82qPPobC/S4VpaJrP2b03NMRCs0L1MsWwTDt+HKdPneVIcW+KZAKhOzS/zFmHKFiQCRmkogwVuvZjO3fwLMvwUl6JzF4ws6uE8AzHQ8UzsU6OzyMXH7hrb3VxWgO+OjFOC5iTVWbbLRqJe6rp/8Hl+nFHmlQMkpl5rq65jv/BhuJ5t7GHSXELFI3r6g9JdoE0zG8FEkEPooTmr4pmR/28w57n3G8wmZnYOOg/yZ70RWYGLs05UTv4+lRuuhihFHGCxSaejw4D9ToB0AoDXmC2WTFe31Xmpz6p73MIAEn/xSjpNyhN/4/XCdr67IzJMOa2/nLyhhxIsVV+L2JOedr9blAJ5V7mVy+0D6hK9lPShECsaQGUGEaVduUXgUOgdwiD4hudTaWo4zm2Kv0J4nvqXfqzlZTVXGKHx89wFP5RKJPNhja6L0g9KEDHY39pMjeznWFAWnnsOgwmPD7d4LoQ6EBmBe871tYliBYgwQx2p4ipmefGZJWIz4DPzW5WxsQAD/nxtbVuumlTr828nmn9M2k4UvYj152oOddeYgc40Ih8RUA5tVyYEbcZA2gXpJr8Wr8gsFTyeJNeqkSjO18tx6a0OnKj/DDGLi/YkPVZh1y/AL2N0elcD07j1/dHMNY5nj47hy6weh5bg=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"I'm not sure that it's wrong to leave a mex endpoint in production.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"9ac851e4-94b8-34a5-9a19-3db28da11ef8","date":"2015-04-15T17:16:53Z","timestamp":1429118213,"authorUserId":"disqus:stephen_cleary"},{"_id":"cd5cdfc1-095f-3d68-86a0-c769ce381d9b","authorName":"elish","authorEmailEncrypted":"K3hTM7S7015/gfk/6neccbJODyuY7iwBCk8QtHcgtfOkZaQ5Rg4nWbPBjtej1KQZIGeCrt5lnH8url0/cbOsOqJMIdMCo1L1ajpUv1goBpxMu1GyGTmgGvjEzfKmGt0ujhT5OG3xBpJWAqp86r4NTwdC2iXw37t0q2x8nk+EpZkyITVZSyVFfjTfw84bIilCeHRKNgZurNhUDJcW5Xo7dI23Mc131COzgKomm7IQxHAC7MMYXswDIodb4BpkLlwnDcD9wPi/o7ovCddirai34xgiet/JGBcvd+ofwb6seSvsehbEgacUeQwOPXNem0hLNBBpHYt79XrsRhwmiCco+NLScLkF0VmPjJLdO537X8vs+N48Oyult/b12d/e0iu1u8Dtc22ZH23dbEp2B01rLh4yvpIiw38aX26H3EQX26C01YKQLgpGisPocMzUehHhzD8iDYnCQKkJbdUc+rhS8O7nSacJXd6q5N+WdS2bbotfewnmoWZ8lUZAyUE3veX2L9CLvpe5Xyv6zJbwcvcZmbG42umgSaOZIYOf0XfmMNl7z655fGrWcKUdjMa6fOASR0XR59lXklfH/JwDRZSMZNbivnrnA5oggF3KFPOua04EP3n5VKM0Zlyiq90wXNo6vg2SKdp71JV4zllaY5HzKy1oz89U+1159IrEg6prdxE=","authorEmailMD5":"0238e17d220b34fcfb0f494f9f26ced1","message":"Ok. thanks","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"b8fb0272-36fb-350b-9c6e-f94289be2f31","date":"2015-04-16T07:26:24Z","timestamp":1429169184,"authorUserId":""},{"_id":"32b03e4a-b576-3016-be6e-38ee6781a226","authorName":"Angus McIntyre","authorEmailEncrypted":"KqpSYAl5AW1Hg66dyGoOfLbJB2ctTWhexm8S4iYeylwC8+4ntDgdX2MpsX2CVcPJSx8gYuV5a0qAks5fRHwlU1w7WP7yzIul3L52EJl+pVJ+ma5SQ7+QC6YMNMQubNwC8ZvQ+0+OkQenNSg094vXvei1C2ewEacIF1H9J+R5N6iKPzy4hfRVT143nsvgrIoLLqcPkzR+91OTNSA+WE9ysuqIDnpSV3RM7uv4b2TGUi7yWD1708CCa2toyh76+9zVtvqt8N+XfV3vecp4voaGoWqi4UbVwhJ16o4Rq2xHmZt58qRxWed1M1FtXEXbHwaHmtihp0PSgnUDSu1KXW27QTZ6BNB7dtPH3n0liurme8Z0NfTUgkzlt34YFhFwnBwQgH07igCmwSNIzTpth9cFKogA2xQc3cITFN3sgBMpaQXnGVHAk00lA1AydyZQ6iKWHlLxvMo6MA2utvWYroCn0CAphbjS9osPcRB0l/XSPxCmbLibcNs6AJbmtcDZp6ILTVQLkeLBsrH+sgfiKCRznQEzGwoz/AwEF3m4eUKYGy91P08zDkk4xkicwxje132CxKosaQZ6Tul0h7IOC8yXUhbGtCbw47XGJTX1psxzZDdUQ7vAWdDAih9U6D7NB4MLIyjmaHLnJ6sUz14TTaWzTo5vHUAN9KTMA1nNcREyV0M=","authorEmailMD5":"23c77b53e35bfbd64be2f047a3d35582","message":"Hi Stephen. It's great to know that this just works but I am constantly aware that WCF services are intended for consumption from any client platform that is WS/SOAP aware. How are operations that return Task marked in the service declaration?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2016-02-25T11:46:14Z","timestamp":1456400774,"authorUserId":"disqus:angusmcintyre"},{"_id":"35a68a95-ebf1-3852-ba53-1b861b28f9f7","authorName":"Stephen Cleary","authorEmailEncrypted":"nlpgOgnaFDhfTzygyVt6NLo8JxasYQ3vnVDUBw8g17XpEgcRjCZDB0G7CuCHP/vcowE/VXqsLJSvHd36xoCShuUYqD5xZ8ICU/nSIe2fBS2yBXx/IgbMkBd+Ba4btJ92CLnPbBCARw9+zo9Hp1x9ExpJD3sYtAs0+3zQqVXU0xBMotB0YyeZk4hKAdtNJ60ZB5IezKy4dRA7K555DcZp758JznL9wX3OhBqBgI+KWz4QNTTrfAByZ4l3FxjPlKG+sjhVI90zCcAHf2eb5VY0ZhX8TQ4+S8ltobGMPe2bt22xTbIapFUzvFsom2YhM35+qAs2FX+QL7PjcNjFQsHDAfPGYCpcazSXYXPuvAGXH0HuRjiYHCKHDYpTF2te8bdtHJv/gMh6H4/1t77WNyYlgOT/XIK1DZ7bFdjG9IvTCqud2B60gj5t6ZZq2yfv+/TJkFVNputp3+jHd055V+KBYzpEZDDoXJFzHnp6ha6dPvF+v8TlHZ2UrFxHA4P4kJaoZD2e4KwIu6OeyBEgp+FJYiO/IsLrLCf0sX+o8VJqS7+4uw607x1Lrr2/CcJfLfS6RteelcbLGnZA0jlZ+0XttWXTQ9b4tvzAD2ZMoTBKUu2sMLyoj9l0pVa1SZE2qB/ei37bQp0z2c/zd5nNpXn+Hjn30pO97LAm1N/kAIP6PjQ=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"The Task wrappers are stripped from the service declarations. Logically, from a client perspective, a service returning Task<int> is the same as one returning int.\r\n\r\nAsync is an implementation detail. Clients can call any services either synchronously or asynchronously, and the service can be implemented synchronously or asynchronously.\r\n\r\n(The same is true for ASP.NET technologies, too).","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"32b03e4a-b576-3016-be6e-38ee6781a226","date":"2016-02-25T12:28:24Z","timestamp":1456403304,"authorUserId":"disqus:stephen_cleary"},{"_id":"14ea8a80-cc53-3a3a-ab72-b1cd457c4087","authorName":"Angus McIntyre","authorEmailEncrypted":"vMz6rTm658x2MuDTCIHRfI6BdU8zVOWz5Sk2+/B1hchxXiHYnvz6GvQ3X9mgyAppN7DLhYHvxY2PFxrqvRyfDcUfLlpJFDFBdWUuXFgGsWzyo9rNYSuHfIO3X6v4f+trB9Q9WWrooWTJToDA9s1/No8koYA7950Ldlu3U/0gtmPLV17YocmaXQ+OBZ+m5WtAgu8phNaBCn/a6RsTPLnzQ9BmaYkVM/pOmqrpCSI+3Be6cXKHtJxvt85VWIEJYgtO2+6JWBjbbUvPSpoFtJ8t6Ss2V7tfuT8637H4Z5EISmzxw6M6meGDdrE+GfsOxmfAThJnj+AhGj1M7eAxFkrI1gkD14mBzH8+NCBvV3YfryOeYKqr89m57DNiUs0+a6FXACd+1NdQvFb20uNUp/KQ0MIRx+B5wEDp0ZCNh7n5b1rUm5KQgQsiTH0c2u3EA3kiHgKbJk/PL0asKSNV8LDS5vfZrBL1uSuhv6bKng+Cu90miJw0CRlc3Mm5PJzP0bPwa9SIe85dsUCBlp7Z5tZqPh3LxDxG4EDvihGvGS9E46whCG8fEgswyiOLdsmkZ4ANOaN6ZfYqaB5TY4lQEEpEtUIPmvX82AWze/mB23QmHgyd0vOxmv2WF75ND4KRH2IItuIesNANNjpuuQPNOBPN7ou3T6znEuXT3XBQ7TCIYr0=","authorEmailMD5":"23c77b53e35bfbd64be2f047a3d35582","message":"That is great news. I've been working on a client recently with lots lines like await Task.Run(() =>service.DoAThing()). I can now update the contract without fear. Thank you for your time Stephen. Outstanding information as always.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"35a68a95-ebf1-3852-ba53-1b861b28f9f7","date":"2016-02-27T15:20:09Z","timestamp":1456586409,"authorUserId":"disqus:angusmcintyre"},{"_id":"1a1be2ed-5ae5-347e-a395-020e0c172cd1","authorName":"Stephen Cleary","authorEmailEncrypted":"UREYvtQvYi6uUFZFoMSo1po6/Qmn0/8WozmsBqPJbJTtMg1wEPimjHhaS5v0a8bTloitmq9c9NO5LZMyEWcYuZHJ+hRTZRgWsHWtas4YDOONjXNe/Yb0Ulem5Nu38/msxjOGKS5LDXnIGGWqTNjrai6ZLSWmiMQpgm90t28IwJLStLuuwbwk5QAJa/tyUhtcfZknQ6bZEs/hQVFVCxXq2LZXt90wJYyhvto7eQKCObBc6tcduCcIzgtPBqUaGoInVirFubA7sN4a5M274wUPubchi4VpTt1+b3cr9GGMvrFCIKpAEXgE/hYHFGsd22YhxTdPvsRroU8PbAT193ivgC6oCH6USMpDHLSSM/BaeHX3nTkLVtmDFfdb2JwGGq8srPP9evuiDgZMKoei/4NIgJ+wQ/FzmY06TKEUhYXeVzvDWpYEZvtLlR1NPnNuShBzw6h4LhlRd+m6qxciISAnYLZlV2XnGY6S52Kb9auRoQL96yOI652u8xS486fu9q0EOUEEyNqfEIuGTDkIKbhUXK9JyFW5EdkhpfmvuQS68iubVIXy9+hZe1A/HkkV6fjyqtqA4s8+QuIc9sCHeYUzTW1NqGEO0pGXrC5MNmrKI9n2rC4wjqhCjVGXiqeSK7YiV5ij6DkBfLP/BdXXBCMdaNdch/oFk9YRuDpVAYfe9wI=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"I'm not familiar with these patterns. Do you have a specific example?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"ee054204-cf75-3e63-a4d3-c846ef3607aa","date":"2016-03-24T11:12:21Z","timestamp":1458817941,"authorUserId":"disqus:stephen_cleary"},{"_id":"ee054204-cf75-3e63-a4d3-c846ef3607aa","authorName":"Andrea Ceroni","authorEmailEncrypted":"WFDEzcHYUpLXPf7UtQXz8O+TP4sJcHsGTEPsimDPe4oEbrV39QdaAErpyH6FmJEp7AshvHqeSWm2TAWv8OVp/vYvO7Ju4/68aljnMZpiRWG23Y8k1DRID+noI6xvrbOsSwj+zxDEQOiSTanJ4HyNSq4YsqJKnO1bHd+n4vCi5xhbuYHzDgIrvDLfWRrU/0creWjPS4Yzb1L+ZYKfps16MtLnBNsyXWuBSZORziPG/GQn+ktMQMoftQaCVtAmqJr9KhnfSXsLEv8of/CohibwKtCk9ike8qamBW4K8SzeXQwMzV3G8KfJqaBU1nGk7xM/l6HNFNowvQtXLyfwbMzvR9gSulnKlNnGjSC0mDNZ5uU5veTFwB9aaPvClf/x4RFMitm/4bGQ9uEnJGnuRKtZg55BVbqEh0b8hsY2F/WDpfAtlcR5rOA/NL9CwOe92yrXemVubPhH8SHQO+4Mfti1/qYE6Uhrd5dq5MiCQIwfLLGPWJq3D71DT92iiokb5WYNn2acCp95sMg9O9Idvf6TDKtt+8xr+ISO9c0NAHMKIrhLSAV7WI3hN3FTwWqb4H60KcoTvF/YAjcuPlmVY9vxJs0UKDRQJolIr0FfTMNyiDQVA95GIjpZvtfjljX8h2o3W7m+L+UI+lT/ugqg17Kv9v5CVMul+ijlby9AyidZ6YA=","authorEmailMD5":"40be30dc5eba76aca5555bfac97b90cc","message":"Hi Stephen. But with TAP methods is it possible to properly close channel if is faulted (communicationException, TimeoutException)? With non-async methods there are well known patterns or exstension methods because the \"using\" statement does not work.  \r\nThanks!","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2016-03-24T07:50:39Z","timestamp":1458805839,"authorUserId":"disqus:andreaceroni"},{"_id":"c431c0f5-d49c-3f9f-af6e-0c096f775258","authorName":"Andrea Ceroni","authorEmailEncrypted":"fRSB0/qMgdgdw9oEmmf7TvNX57AieWhadvvZYmLPXIZHAs8aM1ZbBYqXc5eqeTCFDb1h3Tzhfx9CJOrTI75OeUZ6296Qyc/EfrFfJ3NlXMdGzObs4rxmQGDwPeE/VSX7OcVJ587HYVEb0C+grjF1YAEm2K/GGo5jvx6eT8jDN+Biz/ndvrEm5HkkU+pGb8fpHzMt1CryBQ7s7Wu7gcNX6+QGceX+lPRliVOClZjxLhR9R1FJgov605dxt1hc4RkM9IjAL4gnQH82fx/4HOnlmnEN/ercJYtGX5K1QDKZPHy+vWMt0IsjgsXzQDjqOOk0ejJ3tHP5qKfJIkrKKbK9XeoyWRZOv2rEkfizDpl4417KSdMb6kZNPj4uxfIU7QrZdu16ZZ3/Fl6MZsAj79mIzz1S6rrFqnd2feKAWyy2JsjJCe6wT7dAk26VyS8h8n0rdqbrM46FywBbQ8RRUfa314UXRPcQ07cOn8bFSwSXlgFQVX3KjjKpXZhtAmuqU1XrVVjAWXXxp6An5v5liAZUdgenh9EV7Yufs0hQEHPhjAkxjBs8RSCbd/dkHk+bT2bXq6pgqlaYxiKd/5TpR+spbGzUwgMuBA7SczxMtNUZncDJbZBzwCkPLTo30L8kPXeOUc+wYpSX3wMtJilw4fKPZnmCZBg8CotL2HyTMf80JeM=","authorEmailMD5":"40be30dc5eba76aca5555bfac97b90cc","message":"Thanks Stephen, I think something like this:\r\n\r\npublic static async Task<tresult> UsingAsync<t, tresult=\"\">(this T client, Func<t, task<tresult=\"\">> work) where T : ICommunicationObject  \r\n {  \r\n TResult result;  \r\n try  \r\n {  \r\n result = await work(client);  \r\n client.Close();  \r\n }  \r\n catch (CommunicationException)  \r\n {  \r\n client.Abort();  \r\n throw;  \r\n }  \r\n catch (TimeoutException)  \r\n {  \r\n client.Abort();  \r\n throw;  \r\n }  \r\n catch (Exception)  \r\n {  \r\n client.Abort();  \r\n throw;  \r\n }  \r\n return result;  \r\n }","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"1a1be2ed-5ae5-347e-a395-020e0c172cd1","date":"2016-03-25T07:19:47Z","timestamp":1458890387,"authorUserId":"disqus:andreaceroni"},{"_id":"e3cc7f1b-329d-3d3e-9a23-1c16e4380349","authorName":"Stephen Cleary","authorEmailEncrypted":"I/xXE+DDfc8ZvCpMN2R6BZFgyMeAuWBKsIuQf4hBUy6VOCt6GZjxb3JqmpKLvviC2KTlDV6lDLjZQ5glGK9+OK5aDaJ1VeMptffGnr0Bk7qmkkO8cDOJsEC937RQDO0smwrQKh66StV1mfcMNR8s8GRv0/UDDP/jLBLjl439giIhmNPekMHHJIkw+oN1SzAOORYDYkZvQuuhlyhirsvGP9alSNpoyw9SHGAd4LtenaLdAeFxA8ZJRqx7UoShR4FqTPsTzwTE5e5xjJ1j0FmZE5HRN1UBLioz7mwbNBb5P7DnFK2Q/3agMS9O5tWg3adlXq8ihjGP+ZmwA+LxIRWi58AE9WviKI4x//fFTxP6EgR1SA5Ai7XHMryew9dm5zwKegQCzgqjUNx4uwyxmY8Aic6T23qnX8asLatFxWoeXWO/x8kzHqGX4MC//Xj0LZZF0Uu4zzBNP6oTaNUOuKqJtzR61WWrXL1zXddyP1nTEDksMWXpUqgKy+gbDnxj8dsSk9zFqPYJun8+xTe6d1R/1Wcs1jc0qH2X2cQ1m/qeMmCw/pMQ2pUcUJqDJDvbblvg7E35Cm3aihbdamAaZq4tyh4GWIQVYQyMlhYlFWpfXzqDKwVIC8CKcuzXXVLMwsjZdcPEWavI6CoNSu/Vxu24WRBaeCLzisIEdF/Vdej5z1Q=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Ah, I see what you mean. Yes, that would work fine.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"c431c0f5-d49c-3f9f-af6e-0c096f775258","date":"2016-03-25T11:35:22Z","timestamp":1458905722,"authorUserId":"disqus:stephen_cleary"},{"_id":"08b70bd9-1709-3697-a659-47dce4cc1492","authorName":"Stephen Cleary","authorEmailEncrypted":"SGesYp5hDc4/5ZEJ+5Edny+fxI38y46DmchsEj4PBjzQc0ahl4X2NWWLjUAhKR5PvITdRzAkeMsQvlitqhHOxgFVhoQfpK8V/Eb1hNKd998ubtUDtxHlDx8YBAw801dzTY4fRpdphS/6pYM4h4fhKphmHYKLcUIHIr1uKMvq3J8Hdm9sYYq0PEA+B9jBku4L/6Cxa0ABF9mr7fHdxG8nJVXlrAIgYnxu8eQiYvZkneavaMvFssL2MDMbjhRAks5KTnpKHkxYM6b59GJZ8Fak9tWig37DCAmvJOhQlD3e51wXxdDNZOWZGvkBIAIUHYfCXsEn33PO6j3Jf/dvk2FnOtRk8Y709s8Dnz+14b3ZVxgxJS/0MQXnTs9zAgKp3+SwzBoLbXnl6lA4yNhpxsex2GuvaZ2UIljMExzZM9bTj0Rv2l3Ac937XNEJVXMc/rmdmhDwCxGe96ld2/q+7M2pQWw/XXJixOLQXF4GeelrWx6m0skRyxo+30aeQG1aUL3YN0OPNjYO0ETvVpLWaeZZkLl4e4K81Jquu6/wS47prB270CF9q6YknHXEnff08tcFHpiCuy1Y/+umpm3L6AgXciZseU2rdk5rAOeLIBT+JSIxvH7V3J7ldps7PvVlssW1YZwLiVkqjnt3ik93Z/Ho6NVEfWP3z8z2JqhRIgFlWoc=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"If you have CPU-bound work to do, then it's best to do it synchronously. This is a poor example in that regard since it does push CPU-bound work onto the thread pool - that's not recommended on server-side apps.\r\n\r\nIf you have I/O-bound work to do, then you can do it asynchronously. There's no background thread required in that case while the I/O is in progress: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2013/11/there-is-no-thread.html \"http://blog.stephencleary.com/2013/11/there-is-no-thread.html\")","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"5b77ce7c-665b-3427-8d65-da337b9380d4","date":"2017-01-06T18:19:43Z","timestamp":1483726783,"authorUserId":"disqus:stephen_cleary"},{"_id":"5b77ce7c-665b-3427-8d65-da337b9380d4","authorName":"Drew Moss","authorEmailEncrypted":"cDF4xNo/JEkAYiOB3oqGx1mHV6G7RPLDJ3eG20GDQvdNksP0gSoaSUPO9BUXt6xnZaoRk/QjdfJflEA3CINeJEwruYnYhT+TCbjQ0PNtH/+YgX5Iwh+kd5bTGtndrMjBk2AR9Oet59lHAhaGeMji6TtDkwNouFr+ntEGkYpBPV76sGKOV/Dt34ybcpmcVMa6dX91+6xNRxTkUiAnWRZOOHXdO6U9Tj5nrsWFSMfcsJrz5WM8jkaEwy5WXKQJfuoIBpTuKi0bVj96ctDxjesqoGhh6PClsTV3ku0tF0CLjoQj6ONZ+D7Bcyxm+7HQMl3wll4h8SJ/Jck8Kt7y9pfRqJMFVKl/LNz7GtmC2n3R4JWrqjarH94UhfU/MY9ewc98jLNZJf6qwx1U6+lKAChLLhpk28dlsfAm6QANTBg3neuzVSq5N6ndfnp9dBLu5v+LFrNvU1rJYHZyrdsQmNv59FizRjtdbmgWov4NxRRXLaH31q9G+HN61D8nQF4GGCp5e+2X3eeUG4HtqVheiBVdHl+1g6RU01Snqz7gNc83ifiAYjc9DZtf2SakuGbTu42E1tUcsxeMmVeMwltcjfo1DYiH+EPOtWvcW6ELlcVNNdGn7SsScV71rNn9u9EsI//DN1ZmSgQtFQOe24BrzJMXaQGsCd2ieD+3Q71IWFn7j3A=","authorEmailMD5":"0beba79365b67b98ee3039d7d969f578","message":"Stephen: I read your article ([http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html) \"http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html)\") and this sample and have a fundamental question. Like in this example, if I want to do a task asynchronously using either Begin/End pattern or Task based pattern, don't I still need to use Task.Run which would create a background thread. So, I'm curious on how do we save the resource (i.e. thread) by using async programming. Agreed that the request thread is freed up, but we still need a background thread which would do things like (parse the request, make expensive remote calls, parse results, log,etc).\r\n\r\n\"What About the Thread Doing the Asynchronous Work? I get asked this question all the time. The implication is that there must be some thread somewhere that’s blocking on the I/O call to the external resource. So, asynchronous code frees up the request thread, but only at the expense of another thread elsewhere in the system, right? No, not at all.\"","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-01-06T03:05:34Z","timestamp":1483671934,"authorUserId":"disqus:drewmoss"},{"_id":"e4b080ca-8d5b-3ecf-9f3c-65bfe4a8c842","authorName":"ayman metwally","authorEmailEncrypted":"vc+lZwTKkD5DvGOHwqoJw6PNkjwDVbTD1xwKTCDIHx7CRylXLf2ZfVYs2arDMggsa+2BIXVLLRvTX0kJl+yepIT9/V+WN288yyvoZC0uTGWfH5jscxyFDzyBcxtFQbNW2Oy3Nu4B6tOqVTUF9Uc3UQbWHT/ciKfHsMWqfrjNO8j2CNmh1XAewPjN6nlfAqGX1cMGRpBxnOypRSNUEMWCjfqTu2OX4UNq0I/AD9/PyL620Dmi6+xTyO12sxZqZuM07Bjl9fr9DUGnaWhkxs/7NDcLE3jW2denzz4OFahlfzT9ueHaQ0APbhNpPRF7nNG/hXYjbd0TiRBoxbzAb27KvhlV6eZnwiW+WbWgNbiMhPgluAdEU+dqQx9HdJ96+nVF/oveh4jhY0QPc3lAShBRAZG7PhUw5ED+ZyKlCBFKHUZZjsdRex5yYQc9eX1RNuoji7wg0OuTeFQWd44/u1aYy3yrWUpWcg5ZhctAAx50N5+Kpf+cITGfM+WioGnGw0pnNbexUJ/smB5azLPn3CMql7GS9WQX61wfsS1WUnbtB2rDaPRsE3YESi582mwJhf6W/pYqY3603c+5W7z0ZFYpantHVAZdlz7N3gwZOVf9V3sq7hWV7mtrMXS6RjbyXDYaeD+sTmUON7UXG8gDgz2yoenep0ILxfC1GGbz6i4v2Go=","authorEmailMD5":"424e448aee11240309cca7b0023de2cb","message":"Amazing post.\r\n\r\nI'm a bit confused as I thought setting the service as PerCall and Multiple will take care of the async behavior.\r\n\r\nOr did it just mean that each call will have its own copy of the service but however all a running in one thread?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-01-28T22:22:35Z","timestamp":1485642155,"authorUserId":"disqus:ayman_metwally"},{"_id":"201aae5d-9f48-3ed6-92e4-380aab83eb75","authorName":"Stephen Cleary","authorEmailEncrypted":"sAFCc8oSr6OHf14xV3HtVTCYbLCo739V8fiPEWKL70GdX9l8CjZLAl2ONvSk9++3gjXt4LYVuYIuPNLCEUQN7ltsB6/I2Mt5t2deTel2TbRBhMju2mM7HlKqG5OaRPTm/AO8c8pj7TkRllHbAsgPXHQO0YduysUn0oBzKcOVwH3nZ3/6FSKlL1HgMjxQPqJd8OqlHo8mh6ZbEQGxWDiMYG4O2JDYBHoBip9+tb4ar3V0/975xlTVjMDO6kt6KHYUDohDaGK94K6dxoc0g7PyG5xTC/7tkWSK49GIwTAoBauQF83sjx1QVz0FK+aNeoQ/6a7iF/vx0FFcsCA/mq4dKYVhZispW6ixz2wyWtCkB+wP3gNOlSoeAV2ibfDAqSv4yDsceDrwuGy8jgRV54xOkYmjHbu++flbkHDeXFuVUC5bdTCCqfg8VUjGwvkRZmAVVFGLvqrw/5DRB/nQvn1qWMXRjsEtPgLo26j6BOFm9O1qx4onboM4xk5XqceicqrPCIjHOgGlZ40shhjP7k30wa8mA6I/jZwjBhLnJzhvST3OppTcGCTW6VO8rkltSW6iAm2Vs0fMXR8+Ym7/JSc51a/H/Qw52o8uHV+we71u0PQFWxFK1k7xhn3OKeFO20yKU8lekBJjn6WOIroRLHoPj0sc7YisROwnnJz1aLUnG2U=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"It's been forever and a day since I've worked with WCF, but IIRC, PerCall/Multiple are just instructions to WCF to tell it when to construct the instance of your service. They certainly don't have anything to do with async.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"e4b080ca-8d5b-3ecf-9f3c-65bfe4a8c842","date":"2017-01-29T18:32:58Z","timestamp":1485714778,"authorUserId":"disqus:stephen_cleary"},{"_id":"3514bca0-9054-3208-a716-bac9abe802f2","authorName":"Gene Vital","authorEmailEncrypted":"PIC+XBfM/yMt/fI7PpxhHqcrNgKWZYpDtsouP0oxrkWe5nyx/GDOInINYloLI2yqyPAbRccoK4TupJbkZYtW5x2L7KEJoHfhDzBWaN8UBvIaIxygZWDttNmtasEd9dg+tzQ2ZQ6q6L3SuDIz5hPgOzt/7rXL/KSxMPnZggdBGp12c4hTZPQHIjfmCFGC32PrFKOcUvguGQU9+6/4WVtalfsj0JlKG7qxZx6EDMSwEXZNrr3zd+ULmON3ioj+/N2RqbN6I1k5WadVvU7QG/65Tdc5G67k25fFI3zB0U1TAXYHZAVqJgV8o2+CHcrmHYflTJ4Xn9uz8Ax+P5jB+Y3bCJDck2mmR5+1MFtCKwHs9m1gstwU0LmRu0IwRLZ5HsqWpYqayzrekTxaFOPtcsJ+80AqFGd58yJC1IyTqzRKBqsHFek5t5tOHUp8Jkmv0fcgXWyFsgbkeBWOINk1Pxd3oNs8qDTQ8CF4u9rIAEWiP4ub+7Qqpqkd/N441qXD/EvweCqozRtJlQ0I0EkeJOxKr/6gr898BTVw0RTm4QfnwmAJPJOnB2J4o25rNuL4Ej/O/yxAUSPlGaZc+eYRqZ2NIbna8SDiF/ptKyezUfK3gO8mQ0ctukU3yFKw43NFujtrL4fvWncFMq+/dfJq2EaD2SA5zoe1p/cpPZVBG1Mhn7o=","authorEmailMD5":"f2578f209735c78a64a4f7f312be5f06","message":"HI Stephen. After reviewing this link [http://stackoverflow.com/qu...](http://stackoverflow.com/questions/18622372/is-there-some-way-to-handle-async-await-behind-an-asmx-service \"http://stackoverflow.com/questions/18622372/is-there-some-way-to-handle-async-await-behind-an-asmx-service\")\r\n\r\nit makes reference to using this for supporting TAP in a C#.asmx web service. I reviewed your code but can't find any references to how to accomplish this in an .asmx. We are leveraging some new code and all methods have been implemented using await/task and I need to support using them in a large legacy .asmx service. Can you give an example on where to get started with it?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-03-02T17:32:33Z","timestamp":1488475953,"authorUserId":"disqus:genevital"},{"_id":"07749ffe-e9c2-328d-b4c5-1c437ee958a9","authorName":"Stephen Cleary","authorEmailEncrypted":"bZ7EkIB35iNVFFnVRU+34CMSgnubSuY2hAN+4XXBMnRlJjEckeZq0HGgBx+widNVizbxAOfHXVy1yXU+mO+c8tumyLWU9HiYck3B8AJdBbMurIm+WIl9jsYYVTvNQAtLSf0R8ynWscIgsAwXrNrCa5y0x0M4we72ALZfva+56H34tpS4Vti65PyGeKfI1DsWGLB9xAVtT7kXKDGv0FtGFdPJYrI0rnuxlLyQuUGmQwaITJInviZ6Yq/2N3zd7NCtTqxS5sQUcDDvcd4JKh8Ru4+t+53B2rdiEIA/EbtIoxSWfrfI7wPYmoAiskYUCEbBywh0KXm5KfWuZkXKLMi5r0ER8JXFKIUy4Y2VAIihZr/ZFEBIVqUNc48Npro3X9pA9maHcz1pPyPV8cmrxbXt142l/omeO05NknhoHCr2uan3K7Lr9yl46we8fuWyd21+lNrhvyb+X04EVaj8BXbYNDzafWZDasvRnnaqkOO3BbAhAsdmFaV6b1AD7rViaJiiUd3zF34eqa8UUOrk+yko9dPTfhjJxQQL0Lki7UeTHRynqGr1U4h3hh7FORbomNquABRQrCjm4CELvgEKKr8o/eJvKCY8PKMVdkQ4TQrUnsKWnc2lbUp3gMQj+nXBP+eN3sP50h+W+N90AS+ROKuSBcRE1bVtiEkWw3IBlU33RHY=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"I've never done this with an asmx. This post shows how to wrap APM in TAP, which might work for asmx.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"3514bca0-9054-3208-a716-bac9abe802f2","date":"2017-03-03T14:22:08Z","timestamp":1488550928,"authorUserId":"disqus:stephen_cleary"},{"_id":"aeaa608f-05a9-3ef4-966e-7f673b3cc404","authorName":"Stephen Cleary","authorEmailEncrypted":"jaSC47ARtmZhp6MJgCh9iOxek9R8j7QNHsElbX4At32uQtb2ZMi2aQz7OUBPA/tf6xJbsLx9U9EGNcHdeqW6gopy5N+E+kbolqmMfGXdOh2uJpM4RU9q58gW1BlJoxbigBOHlERhD2CN1X0FnbeMF6dDgqIvi+VRJyamOrmUH1t8fvuAcMaPNhRhnSh5S0+ojNewg8Eclt2tjye20KlUHX8vF8+npVQJM18kieZKGUeX4p3cQlIXUP15lKK/hWkQsqfvkRHnVkp7NHg7AiMSFPGgWIDuFyN5d/89ybAxjS5qO0jS1Ph4oTgb34dzb1HGb6BBByvD4kxitv74K1noSnfAjj2FFwMLcUAqKLmaYYujNricHlanKxhWZWs6CIJMRUJKJdYjYXMDIGv07rXp/5IvdCrFWEVwzRDe8klW6O3t6F9NR/n1rZ3Mn54/DSyh9lFNsOwCSwq7kPs8oxVKZLbFGDvmIIuR2fOeNFJ/QoWaM1/hokZCHwfJtVwDt1kiH5rqy59L9HIlH05kAZlNQR94xpC8sXWAeCZ6lPWwstShqNTsgm01ZYd+zlUYEdvej2meI4+7OsSD/49MDp1fwRtrxjJbNuDoAd7fpB+cC5lZRrz5aJEpIGDpf+5ctGPTnc4aM2S/AI39+Zu6AxCIwJBXIep3CeL6GpViXCA2mhw=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"WCF must be automatically stripping the Async suffix.\r\n\r\nIn real-world code, you should have either a synchronous or asynchronous implementation, never both.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"b0c28d10-7d46-32c2-958a-7e43fcea0a73","date":"2017-03-25T17:02:06Z","timestamp":1490461326,"authorUserId":"disqus:stephen_cleary"},{"_id":"b0c28d10-7d46-32c2-958a-7e43fcea0a73","authorName":"Alex  Zqwezz","authorEmailEncrypted":"UouC7jCgTQdAHacu3wxLre+QYh4EYAx54wF9O5gKAeNmDtbfI8mIS8EFYxsbAmZGd7qmgaJf2NvN3ev0Ph4eOHswThXxgpePA7rC1Wis/Kn9dLCE92qI/BKYlAwjQBHV0wDik3nUCXfel58SudJIan7xqJ61Ogm9leTbeqA6o9wPHX1YYWAi0xR8Eea8kHbov1FgaipT+KSgxtS1I/lphPGfpS/KgRpZcUxkjeDrWWTKxnvJjARW+iN5LAcWw4KU+BINdh9nuwXlaF9GDIIlmvyXZ+g45ii51tcON47jtQUPVQxd5G5M/0kGRuuYtVRQsiOmP8CGmLNpJuVqCLu9+mdmfMt75c+UUBhv6YvvVW+vq7iyWzMlOqFa19EDsrMlGi/wzXwtlbJZMyl6UnqoJynUyoRdFdzfjCJRWBYQ1PW460vXN/Riox4nMHLuFOAMgUx5lILQNtbKK1IerWuI8qc4+0xKvNtn5VclN6xze0rElySHRDCZDAGQz0YVcxT/6DTciTJXgxnwltfRj0yCM5Ao1U0d6a5+JgNXhOuPnTTxEq0jA7X606ERaJiZvWBA6eVIZ+xhd6Xxj/3Oj7v1B/5VArSvkZVrI88ZjjHslWdVhkhXNeLHz+MdmfMmDpt+1qlklmdPeao+741j+V+1OaF9GWYtMZYHEtfkQf+TGt4=","authorEmailMD5":"32b8d310c42484cbfa673d701a5638af","message":"Hi Stephen. When I wrote in interface for WCF two methods\r\n\r\n[OperationContract]  \r\nTakeDataResult GetData(string login, string password, string creditNumber);\r\n\r\n[OperationContract]  \r\nTask<takedataresult> GetDataAsync(string login, string password, string creditNumber);\r\n\r\nand have error - You can't use the same names for two functions ! Why ? Names is different !!!","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-03-25T10:45:12Z","timestamp":1490438712,"authorUserId":"disqus:alexzqwezz"},{"_id":"91f51b08-ea36-3d2b-a703-ece742cc427b","authorName":"Drew Moss","authorEmailEncrypted":"fGmBh6Gr0dB59I2/fU4Q6T3PRjshzxtdgmd5IGZxwP6WE389fTf1hxgSKoIfDufo/BfWJU7bgfhPx/J0Tn7aimYi84IV027q1HoFSEWrt5czICLoAVwR/dgEMxTnOFU+IHym9k4hFQANNUlD1zfGUOlWS/8n1oKxyr3FVf0UxnY/7JBuymyBDGPer5FwlDTOe3HbLjxLuQW5oF/h7BVPwbRhoYODePOxBTFYuR6QFRMCLsFYzLVXX1LpagPNI6pXfTn7Ro6hhfZnV/m0/8QzaozYVFuSOyDlp/Ws+VguT+8EkzImhhBSGVGKDq3GjepZ4MHF2fl1eaLgfkW8bXwkZQxElh9Fe1NDiaLovAiztpybcbYzZ8jdshWX/e+uOAco5N1uoxQ3hxuXkddTwkkhaIQ7HMaOWJA0/flkV0ju4y2wZg2KmRqtONPiC6EyKI7krvUiDLYd4A3a56umI7If1vEkT1lHee9iiGrLN7wRxWDzZWrNPeu1HE+apCwkzUEboB2lVqc/4952hLOZtphWjAILZafWYi9NGF7mNtLNsRYTT/RsitRtIhh7PqO5ys/YCX7Jg/bph5vfeb4jQ+ScRXpOJi9R2UiQb9zhwnz0gEz40fTdzeytzs0XlDueYs+xCJaq37eP7zlVn91xxnyCyL3SEv8Aas9Nzs6/Xr4/Szk=","authorEmailMD5":"0beba79365b67b98ee3039d7d969f578","message":"Stephen: So, my WCF service has mostly I/O-bound work to do and internally I'll have to use HttpWebRequest (so that I can configure Tcp Keep alive due to limitation outlined in [https://blogs.msdn.microsof...](https://blogs.msdn.microsoft.com/mast/2015/07/13/azure-snat/) \"https://blogs.msdn.microsoft.com/mast/2015/07/13/azure-snat/)\")\r\n\r\nSo, if invoke HttpWebRequest from Task based method (see below), do I still benefits of async programming i.e. can I process more requests when the below IO-bound activity is in progress and there is no thread consumed/blocked like it's outlined in article at [http://blog.stephencleary.c...](http://blog.stephencleary.com/2013/11/there-is-no-thread.html \"http://blog.stephencleary.com/2013/11/there-is-no-thread.html\") ?\r\n\r\npublic Task<int> DoWork(int input)  \r\n{  \r\n // Invoke HttpWebRequest and get result\r\n\r\n return Task.FromResult(result);\r\n\r\n}","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-03-28T04:19:41Z","timestamp":1490674781,"authorUserId":"disqus:drewmoss"},{"_id":"c60fdedf-fab0-362a-b788-9ccc16b13cc0","authorName":"Stephen Cleary","authorEmailEncrypted":"qUmq1WJLek8frbRbikFOnK+Sc7QXmBlATPrEpPgNTEV9mTOZn5peFExjLo88WgJHh/0klT4erS8e0JjYG/G26I9MHJzee4Iwh4Cav+NoGbO7dsezlCyXz3thKF8bZEk5U4w0DAOM+0EQi01q5GyM8i7biIP/2irtxG+biR/AwbybV0GgElU3OwgcpMugalx+ut3+f/X96quZgIyPqXKCyImRKZpaVSNygT4/RW4dHfEH6K9RMjYr7QfkJzBu1snw6FV9sU8b7Jwyc40GKjWdjpCE8H2PrUWkMH2EsYh+mLPD/A/W0bSs3r71XHv8Z9szs16ZZYB8XDDYPptc2DZbjzYosA0JC91/gGPQ/IFkAjJgsURUBzKL1UzHtVQdMA/kKuhNySIYAhezEaZkiRfX9CWiqkpqhi+sPTJ6mr/3g/uh3hJzl1qTFXV4m8UtK7KiS7ggt7TITx9FidXaHMEj67YnMevhUmzVeTvcdJa7I76UjhP7wGlEpKK1OJMH8cFuVhnYs7nq+cyYvRMMQYDULA1NKL9gHR/1ngSKD3PCW26dnziQzrSXFUaokTS010sCIYaazfHJMwweAiotrRf0hXp3wmoFVGPbfWv8p0knF3Cz75A8iI97wJBHt6COy9NMqwc5Aqct8o1JHkekK4SaTz1W/5I6YQcQYFqNZ0oDcDc=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"If your code is using Task.FromResult, then it's not asynchronous and you don't get the benefits of asynchronous code. You should be able to use await with Task.Factory.FromAsync wrappers around HttpWebRequest's Begin/End methods (see [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/library/hh873178(v=vs.110).aspx#ApmToTap \"https://msdn.microsoft.com/en-us/library/hh873178(v=vs.110).aspx#ApmToTap\") ).\r\n\r\nHowever, it may be easier to use HttpClient, which wraps HttpWebRequest. Also, it seems to me that sending keepalive messages may work better than setting SO_KEEPALIVE, but I'm not familiar with that exact SNAT problem.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"91f51b08-ea36-3d2b-a703-ece742cc427b","date":"2017-03-28T14:17:02Z","timestamp":1490710622,"authorUserId":"disqus:stephen_cleary"},{"_id":"07a3fe7b-b015-30a0-a752-d0146bb525fd","authorName":"vinhent","authorEmailEncrypted":"u2C83OwmTUd/pAkQf6Elo1IT1G7eAaUHHJEay+BCPT5TKxYET57B+c8UCC0YH4VyqJyzhwFYXWXYVFFwO9+8SH7N/ZmRpk1OxK3hU24IGGgQ1tLQMJI3EjNqsU5stdvMM/x6kN92xlkjlxswU52v5v6xeul+lEVy6FgXXS51v1LAsjQzwoe+0TjeA14BKl10ub8K1p3YD+8AOFBBAkgdcA7gBlvWwKKPLGqcCRZzNQpDGyCxGGtPI/e+N775lB1XzuXO8Ox6+W7U+v2oa+wbs1J2aK/HrcZYwGKnXCFO+w4I6RKSRtqMNHKghSqFNxYjQZHq8AsnMbWUlgK3fvSvoIgbZ0aBYxshs6X27PkbDx/rori8bTnQ15+mKcFviYdIoL9XXG+H8rMTQG1kPcgin3uPbo0NoWlA9QEUmxHxiL6VyO7ylow/SDy4oldB/5iEhEekoNo7MRR4aQUBZX/Jr/uzTmNfTWKpoJjwKxyuxuMpT/8IGzGKHFYqWOuiC9OsNB880GgxX8S8IEvkO53/L3jkQyYG1LRN+YU0EndqzpYrx32QV9lg5d1+1NpGvkzyuV3Nmo8aloZBmQQIW5njx76Qxc5AsimtOyCHFtWlQwtWkngsF8IX9dQpLRBxZ5ihC4QmU2ZMlTTxiaILAglNpvgmUYNOZaBvvWQDrkIqzRI=","authorEmailMD5":"4e9d619f1a01bbb4f1c209dbbcad2498","message":"Hi, I have a .Net 4.6.2 WCF application running in IIS and I'm having the issue that HttpContext.Current is always null after an await even if I specify ConfigureAwait to true. Is there any thing I can do with that? We try to not use it after await calls but sometime we can't. It's a show stopper for us to move our WCF rest services from sync to async.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-01-18T19:31:49Z","timestamp":1516303909,"authorUserId":""},{"_id":"599b0eda-ca6d-31e0-83e9-32ebc21e3793","authorName":"Stephen Cleary","authorEmailEncrypted":"c35iLOVzia3rkeF7ZcleKUOUcZ9adaGkBxGq/cmWZCC/su0o4ylExs52LZ+z/yKzhqpreQp7vaaRXbBSaLe4sEdoVNoA1GQydXiXA0Vp3QOL4/6eNqX+e4cdEdS3P2j2qz45QWj/d8eO+BqVMXTL27t7sjjHgRRD7nYXHVy6pPNnE1DCRDcRjOYYfXQFL1B2nYLCDrFyPtpHIaVDcCoXd6bAmAxy8LaDg+epdoNmWzJ3/uxrF015axtw3O93wfz7x+xgRgwiGvZpNYvm6OP+BcumHiikqEfUx07lf1G135Y51AgJTVtaCK+xGgUQOeWbrx2AMlnjX4234vuPJWLBNZ6IrI8Z8TzQDNn2Mmft2VF8qzeut1L6cI9PAGiIuExJteWsNsunhtXOoi4joPVEgFtgdjC9sVN0DxLJNLUsKd9tTaS2hyU9CloYUwShGy5q+xbhjouvZC/1ZxhRtZCUOwQk30cLlg1aFIEt8Z1p3NhhidG6JBseFYnsaCxXR5QlcVe0fszDwDnpWwCHlrz5Lsn2fQCYF1DmTRyCqQeAipUOLzJ55EFIktDbjRIsaNkaz+YBAxleRLGLgWyfn74fr00n41Pfr3V9lyguX5HHBB0jQ86DNi6Tex4vG5FDNvZjNdcJjSfXow/ctH/6bLMnO2JEwdcZWMSkrWXUYg3To1E=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Please ensure that your web.config has httpRuntime.targetFramework set to 4.5 or higher.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"07a3fe7b-b015-30a0-a752-d0146bb525fd","date":"2018-01-18T20:19:57Z","timestamp":1516306797,"authorUserId":"disqus:stephen_cleary"},{"_id":"a222050c-604f-38ed-a2c8-d14c6993aecd","authorName":"vinhent","authorEmailEncrypted":"sEGvGNEbkX/oeDj8Jk3Ne/lj9oAM53p2w2vXGj1hC2iZYhoeqUJbO+Y2PTabyfuoYrsV5B53oReFBNCjEZhzdxWe4k1w4augjvL729566UPdTtMnj2CWIMQA0xAnga4bNNTiue5+N+edA+x0d6AE4bhyYOaXAxRiVjrJmg9r30AfmsphuyjMFmN07T6YMc3r6oSFsglwe48fwetCF1ENz1qOzu0Q22/gTajVKf57sno3kB/8rmJSejElCG+rq8b0bKjdFyvKHH2ab+oHRNXxL69zRjzLRYgxNXUDHcWC2FV6bzu76P8hKATBddC9K1b8ro9kpsDLt2JYzCTKTWGWv5YB8c+pO0d2P4j+6YdR113J95ixvtK0Pvk315Z9iGnBfkktjQJRRack09jQbJdpzFk6Konuc24jWvdTCpqhuwdvJQ/JN/j9KNXTtbzhPOSjjzTA4mMNxTn0TERCY6ZHf1uw4Vz95RwcPWlyFFbDSfwkTWJnEVn1QxnOTVQmCQS5VWLCXXTtZt/WgqYt4CKd3Vgw/HpNxR0vgpfQGB5e4PeoBMctbN/pd2t5pOUo6vHi4ya3zuDTEQXZYiIAO4AjqK/YGuO79lHb+tYv3HlyIT1//SNiryG+STDUYlbjDg1Kxa8QNoe5r5hy7q0FFmtjDq5NEXQiVOSh/hMPsrwIKWI=","authorEmailMD5":"4e9d619f1a01bbb4f1c209dbbcad2498","message":"Yes it does have <httpruntime targetframework=\"4.6.2\"/>\r\n\r\nI did a lot of research today and it seems to be a known issue with WCF... bug.  \r\nIt's a shame because I'm having some scalabily issue (blocking too many threads) and doing async code would help a lot on that but I have some logic based on the headers of the incoming request which I use HttpContext.Current to get them, like in my IErrorHandler implementation where I can't just copy those value and pass them. Also using the Items list of the HttpContext.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"599b0eda-ca6d-31e0-83e9-32ebc21e3793","date":"2018-01-18T20:59:09Z","timestamp":1516309149,"authorUserId":""},{"_id":"8ebcbedf-66fa-3c41-808f-1fb8019d7dd0","authorName":"Stephen Cleary","authorEmailEncrypted":"QbNY/I0tokcJ9R4v+X+wv6p9Y6cqMBj4yrm5ecDREJk/18LD+I6H2i5mSoc2tzZU4RyG9I1zvdsv2IzRrYno3ckWysxAUPUoaDJSn5OrRw09nJKPPCwlM5mvjEg+U9C1iQUn21uDAtBMdcU8KtiVzYMevunYr3bUjfuRTgl98KZxTkD+1ULgVIRA3D3uqtXC69VbUGPZw+2sCdcSazrBz3BhOq2erJeSTap7DibzMC1XFma3EGWeaD6iDpZY5+dqJgovjp80gNwPRVXqdJbtI3C+yLPhG/1wjwzVRW9mPwPLs3d95CzMXBaucCSLDHC3dwT9c6NHQQGoGrVVP8RO1dH6WGi/wfd8Ildd4eZ5/CfMx9Swd1xSewIT4DfYPT7lpk6gn9ulHvQ0o6vgwwWRE0pMuMfxNoWi0lx4cectxo4Hm9YTYgqKEsTvMvQjf8kVPwxg1z5CnxBMBGg7lh4c0g3OUkyq50JCr88MCaFmfYG+kmY49GOXkVaNN1Oz/Cr5W22XGfiNLD7pFWasKcp9viLJ+1CeAIbCgGpsSDOVjzGk2VPnJFPguhrqQrAolKzehuQEGasoaNKyBmvy08NjpOg6ryUCP0q8qGfTqP5esYfAlng0ZQKqGGGypPH3bwQqkA2w1FRlE7yQodjnSMU/geCqoBz0LqirT1tx3tOJvL4=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"You could try using AsyncLocal<t> - it's essentially a strongly-typed HttpContext.Current.Items, but without actually being a part of ASP.NET.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"a222050c-604f-38ed-a2c8-d14c6993aecd","date":"2018-01-19T01:16:22Z","timestamp":1516324582,"authorUserId":"disqus:stephen_cleary"},{"_id":"3ac91931-6c74-31fc-9330-d417e9f375dc","authorName":"DickP","authorEmailEncrypted":"V2jpuuhbze2Bf/XG/c5z7qlqeVIy/7EWqih7HT2vfi2iuGfDjIfiwD/F8YhOWUODG+5kSMUSpE8rYLNKeZAPyNi8xdYHbmjRWHD9fQCS/n1Cm4kcbGrLtoDfNoI1S2UzPNfcIlv4ssGvyFim9GKHY/DFP1ynQO6fowqkxoGUUP2Cu4RMqAeyW2MvqTI2iZGuf4K9HtW9etEEWjpu2i88vYOf/65q9vYWWUTT2yju1Ou3KL7qBJcUq/FetGSOwlY8xTGoP3BKQCpFu/CoLEeHeF3rGqn+cbElslOmASpVP7ageHwUxF88UCpvg5E7WDsgxUV94K2E0JcFGVOp2biQQfVx/xvJiT/lORg570XYwZKDzSYeRWXl5UUV+8FYlvi4velHYvA7qeuVTDcx+WVlUDFXmFxLTc8CIJYT5uuJLxHS/0OP/AamIDKZr0VjKSLqVBxt/ipY10M+XjBDyxApPMlaYljNYXwXHbJCZgj99pqRinv7svaogD+b5ASumXdnK0YqwEkxYB40SCtKCoFajeO/W2zuN4XL1wxC22DshaTDktt0/hlGuVeyTc0fYC84/TZmJVfuq543GiMNCNy3V/0C8FPWcC751ptIz+YuwRg/G2jnnUIN72NYkpbHMoMRH21xVDGrND4/WABoehYyQj1fOkpIrXxZNUawNGFdC38=","authorEmailMD5":"33a553da13151bffb2e5e33efbe2548c","message":"Stephen. I am committed to WCF for the time being for a complex fintech project. I am currently using 4.6.2. My app includes both I/O and CPU Tasks at every tier. I generally only use await when a method contains continuation code or needs to handle exceptions. Otherwise I simply return the Task. What is best practice in the service class? My service operations often have just a couple of lines of code to instantiate and execute a business layer class. Does the WCF runtime prefer a returned task or an awaited task?  \r\nI use PLINQ in the service layer to parallelize a large chunk of CPU bound code for requests with batched payloads. I just leave it to block. There is no continuation code. Is there any advantage to the WCF runtime in wrapping it with a GetAwaiter and awaiting it?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-02-03T12:57:49Z","timestamp":1517662669,"authorUserId":"disqus:disqus_MYL9vvFXQc"},{"_id":"e39931e7-25a5-37dc-94c7-8c92ebb56aaa","authorName":"Stephen Cleary","authorEmailEncrypted":"BlWSj0/yL/ZWNm8zzlNHWfksBu7U1yDDfsUcoqNkIn3VnXtjD5pu4BG2ORiRs0Qnb9+xNNzb5y95av8YznhI8FuMK/088ut6qdo7Uio9s2kqFBdLwrtK+FL+O2sg5nfFZWoD/ABSqfSWWmdVZIDS1cfvlrLzOwMduMMqlaTU3AE2MqXUDU/O5gPDEgM/20SwQpAf5OR3xWoDLWB3ANJAAF4a2367T2HPIc0N56+oL8Wp3LHwpR1MAXV8xyaWPmRh38fFvJWtCgr0D6pAV0oYlP0q+OC9u39hdJAvcUEyhrO+QRzuiGdhUGkM9ND3P8kG8SW3ESKknWvXZuLLf7gaNF0mBvxbiF5/wrhKJ00KbY9pl3V5rZgDbf4HWPubSb6b93euKNJ3VN6wbIS/oZgsCdhTq/UpHM6GrE4TX+e09z7VV0sH/MXvG9kX9j9OldidfTwru8gEti71KyO0OkSD8RREglkvagttOXkeTenNrtxXff/Ht99QYfL22KNNhpuxN+b51SCDV2iif6rmvNosd+3g7TC+MCuomE+/bm9r6RGo2LCgkrZkYpI144dP4qg1YSuObAtGB8OO0+umqQ7atTyylXa/Q3lWKtqpMe2hnyAyCzfntSi6icHZkSMRRKXCSz8RU4y6hu78arADHQBvN4tPJilaTS4Jru/OgW81Gq0=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Returning tasks are fine, as long as you cover the edge cases, like if your synchronous code throws exceptions or frees resources: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2016/12/eliding-async-await.html \"http://blog.stephencleary.com/2016/12/eliding-async-await.html\")\r\n\r\nThe caller does not know nor care where the returned task comes from. The async keyword is an implementation detail.\r\n\r\nThere wouldn't be an advantage to wrapping the PLINQ code in a task. You're probably best keeping the code as is. The *client* code that calls into the WCF service can be asynchronous, though (and likely should be).","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"3ac91931-6c74-31fc-9330-d417e9f375dc","date":"2018-02-05T18:53:12Z","timestamp":1517856792,"authorUserId":"disqus:stephen_cleary"},{"_id":"c382ca52-927c-3966-918b-c742231baa6c","authorName":"DickP","authorEmailEncrypted":"rwVcCjDJkbEVIlL3ZiOzrx4rJFe5Nmy5Z6Y1zBfxM1MjjI8JFNaIuLBgoGW77pas24ghex8xWGbJSSFJm+owL77bjMhXeiCoFYQXm9pLr6IQNBaiYiofe+8bFvqt54yUeNsv0lofmcl8bsV8cf/yTfgo5Yq6Hv//Tyo0/K+q9sV1bwSnYRQYKfac4X0B9d7mY6oW7065owV0m7Frny/7JCmcSa+jib32r3DAnUuAO+3kT6YVqjktjrwbe/XZPKuUb82ZlI+VsPskqzJJ4KECJwtElssxAxENGltsO174TyUo59JuSpfdYeB2E8kUHMZlqe6eC9Mnj9Yls5KdvE9GM5JYf9HZz6WChf6KUMoPAqMLqpD9/9Qf50ws2DXIzsuxVljFB6JTKpXSeKY+NbJJfkq0o57eEgllRh16MAagpAkhvB8PH4U+hRX7zOk10AKNiJeEiHI/2mTLjIP5RYrp7b8zwqEcBVcDuMeL4FGDQMHzDpuu92VGn7HfLe3WLFQ0qKHoOaIH8mRfxNU55Kz+vFopisvl3qdjNDl5oEa0l/G5wetvspU0oGmtjlWu5eYzkvyCDZ4aeXE4sRU0l62WeFo3MbfvGS5GS4yl/cKsLEsb7DgiaerfQUYDxZ/gfmlmggYZTgKHyMSofdiiklUPnxo9MazQTwcoR3L4wdlmBI4=","authorEmailMD5":"33a553da13151bffb2e5e33efbe2548c","message":"muchas gracias! To be clear I was asking from the point of view of efficiency at the service end where the immediate caller is the WCF DispatchRuntime on the server rather than the remote client. I conclude there is no reason to treat to the top level service class operations any differently from any other action class: only await Tasks when there is continuation code or error handling.   \r\nYour blogs are so helpful. Thank-you very much.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"e39931e7-25a5-37dc-94c7-8c92ebb56aaa","date":"2018-02-06T15:53:16Z","timestamp":1517932396,"authorUserId":"disqus:disqus_MYL9vvFXQc"},{"_id":"dc66635a-a456-3148-9b8f-4211c5d234cd","authorName":"Stephen Cleary","authorEmailEncrypted":"lrxYLuS/JIbaWZwolxLQtNJCg9pN1zSZSdoSShYbnWqaSH0qoD7NtdnQWXa3vWVCeaQi90Iqu7RDUDW65youPwIplN1zv2YxTNt1Mx1IjqGk6AGJXEjbSOYpZyxOqnQMJxKirhqSRvEffzSwAWFvhAO4LiBNS4VDt4Deu+ASrkg7FuzqBct1io520W6icM+QX9ckVFhXzZzj8jqUIYKVWzlJ+sPIHB0HjVkUvgcXc5Pxe6MiQPxyNBjiFTIBKMcoZNfibIf17A51SZYb6am14i91gPJp4WuUC4cAS61Z0kbx+4eWCG/s+vd2uMjTwiwE2sBy5ChpVEXidOiNl1/n8RQ2brjNym2em9iDgfQg9FujQxKdEC67Hv2MVpJmKqjlo4f9AU8eb8x2A1CY9hP4MJJW8+pfGv5w+ljExqh7cysxjLU94qLE0WctOuYYgwHf+2U7iylbBH5yyCOSYuxRziG+WIeVwK/3lHP+vYC2io1YaItQX1A73d9A8HEqVZSPAoq1D7A9Bo4igPjkOEMcq2PFpOSiG/DQ6J61nkR+qdUZW/kkaieD6ZfdKEStla9lv8HD2sNo3McC26SyF8cJbO59VoT7Z0OOKhTalqpJjiGwH0ZAdE1onoBDV3ZqVwvYrAJz6ZGUfPNAqkcq2VLbooTCX3eiLqz5paCyl8GzO/o=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"In general, I recommend awaiting tasks (or someway of observing their results). It permits your calling code to know when the operation completes, and (more importantly) whether there was an error.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"c382ca52-927c-3966-918b-c742231baa6c","date":"2018-02-07T01:43:42Z","timestamp":1517967822,"authorUserId":"disqus:stephen_cleary"},{"_id":"a64ec8ef-2f2d-32ee-b7ba-fe3991d8fd7d","authorName":"Rahul Agarawal","authorEmailEncrypted":"X0blwIzSnBCWb53kgA3aWh5QmRJxp9/IeyDP1AKwCkXebB6krvShGDx6eyPuO4VmQwjj3N/75l+eBlcfIW1p6i1flbFkRQtW9R/KtKJqeN5KYc+fABuP5+fCTCrsddFU1blcpByNkaalBHZgV5SwahgAsgpcatPV1Q6IDGHkedI4YoGa1hg7UnrKpPfjBc5pKqOxOTXKmKvFZ4app6VZN/u53Klp67+e7ubwQsvlAFnEWPdeD5sjkElTYFBtlMo+wlMbb05r4P6EfeGaXKylM/kWEVmWXVgjZNyOIY9OHN324i2FDDAIpYi8pTQjvOrxgcpw/PjVQQMgybcRFWNBvLsEBxLizoAAeQhPhyeqza0LZ0F2m36qAkiUvve7yd+SDFzaUIreADxdYEFbAh7+Y0Bax/PSO9ZSBWUMiWgKC2wUVM2qsMU/uMUPfhGXjyEYEYM3Mn9J+tKg+YBtuj8coOkBZzNWPvKfv2icE42W2zQexJDuPhwc0xvAlV5c/hogoi/nMcYE6GQzkNmbDZVOdTRwiwvS14OhdA5yc8SIrj7Nyu+OwS20LiL380gmjhK70W1Jao3xvAEbukke0bFb/nxwJRO4Hs0Ucme3Z1BCsBvZ5xtbzQhfQ2CkrYCBOB3o3AB/jqSY53AlTs+2PXC35qCQhPwPpttcdiWyrSJ+2C0=","authorEmailMD5":"69741a9fe307a187f4510492b65943b4","message":"hi Stephen. Thanks for great post !!\r\n\r\nWith in a same process I can understand how async/await works - like await on task will free up thread and once await on that task is completed, some thread from thread pool will be assigned to continue execution of program following await statement.\r\n\r\nHowever how all this play across boundaries am not able to visualize. For example If wcf service contract says Task<person> GetPerson(int id) - once server side operation of fetching person record is done successfully , does WCF run time returns Task<person> object in SOAP body (with IsCompleted = true) ?\r\n\r\nIf yes, client side run time upon receiving task<person> as completed allocates thread to continue client side execution following await statement ?\r\n\r\nOr WCF run time just returns Person object in SOAP response packet ?\r\n\r\nJust a little background : I have been using shared service contracts and custom WCF client channel using channel manager for communication vs auto generated proxy. Since certain DB related I/O operations on server were time consuming, I made them async and updated my shared service contract from Person to Task<person>.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-02-19T14:37:51Z","timestamp":1519051071,"authorUserId":"disqus:rahulagarawal"},{"_id":"c1e52544-b7b8-3ddb-b084-f07a42fa09d9","authorName":"Stephen Cleary","authorEmailEncrypted":"vCqyaxL77FmHptjPrRDYJfCnvAgac4LbEee6ZtxTrQ/hZCZIwgOZEDcLKlhr46JFYRsCg+TZQkSIgLszIJ90dz0SnCeSQ/iaFVcc4TAM6CFjkynCSEMIBUNSfWbWNaZGKb0uoBleaRuozAmhCUI4CeXoQstHfVheGQxuSNk/aaf04U64AG1qkVDXSnEkzPM4PVOO3BRO2TXxqpv1ZkJ4J5qtiPmkG5pThlyejW6mfUOtc7NWNnC9WY2IrwNS+89hjTMxeBgzPL9Gf4sREZp0P4yHivomQ8LQTKClPVWSsEnTYdknN/bxLz2WUM71Zjvs5yRQNYHU6eYkvuLF7CVmzF3BjSamdxs3RTehQhLK6EAqdrNqw2yoNfngwjfkfUL7mdzPs7CVDedCQjclPxVtlJkTFRK8pvdMmycKRqxDnt6MTHL8eg5CFJxJv+6my195akyLW9SELiVxK8GafC8p16WSxFcIVSxgQOjDM2mabvHuExvLs7l3y/vtOSRJ0DoD4i02mDRQ/FtcXM5b9gkt9ZRizDNj1N6hgsjR+1c5Wcf0jO9hbI4gPnqF16GuqxWX4oPwPIObYP0nezPWrpR+bvYpYKbi7LW7oEQY55/EavShsX1Blr2drKMK9unoR9flYXPmZ5tibZBT+c7rzwiVqEZT9YaYnZPCWILfnexeXSM=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Each process is completely isolated.\r\n\r\nOn the server side, whether it is synchronous or asynchronous doesn't change the network data at all. It's purely an implementation detail. In your example, a Person will be sent, not a Task<person>.\r\n\r\nYou can verify this by not using the service contract on the client side. If you generate your proxy instead of using the service contract, you'll get methods that return both Person and Task<person>, and this is true whether your server function returns Person or Task<person>. This is one reason I'm not wild about the way WCF reuses service contract interfaces: it exposes this implementation detail.","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"a64ec8ef-2f2d-32ee-b7ba-fe3991d8fd7d","date":"2018-02-21T13:34:08Z","timestamp":1519220048,"authorUserId":"disqus:stephen_cleary"}]