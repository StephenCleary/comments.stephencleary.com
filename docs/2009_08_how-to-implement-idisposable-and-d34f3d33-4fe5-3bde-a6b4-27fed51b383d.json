[{"_id":"3dfa5c3d-216e-35a7-affb-efca9bcd9cb3","authorName":"Anonymous","authorEmailEncrypted":"PcL6lx+584NGwrKyWJDsDYTgHQrX5rSRPdW0jlwgo/SnfTS8WNAlB9AdzrhCPkeA68z0425vdr/2IuCQ/NXnxdrngpPZnEMRA2WYLvjOUbWcW2VIqkUMjcItsrlfoXilARbyIXez3BkYcS8Trav2AM4+cNge0iiYet1ErmldUCguaH9s98UX+8BCDPY7b2u/mYRNI1bMTOrFyF9pTZ1URvwbycj+3SHSTQToDgPOMZ4CiFezoYLz5PRekP4b4gHoBpvYEKiT6zBK0xWf4jdOK60M7SofXXLLvj4cm/5aOIXx6LTaGtKu0oIfe8E9kFpaWJdgKxoHFJHRC2Az4sj15o8pGXg1KRTLfQdn+Bg5oPkulG6r6nK1nJznqW8Uxslcf9Of+oBWxZyu6upAnkRLgeW0WDRS2Wu6PbXhrSlpjoqrJLEvT6ysXVoGFWHQYIpcda0pEoM086+37hQrYSvth1nkfb0TD7kg4lw+joQN8XHHXwpbR/kMn4P+azUjDyECUusFEN3wYu3ZOh0rDq2brOXW46BsYGplaEL3qzwbUAjXHxcAmYchgLsqJ5aCLeULPR5rQIxU7X8x3CLjG0mgwGd+9XEHkYlQW/3/UzLDrT7MwoR2HntMiOpu8c/svzVvOorITMudpyBeLl3K7lvl2gtd2iSKxTRdE9E7mQwRWEc=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"Some of the most solid advice I've ever seen on IDisposable. I wish all the other bloggers stopped advertising the \"official\" pattern so much. It's overly complicated to cater for use cases that are a bad idea in the first place.  \r\n\r\nThanks for your insightful observations and the best article on the topic ever - [http://www.codeproject.com/...](http://www.codeproject.com/KB/dotnet/idisposable.aspx \"http://www.codeproject.com/KB/dotnet/idisposable.aspx\") :)","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2010-05-04T20:01:18Z","timestamp":1273003278,"authorUserId":""},{"_id":"5e855403-d68c-3898-8ae3-c3a350cf39a3","authorName":"Anonymous","authorEmailEncrypted":"SroYPKYocF0G20foFHDN4yA2mJuZPna+C8IPZCDW52mNNXVAf7gXQNuweWvIjZPISx5UvUD4sgfB0RsyoaUZS1RgxdktZcW6LtVMe8qxsJP7i++CX30r74u4bwNzcgr3hxTGzXaYv6gdptl+4TeoUtDItmr1QTQNKO4/kmnpM6sQgnpVYsTMeFeXVLyU+WpUgG6qeaq10hfywsCqrsGExQbwjBELm8tewfvWSdpWJ/bBddubJlFld4XoYps92rwCpYFBX98sW7mqCXR6KZWcxkAsekxY3+W8aFK3i2A3GemBx4Jm33pKJeKqWZLpucGOINDdw6NvS5VXsLsJHMejS9sHMQvSYwsGTlywYMhnm7D6VPt16fUZr2/LLBTnKX0ICh/6GTTuCnZVY67z6g/k8M5HKScYWuL9UAo5AmgVxcfwXEA1ntMgc6tklNvd1pwYRW2wR67VASpBI59SuUQtOAIsBHB4j50EBTkXwmStztldQMUqPmXPkRjQy6HCtqo8MJZIm8vRFROP3KLwAXa6l/+QIkhQcCM3iqqzxYE0A6td1OBd0rBqDFYwmmx2zPuMfP2riXRoh3gereyS61R1AB/5Xu5AuzJS5np800bed+2ZBurRA2q8jdIOuPmVUY1zkGAB50gH82c56z1EmqiUV0grVCh/wjAhcjIwSloyDHA=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"why don't rumble to Mircosoft that they are wrong in thier Dispose pattern? :)","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2010-07-07T13:57:01Z","timestamp":1278511021,"authorUserId":""},{"_id":"7c5af0cc-22de-3f17-92ce-5b0abc4f78dd","authorName":"Anonymous","authorEmailEncrypted":"ZPBKr3q5oLHp9X16X9rMlbYniu0MMnhY5CYUlhf+FAOxhh8IiGySNMKqzhBbnUlKj/L1daaci9fGxFzMFMz4iewJPPRmqABK9xEnlhxHeWobXZBTvFDK3zMBXqRSb1eYjOzRN6GiVewLDE3TIN0+jSzkL/ZqA0iaaYt6C/VUjzRjTFYDai/tnP/1qlv0S+pl8VLX4tdbhnAnOO4PbZpEB6FGx66M2BY/3nsL27wlddaPibk6PY9nN4Sv3VaVZ6O/EwEvmW0nDzvHG2nznQn+GOpBneM/70OOSHlEmyC7sCAWaIk/FzyRgmxwbVzFWOH17EVHDEulKLt6jEmNKnT1R9vSZe4K6Oa6NMnax72AKTWzKxp2L7Qc/ZMOMR5N4Poh1lHXrXvceu/ngICY12nKjZiECZev29E+mvbwvqi7tDaSyn6tBVak4UZqrn+p9Ua5ynOZudWxWnys5CnRcPnT20DZfKdZmXEGh4q6q074VR8KzUaizylINvN26aItpo7VWJAempcHSKkeHCOhOiedE6jJGP3BeHLKhXtsWwMbzWvro9t2NwgdNLC0zYR2ahaUhnlig2iLp/C5P96ETIhhwKZfbF7OFcJKiDk2Zg9MEfCcoqsYFTUcR4otTBs1BWchq6tfovmM1zX0/sm1TcG0A3Xj0EMIc4n+kbTwOLDZsSU=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"Do you have any thoughts on whether it would be ok/recommended to wrap the Dispose code in try-catch:  \r\n\r\npublic void Dispose() {  \r\n try {  \r\n managedResource.Dispose();  \r\n }  \r\n catch { }  \r\n}","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2011-03-02T17:31:49Z","timestamp":1299087109,"authorUserId":""},{"_id":"5d557c0e-b268-3b7c-8547-1f769f73693a","authorName":"Anonymous","authorEmailEncrypted":"hvBwWdLvJKt0rPNNYIjeUBbXqQ4cIklnj45Mo7NLrAvFwWv2neY2jPipziwyU96qFE4RWv6xITcK/uMvxwLueb2j8OEDbl9w9cmkheUJ7vlGLK12V/rMzS9uxEgzDCYlm9JL+3E35lwyRrsJJEyOiC5Vikqjn38MNq5F30xkVMqkaYfIOMarF0KH55H81+fHF959+Kw1b4llaSP+/nPzwMF8VTBJlcgqI5rCbNmM9NlFy42ubREs4DfoxGzMqrr5UcSU7D/Yw7xEZ/vOx63bBIjqsDbQPGDtu7RTKg+H80KYpZvUSEEHMGYXJuRs5Iu2loBNwBAX724a0lgEkUS77scoszeUBNd9uyhdgCFvhKpadaMk6AxMYVxp7iqOyOHjca3DJzPhasZcK8SqAegGvTSb8O3AuWYpMvyaKlTsiWIaEWGBZI4xJuFN8kqK9s6QOyjmMU+nSOLNPKz0Eqnd7710mc4ZQui5SkmLRV1hYm+yeSfBWjjEXIvKkBxSP0NE5VtZl5rnqYprc7u9SdLilrw1JGY4bRBwnD3YwjL9jFxam3mU9KDa0MdeDjkd7TXtKeVv7MxXbuu86v2WPxKsKRDxhzs7hIXsmmcCqb7xrOgb/qI3vGGUSP/VzewDT9nKAYp7juScMCDep8DFq+JU+H4stUVUjt9e7FZ3iVYBfLQ=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"catch { } is called \"swallowing exceptions\". It is almost always, by the definition of exceptions, the wrong thing to do. If you catch an exception, it should be handled. The only case where it shouldn't is a case where exceptions can be thrown for things that aren't actually broken. (Thread.Sleep, for example, can throw a ThreadInterruptedException if someone calls thatThread.Interrupt(). But nothing's actually \"wrong\".) However, cases like that are not that common, and they're usually already handled by the code that needs to handle them. All you're really doing by swallowing exceptions is sweeping errors under the rug and making them that much harder to diagnose and fix.","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2011-09-20T16:16:17Z","timestamp":1316535377,"authorUserId":""},{"_id":"d72a5cd3-8714-363b-9e08-174b1f1e4ef3","authorName":"Anonymous","authorEmailEncrypted":"hO6KSA6n5dUHnIGEMxbm/jm85zSBy0TZf/5vJDutrG20rHhGsuPpMZmmPx+bIlJnPUF7sAsC02S8nGfl+uWRoAZG4gCvYYWRR4pOdHPxAOXH5yqsAUivoU3Z7GMRovhg1BxaaXMkH0weDc1e/xCigaKLmIXJw2aHwGW491FEuNMxK2qgLjR3ZR7MeqiTRjaJIQmgH5EmPFA1IyYw0YnyLYV3tOnGpcwMveBPpLwZPQDrUbW0L1PwbYrsSfbqdf2N9POVMIrgcAhRSdBmJh2uX5bY228G8tiEF0IJj3Fqliho/D/RGDOORuWy0MM2vF+bnpHtKL87xRFmu7ka0XZDnw13NYC1f5wntvIhdcuNWbieFVL2StdDZUMKj0S3/QZFODI8ux5w5po7SUNhyHx9wCSvc6CmDiv0Xw3M+px1QaA1OpIDdx3XoyEAV/2VWIiTIYmJ8S1l8NMQnk1jVAJa8HBkLuSg87HrCp7RbQ6aV3Mqt4qj2eE8/LaGmjOrCW78XbiSRw157BC6MOmMDDrbdDw+cnAo+rGaqf0OJPc55k2Upmrbik5M7sYb/0gpd+MbZQnV+/hQ+TeE50Amvjzb9G4BXed3MECM1oXuDcJ79QvAEoSXXOgP/CHXvOf8Th89fyRkZUMxAVUKhlsJ+vOwu8s61dS6V2qTCPToMuWdb+k=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"What if it's a COM object with a .close method - replace CloseHandle with a simple com_object.close and then Marshal.ReleaseComObject(com_object)?","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2011-10-17T08:41:41Z","timestamp":1318840901,"authorUserId":""},{"_id":"4a83fecc-bc27-3149-80df-7984b11fb80d","authorName":"Stephen Cleary","authorEmailEncrypted":"GhMi8ugll4Nmh+yx7QKOJ604YNwQ5M26nbhsfIzCMbq2OppyZEVsfY5sLTOD3MYEVTvRS/M9lUBhwMPt8VKk7Qxwx2e5Zz+oKRwsvkGx9MmBgVIx2nqUucOe+iOKL2bgJJJSYr3yV0M8MwRpkP1xvpyEUOA5s+h3U0zoGcz3dKkbzgm+ZnUK4ZgdpkQsAhipYEHO8McLc9JGxvDCDXKVQaSwLLuo7bsHy70FchazXYuBbrlZTpMFRxPtAbmRk0Hm8zvf8j+M1HXTa4xBqlUkDGUS0PCUyuhqg0sdq5AEnvbmYPI3mTZX6qrHkQVm4uyPdoS1/+0TvdF/syVmH8fP+7ImlI5Yv2Xl/nWGgHGTkP/Dr/BfISS+pBj9JQC4aO4eBQHG4D4qO5ZkoU06WcB4GmKPd+v/Rji7U7U1oqYCvOR4zom0GSLaZKwb+Ggo7LqifneOSgyNgvqjvFnt8vTSOnCG8S0cPCpxSs1f4u06eey4FZm1mznNLuoSmf/5TFZYEvE0qaSMvcaOtlHZoB7wZSlbbxVm9yvoQthFWsrLj5bnf9sV2c9E/a8Zjfu+CQmrngw8VQQkKy4D9ZoIReXkOOIn+SHu/ESXcnXq6aNvi3HTh0j5V8VXIPWfBwoI3f7lH2BeISYqCDo64Q2eWE63/UeAa+TEyV7Ewzysl18CUfY=","authorEmailMD5":"36e44ea0274d8207eb632c566e60ecc7","message":"I have very little COM interop experience, but I believe this is correct:  \r\n\r\nA \"Close\" method on a COM object is an actual method, not a generic resource cleanup method (i.e., it actually performs an action; one that you don't necessarily want done in every use case). ReleaseComObject can be called from Dispose if your COM object is owned by that object.  \r\n\r\nCOM objects are considered managed resources (since the GC will deref them eventually).  \r\n\r\nI'm basing my assumptions on CBrumme's blog post, which may help you in your design: [http://blogs.msdn.com/b/cbr...](http://blogs.msdn.com/b/cbrumme/archive/2003/04/16/51355.aspx \"http://blogs.msdn.com/b/cbrumme/archive/2003/04/16/51355.aspx\")","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2011-10-18T00:30:19Z","timestamp":1318897819,"authorUserId":""},{"_id":"00e26f04-76f1-323c-bf10-f57859c83a3e","authorName":"Soumyadip","authorEmailEncrypted":"NRl9LKrf2s2BoQLRwpcHC+g3PRsHtkH/iLkIyBZrmJcdHnsv6mhmY840wiwI0Zooi0vDXTbnsdTOl3ORtTZtdwWq1AKr0GprJnODSI4Yr4yMr90k3gUT623pHWyA3MdGNMKZRDPcthHZJMPIBjOlRhObBOLQZ3r0fnu6gH9lBPbnPJuLQ8XZKJGpudCnVHOM6dEGQxcKOjHCNrHDKaBgDzNTykX56UBU7GZBa45A4tginW1yepvbz8K6/oXa4Ba8J7iv53VZWVPP5MjrCrp25ggSmWpJB1O2RQs6gepKw+FN48GXQ0E2CWxizqddt1KERCXhSmlIZhRyjgxmxBDucUpDI11eA5TnTKKPktNzE3yrutD4qsqeRbTSj0tVuE4vlkZgfPc8Dr1TIy2e4vQfCBV4N9AxRogtHIjtSEoBS+KFduS6JKkf2yCU0p83zWd3rmFeOju6e+f1wNi5f7AFgUk01yVJMHcX8k8LzRyrPd9GhC8uCAxY4XHMOrILVHkbgLxcMhqKAVbfsGBx4r8RH8oReliWV/oRaDIHvdLb5ZsMC3EtF9YUUml6hqjNjVmi6ThUHHlIPvkpJVG4VT+yM/KEUzYJ/KVxtwpGR7YmbNmmhG6IP1ZY70QbjPyyGotuIB+BgbPH87K+5QOTYOTNGwG5P+iNDndKqZX8BTLzync=","authorEmailMD5":"1536936f03a6b30cf33ab4ca2604aa09","message":"Hi Stephen, Could you please write a post , how to implement IDisposable for structure?  \r\nThanks :)","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2014-06-17T08:22:05Z","timestamp":1402993325,"authorUserId":""},{"_id":"1700ae09-6d0f-3b38-ad02-ec1d011f43bf","authorName":"Stephen Cleary","authorEmailEncrypted":"PFQ4h+b6DLgvbAZ3+4un/bLxX03q1cMTRzVXcOHu8kBqQkrINq5+JWNLlTbBJk9ceqkpN+ZK18GxoLeGMeul4fxnSLT1kufTsij0JqmNNbR9dXaon+a/hFoI6l/Pbex5SbIADh/41dRjdJ1Tkp87PGVKkmt1Zjv9/qsAagYmr6L36v7EL35GccbQ5FsQ2YFw15dpVbDZ5DV3ETaquBug09awwmn0SXVsAOO2rB3igi5c0B5TDKHjleI7PhcEDqr5NotbRoxOFDkSOrQ587wB7Kcgsnr/sX/hctfKQoYr0q5somiEdeR2dArPe17PA216GeLaUrOCV/JP9jcG4XW1JMeAPhd7z1kJWvEVxNTII3qJAOiNTa9eF5AfhkRwKTWjv1l0gs2cewQ7j1P0SvwU+sgJAi5ZBmC21NgxVz4pI785jC6z+/vlmj700U69yLqYjORd+e1BTNG6Yvb0gpSMnoXubnI5xAUlbLeVfRa1oT4FIkvHn+muXr6IAEl8CGGWPEx9zKAPikOvIYNt0eGZvjhq6OxzKqLOvRaHHJ8T9TlvBKslAJZ2hes8r7yyuWbyUgbbxTjFZIcfnIMZXXo6vdYMhBQt24nrp6136gZNYHVRDv2Rr1GocSQ0yEdJEnzxaFKNyY5Q11hmoJ6kCy5vv3pEW+dGxdHPRtT9fY031UY=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"I would recommend not implementing IDisposable on a structure. If you did decide to do that, you would only dispose managed resources (i.e., follow Rule 2).","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"00e26f04-76f1-323c-bf10-f57859c83a3e","date":"2014-06-17T14:16:54Z","timestamp":1403014614,"authorUserId":"disqus:stephen_cleary"},{"_id":"8500c14e-1853-3795-b2da-02362700a4ae","authorName":"Jens Melgaard","authorEmailEncrypted":"LzRM4etds5JdlNO+sreBTmCF+rsIufhm/B4MrOyKEN74zfw+MXzJseNx+rs5DWTt5M2mok1wo2s2rdZuY0avx/8+/Jt1dBmxd6++my+adEHGadGD9fpLs6ZiF2CAwuPW4MKJtLUo7qoU6ijdGI/ZID0QiSrJIZt44HNrhTZNcdgHTLX3wgszvnS/L6uCnlf3Rt93pZ4rXwiZ91MdKddv/RATHKhNdQkYG2AKj6Q8RYIFamr8XYdveQP6aQpjsdtYotH9TMAPEmHaWEewltAy5os/i1bxknkm3ozjpf/BqwtBlHg1HN+1meNvVKbciyoWmsVuRf70zbCAM2weNg4BLgYiW78OmOwbZ2ZhzMM9Xr1tfp3xFxVqMTC+eafgcKzoh2ywNnd/KVpREAqIEZ3lFELdtNLxIVYJP6ukGpMu2J1iE5DOI9/TYPo8W7tHnrg5j7LRaH5vpqk60jwFcRZ1aFw1t6mNb0wXe7z9nRcoCQiGj/Xo06TuQC7plfkDzuR/aZj3FlCt9DzvKy23sJ8K2GtD/Je8Kz8Z/JxJRPnuAW3fBkJhE+ix84+JbtnSv/RLCnxfdUJ4FifkV/gNF6q8O1LHP7TeNb7UwYIEZTaqpvgLS1XAPV9sUhkzSZ80XuLRrj8F6gIxi1qY9i4hWNfIiiFrU2gchgLbI3hiwWq8uRE=","authorEmailMD5":"73444d6da4e960f1f7d41d3201b12d2c","message":"AFAIK IDisposeable is nothing more than an Interface that allows a language construct (the using statement) replacing:\r\n\r\nvar something = GetSomething();  \r\ntry {  \r\n something.DoIt();  \r\n AddSomeMoreCode();  \r\n} finally {  \r\n something.Done();  \r\n}\r\n\r\nWith:\r\n\r\nusing(var something = GetSomething()) {  \r\n something.DoIt();  \r\n AddSomeMoreCode();  \r\n} //And Done is implemented as Dispose instead.\r\n\r\n(And to be fair, that is a far cleaner syntax)\r\n\r\nSeeing it in that light I would argue that there is no problems with IDisposeable in it self, and there has never been.\r\n\r\nThe truth is that any single one of the problems mentioned would exist regardless of IDisposable. So it's hardly IDisposable's fault... If there is anything wrong with IDisposeable, it's what is written about it and tough about it... (This even comes from Microsoft them self who are more focused on what they wanted with the interface rather than what they managed to be capable of)... which overall has makes it all a huge mess.\r\n\r\nBut considering that the using statement can be useful in other scenarios as well. Then I wouldn't cling to strongly to these rules.\r\n\r\nOne could argue that it would be desired to unlock using for other interfaces, possibly user defined interfaces, but that is another talk.","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2016-12-05T10:56:08Z","timestamp":1480935368,"authorUserId":"disqus:jens_melgaard"},{"_id":"e8d2ed8a-b805-3b4f-89e5-172da5af310b","authorName":"Stephen Cleary","authorEmailEncrypted":"u9riFTJfWpm+vwRne1ac/W9KHsDmxgFdjPV+B+HT5/z4BBlPPoanUd/h4eQNu+SR3EmYFyyZ6/uAUbQNYUilpa75n3FPq331qmKJHtbz5FsIF5oQJR7glHKReOAErbE8/6JmA2Wi459xXANaU5hYjaf5bWQUhkKuABjIR0D+NuVBtGUkcC5KxaOTjKXTvql/saIhoS4s8P0uPylF2rwZJtow+Xt5uqZvWf6RklSI12nbkR2QK46CBdeRIDuIpVHIb2XK8DBlSfjuunOEoTejlQf1Pmh7krCNhmQLmjA/C3ipTOJo8OZEGGcL9aAFKenfz62XFg0KB1Zjxtrxf7vfRFriLrPy0hzBITXwYQdy7GOUcnBG5KezH/FOfDqqcfK6kKcWHpnAWolbTR9Zc2oYKFFYxu5xLKJsx+x4A5R9ujlWtznivgr57APFrmz/fBOUkkiRf/fv+Bb6HrvdP+JH9lKmFkGIWgdouxEyq+0aVMDtRFxxujsDQYWUHTRRjIkS92HeZblXmPH8t3YbUZA5L5Pk5vOocArFRBwtjH6LyNooFtR3OcWUzgkhbNMudXrzTryVWVUmLqOoTnjuEnrQYsSYqc6KCSv+pLjxtrhJzdBOq51hhysqk+Z0dGfP02/CJza87eX6LcULBSqDLX5KxT2XDqluDXfS93s0KHaf+jE=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"It depends on your background. For example, with my background in C++, I see one major problem with the whole disposable system: it puts the burden on the client to dispose of the resource. C++ destructors do not; they are always called automatically when the object goes out of scope (RAII).\r\n\r\nI have nothing against using IDisposable for \"cleanup\" tasks - e.g., I use IDisposable to unlock async-compatible locks; this series is just looking at IDisposable with its original purpose in mind: disposing allocated resources.","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"8500c14e-1853-3795-b2da-02362700a4ae","date":"2016-12-05T14:20:46Z","timestamp":1480947646,"authorUserId":"disqus:stephen_cleary"},{"_id":"c0e1c78e-05a4-3e8a-9bb1-86c1695d688e","authorName":"pwee167","authorEmailEncrypted":"YFOJUnQi689sKFhbcWIxGIR4pIlKipzCgnVRs1J2iytKG2qJGg1TwHMPmqfGbuZYmfMVR5c3KCKGMZzu0Zd9eOq+ntkhmXQxtNOCcdXsEQB+7nL0NKFuusJDIOy2TImBofFUecTvCF9/7ETRw3IXYFG7wdQ7Wz6j3OFODfEFSUEMxMJ5Rl1F1dKTtVWkO1ODnLR+6SxH4uZNyvpYG/xX0Pllf6aqM0QQNE+IR/jdx6HahOsgHtqymipIW8jUG00osQlqbVKZIkYr7ZFnQzhphwfS+B/TF1iv47z3ulZVVo02A9UKkZhcDGKFT1ag52N4RhPp/XOfo+DVbN19kJnSMK49ENWeUb2L1WUwjTlAm7XbA/fd/dEUSQA/8u4wJAIoXhd1l5mjQRtI6OBHhGxGEk7POprItkr1Q9vBHzfV+89Dl3B7oU6vDKfZtJBYa0xaVWyMe+awxtzqo1ysuwmjvBRK7gxNlS3sbgcDeu/pF8lp7eRIlr26k71dCAGuzP1EqZpcWx6NKoy85/W+O2ZvO3UwHR+eLfmNFQbbKj7MvvOzQrqy/MueAC6w76FIhajB0ERGTUU2t0Dbdn139UdYSmWfA8HCpUAE8bwSz4wOpbMqLdyKgYr8lyxYI3IYp92BjUP8oz8mYZHFZaTiAUGoO190vhEn7AO9EqaU4eUPO9A=","authorEmailMD5":"1d071a2559b38acd23991885bfecda38","message":"@stephen_cleary:disqus Great articles once again.\r\n\r\nQuestion: How does the GC treat classes implemented as IDisposable? Specifically, if the class doesn't own unmanaged resources or managed (IDisposable) resources, yet it was implemented as IDisposable?\r\n\r\nDo these classes automatically get placed in the finalizer queue waiting for the finalizer to get around to it?","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"","date":"2018-02-10T16:44:23Z","timestamp":1518281063,"authorUserId":"disqus:pwee167"},{"_id":"0a9edbe5-bccc-3ea3-88db-98f7d69ea105","authorName":"Stephen Cleary","authorEmailEncrypted":"eeA0UCRY+SKrP7dikCcDe8elQrf7VznTcWfQJpQhg5Bsh9nOx8+GmL3HEm12u93/6xYVtUvDiVh0G71r6pOG/HOC/iFUR8FY680mlGD22H6KcXt8yeFMfTMByZtll1CkLsL0QLpV6c5kcBcJlPr7CCVXyGsezvTICH3p48bbJgmGPXXoKilFUmryMOP1kvbaZLSiW6jctVcnk8F7wawaxR4ms2piIcBYRr6kWMR/ipxKMqMFM/up7fSRDS5rT6o+08ZSZDwN90zn3MNnAiLz4Wn3Pcub1BGA3SoZiV4X7lLTPOBCqIdAbikfnMdeeBCB3K9GDv07t2fU/eNAuAIhg9bkSGYnuyOJ4MMOpr8Rb7diLNxdmjt6vPswqkqbqty3Oki9M9lIJrYBrNq6ENctjpDW4s4XVy8VkE76xXGnrQ8nuhqzFfwg4GgHWggzF7xGq/qFMgHl97eoMuOAGJ0nbg74AQZGk4f80UWCSIizyIr4wJ5YCQcputCfycoX9SK7X2ApO++ndTlBSQ3jFSMw6DBERPQmZuGbhKt2EZdqn42b1DbgRMgFGtDY4+s9VCXeFbRZDUx2bRFUBcQuNCHes+ThwWh+A7mNk33QNt/8sXUkpT8zIMknUaZsT0XkuJKnKb55Cj+/fakGrqa+puf/t9Bh8BxY4/977qbMvtJqUmg=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"The GC doesn't treat IDisposable types in any special way at all.\r\n\r\nTypes with finalizers get put on the finalizer queue. If a type implements IDisposable (and does not have a finalizer), then it does not get put on the finalizer queue.","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"c0e1c78e-05a4-3e8a-9bb1-86c1695d688e","date":"2018-02-12T03:21:34Z","timestamp":1518405694,"authorUserId":"disqus:stephen_cleary"}]