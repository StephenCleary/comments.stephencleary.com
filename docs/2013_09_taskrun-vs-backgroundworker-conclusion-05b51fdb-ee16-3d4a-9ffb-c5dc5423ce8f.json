[{"_id":"527c1ac6-7f94-3bfa-a800-5d47b39aba1c","authorName":"Stephen Cleary","authorEmailEncrypted":"t1jbvPKKer3hfpdR3zSkBsZydI48EX+HmEWDtnLm555sUw3njxcNuK40nk8lJzdYTULE05lXrvrfB+G6tKVANl4/t5rv3EqOovfLSzLwC3Wq4wzBZzg1l/PdBSYNNbXcooI02wNovDQioFsJPWSn1bBTzzICfZzl4NDGicu4MFw+9PkkaQWPoAUKlPXlloXdTsPiSpp9529XF1bqGvoS/MW9hD7v7bs9ejzZpwyx9tFvYcViu0bI/z3vsf18ykzWupaSHn+3n4Wyr5m/bL3WmKoO+FRPqjFlEy1lVUoS4qOL6XnOu9nMAAjMS/uDuGpkM4DYDRkttnoVF1Clf2caOFLX8+mivAiPfFhAKbOMZjco0U2XdDdQL1ZUZN9Snlm22TGEVaCIjYe07PrrxA/kl48kcTWom7x+y55IcufVXkoobj0Zzm305fndIgWEfCN90ZadBX6fMhbqJcegeYFTYSTBdTqAwb9xDz2Dw2btoqTed3gKK94lYuBP6N3KvtsYkBw0zRz/AFpY8baKCVmT/TczUl6F69hD9o1jUUEp0ApbKGoUqqotBo/xrRgVaVUSTeL7rDI4XHp9Ii8ozGxoqQ4ZHEqH9mwBTGGEXC43YEinSfsJ6tfZluiwwnnxkvwCK6qSVg3rjJNUTcJV6Q7eWJiyenePLia/9mNIo8eW9Qw=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Cancellation is cooperative. Your background worker must periodically check the cancellation token, e.g., by calling ThrowIfCancellationRequested.  \r\n\r\nThat's the only way to do it safely. If you need it to stop faster, then check the token more frequently.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2013-10-14T17:33:56Z","timestamp":1381772036,"authorUserId":""},{"_id":"6502678d-76a6-37c0-9f88-74461bfecd41","authorName":"DeanChang","authorEmailEncrypted":"","authorEmailMD5":"","message":"I'm a rookie of asynchronous thread programming. And I appreciate your blog that helps me a lot. Recently I got an issue , I assume that the background thread is running of long time work, HOW COULD I STOP THE THREAD IMMEDIATELY ? I tried to use backgroundworker & Task , when I triggered cancellation process,they still wait current work to be finished, after that they stop, couldn't I just force them to stop ? Is any way to solve this problem? Thanks!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2013-10-14T12:04:02Z","timestamp":1381752242,"authorUserId":""},{"_id":"bd8ae32e-7787-3bef-a982-ffdc79546336","authorName":"DeanChang","authorEmailEncrypted":"","authorEmailMD5":"","message":"This comment has been removed by the author.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2013-10-14T07:48:56Z","timestamp":1381736936,"authorUserId":""},{"_id":"1e3d9f94-704b-314f-9549-7b1b84b017f6","authorName":"Stephen Cleary","authorEmailEncrypted":"GZRnBs3wZVM3poEst7De/FcO+2OfC49KANDGj2Wa0iGx6GmlfLBStIz/GNXnAwWYohYX2V9wvMr9wNJgQ0wQ+xklh1JWgP8Mz+k9BvBVruGYHxIyqWZkS+dbhQ03sN6nLkHUIYc14JI47Yn4UcwW3P8yFUDnuQNN6HsMxSjIlzU7VtUOmopoSGF5lu2adeIW8wSfrXsTWfjt47mChgGF7o0LFqHQl0V9UWacBTIL0DLuw4v4AKb8m5eHEsPpUmMmlbobtSK1g4DZaUBvOmPipfiRcOZR4sBg2jtLLkSgDYXLxt5DqYC2E5GJfoNAMCA0baya5IeANxRdJLThOgDdqCQF2yOXeE32h6PMTzFxGpFHBoQJKy85/X70PaELBnzRtJODJLNMp22LO3IJFbNLWIbPbcmD3mHDWvJuFObPgrIZJUtfVKMBmtW6/XNKT5aeLA7JRtKxRA0GgYeKT4TNYNEo5VThjhkcZMkJdWrq3ufad9xURWJBf3JOQYfbGE7O09fz1lF1VFsQ9HpF92vk2njPDRt6XrF+LHPgwSwRCbkJE7Psbrvp9n+NvLyIQYQWag3k+mN09GcaK+QWKD5Pv52dp8dROBNYakQo4g53XAzDW6yMSRcxTkbat+VBLjTjHxbwEFp/poSnhu4vjsPfBydJmnP7I43XZdWwm1lO6o0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Thread.Abort is extremely dangerous and should not be used. It would be safer to wrap the call in another AppDomain or process and unload/terminate that.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2013-10-15T16:20:33Z","timestamp":1381854033,"authorUserId":""},{"_id":"7d2b4968-10f0-31de-8d72-0b046ab44a20","authorName":"DeanChang","authorEmailEncrypted":"","authorEmailMD5":"","message":"Thanks for replying. To check it more frequently is great way to do, but suppose that I call .dll or outside library( do a thing that cost very long time and I can't expect ) in DoWork of backgroundworker, in this situation it's useless to check token frequently, it still wait the job to be finish. I try to make my code as safe as possible, so even I got a solution from website( Thread.Abort ) , I still try to find a better way to deal with this problem. What could I do ? Thanks!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2013-10-15T06:06:37Z","timestamp":1381817197,"authorUserId":""},{"_id":"44278da7-46d9-3e2e-ba44-14753ea932e3","authorName":"DeanChang","authorEmailEncrypted":"","authorEmailMD5":"","message":"It helps me a lot! Thanks, Stephen.Look forward to your new post!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2013-10-16T04:52:43Z","timestamp":1381899163,"authorUserId":""},{"_id":"dd7ffd9f-5441-3e74-a14e-27a764ed62f8","authorName":"Philani","authorEmailEncrypted":"rktU0tfzfbs3D9kJ/cbrUzphgLp2bbrEhk2mQ4QrZTFGuiPL9Nu3/cOh9a8fnavLYstecL+NJtJn7PBKRJOasZC4XI2BISwKiDbnNm4jtcyrYbditCff1+IgJ7ikpZ0dXGnDG6yvnicu8CT3/tRzlt3t6obEP6GmZ9cRa8xGZGqrG/a7Ez9GudX59VDDSxdxcJoPro0bpEAByS1X3PKupRwvh8h+xbV7SZiy6Yvw14H7e1mW00HqLlA2r1mzuWxr161dBdO8w60t2DtgMZ+ww2D+JAXZTmCU+FMHF2WbqUynkq8nnUFJ3V1czWu9eR0cRV8YqXJe4h6i3kwhZCTO69k3br25m+goQRR3aM7plQemYJazffrODsNt1krBwOA/IVf3kiXCXHLxDWcf46UeZL4eveDwnrp9fxU/+wQAG9ypzEzg38TAznbkxoORgVbGlTEwqyIT40QHOtEY7NK1PxWUwq1mJ7v0i4gB5HYcBU46TELMNvqsR0FiVjIIZSJW+SRyPgoY0oP9ul3jE5jnH3Vfpz043+7dkP8L5mTsr3fdgqdoszS6/T/lC1GazymsMVzpR4NSy9jd7fPcKjd0hFyRaV0SbGV4u58fwRNHj6u650xMHaVfsK7fGpSXFlBwN2FQnsXh+7s/ngv+/JQ7coeIWF3LCmjFKB/dfBJ5CbU=","authorEmailMD5":"0fa214373c48a39e2ba0047b9739bb37","message":"Thanks, nice one.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2014-10-27T13:08:46Z","timestamp":1414415326,"authorUserId":""},{"_id":"d827a64c-2dce-3d51-8e9d-df0ded65c52d","authorName":"Simon","authorEmailEncrypted":"oLOOjIvtWr6vK0j8Zl2hSWYoFwQDioqBaKeBdOzs5nQtFtXwp7HqZR5m9qFyFEgxY7iKET24BwOLxelyt1HyvsV/wwDFZr3Xk2vUoPADDO/v4QImZm/ejNDqYZxhy94S/wdCiGs5f0wWcXNeJ1M7sAdvV3NVI2lwWu68mcP+IxBWHdvCXyX0tUtOR6ze1slWWcQXLELr9bXG7dckiK+9QyABlbtW7yN5k8MN2CNZ8h0/osgoFbtv3QF7aLIr/QKBYvrBZWzC+zUL35C7no+9ekV83mvHJzzLUhFfuggJ3guVDvS6N/pVX+0gFTStB8zWiazfyxI7N5LH44GJIdGXX7LZZJeJyFBqP5reMxtCNf3WZNSit2qO7JeNnbbs9pDXRZWClTmmiRYKOcmzTS+e7kcazZ2J3pCnho8s9E4fDaKa85qPneCoO7shOD9x+Xy4eNABKSmYfVUxu18+GBsj/+SMbBife01HEFU2/dIeXkoBHW9qKndup51YDFNbczaeu0w1kOssqC6nIPvRgs1OoybV+jEzDDIrejvcGn29SJj/v9Sj/a9IO6xhjfv8rt5E8CrHc/PA0HztOkBjGK1GNMLF2FPh9OVxm+EpYJZ2duulNjW2FxXeQIt98rz/iGblpCb3J+cztdPArEGYDTPKf2pEXQHS7BDvhkLjLvtcNqo=","authorEmailMD5":"edf0fe258fc9accf16caf6136ea48459","message":"Hi Stephen,   \r\nGreat article, helped me very much! I found this article  \r\n because you have linked it in one of your answers on stack overflow. In  \r\n this post you mention  \r\n\"I don't recommend wrapping an entire method in Task.Run\".\r\n\r\nI  \r\n have some methods (in a class library) that I must be able to call from  \r\n a winforms application as well as from a console applition. The methods  \r\n take some time, have to be executed in the background, must report   \r\nprogress or reqest user interaction and support cancellation.   \r\nAll that would be possible with the Task.Run(), but I would have to call for example:\r\n\r\nprivate async void btnStart_Click(object sender, EventArgs e)  \r\n{  \r\n //Init progress handler, cancellation token, wrap in try catch statement according to you article  \r\n // ...\r\n\r\n await Task.Run(() =>  \r\n {  \r\n someClass.LongRunningFunction(progressHandler);  \r\n });\r\n\r\n //Evaluate Cancel, Error, etc.   \r\n}\r\n\r\nIf  \r\n I understand your post on stack overflow, this would be a bad   \r\nimplementation (as an entire method is wrapped in Task.Run), but I don't  \r\n really understand where there are possible problems, and even more   \r\nimportant, can you give me hint on a better implementation technique?\r\n\r\nThanks in advance!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2014-12-11T13:54:48Z","timestamp":1418306088,"authorUserId":""},{"_id":"55f6733d-eae4-3cfc-ba79-d5ba6ecd1885","authorName":"Simon","authorEmailEncrypted":"vGnRZAmhSMlvUylftbRt7NBiwMKTxdHLDYmkJT6OhClWLM9nDhmNktgWrL+zUB1q9agTs+GJh6iDRe3s7dAbFngAq4KnZXRLT96xnviga7T8nIMbIvujlp/M6sI50IvPo+zBWj+TLYXaSmBrUj8TOS93zguY9ltF2+/NtnoM3ofQ/rLFnIa5tRecRPjdswCrWO6UBd/TMRQzB/pRrbAKITtwM3D3mB2cPJpsOf+15k1XI0KwSsfnV3jHnY1zAMqIdAXgSleg6JHA0xQIM7PRNRBc2bTdfXNSoBQ1N+v9Ht1o/q0/G0ilboIv/tA1QSV5NRDjxaAUwq3aisOqilKuwgN1It0mzCSI9zdrum8MMUOEOUHgY5av+wLcrX7oC7oao1fQ6gvhgsrh28H7eXi1N/ZBeovuMYbmMA2BChApHueSh+QJSW9RPI0n/teMumTABy8YtRf3Go6WCXeDF7801zo2e8DhbNcvNYt9MfoJ2wIEcBhXeIr18i/Z3O09xSLZgeiPN2y5fimxInImdgLFX1WIp24yzW+IHow2aPWtJ4RBURYPrJsYW86b/0TTfGW+GCEhVfKE5eh00kORWv6JjM+nokCZOswwG76ByqviLBArLazjuMCrPAXPjAyYhx8yoEGPPUzNem1ko5I7BJ0FyWYAhVFYSPXp9mZr/dzOG8g=","authorEmailMD5":"edf0fe258fc9accf16caf6136ea48459","message":"Thanks again! So Task.Run() should perfectly solve my problems. I'm quite happy to move the whole backgroundworker stuff to the trash.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"d2f4d7b2-f07d-3d78-b5cd-6bf8ac177397","date":"2014-12-12T14:46:17Z","timestamp":1418395577,"authorUserId":""},{"_id":"d2f4d7b2-f07d-3d78-b5cd-6bf8ac177397","authorName":"Stephen Cleary","authorEmailEncrypted":"n22TXfiVXUkWyqjDokPgiXaOWpF7jKLYCMCMQhwD30qRIrqVC88JvTNvOOkYcQ1VpCBUrwVnj7yZnCsFlJMZxkpuKXZE3niZ1eDl/bLj/Rdr3V54SjDyWMzGHurubIHshxOxRx33PV32y5HcGFXmlUMFHBJIeX+V0sj9HcyTacaS5CrdLJInC/ikH8/PN52wPDrzTAAqkvVztZxds9TpUAVl+tBS4pGjusRw1No0YKCDhsR3IFIldDByLs2RXRKZRFE9PxbY8mSzBXugTgb/oyYort+3wdXFTABZIglfQYOn3tkk5IcG0UWz8oszVxGsd4rlGEXSIn5Pbpt24v89rssAOrbr8iBb/Wt2SxIG20ZO525LFB4oWfjs+qWlHH7muSdPNFIGa9n5OCzbbpcvXAzCDlL/lWyVyEEQ/exton8PTEofDLmKhz4CNJr0eJuo+lvG68woAMaiRFJFcbz8hDozc438GYSvdWZUH1InZkO9+Q283Jj9upM3xt8Mrr347abhYgYWkqtMZWVbTMheLg4DPiu0jArBj09ea5k7GdTSd0UuWmnvEh8vopQkuBM5GfwFWQ2Z58K1EbLB24QUBtOY7p95UQcv8FwtwqUixvju9dVL9zssNPfY1G/Rec4rRpL0rr9h1Qv/PLPHUJ11imVVR5rtKq8naC/rxloTYWk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Simon -\r\n\r\nWhat I meant by that statement was \"I don't recommend wrapping all the code of a method in Task.Run\". In your example, you have code in the method both before and after the call to Task.Run, so it's fine. What I don't recommend is if, say, you moved the call to Task.Run within the someClass.LongRunningFunction and tried to make it async that way.\r\n\r\nI have another blog post where I (hopefully) am more clear: [http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html](http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html)\r\n\r\nSo, your code as it is, is just what I would recommend. The guideline is better stated as \"don't use Task.Run to *implement* a method; use Task.Run to *call* a method\".","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"d827a64c-2dce-3d51-8e9d-df0ded65c52d","date":"2014-12-12T14:06:43Z","timestamp":1418393203,"authorUserId":"disqus:stephen_cleary"},{"_id":"13ef4087-1667-3150-9a7c-0496494745d3","authorName":"Matthew Belk","authorEmailEncrypted":"dKp7bp9eqiY4OD4qdKibWOunz9XGAsbsk9nuq/jsUo8igolBsGi3fmFdP7KJ9Wvkxi4CbKx6H70colw0XCcLDf2u2XQ7IKutF0zg0EKESBcXYvvVKGbfuCNpPh3+74s1yMOVRJInpFEsW+Yw/HDM7VFWdT08VswMW1rkhrWIQxWC5y6W7ShtM0nBynlluCJMlxjWCy0OgXALVGfSasYhqE6HFVMJkAfrN4nDuMaqKFAw02Q13Nx6UkB0/pZ98AZD0igiFY9tZzxYmgy9L+x5cQypXfAiOcup27C4Z0Be5QvEeC/ij7Y9uFVI7o47movPyN+TPG7K38PJYpdJsjrCFgolvJxZnEbs4XutVojg1xIGLj2Yna1erY7ekck8wGRHcBngd2OelzIgq5Vh7tRpXWrztBJ7wYUbSfQZUIAaSqmA7eO8+5PRSCiLapbZDprGDMiHaTJFf32jS68/c4eM+a7xqA2A1pmHvknxgHqlikHyQqYP2W5xYpP6m7UhDe+nKbuFgaY4Ad0bTeC65rxMLAg7HESw3rGEvz+qphpRF4SoIgVqExlnWCr6uNSJm8mPu9djOwmI4358nALI+YkaSkpNvgMg/FF3QD3MSpiWx0m1G18KxKReoREgOyc6gM/gBIQniF4DXsvPCIqiRgWwvRCP8tR6vozRaQmS5GskfjI=","authorEmailMD5":"3c44afd1d9e38b4fa78e287a18cbd750","message":"Thanks for the superfast reply. My BGW does report progress, but in the progresschanged event handler, I raise other events to consumers. I assume that's still \"OK\" to do using Task and the IProgress pattern?","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"f99eaa94-b174-3313-8b8f-d335c72334ed","date":"2015-02-02T16:56:06Z","timestamp":1422896166,"authorUserId":"disqus:matthewbelk"},{"_id":"6d60f2fe-f02c-375e-aa51-ea63efda5c6a","authorName":"Matthew Belk","authorEmailEncrypted":"p7uX9UMu0rmHdJLOARmAYUjKTe1QedA25hMfK785PcTDBTVgP4488yI+teO+xQSMrTaGMiqWlXuBkMmFOK+nRaM8lG4O5mvz2axvV08+PDyql17MGGQFX4vlig2CT1Ducom+XOr3voP4ffFzfA+xxLA0iHfKNfMSFcXmqMrMbJtLngl8Sr0zzaop6kXC3Suu7HcA3XJUhrF/yA8KmCYvbWJD42dhJe0DcK04MX5g5/UY/QiiL4fFyYi+skG53j5+kPb/aZwJLrhgzJ0WqfeLWRo2lmRgFVpyWEcWrN3cr88yDSkDRqxRSbYsiP7WQUKYKLJNFl7itf+7I07/qHhBkS5WZz+zwSQ3Pan89NqyAqobIbMKDsg9epyV8/Wl7I/Z0j26iKWMFPz9c81JpHPp0V0R3WVXDfLmvh0AZW88DeMobQKK+Ddn2nm8tEX86V0xqKRFbTMyGn6LCQIAsp9m5tMgkS06F8I0OlnQPEtvUMr/yxkxQgOkQH9O3GYW+YxPY4KbHsSyFAujB5gEJ7JX5mvtApubgp69DynUALigoLoAvPXp2DLJMRMRthsLS4blYpAutELNjGvIfR+j2EAr+HMyoGQPW3GunvRJGUjzcVjIMGLN+cd7RoSf2gn/g/ZJXmR6/+kMofiNYrnF/h5ZHwMgLhbu1FEvaSV1+X7cZRI=","authorEmailMD5":"3c44afd1d9e38b4fa78e287a18cbd750","message":"Thanks for a fantastic primer on this topic.\r\n\r\nIs Task.Run a viable solution for a very long running task that starts when the app starts up and needs to go away when the app shuts down (via while(true) {} that looks for the cancellationpending)? I have been using BGW in .NETCF (using the OpenNETCF.ComponentModel version), but am porting to Xamarin and Android/IOS\r\n\r\nWhen is it appropriate to start the task in this case? I have been starting the bgw in the constructor and cancelling it in Dispose.\r\n\r\nIs it still necessary to \"await\" a task like this when you're not really waiting for it to finish?\r\n\r\nThanks.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2015-02-02T16:00:42Z","timestamp":1422892842,"authorUserId":"disqus:matthewbelk"},{"_id":"c4448342-df32-3e33-9a7f-6376a5b4737c","authorName":"Stephen Cleary","authorEmailEncrypted":"KXn3FxHKHnegz7n7wjNBsj19FwMGE0wX9irDVfOlKrAPKvhcloxW047LAanH1AiJebk0FvzNdH414hW3PHcv4ThA5bAZfTahIvY2kyaSnV5ynMx8boIXUl2mz1DMrFS6cF/5TLCkieK7P/YX8dzIICP+Q0FT4EnGKmamKPEh/R02p4vvB49lJ5GGgRFxgtbspyerP+VHc2s0d1zZ5dPnrg5mGCyykMt4IKkNvdE+DBL6vk/gi7r9/wWjx4xE4XVgB5zK0GpVERHpzOCEO0BHVUf1DgVnCJPMwOUxEiq0YjE+bayyY6vNi/As2NIaAGj9zKAE4/7EgOOJ074cSR4YWbFpthTLrnQAmSPeNN6ON+3BdPfSk3Gk7pbQHxtxxrv/A8SfXcCF0RJ8/9gR5y5ON0phWxSR3ABlBB3+PZFCz0pC7NM+odoTl1/ul2rSo4JP9T6AvtVN+pQD008NYD845JS4hqzPz+ByTaQyhFzfThMFXRxH1R1tlIkLjxyNTUAF/A174flRyTcauGynv+ltjTJcs2AdMxOzZ7cuN/pf/x/laVDCsB2cxY3kEeIytWtepDr2KyTxcKFGq5WsE4eVyvCnd3RVMCkB7H72h7+jsDvlhsTz83G5ijOdCuXynpxnaQ82C796225yOTRf33UergxqHROym74rNaT7YNhBv/s=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes. I prefer Rx over events, and have a somewhat general-purpose Rx IProgress implementation here (not yet blogged about): [https://gist.github.com/StephenCleary/7330384](https://gist.github.com/StephenCleary/7330384)","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"13ef4087-1667-3150-9a7c-0496494745d3","date":"2015-02-02T22:01:24Z","timestamp":1422914484,"authorUserId":"disqus:stephen_cleary"},{"_id":"f99eaa94-b174-3313-8b8f-d335c72334ed","authorName":"Stephen Cleary","authorEmailEncrypted":"eWhep64RpdjUpQ1EXMbWhwlbFShDYr+j85WCLXQ430jObvbR5x8iqx6o3k+ZaVHnVJC/9n2VcIIfsI6aVnZY8a6xG+NnfLabNE34kH3WhVK+GNZZXGw7ym3SeTiQwXbG8vFy9Hqg+EmTpSfygVATnr04fMdIDzXOQaGvPYlc4rABQjHJ1xJm3hmd6nNTZYEeysoJevmr6aNf69UOpNd066HaMbZE1tBIGEyKuWly/xU7Hwrim0Kio+he3kwcYFG0i1CyF5MnDjf9tOWoNIJrvoA2YPMXsgjbnAzBUYXcqw7jzexlaqiBs+WjOGtjXI6yzPFlEUwV4fKxYKykcEyFbAJm0p/rW+BUv9QRU9x7zwif/5GN5CwJb05KXH8846l3zBsHv1MXRHHhcvjwK1cD2R08XRZrydNM2ISuuHLmBskEuNxtSU7SsC2Zz8l8QAk8IxZrEdg3hQpo6K9ZneWLZIsnU3QUi4qvwiIvOfaixjcnyHr/U/6F/HvrHYkHL/QRGKj0rZlEkVSzrY/DXLmanW1K3aw8pn0Y1quHmvSqptqW++rQcEnB+vh8fuaF/WyjHXEG+65t8PzxgHAvOZqlW6iWGyQMBzWY/7nWMoZjO7CnmNac16gKVnHXyUb34h/qfw9uLhE+8fjhiBweE8UscvvXisOJeDv39EnjtGVYlBE=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I would say Task.Run is a fine approach for that. I'd store the Task as a member somewhere. The problematic part comes in with detecting errors: I'd say that you should also have a method that just awaits the task and reports errors / exits the app / whatever if the task throws an exception before the cancellation token is canceled.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"6d60f2fe-f02c-375e-aa51-ea63efda5c6a","date":"2015-02-02T16:48:12Z","timestamp":1422895692,"authorUserId":"disqus:stephen_cleary"},{"_id":"1ccff17e-8f3d-3f5a-a67a-6ac08ec7cc05","authorName":"Piotr Kundu","authorEmailEncrypted":"EasYAZY3TazACYhDg+CXHFGSyE3fRX2DhNKMCqB7JsoLayVfI9pczJxTXnRGiPG8zGo0YDunrnwYyjoahN0SixMggFzRdv+JWSbtdlavOLavO27XFEJDYoPslxYqt5uUFpHd4Rxa5laLqy1034jakgBNn7DGVHgJxMynMyNtlWRVfR3VHS/4x0hcLRlxRnajU2drebL4hNtPnkBi68xpljQ8qSglJYpfum9FfaPKMc6hgyJ61D6yv2qThlBYWg4tQXkhCK7mE5yXsH7Ht03BBA6PlqFekyqWR+czI7FDpGfn/7wNsTbzQH+6ctFY8g01X8KC/D6ngZ5zQFovXxmE0V2Q3DcTVqbrtKTDXAC5zT05ci4f+Yh6x/SBoNQb2XWVwnRUy/pGGr1tJiz0DLC8eoMstRf6a2yuzRTxaWWYXKaDEZTuWVTDVLhDeuDUzlq1ANzbR7y59TvK8buR3NVRrfL0fC6n6wJPXsSsZROV+c7w2tl8r7kCCkbiXpHunIPsEdgamKq3ii2+lT8HDRPkffY54DQXln6HiPVSff3yT/NF5IXk9aqL+hK/H/wCnQEn8QfcyJKROVrNAPo4tU/TEJY6OW3sdlIUI2X9IKx1VWPrWUvU6Dh3e8dKk/4SKw+ZP3JJdo+0pcYuEeOTwLIFtFV1OvQ42PcPPRhU0UA48tI=","authorEmailMD5":"7cc1ec1c76ce48db2cf3d5e27e812d6e","message":"I wonder if the approach is the same when you use AsParallel() in PLINQ and you want to update progress using Progress<t>. That's were the \"magic\" is, right?","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2015-06-23T10:33:04Z","timestamp":1435055584,"authorUserId":"disqus:PiotrKundu"},{"_id":"c1013a3a-1916-3cfc-82cd-61d995727881","authorName":"Stephen Cleary","authorEmailEncrypted":"PwTI8kkUuJU1YJzbO99NhVp5IprfhNQjM5HTFln44uWOcv+8jHGS1seSUwWuZ9CL+qzI9jZ81I26HrfD+IOemBwZ3vnVi2piMSFZKsB3vCaOxdEe9HUc8XRfWVxeU+4VDhmWJqv4O1/lbcVfbdnKErsta4gZyKrqLwMTcliXoJRUgkAQzuoQIFhlfB4AONHgfuSbFOH0OBT4X0LIzfCt15titrbuRJZtw4qiZRwdA7VpqXtnsrA6niYhWKSOJoV3JwT7534KtvWaHEYMn3mRCmHffr8uNAS4oAhGA8n7Xq1sfmfV+qwyj6cw3eNWM5gc7y21gxab+sJgFiCbbr30D6GCz6BVFPmkM1Y0sAybeb7DJjcQNizDDx6RvgsI2cZxDL3Ylu2E789MtP6n00RawD30jxyA6QY926F+POl3cBVeXZezP2tR3dui49QPHVtapgHf2IusaWPx4Z06gekEB8YwJADARrcSKlSqTgINB8K/14Et3Jn+QNuhnJBm70NxKmHefGU3zP3TFKw3owco29qv7W+k35fhGgPrDO6OWuZeiI/WEcjg7hru1CBLfwaPuy9JM+c711Ouk58IDPU9yerLsUImc+oKHTXtPXape/9HwuhVntCy4qvahh7w5wLqXEGPhG1DNGrV80cGX5rtNIrG0T9QTHKQczwbNtGtrto=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I'm not sure what you mean. Parallel processing is best done with PLINQ or the Parallel class, not Task.Run or BGW. Progress reporting *can* be done with IProgress, but it's not as easy to determine \"how far along\" you have progressed.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"1ccff17e-8f3d-3f5a-a67a-6ac08ec7cc05","date":"2015-06-23T12:14:55Z","timestamp":1435061695,"authorUserId":"disqus:stephen_cleary"},{"_id":"87bc28f2-a3ee-3b42-b2b1-39007dbc96b3","authorName":"Stephen Cleary","authorEmailEncrypted":"BPhgK4JztX5S2eE9CZyutsVu66WDY3ZMZP0/riJT/Ykuf1InI6Lb7peUgmX5mx3Kkt/jlbRkI/AmnoAucAPB++pHSf4lEYWpp8zRoub0Kjx7EZhSdyMPKidbxLzLvZRyGm9wzfq3NFQ+ueWFIaEpTV/P/zsZO1u0AK1V4YYcu7oW0He/Oo+ONum/7weOhbkxjovF797Q5bYLmU2U1HWPD+hXf92A09Wwmh8V+1h434g8yToxmVZSQ/Z69FjoIPECSq51urGltf82bs30D+JfHRgXHhfFWD/slLYw/KNWhApo6HKBJCjQkfmeIA4QfBjTEWte6m8MPZEazioTYsOOuidd8qxuGkoVbgrHTnsqlklW0y/51iJhaX8LzDjfznHfn4iHX1FNpNUtt/rKdai4tjM5ePnyOKvSUT+xu9tFm8CPFz62JtHCOBQ1Bm1zx8pgkxBbRVflAzFTLYEaSk+g/t1xJbYsoIzKeIWgmmeJdBWcearYKfscH5sHeeXZ5cRFOhjVlbFEuBqnlihJKFOq/ktgxd3GIBuVW+RdNE4C3RFf/zcayUgIk+0ap64MZXkShzNBZrRgzXGhXOuVw+4AXX39Rn5aekoEPE3QAzDWPvJhmgtejJJxWLVd7S5MpHBZ5ndlujKR0whbOBT7i1EOgFQLgUTpE/aqe5mQBwDQWbY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, that should work fine.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"e20eb815-9721-35a0-9d02-dcbee65e76aa","date":"2015-06-24T13:13:13Z","timestamp":1435151593,"authorUserId":"disqus:stephen_cleary"},{"_id":"e20eb815-9721-35a0-9d02-dcbee65e76aa","authorName":"Piotr Kundu","authorEmailEncrypted":"fpyEs3f33mwFTk4UC60WIE+l2irSCtd1RaWQH5/t7JNU2/x4aFt1aVv6Zdng8E07QE1UiVq8YO35NC9UPdW5MhIfUJEWHtK2rG76dirhmQCKe6HxakWf+9KLGUNViI53VLJ9UCYi3FTm/IP/wOmR9LTQVkSUM3CCuQuz0twHvxLb3L/H5kc8AcoYcv6VZyC3d78Liyb3ntHeA6YKBHRnc41SssYnxtyY/xdq5Z76cuQD0olMCNfakU/8wpUjJOXWNIq8yzeTTI7q5w8iHs8f1cXRMIzPHqVnwhe9KKRWds6iw8coegekDkvyPdlSvpTT+e6OQDYDPoCOOzyo8puo6FvibHNSwuuxAPMV7A7yhw+jTOgm6WD+1I3CRpAPD/lb6Lh6/6boDbsnrm/NqXFZ2iAvHFxH9FZpQbVPiUAVbrKRHfo96d303A7hqHzvu2xQb+I+/H77gotH5iGY0r47vjJx+fAbP08lV1Lyl0f6sEtwHQi/UOIpNSZZnfBgQvTasEMJ41GqVEL4VP2EkGlHURlPjfTol+bkbeCT05i8SWpg9DDhlM5wc0i0uDkHIFigPOh2yGMZZCuKGTgWx/QCZn7lSBFqBOTL/drs5edVywrPRN4Sg9EqFclf3uG+wUB17eEnbr/yAfdBNJEKrE3rPFjn/paWSagmCJr6KoJcq+4=","authorEmailMD5":"7cc1ec1c76ce48db2cf3d5e27e812d6e","message":"I think I found a way since IProgress<t> and the T can be any class/struct. I'm using an ID in my class so I can either aggregate the results or keep track of several progress bars in UI or Console. PS. Ordered your book :D","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"c1013a3a-1916-3cfc-82cd-61d995727881","date":"2015-06-24T11:13:39Z","timestamp":1435144419,"authorUserId":"disqus:PiotrKundu"},{"_id":"f45375d0-369d-31e3-ab1a-ff938f2e5513","authorName":"Jorge Martinez","authorEmailEncrypted":"ULQGI5lEPqagmaVgbWk407zzCBP7oox06dR9n+4xROxo3Rkg/W2Z2rsgpegHzE6hlr9l6VpdDHacKH6EgwEMjx7XoiQKq1paJ2xXy3GGeeRb5Ceo9c/tx+bJUuRPQf+paKHpLUWZubuCBgBElNACvwuUT2riHHozPM0b9fsiY45b55RblCNnaLi/aM0pSmNaVH1ZOh/2gyRSt55/YCewR/9jcLjsi7KA51NMcvZXR9XUEoMoqYPgkCyCcLtIpDnV3Y4b7jpIdkPiYxZVut8GXDVmBlCTRfYDobrRLM+lrFu+4RA9bC6oDmiKClYgAjCDA7bp+afQ11VCMNG8Icq/T/76FKieVLR0+B2Cq/nqyYwcLMlXHHflE4oTkXSdvERSW+nxaTef04PVyb6yTopieHkDyPjc1XYcuV7xk05kjOrpvzp4xME0uUcA+k7tN/sUPgKwhvJbAU3IEdd3sGBIctQyFfQtDp6a6ARt+wlBPKBNmk/PgKXiUvfTe1E2QLdXXw+Y5PA41w1NNQhpkxHKXUCHxEQv6ZDx3svPFqU9Jrsd50kMlR6q5GNrGJPS94hwzEC+ENZiyvDKayNLCUq8/YTb0WKtMdU4BEeTGSPwvuaPBGvVoq47CBmQM0ijqvRJPCqQRR+/6tdW0OgO3AEHUsYPi2C/HToZYaNI2Qky2MI=","authorEmailMD5":"494eb2f1a4d3876511ed21fadb2b9a4f","message":"Mr. Cleary, thank you for an excellent break-down. I thoroughly enjoyed reading it!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2015-08-22T06:52:00Z","timestamp":1440226320,"authorUserId":"disqus:JOM81"},{"_id":"8d5aa5cb-e00f-368e-97d4-29d48b5c92b0","authorName":"riuson","authorEmailEncrypted":"knP+jJT72KN4huNTcI8hREtdTaxXqukXdpA/4vtZ9nFBZcO6Sh29tgcD2ELsBINM/ObhY9Jet/yVwNS8z7wW842gJQ2EVAPJ1KvoeRj5fyQzJ6WlNk9qSIAmTrkRznsIgGaFVJfDo0V0loKVucHivQrb8qdoA4XcB4Wk6T62b/s3C9JtXXUcLL6dILS/1gsrXHeKovkJNvvxIL+lFsZnxQO0oDN5xgchqWn9qGVDOg2zDwv8WLJpDHxsoXflwTsA+1Nxfvx9M2sxY7Xpjju7O0S/fA4ZeREH5X2KFmCbi+E08KZqkpRhEbef1zUuVKSjtcGRU1AxCYeHwe39r0gzJbBZG0masF7LoeIssCyEXvGMpHL8WRxM9F7U8HS/wM6g3iqcbiHjQVEThYbZqxkDPRdlaohMDhU85rN7qnZsPYCO/IsUccc7zwRx2aOuARNSVuEPaWShXBFyD1LbSd3cFh+cXVCHLyVB8sjZl2Axosy6ySAJHVnmqdNW8mAz0QyXUyYOiYNb9tn8XwpyQzlKGxM0OI+D1rmxqQN5sDpMvBl1PqEqu9itu8wSWxTp1TCkokNMJOrdMgsij/TvWsLt7gAQZlUo6wmZLoYV1qGbEMJcJ4ZyhoNQLdsEE3dFv8FTsXEIiKs/YRk5ZYAO38qKlOipLC1OWWCngoIbs4ZZdz4=","authorEmailMD5":"3ae8b341b7d4585693e1aea655d1c08d","message":"Nice article, thanks!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2016-02-18T04:10:28Z","timestamp":1455768628,"authorUserId":"disqus:riuson"},{"_id":"1e087727-269d-3922-ad57-a5d7322a098b","authorName":"Kim","authorEmailEncrypted":"pwKs9DwMf+Xbq6S0UEkA2LCqOgoHmpk2VNfD2+ixvTvvziOw536qx87V70NwifI3NorWTp+qe9NlOpdfveaNxM+Mil7hyBuwOwsc7r5plzP/SobO/rvEgG2eIioEsEQZhxJ2Z+J0sIRYVOKNCz9EvhbuK1r6ot+z8xHCAx8UECtWjI9Z6g1Nql47rGP7pAqNPlXgJOEAh3m8Pk9HY3InoeiHbYknF6J6oVpP3Qqg3uHBSLonL1WvX5B77z8b2FRwgPqKlo3BNYxqs4BrLrIPtNiwMkKe+Z4bWiRI/jeTYuhrLNTDNpa7pJaEVmZMstp1DHNoIuTwi+Jh/yNCBw+1GG4tj0tSpAAoIi+6vhdfbVHVmixkRmucs40MQiCujjnUWeWp58WEJZRGJnuYL7k3s5fU9BE8yypnQ5YjXD4l5eIsPW5sa+fbxcOpagvCFpQfaYX3QaP9AXBOYhVaJBMV8Xe4exnNNisna8n1UVK3Xm3gFrBSyLBCEdbb52z0FM3GV5xF+b4pg+hgFLlKQyXipY72tYnM6vKr9UD8XNhFYqK+JuXclpmTiY8pdOU5rFJi9M1VP3ib4xCS+ZtifClv46A+bX/a1llFxtJq+hzWTHb/Ljo5x9uez8d9wHPq081bcC3aseqvgvXw+DRg+Z9LIj6DDesgUpclmZ5yOzHn2ww=","authorEmailMD5":"a94900d4bd985645f56c49c7fe0db49c","message":"Concise. Easy to follow. Helped this beginner immensely! Thank you.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2016-07-05T15:34:03Z","timestamp":1467732843,"authorUserId":""},{"_id":"d1906838-5c83-3ec8-ace0-ce9c7e05e2e3","authorName":"GK","authorEmailEncrypted":"L+bXoLD217Mv8t3FaCGb7a2I87n5bVNU79qW4bK8As6F/thYRLjYJxq05ZRtMCS8+ho2YOIASG18MC17tsLMmA0t0nfIs75YNAkGiYglqBfKowYQ43PhfKFC9W9YwgRt84Q/Ise+EkE2LzzrNrer5Ds1lhUOog80s/8inmVbPbdEwdYvQ//REGu43Hmzw7VD/wXvS2Yw0IR/FnE8WkUG1ViVsYB8WYMfhOT9JD9w9P1Nv4fJTxLQMr7Qf34Hfbqp4+RqxXiJjbrRzHPAmYGtpw//IQDD0R6bqfpf7b4Rzr/DYoyjkl4S7GzD/acMehKFOA0oXVFxWsqlFpQEVROAwmmx/9h3NhQVizJBVAC3Bg9uIuz/D+gCPSGdq0UJUBZqmigBG2/4kVPqpkpVbOqdO4fTcKENgT6OZevNJVSO+N1bLbEwDTBmD7yIAkhUr+5P2oh2tTKliIUvLqqQsymGGTkbSE+YR8CL/VoldJKnbvBgJE7y4tztSPbVy0THAFm6itGBwuAOLoX/dLgmYU/7DEHkl3cPbdUalGOgMFJbOaWx8MROo8j0pEjcMDrqQV7tDYhbu0uSsMhxM58oyVno4KeKrNQa9U6D5aA7Rw4mJKhSw61dGN2GBnmoibBkNwzkmDVjPyOyYC7LHgG+62d86j+4HfEVuBXKBtRPdvCoKO4=","authorEmailMD5":"6f7b288370004cd1e18a7e48aacaef85","message":"Hi Stephen,   \r\nI know its kind of old. But, i follow thru your code and its really helpful. I have a question related to backgroundworker and task.  \r\nI have a scenario where i need to call a backgroundworker and in-turns, the bgworker will call Task.Run() to fire multiple tasks. The reason i need to use Backgroundworker is, i need to Enqueue and dequeue the job and handle sequentially one after other job. but, the job itself will be run in multiple threads (called by Task.StartNew(runjob)). Can you correct me if this approach is wrong? if so, how can i avoid bgworker and call Tasks inside tasks. Thanks you.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2016-08-30T18:34:21Z","timestamp":1472582061,"authorUserId":"disqus:disqus_I5bwUWCV3x"},{"_id":"e02c46a1-84e0-39a6-9f67-2f3bdaa6c52d","authorName":"Stephen Cleary","authorEmailEncrypted":"kfOkNHYo9fCzNxhxQB2sC7BYeXcQdkmcT0pM583wKNYajHjQmVNGCWWKTriCpPN3YTwe/orNUSFZSdDJ0VWZBct3VqTLtY4i6TdJtACaM+ZpGeUE+SpblF3rF2+YDnk+3uScsGwzi7nP77Oc70IGW8qbq67qjn7y1ABRiIhf68D2mT0mw562CHhYu02BxPk0+UFzMrN4JQ6rrjnUuMmnc7kagAKrN40jeJUO0Cph2gjG97fyFyZPd92V9rJjI/GCb8eHafVhqGCmmKjXtwmRKxgHTDOtytCd5MPKsoAYAErINygdAPn9KIITKzIUzoKxVw+qYUvWJ0YrJwhXcQ5rJbyuomNKBovytBDW8+CWD6LqzyK0zUzHUFQf6/ifBExOG+DYcfw7bWROOLyGIzc3bEGGQaoE0assWM/+/ZaOHf7XBR+Eutwq2exqEDAqiU/K+ZcjCxhv3kcz860dIUTS+OJgrrQ8tYF1un1+Q95Oikx6TIJdSoyusU1FfTL56LneaJzjQ/82jIpE+a8WPxp15vMNxaNFlJCT/kLcDulMYXbZtebuZA9wf0yZ+8iQ0GPcqnqw/b9I58JEslDfFhEEkGulsKfhWoT4C7eD8AkIoH6Tns4vpswP7xtPzT46HX/aXbDc16KHxUN7JTIm4cyOuhquWRXw4A5DbVxYGoED1/w=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I'm not entirely clear what you're trying to do. Task.Run works fine within another Task.Run; there should be no need to use BackgroundWorker to do that. Also, there's probably no need for Task.Factory.StartNew; Task.Run should be used instead.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"d1906838-5c83-3ec8-ace0-ce9c7e05e2e3","date":"2016-08-30T18:56:45Z","timestamp":1472583405,"authorUserId":"disqus:stephen_cleary"},{"_id":"642bfb90-6525-36ca-a97b-197485fd355a","authorName":"GK","authorEmailEncrypted":"sFME7N5t41nHIi7YnoJpn3YFVanYKrmtk4/HbHVy+QSZ/RiLBDWGmNWLiVb7XveawSfoDUgs2m3/BmfSluZ39DUds8yIK6BKqzwvCS2FeeWDW0ihk8OtfRvGO9W2BGXCb8QzVQWDOWKFcZ1+2E+Sx65raoqnh+XR8RQfpfvrmbEKBCJ+YChzkQGgMGS1ubXMtXlWqi65kHlUU58XixkYer8gg+ikLcG1arPY3kvxUiqf8KWrF+xGAoSXn7B8nkPYPzTFQEqw7KtG3r8cPgr/ENaJtLeN7Qo90PQdv+Ac7VN8s1hC/EqYPO+x9FT0NBUZntgb3aYrPisHhkAEnp+ivCeqqaUbkva3i93tQ60aA9ofPdLHkMJRsaBKVPqCQonz/l1USxb6iZgpeTKFqbLoU7mSfwfSMpHNXmEsdCVF0GTMkeNYnPDoaR4XEDkeCeCyAwHBky1Mqr+7Zrba5+tD3c5sCITzpW/a0SHEkPo5uyX75bW5+08nNaqzGVdd2bkzIAysRpZ6BOgN71MpNuOslkqdKfx0lzbhMTbqUzUD5KNt8i/b78tvxSnXmIQFLT8cm3gd9VA+ZY/QmMzfjiVgx4YRv0OD1h5zy8gHIDNgZVnOpqbb+ho0Pmsux2sPzPNZIljgawFMGwyapXD/JHaVyfmhsQr+0Ud5DxahpE8JdNQ=","authorEmailMD5":"6f7b288370004cd1e18a7e48aacaef85","message":"Thanks Stephen. I got the clear picture now. Thanks again.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"e02c46a1-84e0-39a6-9f67-2f3bdaa6c52d","date":"2016-08-31T18:13:57Z","timestamp":1472667237,"authorUserId":"disqus:disqus_I5bwUWCV3x"},{"_id":"83eaa911-bba6-3712-95a3-46317705bfa5","authorName":"Jeckel","authorEmailEncrypted":"sc6Jb7VCtpKnl0326E6Ra6JVu/waPrrYkvCYSU6lo+X0QBJ/hbD7E1t7f0WJtTwwHK+syPuZPfiE6Gc9cAzDniJo4ZK8atdNW1F9r4Lvl31bNUNPZYpxSGYyfA0nkuF8Fla6/zVCp97UoCIjDzPBoIbRHRcnNMHuJObB8O5pluox9qMJvIfWgwLZ+fyph6NCQ/Y/l8epgghYtitxL/eCUUCuEYRN7gk99ej1cfkGHKEn7VQvkbwo9UU2LF3pj++onE200u2BJLQNWllZ+2Kck7oK29/uFu+Z59/1wyao0uS8dYeyFMnm2rEryEvOYCSwztLEV4l/NF9CdL+e4/eIRzmoto85mcEZZnApOVwpXoe4LT/XV86I2WmdPQWyK/Ed4vrBkRY2tr8dtU1do4uysSPKiSeC2HtecJ8TSg/rXZevVp8QfchIl9y5Q0mvMZdZux+e06l0mt58FLN2RJ1MQPuOTUhclN/FHNCuogeFstF80oCpIWvPpht4fZdkC52AIgRCyw3OwnesPNUxjWr8YE1wfZLVGiahuVwdJfnl6zaJYEJmThGKCmGJ6P5q5slPvftCT6Oh7pvISxTun1JNHv8FtY0T+/pdLUQOSd9q/sBqnLcz6BKmoV6YDrEou92jGD3uvwBUWIFaC9u91ipr3xGRT9X2oI4n12UjK1Vx6CQ=","authorEmailMD5":"069974f5de5056a0e4c355635b5fe295","message":"Very interesting and informative article. Almost makes me want to upgrade past 2010.. almost. As soon as they make a Visual Studio that is better, or at least not worse, than 2010, I'm going to be looking forward to using this newfangled stuff.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2016-10-01T05:00:51Z","timestamp":1475298051,"authorUserId":"disqus:disqus_nCxW1Z9abC"},{"_id":"58cbef1b-95ea-3f36-b192-3139c4ce817f","authorName":"Douglas Cerqueira","authorEmailEncrypted":"JQeQ41gW6/9ijSbPXbH9Y1m6pgbb1T+V13hlmR3rif3dEy7okyTXky6vpVc0q9X2HlDMnXL32AmJz6Q26J/UWJCa+Nx1RfHrziSuYhOziuRqc8WY1BzpU7NsAVBVcNcBWPvsop5mO/uQcG11TFrgluBt9Xeyh494gc8Kg/XW9wmxZ3VReyvVDquDVXfFg9VVxwKzfxGMXwlNZipwI13P1oRxZXReCSIat1jvXksbaGboF0c18+/OhBSyXjclH9ghD5PmX5AXTgZfH30WPWj/Jd1ri+U7gYlyGoRZPn7cEeWaxL5SRViUGUdFwNCLHJvKBTAtMlH5YE1NOk4EmiwYVScl5vyg8mia6dNNo37IYduq39rYf5r+9Toioe0Bk7reeKFBdeNLJhz2FeAq6Y7FDBbW6S/vwmr6P2EWGsVWPYNi/a3Mhz9Vqd1KKJjc/QzqB0t91USlQfnU2xOzGAh7LLrEW5a13K5p5lHl2Svojj02syp37SBYjkYX2MwFMlgzlm+EGq4sYaXdv4nzGYTufOFuG9v90+uwYoXCA/YVHta7X84TVwgCxQCWfMKPanUPsEPFApZA7YihlPw1cya0ITDXjMzdCemjhb1DMcraqs8yrn5Oo2+r4Fz8zNsrnuHPoZivVfn7FJU7KgmE10DQ4pXmWLzh1ysc6UOtr6yoC64=","authorEmailMD5":"d92261eaa4b939d21278f2bcb1e1a70b","message":"The best article about this on the whole internet. Thanks.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2017-03-28T02:13:45Z","timestamp":1490667225,"authorUserId":"disqus:douglascerqueira"},{"_id":"74ef6ba7-f78e-3261-bb1a-e32e0023bc22","authorName":"Larry","authorEmailEncrypted":"JqF6UbO5rhwZyWiPaTm5GWxIIXCiqToqbIBvH7mNHGjseB3V6e2WDAF2dyLir4UD+WdES0hRsquTLZUTaeyHi3E/BpcfQeA9Kv9vZtoCP8Yc9kg3N2LcsMkvGCGayz9u75LNJVZrZeE18KUc/m5RcBteNgtJTo4WCCTzV0Sl3vuXEtev9PMoJ+D5/iIDYpaMCU2GT6ULvmtSltmyS4TUX3djyw4n9vzUS965icYCHexynHZlbUlnJtAmWpVNcN2Li/aP1jrKSVoFxUSeClSQrrF1bVjDuy8xTbvYfZ5OPBSaY/8afm0xpxFKb3v0+XiVbkQd0RDYZ3RvR8kQ9ANoKZKc9dgf5Xu/kH2o2p1zBEqgpWtDoEmTlKL1J1TNzcrFqd7re0DdH+YhN/Bx8SYRdHdcXZTXpQ/L7/Lrp3n5oaSx0+iu33N/REXslEDRW+GsEhnIGnJcKKHwELwOFyOOxyhboB/HFDVnG358eYmoVLydOdT4hcT0XYsQNBKSOS0KyTm7UTr317wQ2fxpCmVfLpfxAPYSOu3W8UU0HNfR/xz5DIPCYX46tHUCUheFpG1KyigmvFc8WrwMGZIUybykkwHeL3+oC4NdK/tnTu1Ye7FX5MbKx+GQGvq4Ri4v5SR8iQZXmlyWvbRKwZsybIgMyqNJ/Et/oAHLwXXm2DNPom8=","authorEmailMD5":"63cd07c7dea0faaeaf4746dd2c317a67","message":"Thanks for doing this series. Like a number of the readers here I suspect, I got very cozy with BackgroundWorker whenever I had to deal with long-running computations and/or service calls in my desktop apps. And why not? The darn thing works.\r\n\r\nBut Task.Run() in conjunction with async/await is better every time, your well-written examples show it. I'll be borrowing heavily from them in my current WPF app.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2017-04-06T05:39:38Z","timestamp":1491457178,"authorUserId":"disqus:disqus_U1K77oWePH"},{"_id":"10e64a62-d55b-3091-8f7f-77a14e5fa288","authorName":"Daniel","authorEmailEncrypted":"eCGM5NAH88zfN6QqH8Yo9FwZoRqbk5JrW7KnWmE2wk0SShraTeurylhwmbchlS+jHzIMe/w5gPWxogB3JvjkbLSzWG+yl8sElnRg6Egf9fIEu0VCFU7fGf4Hk2qFcZV/r1cLSN0m7UbYspsFBDbGQTOb/opsk2WWdZyabQ+anHta3X8+LvVrvdZbAPhMgNYlun2ITi6aJCu/MyvhbaExSKkb+mJubA2Ay+W5Zp98HkLWYmmmcj8iIxx5AT3c/TVGcT3VVnPxTLBgWU20SXABdDVBTGjVPww4pP4gpFkMfr4RPlRWy64s962/W2xd+XA1SqHM0TZOffTd0L25Lc/vI/Ea2fxa5m17MhF0Wodr/N/w0FttQtfJ+RCBS12kFSMpYPDQmTMECPbKz4DUYFEMoPnkxQRHqMciKCD46Gr2Rlc/scKQmBLy2qpEilgXKWP3jO33sHtiNc5Sd0wdIouIa1WtQFAGjLD9MABxfOq8vnULUoxP6abZmeTF3I5BQgYMapaGL8sfkE0GZ33lzXY6x7OnWLto1AU38rVPOEGkGKvk22MYN8wk/6xjNdjFhN+D3zHwTLZs/iCLb/z14VAB8gmkUgGEhLLc0YbYZS7y88U2iH3L/BxGy6+soUZfrAmDP8RhB4ajvZPArpFny5oz60TVmcziZQEaanrdwxtWOuM=","authorEmailMD5":"f6b59f43a3c16b84971a2f3162da90ad","message":"This article is still being read! Nice one.","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2018-04-10T02:55:51Z","timestamp":1523328951,"authorUserId":"disqus:disqus_1asK4tSZHO"}]