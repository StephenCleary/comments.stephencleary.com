[{"_id":"f3ea5f9a-8aeb-3de7-a2e7-f30d5758d355","authorName":"svick","authorEmailEncrypted":"","authorEmailMD5":"","message":"Having multiple consumers in your “non-dataflowish” way would still be quite simple. You don't need TryReceiveAsync(), TryReceive() is enough, because it does not block.  \r\n\r\nAnd I think your example with multiple consumers is not very realistic. If you want to have parallel consumer, you would use one block with MaxDegreeOfParallelism instead. (Unless each of the consumers represented some external resource. Which is an idea I'd like to explore more some day: using TDF for managing computations distributed over several computers, though I'm not sure how well would that work.)","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2012-12-01T21:21:48Z","timestamp":1354396908,"authorUserId":""},{"_id":"0ba63598-155f-3ab5-aa2d-7f8b97681c69","authorName":"Stephen Cleary","authorEmailEncrypted":"XNJTzowYUGjbSUD3Yjm2r9nHDLb1Yu4Tq2QXiB3E5fW7bjO/SRABQu8oy7O+FcQgofqqEoJGdkTaJg1nT/4k80lc5ZWq/airp6JzN5jNeUt6fHqY0fHPvWUyGqvCDj4BBugQ/zv/p/HLG6UtXS9fqXr36JQKXvXLjSFn3/8ZdJ5F5pFCGHk7tNPpPizdtkdhH+9YwbYOL87L6jtWZq/BepL0qghd0dBzvYeTJOe3/n/lyXo0/QQpZlbwFrnB6fy0C3+q7Ahu79qsIbBHpEEzUeTgQmWxMX+8P+BzOJnP+xA5fRRsn+EB/Ty2pXIRulGqQ3R6sjUSQx1wqgHJhKaC2R0L3NOQnQ3T+N51X5krcVZ4WLTyJeZEdJ/MANrMB9/ERPL+gFvutVUVl/oSCFBnOEvUmHCUiMa+KPMBaHIt6zAdtKnUrYfN6BWzpgHMix6m9o5CxuowkgoQPmnFiYPBwV85IY4LKYuOMND1zpe1aFvsy+F/Ua5xh6R9z+y3x6S2uKi5NVufVzo1w1smORZMzEn9W20rO/xa3UAcrq8QtJtBePaFaj3usRT2Pm/GLqDwsK+0Qvv+ChnP9qe9uGkM5ydCXCK+bOZfnpgD7c+kCzwZQAQ9K6TyRtapwLpvevQIhohdpyfADg8BSFX0BMO3ouW9QaR8EKvHWRs4FHMFWIQ=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"In my examples, I was using consumers that wait to receive. Synchronous consumers can of course use Receive, but asynchronous consumers can't use TryReceive because it doesn't asynchronously wait. That said, asynchronous consumers are probably a rarity.  \r\n\r\nAnd I agree that the multiple consumers example is not realistic; in most situations with multiple consumers, they would all be doing the same thing so you could just parallelize them as you suggested.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2012-12-03T00:09:05Z","timestamp":1354493345,"authorUserId":""},{"_id":"9ae6e8fa-aef5-3943-aa2c-e58a53192864","authorName":"Stephen Cleary","authorEmailEncrypted":"iQMRHUUmZKG3oH0NQzTy08tUd+CCUN8y7sV+VyRSwEPYcjSLXxeW1Pf/EGCC+J/2uOCApVsf7KXEcZhaH0nByNqzSxnapb4VAZHM2OkuNXjlduncbf6HnnMoqbHKGYf2Jhk4XyxYY8lAOLQ1xRR0/ZUnTH0G4fflNOqAUdutm/jsF9/BBEiRz9tWSr+45FgzmQoBYE1KQnpBQ86pB6bLTqM6mJoobFGsfdWj1iuJJVLBjo9K6rvtXVYBDQWGKL5q6a55GUQ1gF27CxRjHo+/YRVhxJ1qluoHwfRJPdHmMNugT/ztrseJpkff9QRi1qy0hPO8nzkVU1ZIPjqmjf+8iMTXd8ekkrLeqIBSW5dJ+1gpZA35eYB5YyRp93slvnTZ8Wdtb4Py25aoC+iX4cN2PCF3jCrOLJzaLx3vJqW2t4ia1tM2e1kPLxKeeaCG9GGy/7+Ns4QEfeREXuLgPP6A3LFL6Zp/jKpyILqK3TpBavOioEA1o0ytJ7PpJF4LHeW2bc1rmQSz/ZVr3tkgS3cEsp3Umh0PmiAzrUPLkDWmOTnFmAqxLbgwLxztUoYTF/pX77zgP1+7L19jB86Fq0TB2aM9PhzcO8RXXAAnlGorp4DF6LC559nwhwbiBHNUc1HlAFqwoM7xX2Drqs1QeWGuw4PJ5S8EKjmStY2W/GAAuJc=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"It sounds like you'd just want one consumer that could process in parallel (my example is more about three separate consumers; they put the results in different places).  \r\n\r\nIn your case, you can set up a dataflow with just one consumer and specify the degree of parallelism in ExecutionDataflowBlockOptions.MaxDegreeOfParallelism (by default it is 1).","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2013-04-30T16:44:12Z","timestamp":1367340252,"authorUserId":""},{"_id":"fb6f9467-3054-3aaf-a9e2-14d0a92431a6","authorName":"Anonymous","authorEmailEncrypted":"","authorEmailMD5":"","message":"Excuse me,  \r\n//I've read your post but I got a question can you provide me a sample where I call different consumer in parallel?  \r\n\r\nI've seen this  \r\n\r\n var consumer1 = new ActionBlock(x => results1.Add(x), consumerOptions);  \r\n var consumer2 = new ActionBlock(x => results2.Add(x), consumerOptions);  \r\n var consumer3 = new ActionBlock(x => results3.Add(x), consumerOptions);  \r\n var linkOptions = new DataflowLinkOptions { PropagateCompletion = true, };  \r\n queue.LinkTo(consumer1, linkOptions);  \r\n queue.LinkTo(consumer2, linkOptions);  \r\n queue.LinkTo(consumer3, linkOptions);  \r\n\r\nbut I prefer to call them with Task.Parallel so I can parametrize how many consumer to create...thanks","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2013-04-30T16:04:54Z","timestamp":1367337894,"authorUserId":""},{"_id":"9aa2d887-1e40-3d42-8d06-93c8779f7bf5","authorName":"Robert","authorEmailEncrypted":"","authorEmailMD5":"","message":"I would appreciate a suggestion on how to implement efficiently the following scenario.  \r\n\r\n- One producer prepares request messages which are submitted to a \"component\" which consumes them and replies back with another message (a future)  \r\n- each message can be processed by a consumer in maximum 30 seconds   \r\n- the \"component\" which consumes messages cannot process more than x request messages at a time  \r\n- if the \"component\" is completely busy, a producer should wait for an amount of time to be accepted for issuing another request message. If the timeout expires, the request message is dropped (as cancelled) and another request message can be processed.  \r\n- the producer should be able to await the result for each individual message if he wishes. Practically, for each request message a \"future\" response should be generated which can be awaited if the producer wants.  \r\n\r\nIt seems like a good fit for the subject of your post but I am not sure about which async/await constructs I need.  ","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2013-08-28T02:10:16Z","timestamp":1377655816,"authorUserId":""},{"_id":"e3991af7-4e6d-3148-9820-91cd85879108","authorName":"Stephen Cleary","authorEmailEncrypted":"LmZxT/xy2cW7OK7Gd2h3Id+/7zwRAOcNPuS/cfZjD1JdRgL+R8H6+mGFBsp+3WtLpycv1XxLruFfMf2t6GCuJsoHp5lyWE04LNlBNDbknHxUap9uw/srAVP56BQCMw6p5VcrqpXzyDMG8M1U5+IjPALPFPy+vSBMZZeR6i3TWELB+PBkuNiOJIBjbLfb4uCbeZJ2aAP+Lhmkz7bGQcM6w4pQuCJThuPar2GcTLuYeG/cBPmDi4qA9Z+krezjY5gTR6cEXIGKUlCusOGsldFeEU0D9y4UkTmIlmbuVEIBjXjPDV1QcBRujJHGeOUou/1wN1afnf8dbF69RdvPFHgCjyqGHE/818E/FZloUdNmN7Zrb8p65nrIoL/0LnNHjC5Yg/vraj8apZt1kwLHvQXxmb8HS//aaKxzIWHyMiyScIRNupimkPQYYb0HJ9rwF02IrSt9V6ykp2qa0Afz4JyLtfAvcBdydGU72USiY+L0aCVcYDJu63MhvY+PzxPEcty/BkI7fU5sHX2KWZlDImBhXx3oIP9fQfFaHYRlbymtUHj1pQsCzs6FEsTU+Xvez5kZLv2i5d+mPTNKweVZpDRwD0Gx5Rav8HM8xjJGWM+gpRc+S18n3PRc21JX9ApLMboJ0KkecVj3qvlpk2t4H4mfx/eYN4165LangmnmOyCc66E=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"You may not need TPL Dataflow for this.  \r\n\r\nFirst, you'll need to add a TaskCompletionSource to your \"message\" type. This will act as an indicator that the message processing is complete.  \r\n\r\nNext, you'll need to handle the throttling. If you're using TPL Dataflow, you can just set BoundedCapacity; otherwise, you can use SemaphoreSlim.  \r\n\r\nTo implement the timeouts, use CancellationTokens when you send the message. For TPL Dataflow, you would pass the token to SendAsync; otherwise, pass the token to SemaphoreSlim.WaitAsync.  \r\n\r\nBlog comments are not great for sample code. If any of this is not clear, post a question on Stack Overflow and I (and others) will take a look.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2013-08-29T20:08:00Z","timestamp":1377806880,"authorUserId":""},{"_id":"f923cc9c-42b3-354b-a3f3-8d9da809a89a","authorName":"luizstangarlin","authorEmailEncrypted":"","authorEmailMD5":"","message":"When implementing a WCF custom channel that process messages N:N, you end needing a totally asynchronous Producer/Consumer . For example, messages received can generate zero, one or more messages, same way on send channel.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2014-01-15T01:59:53Z","timestamp":1389751193,"authorUserId":""},{"_id":"0c68d212-a193-390e-a2d4-016074e0b03b","authorName":"Stephen Cleary","authorEmailEncrypted":"Vo1A/AyFIf7T9CSN+y1kG3DcMXhiJjumLbtc1UlEOmxHmUWGI8bOzPEJAPnsv/4WhyKiQuvRqnhjmegJC40rmcPQKCawMLVHlTRKTMwS66tZD38oGQiliFi9P62tjitJLyMTBUO73CiALjPhUgwxDQOJHIK32lyYU+Dav8gNel+1fsDFhfxmK/paglV2kQUganKpol4a57ZgQeqNovyquFflQ4R10iDRmjpeyFFh7/ttVQzr3LdhiDDbNlh+ct+cu6Rf0iiD6yekAYqO48UawpsnXnx4UdhckBb+WELO/9ljBkfTh6frgCMYE7Mag2BBn3QDikxqKsZLWczcB6UoxzuK7GAzuyFnWvlmapcQ/nDiSsvWoiO/YX0NOIQRW99jqhW8o+p+ppaHfQ39kPiRDjtBW8h3q+YF9R+W9fUrezuBjnsCkOdiJ/t95m5gLU6ia0wvHyrBQ4u43DLuik1tgXg+u5Y1nEAt5WHsU7PHHE+qQUdqpttNtus4sQwh6PksGjmcOIgJwJq/gI03b9Z7zpLdAHz+cVG7qRgzs2AMsZvpFbP190euFqIL3GkWdodc6/Z5h/yvWr3SfJTuXLY6DtYjeDJAJZhf0f6Ps0edv+xbkuNYqdhVLazWkE+M5ZOpCtqo2iZ6+IhDTrQqnuIC++V6QcBws9HOBIxS53LRz/s=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I've never been in this exact situation, but let's see...\r\n\r\nWhy can't you just call TriggerBatch as the last thing you do in your action blocks? You'll need to \"prime the pump\" with a few small batches (as many as you have action blocks) to get them to the action blocks in the first place, but then it should be self-regulating.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"7dca2dbf-6224-3846-b867-136c87aca7a7","date":"2015-09-10T16:01:57Z","timestamp":1441900917,"authorUserId":"disqus:stephen_cleary"},{"_id":"7dca2dbf-6224-3846-b867-136c87aca7a7","authorName":"xenonforlife","authorEmailEncrypted":"eycr8GDlVgqfZgQhlj+L2WngAlul9eWizvrwad1QHfhL4jl0EvTcn2GNtpnyA3cUz01WrQz2qcVlmZX9Zafv0Ex0si8nnHC7Qgi/0sxYSBH1kB5QcNJz8P2tY+KzWpTHkrEphS1C7Bjyo37ZIDbty+cOEkNMSBG53UDmY0GtlkQOBeTKuQQTXT9AoPFlWsXViaLMJJLAiNj+TO82HsDynVIYF8or8nCkGon5fvpnpgsBnvGRohVyNHVSpQyhPgA3tD7zXWA+PQ231iQNj03jvlfIXg70DM4Q3fSjWEYuJehLq/1k2d9ATNlrOudutALpJhgwRWBeaRSXGzgu4Yfga4WtooR7nEvzirPNIzuCf35z2Iz38JHKG/S0wmaXd3r9tPFS7yjNqxKE75QAuCpYCOHs/+CXl2ZWokVkRHwk06HnWtch4WlBGOAuuWOz2l10T/HTmHr1h3a4tqqOwol1BYVz1Paia8H2xOw8jFGRL7NtY8qA1nmtv6sUBTMvJrzQLtS6SbJp1P4rrZsnYPQQYQQ/9u38JU7MqAUhj1VVy1w0iCu9HIV3+C2X5e/pzMV+UyG36GKodJunXoOn5gRM5dOEx4q6t2fcU2RG03PZYGPrqQpDdnxePnk1HacIGU22TRN/L2mS+5/o1srFj8PVAj4+Rj2TZhzs/oQCkkcjbl0=","authorEmailMD5":"678244a0ad782aa2a25518ca6168b046","message":"I just hope this blog post is still alive, I am just learning how to use TPL Dataflow and well am getting confused over and over again. I hope I get some insight from the expert himself. So in my Producer-Consumer scenario, the bottleneck is really on the Consumer end. I have multiple consumers as you, and each of the consumers send an action to external hardware, which may take some time. My Pipeline looks somewhat like this:\r\n\r\nBatchBlock --> TransformBlock --> BufferBlock --> (Several) ActionBlocks\r\n\r\nJust as in your example, my ActionBlocks are the consumers. I have assigned BoundedCapacity of my ActionBlocks to 1.   \r\nWhat I want in theory is, I want to trigger the Batchblock to send a group of items to the Transformblock only when one of my Actionblocks are available for operation. Till then the Batchblock should just keep buffering elements and not pass them on to the Transformblock. My batch-sizes are variable. As mandatory, I do have a really high upper-limit for BatchBlock batch size, however I really don't wish to reach upto that limit, I would like to trigger my batches depending upon the availability of the Actionblocks permforming the said task. I know I should use the TriggerBatch() functionality of the BatchBlock somehow but am really running out of ideas of how to approach the problem.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2015-09-10T15:11:54Z","timestamp":1441897914,"authorUserId":"disqus:xenonforlife"},{"_id":"fe0183cc-1a55-33f5-ae78-d0555b1d62e0","authorName":"xenonforlife","authorEmailEncrypted":"USWAXyId2s0uCl/O9/C2ZQlbPTkA/CO98UYJbC29mG/2rTl5qiwi0KzOWCKaopRynILeW8lKjDu7E9ox1R6N4VGRTLRGLvzHkAnOBQsNiN+5dhz3vCbRvNCkTY87LdDwz7ROzzMvO9IOl6MLohDsE6UTpox41p4LW0hzg4mN77yIKDecrkbI8c7AO5Ayo1nb956nuSin7vqmbeurj/eTwO0xNuw1BMsnGgEGSeV/DHnPQj0aDuLYIRqKPq8n+iH4rmFAfp3yyPTGOZ7tGjUwoC+397kU1yOouIV3dXt/m3baJENXgmlhWzHusyoMdVmuIXNLEbnf6dvIfmby3bgFXiLH+pdMy1lRz10OT1787IPwxCrlWEz6UoYt/Eqrwit4gG/PTBDHauMYnCXa/E/0X3lOkb1yjixatwaRH89c6/Gu4tcsWMzPflze402lDQNzKbG+9JN63CWkp6S25fUInTMfElljrZFiQdFVh7Jq76fGfhRErtmtNi9xMjMZAnK1iBUMBycr65h04fylA7jcXJzHpzbKfAfoNmLYailg9wCUq8XeyWg+2UApm/rCxG0kbTwegpBvyjpgQ04J6MgZJJtNaE4b6eJWFmfaDW0pBXnr1L02PQ7DXpBFZpComTSKz/7co2VVD9czwxfPNGfogfk6UBo4qBHuAGUyDNqsE3k=","authorEmailMD5":"678244a0ad782aa2a25518ca6168b046","message":"Thank you so much for the speedy reply Stephen, I did think of this solution infact but then this approach poses another problem (which maybe disadvantageous in my case of contacting the external hardware) that as soon as any ActionBlock is about to be over it would trigger a batch, therefore I would somehow run into fragmentation of an otherwise (preferably) larger batch. The next thing I was considering is triggering it from the TransformBlock (as the first thing in the transform block, here too in order to start the pipeline I would have to start it once externally but after that it would be self-regulating). This way each successful propagation of a batch through the transform block to the buffer block (after transformation) would trigger a new batch (wouldn't it?). But in this case then for a smooth operation should I then set the BindingCapacity of my BufferBlock to 1 (or equal to the number of actionblocks)? so that when there are no actionblocks to accept an element from the bufferblock, the bufferblock inturn stops accepting inputs from the TransformBlock (and this is the point where I am getting stuck, since at this point the pipeline is self-regulating wouldn't the transform block keep buffering its output if the Bufferblock is not ready to accept it, since from the documentation I could understand that this un-accepted output would be postponed/declined, but I am not sure how that works, but this is the point where unfortunately I am getting completely stumped)","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"0c68d212-a193-390e-a2d4-016074e0b03b","date":"2015-09-10T21:58:44Z","timestamp":1441922324,"authorUserId":"disqus:xenonforlife"},{"_id":"2d8275b1-2593-3951-b084-fa24563a95fb","authorName":"Stephen Cleary","authorEmailEncrypted":"a84v9FsGeWyEbo4aRphSgeqThQlasQhWGmt9I29xxP3NzlfzS8vdE5QUQRgfcgVOQ2bKZqcB1WVOP5FMbqj0IAHIRvxX2BFCtJALfCWamf24c9T6WaJybB/qDIYGMTEkJeYYAPzyRHXY5lfGCmgx5ZjP7IyKyPPmJIC0eVO5AkACyiRQLXSVEB7OGMQ8cc/vfQtKg0jo2s8+Qpx61cEi08iuz/WBWdN0rAMPi9Exr/ZbqzDCgQR28+inCA7fWTaND+ifnfG+E7qqhfTHzqpvt9X2Ph48C76nCb8gKrAcLPXFCJKx0w6pQjYs6ujI7iomQ6Aj8/3PrgsKXClpT6RQQxyesgay8AksRJifsLfb+7EF0MsJPFn8Q337SyKgOxS6GDShCRxU0WnBce5TF7tn4DLVgnDN/MDsh62yCBteuHID1VcFm4OxbXM33RPxHRy0OBgdHqL27Rtj2iBxxyxLbSVL57LsWPrdUDbImup066VLJj7TdtmEz5jtEi4guX6S0GvumUN3dhQ/8jo4KRjENuJfmr89OIalyB1l2fTfihMCHxdB90wWV/epIhsh3tUboAw1UDlrRZCKnkeMN2vM7tx6y8iMeYOpSTlo1oX7rkQ6sGUllaa0m/eAtOre21U7xcDVAoYVkr/oCCsQN7yNFYKfPuQN8C5igawNm/F5LjY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I'm not really familiar with your requirements, but it sure sounds like you're overthinking this. Most of the time modern computers have no problem keeping up with embedded devices.\r\n\r\nAt the end of the day, the best way to know where to do throttling (etc) is to just run it as-is and observe the behavior.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"fe0183cc-1a55-33f5-ae78-d0555b1d62e0","date":"2015-09-11T00:39:35Z","timestamp":1441931975,"authorUserId":"disqus:stephen_cleary"},{"_id":"a5934daa-8613-3be2-9f8c-eaaabb2d24c5","authorName":"xenonforlife","authorEmailEncrypted":"MO6tCYND2w7mVjWug6oaeAA4bvPxuqIdx2V1oB6Fk93orChN3HiTfTOhUwRO7HtnaVWEF2sFa3RWV/EzxCk4n9bEYdY+1qQe5NtEq9Jt/K6ZhfJiP2SKQWA68c1X4oxFme/Rlfp3vbZ/18SY6YqWs5rEE4HNS/aN58AtuCxdLRhNzIL9cgKrO7Bu4930TvGp+JGmUcBJHMDMTQsPxFEjwwsz3V3me3r1UMoPwQGuz2JUW8OvzGVUocAWV+nQB2mYoqxQ/0TVOdOyZiApFyKKqFj4BA/0avJYM0Ah0lhNJGKzJt2z9toQq8LN9ePKJl72w1mk2fW+d7ckgcgg2bXvvGHhI8Punp3F4hy9Rmh4Vg1bR2pai1QCXmzbFMuG1jBUcJB0hkzJ7kFkC19eQCbFJGHoVTmtp5DjaU94h/3zQ3ReIn1CIIOMZOpNqJfTNYFtE4dFmYN1JDo0lwoutp0ksEsHPo+oPC4o5n2cppV3m+CpHw25K3g8U2DSQ8js/kAnU9Kt6DyMkJe9RRrDpXruLC30FsHqc/7wBycyZFs8AV/40nP9V3z36Qx8nHMNcJwqVBeRwUCj56k0X0dP2WWEvLX2SrbRtaQ2bvlk58wPFoN5h3GFbRkCUG3ubtkJGg5dGk+1G+kCIxB5RwM2s/805AQlypNf+h+Tp1ZDHlLG/8M=","authorEmailMD5":"678244a0ad782aa2a25518ca6168b046","message":"Thanks for the suggestions Stephen, after reading this, even I am now feeling that I am overthinking this maybe because this is really new to me, but I have to make mistakes to really learn it. I will just give it a go in small examples of my case and observe what is really going on. Thanks for the advice. I really do appreciate it!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"2d8275b1-2593-3951-b084-fa24563a95fb","date":"2015-09-11T06:14:32Z","timestamp":1441952072,"authorUserId":"disqus:xenonforlife"},{"_id":"349b05d7-a73b-30a0-a8bf-956cad81315d","authorName":"xenonforlife","authorEmailEncrypted":"hJZf0ec/gcEggVRRBvr5aAellkBIJ0poRMOZKn/fWE6wp0jZE9xksgGqs9++ru9nWGYMK5aVc9j2LhHhEyDiqjWwIkOgZg/uFnW4ysZ+5CwrIwIDaJvaf5lFEi8aP9mrxmvOUikUTkCea97NCVelUI5bfyfDlxtdvjwKA6LYuWMjUVU+k3ebb8W8XYSC3U4BSoBawnfPKMBEDnpfjrNmgctCEaeW9wHlGsu8nstoXtWMl+RSOajKm7X2jjLP7I08g0rDCimiA8UxMvicHzNehYlZcbnuLfbi2nUcqvkat/iiE7na6d5SScGupckV5ufHTJfZt+bNQq9zWQtoOEfuGB2V9rI9fvLvg4IGoyyCwpNEV0pRTClWcWfplWl+W0TQ+znOfPyn4oH+0tewWd1FiC8KnlL+KBSSWgCZAkSqyuD3UdOeurqXSqOBAgpM+xJWmmCd4latHIjBtrX8CjG6jKJk6X5Ew+tL8M9NPt9lUwUBUDKRrQbcwKG/KgN5MdPUhWYQvuJNWvIz9edCF1TPqe/PjkFFo5D99A/CJh8H9eJPdyPrG+D14zWn/o/A8sNguoiawmDwrVTovJBT2R4egi4p8eKF1Z6bkMrHB3BEu5hfJ9G+A+bcrCN0EYYoYo2fi2MbNktmdVO7UeRvHd9GHnCuaizeXJmLFNDAOXpuxDQ=","authorEmailMD5":"678244a0ad782aa2a25518ca6168b046","message":"Hi again Stephen, Your advice to put the Triggerbatch as the last thing to do in my ActionBlock indeed gives me positive results and I did move forward with the implementation as well. However interestingly after several days of working properly the pipeline has come to a hault. Upon checking I found out that sometimes the inputs to the batchblock come in after the ActionBlocks are done with their work. In this case the ActionBlocks do actually call Triggerbatch at the end of their work, however since at this point there is no input to the Batchblock at all, the call to TriggerBatch is fruitless. And after a while when inputs do flow in to the Batchblock, there is no one left to call TriggerBatch and restart the Pipeline. I was looking for something where I could just check if something is infact present in the inputbuffer of the Batchblock, however there is no such feature available, I could also not find a way to check if the TriggerBatch was fruitful.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"a5934daa-8613-3be2-9f8c-eaaabb2d24c5","date":"2015-09-22T10:07:14Z","timestamp":1442916434,"authorUserId":"disqus:xenonforlife"},{"_id":"f6f03198-13f2-3a14-adc4-41f8bb8514b9","authorName":"Stephen Cleary","authorEmailEncrypted":"f+7ToOGX9qrKk1J+nB45C6IVOwqRy6GKlbZElsl67oA+9R8tC83336dEu53/iuvJIkUHpHv1av1f2boXDtnuUoSvN0Fh1mFKwf7cOOqmdjrrXLA44Y76GOku+5KTP+NrJIUZHXMtcJbnWfAkj3zUwtF+tO14F+OvyuT9Te+aMmEgnXQN/TrZt85LXejrNg0Thz4IDXI81CUah+9TAWkiz0zQuJp0HAXiUmNxM9tQQLd1k8Ea2M2ZVwoGEtCehp3KB1OaUJRt76BVZTOP0nrY1ZpmTy6O5Y1/uWZ610cagBrcTJnq4oWmkqRcwn348cgEW0/I8KiXnm/Ko2DApFMZaLZQqXpoCzxh6+i7sOdR9TmwogqcHNRJX2UkRZWdkbLEd7ofwRkGyfrlYfm2hh0MXXbHUbKg1Fq9vTqjXNrcZXJ2udfYZ1u5kZQOb/wxWbVs89PLdWJ5l68qqEYS9zLikXLV3VnV5jClhiYKDawJ/HzcOu9QpEuIWVHqk9/pvUFmuNpO798sNb7NkJ0wtRqsv7FXGVyvc7g9azoku7TiLmqm6j5YDxLKufEmBTRmXIAbcjogoxgEQEzjGaX/28a+KGbhqUFbK9h6tm4DrmSdpLUtLlyKBYhjWS4/NwMFwNWE4XRPTpqbzIUp8MSh1b8as9y7DbSb/KXcnOvA6YcZgg8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Good point; I'm not sure how to solve this. I recommend you ask on Stack Overflow.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"349b05d7-a73b-30a0-a8bf-956cad81315d","date":"2015-09-22T12:05:43Z","timestamp":1442923543,"authorUserId":"disqus:stephen_cleary"},{"_id":"7dbf9e85-1934-375c-8a19-40d0dffefdfc","authorName":"Stephen Cleary","authorEmailEncrypted":"XoFRB48J7pRSNHKvX2FioXNn6ffsKc4sVr51uzLSr6dteqmDxacbGgzuag6PqqIoO39ipTqhNJjbxkhbWTIrgMZ511Pi4U+LLJZknP9h4V8P1796Am2/n2IbiYCxetGlXJFM2CdVmpdAvZfkkJ+1TpRguIKoOPZa1kqbReCgEd5YfTEOzH98F25HlwTQLL5zsKZVkiQV9tUvyaDvvLfU6pPvFh18UHZkJbJ9VdIr4ljDEaweTWBPgoV7vOTIhhsIDDgyeMXx/K/vCmfEVqMq4453mh9R/Gs52G4Z3U+ifHb8tOMWlIFUy5g9aEZKFkV8DmJd/BHV/vjXWD7T/wfu60ARbolWgKmhCShJCgG5Pkx/KXHEW1RRXjgb1XAwtkNEiG5uQ3mJtzNUgxZCekZLYUuxNFEHAqzw6dgwLZJFWlevJ4qjTI+l16+gTcPLkypZ8SxSoMzjMGf4GoSDJxOD3p4WgYj1x4xcG4FIZQBYb/dAB6erMcLDI5VIw6JVjGqAvL4r3ENXV0tHNwpCDLc09z4Lw3uZSwQAqfNHZ0BKQTRJikCUe+18/UVYz6/tazI21iM5E7Yu/0KMZ/L4U9Y1uTk7CqedueKHhrpwgVlfy0QgUbXywOvr5367T2if4RPhjx2Wcg+iUdA5K1/twiShhih8eJb5COx8Pjj+JgH1sI8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"That would be difficult to map to a standard request/response pattern. It's *doable*, but not very easy.\r\n\r\nIf possible, I would recommend looking into SignalR. SignalR allows the server side to send messages to the client. Though in your situation, it sounds like you'd want to use a client-initiated request with progress reports coming back from the server.\r\n\r\nSignalR's progress reporting support isn't very well documented yet, but here's a small example that should give you the gist: [http://stackoverflow.com/a/...](http://stackoverflow.com/a/26591235/263693 \"http://stackoverflow.com/a/26591235/263693\")","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"fc943720-3119-3c30-8506-c379ca49e776","date":"2016-03-09T23:30:44Z","timestamp":1457566244,"authorUserId":"disqus:stephen_cleary"},{"_id":"fc943720-3119-3c30-8506-c379ca49e776","authorName":"BPD","authorEmailEncrypted":"LxA/C/0XvQblICIxmY673O9pVpdUO+eiKDy/sUc1T/wJtSdpCtJkVDHGgHgIwDxGO6oEmIprpQaIAPxmZnpq+FCpajvL8XKuw7ZY7OGCOYcyfohOzlhASU2EMtoLY+68kq1bDDeCm3TNtlU5OSJtQnWIPcSQGKHvglzEp2WAaqrbT/oMBHe3UyxRIRCqz2AJgpv5DyxoOuYyaY3bYck8tcQZxIt57Tpw32krtHc3iYvWVqIz6GAH7Ys23cXH3Sy0IT9pr5di98TSI3lp7Azp4vRfA6iFo+3aAaR6tVAEUgrFuDtChSgJ5Jiz2fEFlZxarOQNkaiIHXUMJ0R+4rLN/fxpVcY1Mu+MZFt4oyBcmHqzG/ZW0nvF3p4VALNwmyAjrvikeVI5eKKefoRSvD/LIGp9X7Bt80JFtfSe6RYoqnu9NN3d1Zem6n74zBnnDPFrrWIKrjIMh+ymRzAkDWNIc2x5wRC6rE+A/hT9/Y7x78pekEEUJezZMMTAnQ12ZefOm7a27i/7PE1ISyia2xFDXhbJ8MwCeeHAQ3TvvZ+iQ+h1VLHqv7Y3S4DnPdLGGP4jZJYet47DR91ic0iAZKLMhv66F/FHEHytePEiJ0MBut7jpYkMZlykzOWQ8MRB2WDA90sIW8HS827dP57IQGiJm5BR97e0MHqtRnSPSEswUtc=","authorEmailMD5":"972d9371ad028ab56436fa052d2736bc","message":"I am hoping you are still responding on this blog. I have a scenario where the database response are received in segments(pieces) with a timed delay (certain milliseconds) for a particular request. The consumer has to wait certain milliseconds for next segment to arrive every time it receives a segment, but return that segment immediately to UI. In the mean time we keep receiving requests and every request has same cycle to go through. Traditional produce - consumer model seems to not handle the delayed response cycle well. Do you recommend a better solution?","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2016-03-09T22:34:56Z","timestamp":1457562896,"authorUserId":"disqus:disqus_lglbHNZnIf"},{"_id":"fe2000cb-f497-3b7c-9490-1a8206ca8f29","authorName":"BPD","authorEmailEncrypted":"PyCJcxI8v1ZtOw/wCWTZvMTF3SYgCKF2VvZbLgngG3Z1fuGrqKU8ygVIbJMl56PXoMHKYxODcdO3lHOwe8+vONZJy5Wk3GmyBEKXB4StsiYOwzaP7RLf0NN/V4K0i/I1qJqmeKEPymyl53gv74h0wnhip84GLqrJ4vhvNaSfNXK1PxwDzx3jwe3iUWOBji8u78wcqyX1Q0BqjVz6OBKREV8WusxVEGJDMFdikl7U1cc6ApbAbItSv8Q00Y7E4pYrmQswgDUg1l1KYk0fwpdOOavpZipLkqgR2vfjkf4KyjoLTMLz9Uz5uhXv9VnOBgJCeBrsvZiaJbIm18HvaWcNXWCLq4KsCl/58CFoo+28eHXKAIchc6jP6eh4FmESm6hEYII4KjvAfJ/1XJFJn122Zx+VokogFrQSF1KMe8W0933QuAssnj18QXwEZvKpHn24lA0QHKe2oslICJe9CpaF9snnh1VEmPwXF8Amdxzew0idQ0b9/t+gtJ1FZwoZASjtGZR+nEFkMK1zOmcGTetsCMCoTvw41Ak/sIJHsVvVvZch3EkKHt6zXU3UTSzi+Ahj0ju1u/v15C+HHAF6CWqUn7J5vS8OS9ouceyX8sz98t88wIqUQXwgKpGyn/STir/Q2Uc2JxblBkwUC/ksHQBVTRhLjaN8urPZPuEaHqsnkXc=","authorEmailMD5":"972d9371ad028ab56436fa052d2736bc","message":"Thanks Stephen for pointing me in right direction. I implemented the progress bar pattern and it fits my needs","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"7dbf9e85-1934-375c-8a19-40d0dffefdfc","date":"2016-03-14T21:04:50Z","timestamp":1457989490,"authorUserId":"disqus:disqus_lglbHNZnIf"},{"_id":"15288893-eb55-39a9-b9a1-6a45056864ad","authorName":"Stephen Cleary","authorEmailEncrypted":"B82xRcHsPCTcqU3unw5v3/2nWnrFeFwZKt8LTBoiEK6BvCZiL67kd6TEEj74tuMh9DK0pH0dYckak1sqNe7WGXb63RJKL9Fdji6XbcDONo0U2vEMO+5hXGEe7iPv9VyK4gmPfMQOmk3n/OfgIJoiB1IDAeNNXRj/STD+kPhAJkPt59H9dDVMTABYiKkU0hFlpEf10SvDMGXc3oYTdt22b7OorWEFih5BWmbdDcJMFRY9DbjBL+Z4lrs7iqgfjdsLcaEj/iyARwf/Z5dErGhXEV0+a5neIU+8jPamnNrGRckFQKgJ5yWUf1Yifj5qKaNkstFhrb9VlpRs7DkZoGXAcjfRfTV1AcB1PSIoLOAIu0RiCtyXd5fxmjD3fwsG01bJS2Xqv148+diVMV2gssk2UPWcGS61qZs9G2tveeTNfLY92sAnxyVOuwr80w0TAyhA0sbsGAtlg4whB+sYeV8GUsJkQUgx5HwlTdraRwTHE7Uc5uptCwctZS/Yn4Ot3DQl7t9DqESSv0fCWcVsUFK1RloBFRdSOEjlWYTqUEa4nstRwhMQLFSP2EC2NZoyywMeBOV8YSTwlueCO35/bf8I/LVo+3ElJ5WOWT1Evy8bBKew0a9HDhIJgtRgKxYOOoUPGxepDL3n3dyBzwYj9kBTYdBsZSi/Nk0Zkeuf5ea55Ng=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"BufferBlock is similar to Queue, but it is not just a queue. There's a lot more to it, with sufficiently different semantics that deriving it from Queue doesn't make sense.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"e6085fd4-2d55-38e0-98c7-06daa91835e6","date":"2016-08-16T18:53:44Z","timestamp":1471373624,"authorUserId":"disqus:stephen_cleary"},{"_id":"a10a677c-82fe-3019-bb90-c0abd2c0ef42","authorName":"Buggy Squashy","authorEmailEncrypted":"neXies3kENz9b6jIzCBlKTPsnUQ0yY5kZT+ch/NZnHBtBWSrkfdAbCQQUDxU1zfdOj7t1nOVjsbY4gMbal+nww9L/igMd257cBTX6Q63d2j24pYAm0uiUleGg2yXrX1AKnOHJDpfnHsuOqUKEMlZbTOkPbzLHzoDW/IBdpPh19QCS39Cm+9CXq/6vjvHy1kMsyayzH3sELUpYbgVAJ0cOE6hRE9JcKOP+mepArcAX/kt/M+22tsD4Z9/QsFB/ZmkVajdIRDAUQnsO8/R+nPFQHnRJCKu59PvpYUrLuCanGxvYnBXkbpo4nLVEQNLk8DnmMOwoVIhp/+ciRAYWzTIZgbEmSJB4hVWjD8HkfwXFKs2aM29G5+LWg9PfF/rztphy+6gDyIs3adf+4DpBiRuoJ3j4pBLdKt1KdktswJt7o/vjNQTUOqWBvUJMFRd7uHqlBSECef9v7SH7g06UJtlMzRA3QgxrbCXGx4Z76UmAjsN3PzrdHlFPXtA1TbE1oG9HJoZM78KM0jncYRIh1krJwLqp7E+P127XviLfywFa66Dw0iv77H/TF6Ixr+C2XYdhw1EaT6hxSCW37ciJpy3k/gD6ocAWvY5bfTvwCO91ZwjLAodpxrg5VrY7cX9+O1N1IPxQkS9rO1pyzd/F3a6KcsatDvG4jAm2QcC2zfRghA=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Appreciate your response. I guess few more questions - (5) do your Produce/Consume methods have to be 'static'? In what context would this be useful? Reason I ask is that I don't want to use static data member BufferBlocks as well for this, and also I read somewhere that using static is not thread friendly. (6) In my situation user selects a number of cases and submits them to run, upon which, my framework \"produces and consumes\" the resulting queue as you showed; based on this it seems like my case fits the single producer, single consumer description, am I correct? (7) I am trying in my initializer do just like you did, but instead of a constant, I am trying to set the BoundedCapacity to a private int data member MaxDegreeOfParallelism, but I keep getting an error \"A field initializer cannot reference a non-static field, method, etc\", any idea why I can't do this? Does this mean my private data member MaxDegreeOfParallelism has to be static to initialize like this? I confirmed that works, but could this have other implications as a result, as in (5) above? (8) You mentioned that each item is immediately removed before its processing begins. Does this mean that the item is removed from the queue in the Consume method as soon as queue.ReceiveAsync() receives the item, in your example above? Also, if I understand correctly, the processing on an item (or in my case running the case), if any, has to be done right there as soon as the item is received, right? Thanks.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"a91c41db-eb22-37bd-8dfb-9de70b96158d","date":"2016-08-16T19:45:14Z","timestamp":1471376714,"authorUserId":"disqus:buggysquashy"},{"_id":"a91c41db-eb22-37bd-8dfb-9de70b96158d","authorName":"Stephen Cleary","authorEmailEncrypted":"amttnNRsdJtF6pi4UlItHJu9AI8AGBTM9XZt+BKXn0OP0q6+zFIFYD1fw6IVMqfBEL0xAhmWzJoSnGvbdz9RtXaMH/XBnN8kaa0ajlP+uL/tgTV23mt80qcfwSgLEPnvJncXZ6fo+oxFfoZAi3OGB0dyeIERWGStsIIt8vXky6Q/el+Ah5Ha3P9RUGPxnauHItTUnoSnq0eTRxLDeh0vz8FYwCTPzmP3GyUnvqURKQ6D3zd4Rlz2JZr2JOy1N92+LP8jJxj/7bjgWdPQ4kEznwI5KJ6VhwxK+XjqRQj6ueqMTIR6UKWYHFt0BReh2XgQ2pE95CZXwE8x1UfMtX3W6BEgkeuzG8dc3tQlp71VJ5T2+lssz6y3KtAFDv7eyeRNt7UjP42Jj/qygYxbgqs/KLvnd5wZyi7SLjQ70eiGlqH7prwIFvmRV4VSCzruNvSmM9OuX1OqlFhFuXy2qKYJHyytUXUjAYj/ykuAGxEH2BhL0OWWp9tYo5M1rqji/Zilpxk5bUbo80jw4l6VMs85pt2l/6NZR58qBulwQZqekQ0Npxagbfyrd6bTIA9FEq5x/eb6ncGnwofSTJN6TRw2nm/FL9Ss2R9+RaFU1dfi1UvgZlVnLJi6dUMZM1XWXU0AbVg17kAemOmIJ/t/lqT2TIZplAMalmYxr44aiBaINGM=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"(1) No.  \r\n(2) There is no built-in way to do this. If you need to cancel an individual item, I recommend sending a CancellationToken along with each item, cancel them as necessary, and then have your processing check the CancellationToken and skip processing if canceled.  \r\n(3) Yes. Blocks are class members in most real-world code.  \r\n(4) As noted above, it's not possible to remove items from the queue before processing. Technically, each one is removed immediately before its processing begins.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"72580076-b47c-368e-bf85-0a8c9c39e725","date":"2016-08-16T18:07:26Z","timestamp":1471370846,"authorUserId":"disqus:stephen_cleary"},{"_id":"e6085fd4-2d55-38e0-98c7-06daa91835e6","authorName":"Buggy Squashy","authorEmailEncrypted":"OJKI2CQHDm4L5RltoP0sMCdpDt/gYQiT6ewJFW0EjWmR5H1PyT3nB852ZvhshxZTsUX8SoYUl0qb8mTG+CK6wYmDrdNId4hvSWeRnVa7kqbk+j0zxAqTR11/etUaG6eucZ+JEFRrkzD/s1wJXznsTecrO0I/yOv6+uLzF7rFLJlnJ5/hXXQ8LThY4hogDJ7psdWkKHmQzmTiBfL2Dov/ipGpHC2R2j4CcZBKwyVjbkXmzhRIScMneNeIrCUhOMkiQ8TBJtRq5xyRRfHgs2DTL6dRxeUC2Mkv0E3DBbKsUkTkX1XTT9kIqNpm/1y+R5VtJKH0IM50v07ZOtkyO62zlMu7F6YAJ8ViWn7gld+EOhbqPx/g6lgB/QKBrs5qsyHYDpcXV+ETW9IRYh7bYKK+phAnlEae6iVWIWBg7BImCw67YM6UDWMRXWGAYHB4p/xQe3OmI79M8EF5bquAVbnG2746jvuwOEIiriviMgzYcTTDF6zA1Q7soggZBsr7jdvXiC5Z9eLVcpbFiimFJL+20uaUQTjC6CaDY4kVrFMbKHVgYFH8cslwFJJ9zL6dUNWrrSJoOqIXGlqBXy0dQnQC+hy3bv5sWauEVmksffTTAAY+USl4GVLZlnY+QS7P0Y/wpagXXY0rhavcOFluaX+pPHH/NGG9fiGY01SmCCdQG0c=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Thanks for the response, it helps. For (1) I recall reading I think somewhere in your blogs, I think this one: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/09/introduction-to-dataflow-part-2.html \"http://blog.stephencleary.com/2012/09/introduction-to-dataflow-part-2.html\") that the BufferBlock is a simple first in, first out data container, hence I was wondering if it is similar to queue in that regard. I'll work on the remaining as you recommended","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"a91c41db-eb22-37bd-8dfb-9de70b96158d","date":"2016-08-16T18:27:44Z","timestamp":1471372064,"authorUserId":"disqus:buggysquashy"},{"_id":"1f0215a6-23f5-3334-85d4-257c87ff45eb","authorName":"Stephen Cleary","authorEmailEncrypted":"PGLKlTtp8koemVdkiXba3yNZYxGkWL5xPTEIDBteWiQQGwKrCLTiy9uv6GXrgMChyBW7w69VOnUMtRmaQFBEZIf1b0/oC2q5ag2TmQkMamPzYyvszs8XN0hPZb1gFRWsznOzs/OaTQxtGlE4WRgMV8L13skQ2IRl3ZwQrd3zl3AtMeltKxuhCMdoTWPg3sVTMOsj1pPAvnreajs8WxK3oDcI4zw9MwlYp1/cvzOZUIaGdAdH5LVk7bZN4f0yf4VXSVZu+aaowA2byRhA6mRmZ8Z2m26OqFuayqNCeqZOQlEmgr/01oEk9GH9t4TaO47R/UVxLKrgafvfvKV66wPvnYFMwR3QeHN8FWnp9ieswTUPEF0Q+znX+qWU50oeE8B6AXOucfO01SHD1XB4b8UDXEWvjzRl5MYgJv2Guq3IU6krii3nkiN2YUsLvr1SYwFmmldzOHrlUKQK6c1aYv11LbGaULXMCvDccEIpxKF1KiPkVDujS4cKz04IfWU7HejE/POc/0Apq+F27v6rZdj5zIjR+8uF1LVxAklMBKe11lSJQqLhgjQ9T65n0uFJXyD5Rc5SIl5cHlp5FH44Ps2FJJmkY8Z3JlGh5942xEkGv1ri9r3iNNGLyhG0um/O8JRmQ7lpfeb7j1RKck7+Ib7YNMBaVAJCqJ5Jk8AT+fWo90E=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No. Multiple consumers means actually multiple readers. It's a rare scenario, but useful when you need it.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"42a4afb1-9deb-3a9e-aab8-a6b7cabbc5ac","date":"2016-08-17T14:39:56Z","timestamp":1471444796,"authorUserId":"disqus:stephen_cleary"},{"_id":"42a4afb1-9deb-3a9e-aab8-a6b7cabbc5ac","authorName":"Buggy Squashy","authorEmailEncrypted":"CXskgXs9k9Q2Tejn4zN9MK6ykeAoSIW91FQ7rpDFfxaov+MRkAY+tH/+RnICGCBpxPUThVEHWoDmn0pY4wMcUdYthPHguDDeqVDd+N1r9O2CKansHuz9g10FX+BZK9fMmly+2z1Q7Q+Qasgewupso/iW/m+zVY4ZSuURQTHmg/I//rB8j2T1cbSzez7ltYnryJtnjjaxuokspeu3A45lmBoW+E3QYL3fCfLRf0DWqvqYfpK1oJ9VVN7HIr4tanaxBq8LBKmbZuND+Fj7MBz+KnsellF1hhKwJ49zzivib0evclSUrXapMcJVADCk9NGFjnJksZXyOykbHYdmh/fM1+ZQbHNr7Rz6GEY0cbOSqrxs3ht0044HF3Jaekk+JEcMQxoloHGAk9ViYiD0yeWC25HFnQorq8ck+6+yvtfaebv1QfOBJ2FtkFtEh0Y7b3FJOCWz4kbPXS597+AGts6Y5wabEs3cMoFjpvxKoc73taa5fr6xMX5ujLlm0Dw/Y7yyOb/Zs+hqp9hUFCMP/y5s4W3rP3x4drQd/4cVkaAdmrKxPMKsj9BAVPGgvIKr0nCPFeLYvHZ+evnw96Rt/UuUZx5D6W+ZHzUdAYmbDwggTeKYwU+e/a5zySFt2dHO3/2Z0NAp+R+ekvQGkJgeO4gxXTra1QG+dPJK/wEAFUkO70o=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Thanks again for your patience. I guess a follow-up for (6), in what situation would I need the multi-consumer pattern? My user after selecting a list of cases and submitting to run, might then repeat and select some more (possibly different, possibly repeating some) cases and submitting those as well..so would this make it a multi-consumer?","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"4a1c6ada-6397-302e-ba80-f60356433c07","date":"2016-08-17T13:55:31Z","timestamp":1471442131,"authorUserId":"disqus:buggysquashy"},{"_id":"4a1c6ada-6397-302e-ba80-f60356433c07","authorName":"Stephen Cleary","authorEmailEncrypted":"gTwRpnPnfGXEO07PkGdtgwrnz4NvWwk0qLik7vHxpHcT2iYuWUELXgbGt2DmrPKTZToy3FbVX7UaYCse8Pcjq3jFLpNTbsL2py/JHdpvkWo8vQsffOwBS5ocq410uuM5P1vJ3B7XFWGCzwz8+4iN9fI+yuLzBc7bt1qfZrHYmde0uJXq3A89vLJ5DfFuyJWqwRyEree3aAQGC1cz/B8u7MZ0xdfi2VCLX2K6I1gwEXTR05De2YP3TaaHCY9EL6UMXp2IZaj2s8VlsXkxaKRDLt2HAFNpDV02f/F+7kg86acOcRHDC1ximyDEdtJnY7BiYH9+KWQ+eHXUwXCg5faJctH66xN4UaZRfiB9FMtKt59+440Th8/OHocVcLkEMKBjmxn6gSv4H463s1pF7/2ZRa3HlkK8zEjdN7XigvKgC6/WIkqSBI225eVXRH3/MX37/m/2jM0J8UJ57PKRsXuFU+wRHVZ/C8ja3u9rB3xKlj3iTd/mGvDyD1EvOwu+inYakQANNYAWhkq+oHpsXdrntQEPRncjPIPfm2V8VYog/9HNWzN/IF4C2bHU2rFxsm3D/u0IP3IWn+9nA+n71Vg/l7OPDCclR0oYEeuwk6RUxQjG/69HLKQmse662BYYcIaAud7xypvuhV1OZVAsHgoTf9sdCR8fyLOtbHwJmjRgBgo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"(5) No, only if they're global.  \r\n(6) Sounds like it, assuming you've only got one consumer.  \r\n(7) It's not clear from this description. There should be a straightfoward way to make it work, just like any other initialization code.  \r\n(8) Yes, and yes.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"a10a677c-82fe-3019-bb90-c0abd2c0ef42","date":"2016-08-17T02:20:36Z","timestamp":1471400436,"authorUserId":"disqus:stephen_cleary"},{"_id":"4b64b7ce-ea80-36d3-b127-f11fd0b99134","authorName":"Buggy Squashy","authorEmailEncrypted":"vcdyautck1qmIQ23pbv+KDo7Eiwi41OCTTlUIdt0uIDGPb0WdYiMOUrA2ZJVYiZKQn5/FjdaCMEKMmcMtr8QwuI1iPWpB9kkCnxCEbFiWseeFgmDMACFvZuQj4W3AF3KXZ9ZTyaB2riL0V9ikdvVBeKqnxkrUDiGE3PCVMydcLEQUn04MsfO9IHTcGaeZhZ5ROOHgbHHk5AhPR+Civ0bR2VjaFKhp+HnYvcEweIcvXGgqNJwKa3zaR2DffproUUw628MYDPJtug8oJERkIRHsoHitEWmftnsOYukLt2tII6Ornqx5pSkn4xSYRfH0SwSdVBkXX3wTMJMT4ZT31rl/O4PUf3Ld0tXw5YhXldVlp9EZew7NQGoTU1qRU8n2lH9OZaS7RVBtrAA4abmHv16txl3+NqWsro5R1zFbPW2pM0K7ycX1wtLazVgt6aNNbydd0HgusPmPZF5SkyZYpZMIRCT+wVMo2FK5UGj9NyZ+Btd6Jg9M69cy/QZFAZQ6wXjZKFLfAAXZcsJL1AAd+ogzZ5/K8OJluI6vVkwsPvZBnAnpCCpJ9gnXS7VgxuDjy0TScEVHAN9jMiVh1zL2ZMYvojj/a+UVt9rP42sTqBqPCrAw4zVjAr6etEG9gO7tqZJq76uezavUISTa+c4dw9JesXsdfvCWC2uiw3jOj6iQTs=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"OK, got it. Thanks again. I decided to go with the CancellationTokenSource approach. In my \"Run\" method (which is based on your unit test), I loop over all the cases selected by user to be run, and initialize a CancellationTokenSource for each of them to a new CancellationTokenSource(), before proceeding with the Produce/Consume sequence. Next, in my \"Kill\" method I loop over all cases selected by user to be killed, and if I found a CancellationTokenSource corresponding to that case, then I call the Cancel() method on it, otherwise I simply skip over it...with the idea being that if the user selects a few cases to \"Kill\" and then selects the same to \"Run\" immediately after (or vice-versa), the latest effect would take precedence. Hope this is clear and a reasonable approach.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"88d0f722-98e2-35ad-b659-40ac779f2273","date":"2016-08-17T18:39:13Z","timestamp":1471459153,"authorUserId":"disqus:buggysquashy"},{"_id":"88d0f722-98e2-35ad-b659-40ac779f2273","authorName":"Stephen Cleary","authorEmailEncrypted":"b1rIekjlxK3BzPoyfXO/iW7dcbtIfNWjyvSLPMn9J+66gKEDbGVojeSFW4GQxn75BVwB7I1v8U/CgUmKfchC9ylLw+H/Zyogr0DfoMNAmViXOIU2NZaLvIwyBeYXEeJj7MbSBiYWoe2KfznIO9FZIOpmTpIn7PEPoCNPt3lhTd3bxdLuKd+8q6yyGcUXy8rvh+4ErSsJewnPZVoG7iYwEetuHP5m4A2a1xgJnFbHE7ie4+gLAs1iO8sH8xuSUUnapqkuQfR5yHQtBPGRctUE9xIEeM/5JhulMnIvYSrTX24lN46HnXr1otGEMN9P860RFCwxuyvDBwgmxHkwd0F9o91V+Iy1h51QbJAq6oNyrNNjMMRkKm3h5loQ7UWfHKX7KyDoH3Fs3nzXVHvnIhoDxSmPAlGIHxDEKjfUmLBc1+9043XAvbAjtRZdPIofSCwQqp7kPD15BKuaSUv10gTBtVzEM5EII3AWZYKvNcnGTTBbt+wwyXAJcsD1SUnCClNyw7ccz5Xo/f199RFvnu9X7abCI1zZrUOTICUnMDNZamGQ5mJGq6g9BYP58x5LYtE+Vl2KNlimwrnAy/wIZmyqc++TRvOoY21pxsVKvraRoqjUNzkcNJFT6ZYhrmrk3eQ7H7VWf+BsNvnuS9ybCaD/zoxQcmNMluOeNkAb6RDJo0g=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"As I said in (2), there's no way to dequeue items (except for processing them, of course). I recommend having a CancellationToken (or some other \"do not process\" flag) along with the item, which your processing can then skip over.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"df045556-b7d1-3bd6-9be9-0606b7ced0fe","date":"2016-08-17T17:25:30Z","timestamp":1471454730,"authorUserId":"disqus:stephen_cleary"},{"_id":"df045556-b7d1-3bd6-9be9-0606b7ced0fe","authorName":"Buggy Squashy","authorEmailEncrypted":"AH02N5GmgqLufj7tg+fDqbXvACIol7jitHqORMYTL+LjqRc8A9qH3SA/TYe9v2H00jbSKEWjasUQgpHqX7A55nMP9UnKcWqHxI8Y8TOCf/a/557WjUwMhoH+ObeiASpqiTFBAr1aJgFNzDkddhuxMEOwa99YP1vhG7ppXxdBQAhKD/KVdjunX2JSv24Yi4PnI0zAy3qvNmXj7vs0xfR1WF9ID8g+E5tY8xRa4jxnWG6cfqfOONK0lzMv9b5rloiqoxsHRynaBqTZeh0fyUcVh+4IV/F0ljooADy/UvvgKv+nrAcayj6MVA5NSVlmhq794Z+4z3MWQ6zQQWwXHRL/kDHHgWN9hcnAmRoVwg+jPrHIfsOOImJibyvr9peZ8QHEjP0ug2kjc/pVDkNugZIDlbTDTEn9y/Ro88vvqHuMdhryTuedUCVBTX/GsQXVB50jHFBuxCZ5HfYFNgQtQvwDCs63gI0bSYi2Awh8VEAXdzw2+R9UKCu5jc8A79jUq2RD3FFyKoiocakMC4tPGHbaM+IqUqRG7RqmQx2J+0WyzI3Cx9cCTa1St8ibwqvN9YNIgYNgBEee8wUddoPLHac2AfrZesZwg9dn5Ahuc5/qrwI2QrIiHC/rECqEL7+VVvi57vG4WZjwutZxhqh1wJWLc8Z+987oHqiQW3LyUpR/oso=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Thanks again, I completed all the implementation, but in my application I would also like to remove some items from the buffer queue (for e.g., if user submitted many cases to run, so that some cases are still waiting in the buffer queue due to the throttle specification, then I'd like to allow users to select some cases to 'dequeue', whereupon those cases should be removed from the buffer if they are waiting - but I don't see any API in BufferBlock to identify a case in the buffer, much less to remove it from the buffer). Appreciate any suggestions you have for that?","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"1f0215a6-23f5-3334-85d4-257c87ff45eb","date":"2016-08-17T17:07:55Z","timestamp":1471453675,"authorUserId":"disqus:buggysquashy"},{"_id":"e1a40902-dfa8-3d2b-a7f0-2081bbc6a956","authorName":"Stephen Cleary","authorEmailEncrypted":"jnvBtowLnlNnZNLv+wk3csu44IEAETZrki8O2FApcE4J0tSa6xkAElV8xvL7iMVZqaChxl3FwEQFVllPKTZh03b+MKSOFUEs/WNdqyBIQLzI6Kz1bLqQV6vNdxzCXLmCmR4N/XNc5B0b9ca7V04UI8iFcZMh+PAMZqHhCmjXfr1J0wZ7k1DfsQczfwFPPcT7Gqiit+7ey0LSrkzZ0hBXms+a2/H5ZIfFiZwvoyysEke4bPYAJ0CO+hRDCAvGUxz67Kv2JMMz1LfOW6m8t8+nc2L81K+N/lpidzHjfhmj0iXIZHti+YDftj8UH97qLB9NO1d2HVKVsmXZZCGngfjbSS92riBjB3fPqv0Q1fwaHmiBYrttXkMfIVuPH0EuSTmMDOHSI+/xCL+sy1Oczr0TyK8cfGuTHP1JH2l96IoJV5VOaSA7Uhmc7dRasGyIswnUgWRQtcQ4FLqR+mAKjKib33EixLnmK4o0C/9YGO82rXKQc02dlX+KYmVlLq0P8FMQO9OwLBAkJgec16lSNwgJqbbsFDVI7TVwV8+82jmBYfZKPt0CCVxFD3bnGacjiy0fDRBsu0bGdw2vPC6ttnZxqkgb7AGfPhzJRBdq6qBi4k/+VGbEQBxfrCYhTqSAaVZajcUzat6R/5AD8i00vQHrUegDw9Clpq+E1dSL1moEzUQ=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, I believe that sounds good.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"4b64b7ce-ea80-36d3-b127-f11fd0b99134","date":"2016-08-17T18:51:02Z","timestamp":1471459862,"authorUserId":"disqus:stephen_cleary"},{"_id":"02a16955-1167-30ef-a48b-7dc0c47e42b0","authorName":"Buggy Squashy","authorEmailEncrypted":"Yo3uvvgkR/jfM+y00A3F7aIaqhgOqcCuRlmnAtWAHgTP7u8OYjcT73fj2b80ZOLKhNBHdk+YTQprmTO6H5NSkcALlzON7kExlGhXUC6q4+Vm9p5WjSFXR2gb8N5Yg48sAo3/PdgWynbkc8Nl1aWBg/X7fAHz2WP4KFHr6A4Hfgaw4zp42I4ughpqo5NRO2eX1ihwj1k0p+SVvdKekS1lcbH+h2hs2vNM1+OqCfoPx2nKk0qHWaNjbn4lTAb43fEBF2w48rbMJw8ksW/t6nvm4jU4+c1qmqrO8h0mzz4EC895Yw2jR8vQ3+/esbATfLzgdcegDaf2yYrKGjN4L0I2saLPe04pvP97Wmi/0HSokXz/KlOQGXy7NhObOxP2yAsY3/LVK4HUS3C3+iCVHLGm2y4QC9CDxGozhc7tuvb8eT3mdiogi9iK3HiUi7JCkrnc79ufU6FSe8+V4lIo+THA/iIAr0aA6v+g8uQYdajQOYMbA8iwIYXwC0GAOX1RDGjeLqu00YbrApDnea+F8zMDvT15mJqBvDj6i+vGv3J0D0Xa0mRrmRGdri9rmNeuyiJ8JZ7Hbw5yc9WJaVoCjRyY30J7d4jiR6+q6dZPXz14FTx68+IsofO8TbnR3btSkCRMvVvyPekfEdak1DBITDuMcJ4NDNF+ze57Tlt8CDyK4Ec=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Hi Stephen, regarding the above, I guess a couple of more questions. Thanks so much for your patience, and apologies, I accidentally deleted my top level original post/comment, not sure how to re-insert it. Anyway here are my questions, (9) In the Consume method, right after I get the current item from ReceiveAsync() and am ready to process it, supposing there's segments of this processing code which are blocking, is it better to do move these out to some point so they are executed before I even enter the Produce/Consume cycle (e.g., in your test method before I get in the Produce method call? Is there a way to do this between the Produce and Consume calls? (10) For the CancellationTokenSource corresponding to each item, and other such flags or data structures associated with each item, if I initialize them before the call to Produce, then in the Consume method inside the while loop, if my process on each item received is invoked as an awaitable as: bool ok = await my_process(item), and if I check the boolean \"ok\", before populating the CancellationTokenSource or any other other flag or data structure corresponding to the item, then there shouldn't arise any race conditions, am I correct? I'll plan to test these also myself. Thank you.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"e1a40902-dfa8-3d2b-a7f0-2081bbc6a956","date":"2016-08-18T14:49:37Z","timestamp":1471531777,"authorUserId":"disqus:buggysquashy"},{"_id":"24cf38aa-a9c6-383b-96f7-94de4197da9b","authorName":"Stephen Cleary","authorEmailEncrypted":"pD1+mRNquf8jSOB6IaPj13/ILUj7yYGBFAPX9zHPD8K3lijPtCbU+t2I5ZmlkDdqD6auTdUVRACaFVZ5KKyDPZEVXbL1nvJmv7mPJ471waLL9IKyZaUf68WMNxv3j/Ot64/mP1xymJ4Un0Vkc+ehlRnttFrJCN/OLjkK1UW0hxv1M0ukoMpzNPmkOc04Q+V1qnSNdSquHEoX2GqYnFuR2mxHGmsi9x0PsShEdBjAXEqkj/ErXB6w2Lbz18zJ/2+FCMWYEVjPRe2ll8NMsdCuWOG+3+gvaXao1sx/wlzHAzQAxwxDPrnsPMd6WSKmVcdPAhz9EmDRkpvgnWd40VJIsTm+HbKq32PrpMIVNXggywqoSlc63VHpBpBpiAu1xr7y+AUTjb89wmhsZ5DRDOW6iTGaOJ5nLnQ+2G1xLHs42qvbVDh3qF3W86mwME1UNdE5fY0i9bx0Hu0fWVXCJ03OZ60tU61WjHUNOXyPAJ+opbDk5ibXDrMMESQn4ogmYu4Aa8UKx6+7puLrKd4Zlpz+VVxLUtwC4PTXkPi69r581IQR05cRHwxd9DK+eYOUsuJlPgt+XoY2mbMH4ZipDfYJyyiu2Xy+sJH6zHpsMdvrB11xzr1tO8WsRRf587NTg7MjbAROlIWAaie8G1hpIRRNecGhAEHRhkHZKP9WNkSefnE=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"(9) If it's a separate step in the processing, consider using a TransformBlock. (10) There will be race conditions between issuing a cancel signal and the processing seeing it - this is unavoidable. But it is a benign race condition; it will just cause a small amount of extra work.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"02a16955-1167-30ef-a48b-7dc0c47e42b0","date":"2016-08-20T00:47:32Z","timestamp":1471654052,"authorUserId":"disqus:stephen_cleary"},{"_id":"6f51f1e4-4ed7-3083-af13-f118de7f6187","authorName":"Buggy Squashy","authorEmailEncrypted":"M8R3vq2Z0rqF4+3SIQj4za9Ym2w0U/NiqFcpJ2/8PhOkb+IESY9Xsmyk6K9KI1jHwmrEgRo0Za7pSejyAqd+pHlgvZJrz5Kw4Rv14ESgE7h+Sga9/xECOG8ruYv69wo/fKCqUtMt+c/zYzHxutkAydqdsHsRTrHWw8jfsegzo3GjlI+QV3EkMVAclwopX6z1KCAkrzM07gDtpxtBjfCMu/UjjofMHGjkrLRsplmBALE+M+qaJp4OpqjlafX68p5e2HSWYM6jaEpK0CSnT7KHl5PQTVVzcFZ/yTsGj8dILEtWrZiMTPR7EQYE5XpK75Fy29dctjZH4wGhGM/0zaWNpdx9m0AL5q5VEr2ZZObkET6DwTyPwRPhW8L3UmEE+vllV774mgNkfQCS/gABcu+pwVQVX8uPXYkPM0D8KJIyS2eZPvU9eaJWLevhY8bIP7RX+9GxmFRNccHaucJxJ6wvP0VxEA2iRXDamAfT/N17/NafWhTpHWjns45VGm1R/nsDk2jvVc/ofr7J1JOhRVhQAxQe8aJbhAV2irTrWy1EoqcRP63fULMRryFi84HKGRCneJ2GIRM7b4aVHG8LyhNgozDuuzIN9ZpCqXlh2CebdqoLKCOHtPdagk91AviHq7jSS397LTrBpdPdIdAiKtr8+vqS2Fp4NpAcuqwC8jH42oQ=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Hi Stephen, me again. Thanks for your patience. I have a couple of more questions. (11) First the producer/consumer queue implementation appears to work OK for me, but I noticed after doing one pass on the items, then selecting the same cases and attempting to run them again does nothing at all, any idea why that might happen? From my limited understanding it appears to be happening because the buffer block is transitioned to Complete state. Can I reset the buffer block somehow in my method which is analog to your test? Or is this is a use case for multiple producers? Even that doesn't quite meet my requirement it seems. Can I just use your first example for single producer/consumer with throttling, and just drop the call to queue.Complete() in the Producer and likewise the queue.Completion argument in the Task.WaitAll(...) call in the method analogous to your test? (12) I noticed that using the producer consumer queue enables the cases selected to be run asynchronously from the main thread in non-blocking fashion, but sequentially one after another w.r.t each other, i.e., the first case runs first, then the next after the first completes, and so on... this appears counter-intuitive, I thought all the cases could run non-blocking and concurrently since once an item is received, it should be ready for processing right away? Perhaps it has something to do with the fact that I'm using one boolean variable (initialized outside the while loop to true) to await all the tasks resulting from processing each item. But declaring and initializing the Boolean variable inside the while scope still results in the same observation!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"24cf38aa-a9c6-383b-96f7-94de4197da9b","date":"2016-08-23T14:33:14Z","timestamp":1471962794,"authorUserId":"disqus:buggysquashy"},{"_id":"038e1ac9-6cce-39ff-a744-7bf625edb351","authorName":"Buggy Squashy","authorEmailEncrypted":"kG1rtdxfcERAOVB7vRXCnz8E+RyWCcETbDYFKsYTW4WcPvXOQb8M/OeFkQoe8pcFR6C4XEp+G8AT+E24XDBM/chC6wWAZwV5AhBhfdfjWwEMDOk/U0nleUCR+QN7m1r06i3lJpKYnmMfHZOpb5AIVFBRXWzhAjXZEbNELtH1pKowu8/YzB3NzQi8R6CnCmWTeHNTO6gzw82ABNkDT/+MUzptYLHC3FDn9pDm1CXYsGNnypvZf1qvC9p99X/DSuDZgLhE7m2jxhlTXCH5knzl0WLJ5I7b16l89E6oivzBkLY4Ez4N9fZvLO9yVV8qAGmDUOUGZZiwnxLib3WOdMd2oT2Dniif2ezXR+nkb1XROYKcto1Y2Og8GvbuLbvmy9e4c14RIbwPTZgJ+wAitxKGun2PNM8waw2VZ2Obla90EVFOPvvR2oKus1iGDFXfM0VdjmO8B+hwwNnRSHJHhEOj6XvPfw6A9boQwCRjhIcL7naH9vUJEb1iugwXsixRfJMHgE9kL4kmRu/6p+ASbNiL3j8sErwnQcmPXCUfeHePy5WmGUBsxMLfGV2tXhZLfKH81vHjIh97aaN1r02cwSEqUl6YaqHXPaYYgTz0tgsfPdobGFJ6a0Hsvwx5Sk4SE+AwgpMyn7pM3l4O1lc3YHjNl5Tp1V/kpC/beeHbCbnsViM=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"For (12) I'm not sure I followed, I checked the DataflowBlockOptions definition at [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/library/system.threading.tasks.dataflow.dataflowblockoptions(v=vs.110).aspx \"https://msdn.microsoft.com/en-us/library/system.threading.tasks.dataflow.dataflowblockoptions(v=vs.110).aspx\") and it looks like isn't any property called 'MaxDegreeOfParallelism'. Or did you mean 'BoundedCapacity' like in your initializer example for throttling? I already am using BoundedCapacity but I noticed the jobs are running asynchronously (not blocking main thread) but sequentially w.r.t to each other (not always though, sometimes if I re-run them I notice that some of them randomly run concurrently).... I am confused here.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"c4dd915d-24ba-34e2-bef3-b4747bbdd262","date":"2016-08-24T21:06:59Z","timestamp":1472072819,"authorUserId":"disqus:buggysquashy"},{"_id":"c4dd915d-24ba-34e2-bef3-b4747bbdd262","authorName":"Stephen Cleary","authorEmailEncrypted":"vBrX0l5BD/OhwHGqfcakaOL84U5aSYkIMOqWjo2qvFTjO1ymRhiPcLo8s+Y/PyTFdu00ZNyPxzMDnbWfTBCm/9/HFCk1p2/Cz05ZQxH3sQ8WCIwHc1YqHsrBIiyCszjg1DjojyqVwXOoei0H8Bf8YYJT50yZppUN9Spaxwlp4ICeLQf06gfAm6yax6taSHj/dJ9V0+CqXf4aee0Zc+T+h1Q3En3AJ8vepd5a789HMNyosOTxq90LftJ163s6IvwmiJmCbZcPPibOc/zWf3z5zIWkv3whVBbMoBHJsdBLypomM/zy/jMdgAXNeHkmnRRSlhU6C9iFuxyHM+RcQygXgPH0xKnS47ZSUCR63pVH79ZvqhZt6bSFctGyABegPPpu7s/Qhf/oXIhj+a1Kntm8X3X2ZobHzL1l4oUaboejS675fVinJPS2jmWrdA3qRawf3ZrbTziZ6FihBnWD8gsUq50Aok78HXkjPuwLwqXJeQoG6gS3KIp36trmNfUs5XW0dzRx2uHUJ85pOzyXkYXG7+4OaOjT84/WgXSpzGQowBBZj0Qhx1KXY4hYD3YeLyJvIstxZ+IADVHSaJYs2+V3U4KYPIfqT2pBVb+WTUEil3qZklv/gXQoGE4EcroGLMLIuCckEIRnl5asJxCpZywVKhA8JJFhznl/OFJfHRIbOCo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Right, once a queue is completed, it's completely done and you'd have to create a new one before using it.\r\n\r\nThe dataflow block should honor MaxDegreeOfParallelism to run concurrently.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"f344cd77-d003-3f25-aa06-ff5831438d89","date":"2016-08-24T20:21:13Z","timestamp":1472070073,"authorUserId":"disqus:stephen_cleary"},{"_id":"f344cd77-d003-3f25-aa06-ff5831438d89","authorName":"Buggy Squashy","authorEmailEncrypted":"s8ewAuqpUUoN22/QM9hPyztKTpGFRG1VJOkVXYThJGyC4Fe6dK4lN36hCmwa4UoMdRIqs+OlAS8+1fo3IAiW/ENkQ5Wdl85WcwD3L24JG4mLbMf2fjPrmEc6Vbyd3iOJ+6+EEvZOp5ddKAG8mP9ons/zA9I1MW81YhSkZWTFJc4o7mh/q7Y6MfnKjAumJVvGpiF+/VhDYpoEKk+qlxgNT/OxnmXIR9NtGAQsuLgWAQV57EBKHHThC6JLWocHAYDAP7amScT0aAiaL7nRSdQjLTgLgSAoqO9dOh4R+q8HuWrX4XAFyXvbPah1Ryx7PZP1fQ5ghC48joMxAc9qdyaPhHJTwyCvKb4Z6nx5TAZOnbxlmXaAE8kxA/ikJ81tIRcD89wWzI1WLe/B/EBQYmSZQzI7K8a/C/EB6D7vKvAQBfbsFjTvekfBBxt9qf0w3YFnouEfu57enua6YTRhdQhvdR34mWYXczj8LT48TQbTyCrMi1/wfOXp2F/LIN00zywZnlQGY1m0n1N7jLIenMGKmTbW2JzxkEdTwaecmGfu8EiUyumJyBxFq0+g55Dee9wSnALBtbDjUjij0Ig6xWov+JDQijkihNbMsbZk6p/p54UCEO4PnWwKgyi/ESSECjfunWiDOTlx/aTrJE/XkbnN9howlsNka/RRj4eb5p0hlDQ=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Thanks for your patience Stephen. I posted another couple of questions but it disappeared. I think I resolved one of them (11) when I re-select the same items and submit again - nothing happens. This appears to be because the queue was completed and so I tested that removing the call to Complete and the queue.Completion parameter in the WaitAll fixes this without any apparent side effects so far, although I'm not sure if it is a good idea. (12) The items are processed asynchronously (non-blocking w.r.t the Main thread), which is as we expect, but they don't always appear to process concurrently; more often than not they appear to be processed sequentially w.r.t one another... is there a way to force them to process concurrently as well?","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"24cf38aa-a9c6-383b-96f7-94de4197da9b","date":"2016-08-24T15:56:39Z","timestamp":1472054199,"authorUserId":"disqus:buggysquashy"},{"_id":"8c49be6b-7e51-36cc-9095-e5ed0fc6529a","authorName":"Stephen Cleary","authorEmailEncrypted":"iFnHfIuc8BjFbSPcv/tyIfmXo6zd3Aw6BiAcSfXfyr1zx20aIwiCChtw0ZrbPa5haR4FFIUI7haQtJH4M7P4PWHcmVUl5SQAfoVLmxj0XrulMlenGUNtgqZTp5gRPTcO/7KjSCkNxLRa4J/m47ATFsjrKhqTt8/ntWs1E1MSVDOuUyMMoleMHfVQ0VjwbP0hnhKCYuGJGy6TUcFscvEODkh62eaXteYaOzi2qrAnog7EZ/k3ETLO3OuveEWWOUWjtRAdL0msPI9rCHnwbAYqiB1iGdZgNOChu691LRk1jPMvNy/MNli8yC4ImAbvSw1NHMcJsmgyZz6bVI38x/DuoF6UM8XhKjJculqw2ezJuyyttc4ZE/0eqTlmbuvojqPEznCGmv9dvQePzgQw2m9Rv1cHSYDrR/GL8dWWsB77YlIUxrS1GXXyU1+cOuwxEtskLENRVWdwRD6EzP2PIqIo5Uk3C0aLodix8kPM0PfwuSNcX+liTFqijd97MvL2dX9/WfeXJ6phggsYnG8S1rsOvlhK+yTpKmu0XVLJ+FlX70iisjBroVDMRitKHtifl5UMxd7CGCOuoOxjj6m8twNvgV4eLJMsZKC4TCDx+u/meijQcvUbzhZxJe0oCKhb1YD9kgzncPjhgkdlv0E7vVC9cKbz+hm19a5nJjqse5cNWpE=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"MaxDegreeOfParallelism only applies to blocks that spin up processing tasks. Check out ExecutionDataflowBlockOptions.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"038e1ac9-6cce-39ff-a744-7bf625edb351","date":"2016-08-25T02:23:02Z","timestamp":1472091782,"authorUserId":"disqus:stephen_cleary"},{"_id":"da442b6c-3580-3513-ac90-5be383fdb609","authorName":"Buggy Squashy","authorEmailEncrypted":"qwxEoJJ5CgMBdReoAvHITW2HHODXrHA8OHDx2lDCA4MpppgfA9wjN55J6FAB9vcHKPW8ZnQpuVwa73JC+/P/dukx5+Npihzjp62vMrb2hs4bDwSRoYU9xBrZxqlYePh0craC04MmeX58x8uWJowxgYa5H1Yh9Zmeqm4jS7FX1S9ZbLIQJH5EMD3qLqJuDD31I3bG3WnC298sGP5z+Ty7y0v5DRxUJTMqpeEBhiA7SJoUAe8ZG8oGYolJnqKW2CExKUinAz4UwPuWG+5ZxdQx2q3RRDkpRjuN6FSxaa0l09UOVjhi9OcDcS45nLqiDWKSqLME4k39g7uEnH5u5TaN+SKv17sbocp7YxvLrZFbRbYwLyXGLNSO+EiKt9kPVEDlG1GDwV/JSXsfZb/CBANgJ/oqdQwS6alpRFizQuKzC/9Qg6LlBBpAwPKaYpsZgFyJIvngxhWUc/g4VFwFiXB4qLwb1OjdLQrkp7lm675TZXOY55C0tACR7vTbScZCtrtKPj47h7e7GGPbEKm+IbWBFYNe/r03+sm62fbNH/SqXFcYuCg7exlQlQojruOF7YhSbivij4AHWEJ7Jil403frqyAwhflstZio9qMpS65gMdbovMvImpkcMNJ8sSB7dZa05cmjqfkdzh7KNhyhY4QAKULBwbH9RSLjt21E0wdAMlk=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Thanks Stephen. I tried with BufferBlock initializing it as:   \r\nnew BufferBlock<item>(new ExecutionDataflowBlockOptions { BoundedCapacity = maxCapacity, maxDegreeOfParallelism = maxDegreeOfParallelism,}) with both parameters set to 8 with the rest of the code as I had it before; but I still see the same behavior, i.e. sequential processing of the items in the block. From doing further research on this it looks like BufferBlock is just not designed for this. I tried to re-write my code using ActionBlock which apparently supports concurrent processing and throttling but no luck there as well. I posted it on SO here: [http://stackoverflow.com/qu...](http://stackoverflow.com/questions/39150903/concurrent-parallel-job-processing-with-throttling-using-actionblock-in-tpl-data \"http://stackoverflow.com/questions/39150903/concurrent-parallel-job-processing-with-throttling-using-actionblock-in-tpl-data\") ","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"8c49be6b-7e51-36cc-9095-e5ed0fc6529a","date":"2016-08-25T15:00:51Z","timestamp":1472137251,"authorUserId":"disqus:buggysquashy"},{"_id":"8e83b8b9-1893-3b43-ba8e-1a8c05947a86","authorName":"Nicholas","authorEmailEncrypted":"FGnDIxqtBmddBVY+cmzDBUPvM9I8LweqfdglfzDZhFsBb2Fvs3sesd1WFx+vT6OgoI0cxIpdueD0MsDznqbUr9kzZ/t93mOAxHN7i3gAUMIkwkVEUKzmByFObnmqWXA1WcNM1zw8XjXHctb5qkxZJ1ouNLM7OYUOM7Hmgaact+XM9UrHyl1WXLgWdJH+8RFD1HuGwb4piCEAY+gmRrdShhUWQLYP2xgm2BOpG35v41DrJtMsps5R/vagr/iYqLFYrQVeahgCfQtXm8ZyTlwx+lc5njXvd9QD3a0TwEYHag9XbrRVbkF6OUEmP5mCtE5tJ6jxIVAytNZvXNDe6O2vYgV0UAaqRuC1Qcs+mWmX7DhAfdUPj5WgfHnixEx0hmfysUXgn1tedNiSIuL2srHFu2Hz/BKsvCKG+fhGS/qhU8tvf5HguhORwaZ5HflO2ukFY2jqX61LDn6o5zivfyzO/7OUzUAAhcmc89E+2bu513odg0IxnGEmExU4FEOCWCtvRJ83peXMbv9ZT+kbo9GEdLcp5QfHguqEfP93I46bTit93Gu+XU7Dy9F5F6p5VrVETMaovWtIuSWXdKWCC5cvG8ituStFc2mcSA5nRSN1TN+Z0Jog0sBTGYtwesXMEG8lLT4ZMbIKuxcYecayQV+1RBZKf8xblCqkCDW+vjM/0VY=","authorEmailMD5":"a495a370830f1691666642f1e0fd5ee0","message":"Hi Stephen, thanks for taking the time to explain TPL, I think it will be suitable for creating a pipeline for processing throttled tasks, e.g. only consume xx per duration. I guess either in a specialised producer or a DataTranslation block to release tasks as soon as the duration has elapsed. Putting it in a consumer action block would loose the parallel execution. Do you have any suggestions?\r\n\r\nOh, the last example is more helpful if you used the following consumer definitions\r\n\r\n var consumer1 = new ActionBlock<int>(val => {  \r\n results1.Add(val);  \r\n Console.WriteLine($\"1 consumed: {val}\");  \r\n }, consumerOptions);  \r\n var consumer2 = new ActionBlock<int>(val => {  \r\n results2.Add(val);  \r\n Console.WriteLine($\"2 consumed: {val}\");  \r\n }, consumerOptions);  \r\n var consumer3 = new ActionBlock<int>(val => {  \r\n results3.Add(val);  \r\n Console.WriteLine($\"3 consumed: {val}\");  \r\n }, consumerOptions);","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2016-10-04T13:25:24Z","timestamp":1475587524,"authorUserId":"disqus:disqus_7SSc9LmSyX"},{"_id":"e38a5c27-7a09-3773-adfb-3d3b765cf902","authorName":"Stephen Cleary","authorEmailEncrypted":"mNOPLRLMvGouJgsv3imjHvkQh0YZgfbMOMcvPmIovJNreKTr2PeZx0UPyYDEqqBCOSXsy3yrBTWIb9iR9VNcq4u1rvC+3JyGNVExtvEY1FBeGYCd+GPkRJIrNg13PtojG3fMP7Vv9D49/vfo3kQgBBL7PvlSWQWVGd9ynk9AUcMRMNPk9V7G8b8CSogGq2Mc14UZK3ADR8Lv+RlJO71q4UEZlYrfCtjl54U0SsJjd+jCtlgbtaCA6XmNVH2V2/QzwY8ZmgPw2SKX4FrdhrYGRGN08onjve3lob93TY7WxWZZx1R8CPR4gdOkKTjabp7ZZKfe+lJNM4zo272IMXrVkK6jNtU1X23cB/UxyrOoXFkcz9gUTWxnAP+YRsWufAFL1Q0FlbhXf4vzQeKdxWKh3GygWVdbD0AfQRJ5h8w80ahTMaK+94mU5luZsrsQrevYshoL39fThNnXxR9/dHZRGgATtGfmpYaStmfCW1pMr4BMvG+KoYinRm04KWDAIK1YGTSTbT02a9LkkiDe/G1ZZc7XNFx9O9zBKg4GT+Ca0Ed+jAl00XsPTP2WzIQozpx7UyFFzjLu7WhypRTbShWbcoGmmH9H3W8/f9UONfE+kzBpVzfajIBXd0I9k9kV9KN7RH2yzcWf0KbjnwDTHu+6J/xwGhG5wEN11QlIMQhzofk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Hello, Nicholas,\r\n\r\nI do not recommend using TPL Dataflow for throttling by time. TPL Dataflow is designed to always flow data through as quickly as possible. (The \"throttling\" in TPL Dataflow is more of a \"don't process more than these *at the same time*\", not \"over a period of time\").\r\n\r\nFor time-related operations, I recommend using System.Reactive. Rx has a number of built-in throttling systems that work with time durations.\r\n\r\nAnd as a bonus, TPL Datafow and System.Reactive plug in well to each other!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"8e83b8b9-1893-3b43-ba8e-1a8c05947a86","date":"2016-10-04T17:11:08Z","timestamp":1475601068,"authorUserId":"disqus:stephen_cleary"},{"_id":"1bcea007-e335-3ebd-b122-4d7b40783a0a","authorName":"Nicholas","authorEmailEncrypted":"sLAn44py+63CQkcUcB6Kgo6ROwngE4sEA7WSnACS6wQD/Pja29t+KzKO286x6Z7yKzCMkmCiG4Otv1Wst81pqClUZQFOGmH7xWAj8Gn4BBKufTnfgA3pgP4dPjL78vlIvbPVrWQu9sjQyqmmCDM+3y5tUT8FYoOPRQtTk8h1Yruw2gsGM+9C8fznQHE/pBWOqC+6W0bsspvo6QaPvcBY0f99H+s3+1Jqtt4EYTtTRiqvvX/CESqtZKc7qwpIrKwxv94uOvBkZSs/JfNsucRI3bd2uZT4CFZkIRoWlQZux+zASgZk/7ojCmAPg7YOWEA6ALEzDkhh6CR7zjI52KRQE+l1ZBvL4pARbKMzeIdlGiUcpR0ma7Q6UiHgn29Tc0HmV0eP4X0L7gbMqDvk3XpLLKad7xjk1PSZS8Qk/pd3wziL9eNBXx6owp60y6x9g7tgfXrHEdTgTuVEHtmJ9emPwcoouY1tB/MnoYuTlBJ+OhsoYeLkBJrpGEaj7uiXkvuD/nL7ihG7p8v+2Cx+bu5m+EH7tZGElL66vbQY584aaYFAEwcRlSD81nMS6E5RyTL39Q8AfGrZVXC9zht8FtHPH5uVCvT3jkIDGz3QkZ4LVAHhe/UPiWAkqUZMrtkCSbMooN+myBaQxjvxw/267Bh8UWkS17aY3i67bgtkGNo4Pys=","authorEmailMD5":"a495a370830f1691666642f1e0fd5ee0","message":"Thanks for the reply Stephen. I just extended your example with a Transformation Block that uses a semaphoreslim to waitasync after xx items are processed, it then awaits a Task Delay for a duration with a continuation that releases the semaphore. I think it works for now, but I do not like using the wrong tool. I am hesitant to post on SO as there are hundreds of similar questions, just need a simple async queue that I can continue posting tasks for completion and it will manage batching the execution and responses to the producers. Maybe I should take a look at your Async Library. :-)","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"e38a5c27-7a09-3773-adfb-3d3b765cf902","date":"2016-10-05T02:59:38Z","timestamp":1475636378,"authorUserId":"disqus:disqus_7SSc9LmSyX"},{"_id":"389f005a-be32-305c-ab95-cd4edc9be21c","authorName":"Peter","authorEmailEncrypted":"msVIzsH+Hv0FgjZON7uAqlpTUt2tRs0K3wDcy2FbOGOZewY7vihS0RelKRTK6mtAtkz2XnqxNfvprR4iYa3R9E53ykug2tajdocwrJK4G2IQDpCir1WRYx+Vi+SH+Du3X6zE689VT6yg2UJgRt7eD3miTL9Tomx+xqYqKU58qeBdt+XK0Cj6HKzVS6shtEfHKwZC+/Zgsv4EvH4oZamZX3uwT5EKMWFsaALVYiiEb0CHKYur4hPLg8gfRWwr+R6niJTiM2NSpMcszcK97+pgTfFTVACsMb53QpeMuAAwxYK5Q0Mi03Izd6LywP8EarXyQTNIC6gQQn4B0MA5PaSKaxqc3olaT+vkIBJceLcnVtHwOqo9efRgQOeo8QoGQ5t7SNGchyxNQTELLrMnx9y3bub4BvDYeyEf949h5zG4m5lYAC5nCSl4UbTG+2fgFSxaABZI+GoQaoB2AwSwYLWukelCVKwtb0PyuWRRR6FIPRFFU86I9voKVWXLfmgjGVzBKet4V1zXmGMqfHw+BXTz5O9qr77CXG6KBGa9SunH6Sl4u/M4aIToPGWXetzxyiWx4wi4L1HVmiUEOKzpZQPZmSHWeXw+omholjf+nY56fG8K+MmoSyuHfDH+F22qtZHgwv37JNjh1+YlGwpuuJt7hak4tlWt5xFq8rzvS1fCwuc=","authorEmailMD5":"c4cfe03de383452ad0c9c586cf12a4d9","message":"Hey Stephen, not sure if you still respond here but i will give it a try :-)\r\n\r\nI started working on a program and thus exploring new things .NET has to offer, so i came across TPL Dataflow. Thanks for explaining it first of all, but im kinda at a point, where i probably don't see the possibilites i have quite yet and so i can't come up with an own solution.\r\n\r\nThis is what the program should do:\r\n\r\nI want to import XML files to the database. The incoming XML needs to be parsed and validated according to the XML schema. After that business objects need to be created and it needs to be checked if the item referenced in the XML is currently locked by a different user/process. If this is not the case, the business objects need to undergo a few plausibility checks and if those are passed, the data only needs to be saved to the database. If somebody is currently locking the item, it needs to wait until the item is released, so it can be processed.\r\n\r\n- It is required that each incoming file gets processed at some point; it should never be canceled or require that the same XML needs to be sent again to my import.  \r\n- The order of each XML is vital and should always be kept.\r\n\r\nAfter some research and many tutorials like yours i came up with the idea to use the .NET FileSystemWatcher in order to get notified when new XML files are available. This process (the producer) should create a joblike object for this xml file and and place it in a BufferBlock<job>.\r\n\r\nAn async consumer would be already waiting (blocking thread; async/await; while(await Source.OutputAvailableAsync()) for new jobs and start processing once the first job comes in. This part would parse the XML file, check if the syntax is fine and validate it against it's schema, create business objects out of the contents and add those business objects to the job and place this job in a different BufferBlock, where all jobs gonna be that need to be imported.\r\n\r\nA second consumer would work just like the first and await the first Job already and start by checking if this item is currently locked. If this is not the case some plausibility checks need to happen and the import into the database can start. Job done. However, if there is a lock on this item right now, i would have added the Job to a third BufferBlock/Consumer, that only has the task to poll and check if the item is available again and place it back in the second BufferBlock, so the import can be started (the lock will be checked again to make sure the item is available right before the import starts, in case we had to work on more jobs before this job came back from the polling-consumer and somebody locked it again).\r\n\r\nThis in theory should work quite nice already. However, i have one more problem, which is the order of the incoming XML files. In a case where two files come in referencing the same item, whereas the first will be placed into the third BufferBlock (lockcheck) the second XML could be imported just because of bad timing where the item gets released after the first XML was placed in the lockcheck-BufferBlock. The idea was to check if there is already a job for the same item and also place the second XML in the third BufferBlock so i can keep the order. As far as i am aware, i have no possibility to check the content of the third BufferBlock when processing the Job in the second Consumer.\r\n\r\nHope thats kinda understandable. Im a bit overwhelmed with the TPL Dataflow and kinda can't the see whole thing to understand what i need to do :-)\r\n\r\nThanks in advance!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2016-12-14T14:00:30Z","timestamp":1481724030,"authorUserId":"disqus:disqus_hLG8Vpfw7A"},{"_id":"4786a8b0-e1a6-31ea-8a81-7105e16f9659","authorName":"Stephen Cleary","authorEmailEncrypted":"sp5b0ld9NiNvQYJQPODKeJ69GOa4RActtMO6jnqQwIfXm/bs5YKLYsI8p4XXT3NAeene9Gisrq6qM3VgF3M5lLF28SgyAVN0mnIHMVdzPbBr+9J7R9IhEkpOyUpHexCogrlzsrTAZmzDPUgvy8r79lUkKGamLL9tM7Y1Pn9v7Niwdn1bmhdvHXk+PYF1b7DZGGett468zaGjeg5kGtgYtlMLqXzDnI81N4peELYrN74Uxt/J5imMniKxZIVTjdV1GEQbNMjfq9Jpbp/qtUvH2arrFcinDFrFDNL+1EaOifXBJ+IeRC/l4iXpwepFatk6OYl/Y6yIjnN23LyAlwEDDfWpReuSPe5MRyXPTrf2pAcZgSd38p6Rs+Jc8PXWBvo1UHpitQanWjwni/ryqo49R8sfGPJEyfwsa3UqcH+t2oqdV191HntT0Bi4+8VAi0dxNuts8Vbfr0P8RJZ0Q0Bd7SONJw8+zIDNW16bWPnKdeoobmU681R06eSUePHcGU5Ng7IWIVLH0E+lj/5Q7MLMt2eSHE7fNmhFl+Fq3kESXo0hKbFFGkQQVKHlnjHzVj/nzyehaAPwRNKPmW2CFmSwwzsdQdAPJcB/q9+veWJRVahpQfz8NosTBX3yxcCUVk6UFPky0YcUl8f1qfn6Q++WmJ1JBMUCt2z29LNlujuM1R8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"This post is about using BufferBlock as a Producer/Consumer Queue. It sounds like your scenario may work better as a Dataflow-based solution instead of just using it as a queue. With TPL Dataflow, a \"consumer\" often isn't necessary; you can just end the pipeline with an ActionBlock instead. You can also use TransformBlock to modify the data as it \"flows\"  \r\nthrough. This seems to be to be more in line with your needs than having multiple producer/consumer queues.\r\n\r\nI'd also recommend not to place \"locked\" jobs into a separate buffer. Since you need to retain order, your processing action should just wait for the lock to be free directly.\r\n\r\nHope this helps!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"389f005a-be32-305c-ab95-cd4edc9be21c","date":"2016-12-17T13:38:15Z","timestamp":1481981895,"authorUserId":"disqus:stephen_cleary"},{"_id":"6f6c48d6-ee0a-3759-a404-5729414e8bfb","authorName":"Peter","authorEmailEncrypted":"QsZC3WFmZt9pU8tDpEA7m25VgQko6Xl3ORYZ4nRFUFKHGtL014mJTC8wXitzZISzE0jgfDYV4SIr7Kq3BXbbA9dQNSnyRARSSp3XP/f3abKG6A5OMMP3ahTesq7dSM3s/B0W79eMWOBEUFgwxpy0S4G0zlhi/OxIIHPk5mbnbFYmQ9owGzvSWE7/T3kfp/gM4nZUUqPdZpXnqU77Smh7bIK+u/jj8K6YDW5u9OPVP4qcFFt3t+VkQflF0/J8W2xCK+hSMqpiYLrcPJWGmN/5Znypfm9soQsLbZf1UN5lfqiivxg2CVqbfwKdkfwHSK7e3TEzy+DCcw0TZAQsW6+btBAvn4cWylkpTCM27bwXuy2EQQjMjTZ6YApJFmhCfdYetbxm2dQgk0hzEo4nVH47xgO7eg8piAHDvo2e5iDLA4bh6dLy5mms75Lh7TvzOikK81JJ0kvvDBXJnZ+Ro1y30KcNma1xRfRPXz9/g1qi7LH+8mB8ZNZtyvE4tU6uDhAzUvtBYPwnkVmWpVi6ijcDJ3ASwIIpZ2hhQxl6lCHHmwn4Mcxfm9rk4mcEAisyD+dasOxpaf9x/1R5/UiCXzceoko0rbcOdKL2fLOoSO2Y/kF/rK/CbUDlPzAnBjbOsD4CZiOOFuEmjDDPhTJvej6S7lEa3yz4LX4VW4AsfFzLnF0=","authorEmailMD5":"c4cfe03de383452ad0c9c586cf12a4d9","message":"Thanks for the answer Stephen! I'm not quite sure if i know what you mean by a dataflow-based solution? So tpl dataflow is not really meant for advanced transformation/processing of the data? More like targeting simple data?\r\n\r\nThe idea behind that producer/consumer in a pipeline, was to split up logically different parts so they can run parallel, since reading of XML's f.e. can take a while, but also importing the data into the database.\r\n\r\nOrdered your book, should be here tomorrow - so i can get a better inside look into TPL dataflow.\r\n\r\nWaiting for the lock is probably a no go, since this can take hours even. I only need to retain order within those jobs that reference the same item, not all of them, which makes it slightly easier.\r\n\r\nThanks for your help!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"4786a8b0-e1a6-31ea-8a81-7105e16f9659","date":"2016-12-19T13:21:14Z","timestamp":1482153674,"authorUserId":"disqus:disqus_hLG8Vpfw7A"},{"_id":"d603e332-98a0-34a6-bb52-14358642271e","authorName":"Stephen Cleary","authorEmailEncrypted":"sHNmrfzpLhOh5WL1ZEAwKOXzLMIm3LzS9H9LT4/phhMU5gMHPxI8uUJ78AYsOYdlh60S/paPRcAlxoc0G8tBVMPgTHOC0zIG5w2vcaNLcfVEhqGLDDIyoxceHWRq2Dzuk/J5SUE8HgDBr2gWamdnRvt1jXOsOeVBsJQf/lJBFavgiAOwpYdUyy26qcJXRvluGjKw5VFXk1WLxvOslf8SybLX7g7ph7yB4TvGSqnMp31b4vfMKATUh1VqTykAPMRzzmm5D8/89bDMeev/9IoolUmXcjgCt62e7tJKQ9MWuh945nITuejj3KVt/W8iXveLvDtwE3viuENUi5DngcUmj1Dp9J5uWmxLpWzU9FnBWh+fIr1AgxvJ3do/uJIHi7Zy/fqqrarRaUy6kkk4lr/qU4HEkbP0KrJT095qhARLMKWOlCtWE8W5qRaKFDk4QgM1OEwmuFXNPy4oI0ebRrzfxH2+SRhWy9FnKFbyT5/sWcLeBzwBPv4KeRtmtteq/hDBzhYfoYlshegjmkAjrgjV+E7mlIzUkml1BRGJcwSwKYcLBcn1beVeSsgBWtMZqoXycHhWn5FMVnuw+/7ryvnDx9Usv0+AcYiRSDfmEzri8FEBbeaf2edRhwl+eQDVEIQ8EwqNPMT/Lbg9QS5FkSwVcJZqaT7CXLHXvakyFPik7gA=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"What I meant re TPL Dataflow is that it *can* be used just as a queue, like I do in this blog post. But it's far more capable than that - look into ActionBlock and TransformBlock to build more dataflow-oriented solutions.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"6f6c48d6-ee0a-3759-a404-5729414e8bfb","date":"2016-12-19T17:10:59Z","timestamp":1482167459,"authorUserId":"disqus:stephen_cleary"},{"_id":"4d68b825-80a7-3ff6-bc83-8af23fa7078f","authorName":"Stephen Cleary","authorEmailEncrypted":"QucMxVIRmNP9AXug+a0/tUAsBt4bMBITW3S153ojWMH2kcdMX6FoUX6pEfiWtyZKpHWOgqFw7DQAGwSR/uA1arJ5r9uaEiOYyg/PM2D7dktisauFYT0Q3D6NrBlpieafA17abIwcakfpgd7vyu9wutLEu93pLUbmuKtvH14WHeYnXHj6hbYkeNLQ5GaymYGWI3udvxSoO8L1X/IxOKFmNsSEv+iFUMm/+Uer4xnRFaPlWP3sJRMsam3fgV68un9xnHokAjruU05Fh3luvQm1cMRMA7UmC4/+KlL/LW8ydCzk0uw5N/52zLJxUtdKfzS6YSZJu1yMcTqvavQKvPuaFbxRGPVTw9K+AWvDWGRwviJU2/bVsH1euV8EQj0+z442XZiNfFrwibGxvvVarMV412SkQSEYPGbPQrN4DsDyn/cHs7FaO7aDgP58CC0TUanwe1XQTX7dm1gEzGPLDASr3SZZyT9XpfjW0RZbS7IsgkmQyMAtXYo47P+RkjEh8h7d+ce5vytqlYt2XbTYTo8pg4wb6FmJHucjTK8fXqqff1lTn+DMY4b0GsPO6ghLw2xNa11nGFakZxV0vO1A6Ob1ycN4tmIEdUKbI9asO+lD9rEXa2i4ChAzhGjtsCcFvv6U5XGAt4HwloWNfam4w+/McIGWyN+KmUgf7p4tHcjOce0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The code you posted is a valid application of the producer/consumer pattern. If you want to use more TPL Dataflow, then I'd recommend looking into ActionBlock instead of BufferBlock (which essentially moves your consumer(s) into the dataflow mesh). And no, with multiple consumers, you can't guarantee FIFO because multiple items are processed at once.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"9f99ae37-3b8e-360a-b7f2-b2d78b9774fe","date":"2017-07-10T13:53:10Z","timestamp":1499694790,"authorUserId":"disqus:stephen_cleary"},{"_id":"9f99ae37-3b8e-360a-b7f2-b2d78b9774fe","authorName":"burak","authorEmailEncrypted":"FJ+wDbJsTSzu6WDGrCuKN3N7HUTHAV32UXeqSRzkDagrOT5dykQyzo1e7k0Zc+ZzNBIN/thuC4Gsn6POxBRp1Tsi3tgJg5tvek17/zFNR/Qmo6MBQm3wi/NuPYXPh6zd3+2xPEVUITB82syctf3eAoGMX+BDwuGrHceQwM6GhIj/b6cT2cuIE6szYNo1JjTkH79bNi4VgYafDmcbfYPVBBwxhh0MiMHkClhIHlflloZAdOXmH6kmCKKPswliFH0SybJP/A99Yi5nqlpuWYPaL/AL3QSZiJq2Ff2zYU5EpSjC5dRj0m/Ojf03bRrxDnOLFDLHIJ28LQDpD2obuqXtqAPYFvMA9k5EOJ9VOmRBzICXtv9wQb2VfCCGxeH4XPRNRKXkv6Ph22pSsBSN/c95wNG4W3Rn0WLqhb1M2m3bAqTKRA6Rewx+ZsoEVGZEuPos3vatDXgesZ7bj2UQEltotCs0uyxcXCWohqCV4uKLV7h2lsM6JIo+AVuWkpXH75r1RFQp9u/397roFP6QYLZBa1TlR5mkaM0r8MejmwWys4nasKtFWfv0CDvIvWnnXH+PCX3BoYymWaFpbbtovTTlVIHLnmrA5sCaUPMpdABJERkkH72gpPM3M4cH+pQrfwH+/+DEmjBxvvgV7XAGipcLGCtSIS5GV4koonOfZ8wbQOU=","authorEmailMD5":"181f504d1045d08f580ebc4ce4f9a843","message":"Hi Stephen,\r\n\r\nThanks for your brief explanation. I have a program running as a windows service, an infinite loop performs producer-consumer pattern. I was using BlockingCollection<t> implementation for my purposes, then I decided to migrate to TPL as long as I investigate on TPL . So I build some code in my own way this and that. Would you mind to make time for reviewing my code ? I wonder if this code suitable for long running? Do you see any bottlenecks? I haven't used any parallell approach, if I want to use parallel, should I use it as you provided above \"Multiple consumers\" ? Can I ensure the processing order(FIFO) if I use multiple producers and consumers?  \r\n [https://gist.github.com/fab...](https://gist.github.com/fabercs/a4c92abccbfeeaca92293386406d8ef3 \"https://gist.github.com/fabercs/a4c92abccbfeeaca92293386406d8ef3\")","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2017-07-10T06:11:45Z","timestamp":1499667105,"authorUserId":"disqus:disqus_30IsJOLcrN"},{"_id":"8e7ddf9f-8a4d-3827-9745-65dbf80ab7fc","authorName":"Stephen Cleary","authorEmailEncrypted":"u4etUKAtNdYIAjxQTN1ylA6M1fKh9+JtYYncRh1xTf1rQA0+Eo6dODWDuSY8whChDf5nE2RgrnjEIuA6C4qAANIhELz9w5s6o9q4iTfdGLHqRKZZXfiKn/5tkqeHrZOpecGxeOJPKHlV7W+vveTMwoc6vdzKe0h1aStyRCf2NNlRTEGiRcLNo+WuaKDRMJWwtGbQ/nfuGgzEfxBY4FqDQLaUGdijVC7THC+OSqF6/MAF90rYj4pEYLKKFH4L4KvufgMaagyHUPs7G1qZEasD4qkhYVdZjs6bBx1tbwp3wKR/r2oJmenbkX/qdHbJZuSxK9Ts9BxX8Pi3KR/zpBfR12Hx2/qlVd+d0iRwgFmtg/tE1opbA+XVQy8CbJ2yWOehutKyPW+Jl1IftYwPP0E27hauhq3oVvE0/1gQtkAHuR2cEqky9HmOKzGTh6+ZTHTTE2x5NWdA1KMww+wnMIfX9YSpoPkow3eVKT0eXVBiYU09wbbQQXh0NVFozPxjQc58Cj8zrzCYYa2OfqwgJ+W/yjHjnme+4mZ0CJTkvvXyJH/hg/ImvC6jRgNeywV4bRBXnww/zRyCOoVcc1nKeE/eRnzQ+5PrG28/kqr+vP7jZ1zHRHgTrObzUdyNhKlLs5iPmUnin4D2qBr+fRMk6I6GKxxPzG5Uan78oyoU9MTw/qU=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"You cannot reset a block once it has completed. You'd need to create a new block if you want to start over. Or, you could just not complete the block as you mentioned - that would work fine. Many apps set up a dataflow mesh and just leave it operational.\r\n\r\nIf you only have one consumer, then (of course) it can only process one message at a time. You can attach multiple consumers to a producer/consumer queue, or you can change the queue to a mesh and use ActionBlock instead of BufferBlock. You can then set the MaxDegreeOfParallelism option on the ActionBlock to enable parallel consumption.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"6f51f1e4-4ed7-3083-af13-f118de7f6187","date":"2017-10-04T15:59:51Z","timestamp":1507132791,"authorUserId":"disqus:stephen_cleary"},{"_id":"df6f76ca-9d7e-3bae-89db-75f6e636d0f9","authorName":"Valera Valera","authorEmailEncrypted":"k+HRzPUIDH1uyCveodAqN8Gm9QxiLw7Hkkj2uEcwtUvfNdToh9/sTvqqku6j9RrKHDCoP/6onQ+ww6/1hY9H5VCHGQGKAuo9BQ2vL81OXp7jeXNCeul6CEZkutmHk6VwmJFhasMglT7VVptaWTgcYCq8LlI3XWbZo+lPPahPU6D7huaXlMqbBd3uDmAAyLEz++db6w49aND9Rj3MDywZn2K5Q8ITJJDJniixx26RAMtIydJrMpXZaFcRokkQoaDltfe7LHWk7Xaq+jVZY4BeqR9XTCJ6hfTS0bZgTk5mfa/UjS1btfo37RPQ53gDNTxb6swaOXna9zRZH24Rrb5GezxQwFZgPVWAv1O3vyJqD1/hvqNKDeSMKjY4IDrhhHIIAtr4K/6tbhhWH49GG230nOCU+oYSiDWLSzjqVbyrHBhA7zbZ2LolGiXax1oYmSppTkpltudWpM12iVAz9KTtdci8nkjKWI+L6T9kbD8pqk+iP8212sJs1P+v1VD+EbCiDJ6h6QZw+CKMl46R/KflP74A6FXL19tpZRV90r/GUpApeMmeTbLO8phaRtxRqHqpfenEAVSqILH4fJJnOn9DdUWPmwwikCiB0KMiSOpnkHtJ5v3KSqHz1XJpuUVp6qdgHEX6v2sL4mrD2bWirYmFfRQ4iD8zLS0wTFCm+u/gSGo=","authorEmailMD5":"614c725eb605a8a6268d23b7d05aab13","message":"[https://stackoverflow.com/q...](https://stackoverflow.com/questions/48337739/blocking-collection-when-collect-results-inside-actionblock \"https://stackoverflow.com/questions/48337739/blocking-collection-when-collect-results-inside-actionblock\")","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2018-01-19T09:27:50Z","timestamp":1516354070,"authorUserId":"disqus:disqus_SAck8xFJHW"},{"_id":"5a5e4c2b-1e3d-32ef-a819-2b778e8dd21f","authorName":"Ondra Medek","authorEmailEncrypted":"KAbOAgzIvZXmoesY75+WI1hOQZVrSHavfuJMf7xmmdYhdgajH9ZhNqhpBdXTvETp+RcszH8cLR03RdcjHZQ9tTYVc5HXVKPFCxPQEwv2OHb4WGq+mm7Qzxrjf8XREM2G7DI0GS6EVobivzQR2yyWEzmFypN7EzxoTxhhz6jwph8HcI8HEOChkBdqqH3zfElbLuql33oyOWSlK2/ms3zMzOg4ql1YNeWlqmrJkiHZXjkh+puBWEzWdCPoKXQf1I8oNVXVaV+I29toZRo0pKxmBp/hbeDOKT8oN7KvqGs88RRKsdY0nfGWj1mvgtIknXnHW6KmpDfVe2Jkr6Am3nnp1UviDWMGxef1H4ykE3BCqx0WMo+0r40llk9FVCqk7gYhkhC3gDtPb+hU44wvYyLlqeV0F+/F8CqHm8v/4ASfgnaHAXZ5Sthle+vRnC8M+a2aq/YSJy40Xo/PQ2LcBea7mWW3a0i9jCP7KRqaUWaVquNSlqE+Qsh+80LvuKpwzeQtiPmttQfGx3Ldvp4PHy/SpCAhQHlqthYQ2qDYGKZUT6TSnkaJDfZeljOZwqbn5WABQ1YqZDPM135UAMEdMNwVMWaTWfRTprtAUHwk1J0J3L8PpGnQoqRZfkOODVP8ywCev8dykobzkOQRgVQFnXL4a/o+C0CZ8cEUkdrFuCkjId8=","authorEmailMD5":"788da16a4617bd79f2bf91d8dc258455","message":"But the Microsoft doc uses TryReceive for the async multi consumers, see [https://docs.microsoft.com/...](https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/how-to-implement-a-producer-consumer-dataflow-pattern \"https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/how-to-implement-a-producer-consumer-dataflow-pattern\")","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"0ba63598-155f-3ab5-aa2d-7f8b97681c69","date":"2018-02-04T21:00:31Z","timestamp":1517778031,"authorUserId":"disqus:xmedeko"},{"_id":"e26a04d9-4aa1-3dcc-ba7e-6a14f3c380e8","authorName":"Stephen Cleary","authorEmailEncrypted":"L9BKddw4lXPq7re0Y/HK+5CW1ahElxzinJPegbdlsfd3QBe4M6SDAZqv+f02NYubNtJbm1K+t8svJFAaz+HeObpTcCpybmVXCX/BWIF5umx/rZteJOjzH3cBtPplIJrURMkat4b0z+yzpebu6r5Q3XdqgAGM1Cp3+g9aKovoU1BEqCFcKf2YfjRq/UU/8OfuASIqP0lZ7y8ZrJSMl8mqqrURb2hAOsUIBmA9MkSsr2cdpBGfiTkd3ZzDkTmepEdTbDJrndK/PweXlGieErJeoeoeyHkOpMZKG80j5bj+TI4/KnS3rFZMGlRxox0zZxnedisRsxObryrc32feBFmGoddcQmEmq7w9uVCuud7hiTZaWjJ7vNeH9xu7vXweqCZ+egXGY61Kv74sYtF1owkkTtnjnqU2y5rLO7Qgcd2EdGIMUgb8O971/6HvM9jyq51VFNOKPcnKfhcAtfhUqQnIL/yyQs5p33x8+g0MkIHdVJfJKlaoDVY/CPfVqI1W0/JU841Su4vJ20T37tkpbl+8BNW5OHv/d1m/gUugoGwAtoGVyheTb9B9KrBr5W/b/1ogqNR8P63nMv5IS/2E1dj3OiqcUQS6J+T+Gu3KQ4cLfnR56MQY+Q1pNDmeU2aQtV90q9v/uL7IwfVZ2U5DB284LeTEYHxu0ImjhzCfDWA+RVg=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, as long as they await OutputAvailableAsync, then using TryReceive works.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"5a5e4c2b-1e3d-32ef-a819-2b778e8dd21f","date":"2018-02-05T18:58:12Z","timestamp":1517857092,"authorUserId":"disqus:stephen_cleary"}]