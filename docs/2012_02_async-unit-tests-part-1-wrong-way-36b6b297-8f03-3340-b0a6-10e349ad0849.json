[{"_id":"413641f0-bc2f-3cbc-9215-8c71c395da91","authorName":"Jonathan Allen","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://infoq.com/","authorUserId":"","authorFallbackAvatar":"","message":"Thanks! I was wondering why my \"failing\" tests weren't actually failing.","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2013-01-12T13:53:19Z","timestamp":1357998799},{"_id":"9072648b-af30-3b8f-8259-c7bce8512900","authorName":"Anonymous","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"Errr: It seems like there are two problems here, *none* of which are related to async.  \r\n\r\n1. Using 'async void' is just plain wrong here.  \r\nRefer: [http://msdn.microsoft.com/en-us/library/vstudio/hh156513.aspx](http://msdn.microsoft.com/en-us/library/vstudio/hh156513.aspx)  \r\n - \"The caller of a void-returning async method can't await it and can't catch exceptions that the method throws.\"  \r\n\r\n2. ExpectedExceptionAttribute isn't a good solution here, or anywhere.  \r\nThe issue with unwrapping the AggregateException again isn't anything to do with async, it's just that ExpectedException doesn't allow you to verify the InnerException. Just write a helper function to catch the exception for you, and then verify it properly using normal asserts!.","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2013-01-14T07:42:32Z","timestamp":1358149352},{"_id":"a8f2496e-33e7-36ec-bb0c-f128aae9f846","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"At the time this blog post was written (when only VS2010 had been released), \"async Task\" was not an option for unit tests. BTW, it is possible to provide a context for async void methods and both wait for them and retrieve their exceptions; this is how nUnit supports async void unit tests.  \r\n\r\nI agree with your comment re ExpectedExceptionAttribute. I use and recommend a ThrowsAsync method for checking exceptions on async methods. I used ExpectedExceptionAttribute examples in this blog post because that's Microsoft's recommendation and the approach most MSTest users are familiar with.","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2013-01-14T17:55:25Z","timestamp":1358186125},{"_id":"54131b57-6e48-347a-a065-b565d4341459","authorName":"Dave Schinkel","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/00533879225878391595","authorUserId":"","authorFallbackAvatar":"","message":"Not coding without tests is NOT extreme. It's how you get shit done and how our trade will and is developing into and how we should be developing software. Test Driven is effective, it's not theory and if you adhere to principals and see what it can do, you never question doing tests, you ALWAYS do tests. [http://blog.8thlight.com/eric-smith/2013/04/08/we-are-principled-6.html](http://blog.8thlight.com/eric-smith/2013/04/08/we-are-principled-6.html)","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2014-04-21T04:18:49Z","timestamp":1398053929},{"_id":"c10074c4-5d61-38ae-9aa1-88aa7a86f47a","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Agree to disagree. I read that blog post about a year ago.  \r\n\r\nThere are certain types of code such as domain objects and business rules that are very amenable to tests and are ideal for test-driven development. I would go so far as to say that there are entire applications (probably a majority of applications) that can be developed using TDD.  \r\n\r\nHowever, there are also other types of code such as low-level synchronization libraries that cannot be fully developed using test-driven development; at some point a deep understanding of race conditions and other multithreading concerns *must* guide the code development. TDD alone and unguided would result in subtle bugs.","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2014-04-21T05:52:14Z","timestamp":1398059534},{"_id":"0816457d-1ebf-3136-b0d3-0c806cc18fec","authorName":"Dustin","authorEmailEncrypted":"ipOHCyGOzLCJd1z6bojOkPhL4KLjW7CzTu0jIbCumUdfFgfhe+K/PKjwOe62iqocZhqnWAsbFDloqZGC/U8aE78GivYND66pHnPWcMR1teTgwgtY0n02fYPB9+m8zp9rH0PDNRS5PItkQFkp5k+SKjNe3bCvbqrW0WCbyGyGsPLKVenSmFMpZB/h4kRwxX0yR5EWLkfJnEOsL+V7KU2yszfzvM5wFcVL/svrLAUvcl4HS+MnKVSVLrBg+jQKZeZIv8Wa/F9RAq742UTwR/T0eHPz327Xf9big/uzUqLoLZMitNY7OqbP2Pdl8k2kOErrnJ5SRvPnaM77JXFo3iHxKhhu13p6dMweWFvk3iz6i58+ahIK3gd07JJP4mOPubuLAdit9s3jVHEcyteOlBKVfWetsyMOQHJDUObtlVbK9EDOFPTPmEx9j+GGmI5bKs2N9wTOBWS+WaROtTdREEq2bWIbuqfS5Du6FftcFjhA85Yk2WWL9dnFgPr7ZqkNhxAYvV3c/vqXVLT5glQRtwAMorgU2uo95InwRKSHJEqlTXamhbWAtsUEYM2g39vHFXEqMRnZOB5HiSPBv40Zu1gc0KLwlXMNmI/feTnbUaImE76hqQlDpTyL8rXL+3/ETcTqVS4K2mEkVUUDlU3LJ2xNjc1AKm137k9/3Tt0OdYt7B4=","authorEmailMD5":"4071a791320e2c575e7e28323de11909","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"Xamarin.iOS 7.2 release notes indicates async Test support: [http://developer.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/](http://developer.xamarin.com/releases/ios/xamarin.ios_7/xamarin.ios_7.2/)\r\n\r\nJust tested this myself and I can now await things inside of a test case.","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2014-12-08T16:59:39Z","timestamp":1418057979},{"_id":"46939aa1-12d7-30ad-9a30-da21f50cceb7","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Good! This is something I've been bugging them about for a while... :)","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"0816457d-1ebf-3136-b0d3-0c806cc18fec","date":"2014-12-08T19:08:14Z","timestamp":1418065694}]