[{"_id":"3322f0ca-ce26-3dc4-8482-a777691e6965","authorName":"jenyayel","authorEmailEncrypted":"MEa+rkoOrb2/KM7Jc2j9t5WpIW+NzzcEOLolj23Q2tXw9uF4K5tKsYO84tPgfCM/F5ztG2QJvdhp84HI1nK2fCTdPc3Wc27dUeVnpt4XrjIE8uG+otl3BMQFd7tcOteJFKRqZrkBcxvJvUnyfWJ9DOfWHWlENTPSNxA00YKlHrdjye9KhRMkpfBMkh60BRYSpKHx7euYmQqvOssO47Q4g5p9CbOfJfIvQXOf6YEqKdvq8MhxDS0BpvUgRvqNgA50yhSWilqIuKgFeJr6ypsbar//ZHv1I29Z9afgzdS0XyUoO11fsWoETYoz3dYm/8QDVMUOKWgc4ye6bPvN29rQ1vzMT3pagQtxkQkSLRj1OKXdYBf4nwJlxK8Os1dBAFwI5ZXMTOb3vsrxX30fv9Ghg2gVdxBNN0eFP3kXwOlVmNu4GyzWj/xicJvZcSPE9zZom4JeITHCc5amGUobDBiOPKdN/37wi1QFKbWg4EqqAYZoG072jUUt+e/ZDuJNwsOBEllmlT04hE1O48nA4Bh4Ru58lkaGR3ocbM9Ps+XhImBYlZlP3MEayabWltUrnly18RXwSD3vMvueYHvkvuQT+xAmwgd/Q1EX+pPGsO+/X+UPmovJdLJBF8oPqMRGrIidtY77G6DVO6j+/2Q/Nt4WMLy1luMSDo3YagHr/rAkgsQ=","authorEmailMD5":"186397167774b42bc9742174b866ea28","authorUri":"","authorUserId":"disqus:jenyayel","authorFallbackAvatar":"https://disqus.com/api/users/avatars/jenyayel.jpg","message":"I runned into similar dilemma, but tageting ASP.NET core. There is no `PushStreamContent`, but there is `HttpContext.Response.Body`, which is a direct access to output stream. In fact the code is even much cleaner.\r\n\r\nP.S. I think it worth checking whether the client is still connected before processing next `filenamesAndUrls`.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2016-10-20T19:28:10Z","timestamp":1476991690},{"_id":"da60fff9-dfd9-389c-8701-d00daad10f53","authorName":"jenyayel","authorEmailEncrypted":"LexKfgQpvgPQuCVAqOCbhyWa+OqZ3FIF9FpVCrmbM0lhaAHR4WxzlZWrCcpRILyYqJxqTn5ZbZwEy7jOjFwr0aV719yLv3jUGg6NRvV/Bjke8OkQKIXHIfh2JQeJs1Wt1RByMfY1eQ+1vzLE9xs1d6PqdFL+cZFXvjq2wVT3q6tHZLj/O21rsWXCUq31q9rwHD/dfliVzFEoMHzszekR49eDVftAjL7qEWM9JZawExDxadJFoMIMUftpi+Pa/KybEvXWkXSnYk+vdRf9XhVSHT6mnVOLEbzNH6QttEsq3UMNeMnZls0nOL28n0bA/xlRHfM7RITmzfsarOLdRt7GUQ1534o/Cb1B9nZMVjvSmXzlTu7ARkeBjhWW4okVByQqnCSD3CPcBRa5fBHYZknvy6shPjWwoCLy85+Wm1u8CFGbwOAccnIZv32VaSZwIxqm7plT7hCgBeFnaA3JyjNoMfHWlEFk2OX7h+N9kt9WMA4srE4O2+MPQjA6i7yC4sukd+HVPCx0RHvVGnF5lFJqGw7KMYCYKb9eLQ0MSyKApgjOIMjVAI7JSuRH6I0RXTtpgwG8RDNbXimFlp9kEwQBGqKmHagBANNdVGrcIfr322n6klgjWy6LSHkhUpwRjssFmXwAeBXVoWpJSgdbA2kmcb7ZpCC637faEX4XVl+WCok=","authorEmailMD5":"186397167774b42bc9742174b866ea28","authorUri":"","authorUserId":"disqus:jenyayel","authorFallbackAvatar":"https://disqus.com/api/users/avatars/jenyayel.jpg","message":"That would be great.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"ddd93340-c27d-3a8f-8cc4-393d3b251055","date":"2016-10-21T14:50:11Z","timestamp":1477061411},{"_id":"ddd93340-c27d-3a8f-8cc4-393d3b251055","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Yes, I plan to cover ASP.NET Core in a followup post.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"3322f0ca-ce26-3dc4-8482-a777691e6965","date":"2016-10-21T01:17:41Z","timestamp":1477012661},{"_id":"80c4daa5-e8bc-3f2b-866a-13744f39522d","authorName":"Paleta","authorEmailEncrypted":"AKM/Ms17PBAf19/8LGQ5pBmuYzEzNXm/HVKjzBzmRA568keCjCW5cYarkTWBNDMwwCwZb4zYK5lNJlvpUhibKlGXs9Xdajjfd2R0YH3o4WQ2+5K4sH3SuYih0rmD+rxI8OkGdjYufXjvhOkHVENzt0s06smkNm+W2EJpF5KTWVMaGajxZxPn/gy5cHPqFpezndxkr5HdN/oyZicK+qNLVZE2eumv3mcfzitp54YEgPViv2boyPBbG8v6FYAS4ExJXkt+ScoWmTXBWssfMNPy/cEgE3wvrVvzRXUuNRXgYYOPwfJAcy/EykoXdCPwgepRnou3O62yVwmd9m1gZK7PHyQpobiIFTzfU5GZVhe3q9t91ZZTBOjGCY7G1bUynzNelGu/O7Hs/k5uOsdGgN9BISe3vtf5Sye5BCtD/ORR+fE1+AcTybsToNVsvaSQ5xy+eaeT89zYHfSQLzSb0rPeR7KLfysGwo9hyQiLIXdi3GF1hVFctz7XqgEz3H1u+PFmZbTa1gYwio6mhmtEUG2qt2r5wrdqBuMCJNae1ksQ5ME9g1W3B1Q/lHzXyiX6m3yYO+Oigy+Li0wREFHujo9T8fk3LIEXppYX2YjARClMHTjlDIi0fkx66DbRRvEovNTNOe2eDnUeNSt7J2NZd8CFc5eiwiRMoamEc1FK+C9au0s=","authorEmailMD5":"bc1aef9e28aa7f8202b40a9dddb5dd74","authorUri":"","authorUserId":"disqus:enriqueallegretta","authorFallbackAvatar":"","message":"Stephen one thing you did not put was that the outputStream MUST BE CLOSED by the developer when using the PushStreamContent, the framework does not perform that and you can end up with connections not closing and resources not being freed","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2016-10-24T17:14:10Z","timestamp":1477329250},{"_id":"9734ade8-6631-347f-8154-72a1a3569162","authorName":"Lucas Majewski","authorEmailEncrypted":"r21thJR5SKphKGi7EUFdEpO1l6DH0YA0Tb9xcrf7mjBc16bNZBYJAu6dRMvxWr2Zv+hJlhVzhi9kBohqmPjWIqdjYsizfHf9Cw7SwzXmVgvQO/MCjB4rE/6vQqFU4Swnfz2N+1JnmHY/+SHMjghtz+s7CXvIDjrOG8sqUeqAtjADoiCVytW4yHzQTUkeghsfYyNdkpKcG3Xrjotc59bqT9U00mFWejFnqZFtUdhhg4pI32DclU8i+Rn0QARzlJ+924mZVLnJrhaArf2n627Cpv12/23YnZuHILCZ/TsEIvLIPSlmNrqQ255RQxcBpDTH+C57CqOTjK1Eu2/14ly+YRhH6FBxmaEo2PLKv3QQ7eZZPS7lyLMSSJMhpTLFexaIZXO9OCfeMy8oDetSpO1dQerrv1otsV+Q8Gt32HZiJv/ddXNv1aQGx4kfOAJ6nPxr5uAW6SH72+O4iFc8nsOXFg/5neh9UuQcfM5aoU4ysuxNvk1DRkvmVerLJ1ZNayNylbVfCLirEfIQQFrArFFbiVsBFq00cA2Ki8C9UJ3nVj+UaPdS6CzuxUTltCR14MYMZCNN6HNuRJ0y8xYSNr91+U9EdFV5Cx3QopOrA2/DmOqAi0KgrvqFG56GOG8zZy3Jvd+jFI0y6DmeKwkdPBoeLVtjuk+pg5SP/BjCAjy5vMk=","authorEmailMD5":"330ce372a2ac3ba0f8a45bc0cc606363","authorUri":"","authorUserId":"disqus:lucasmajewski","authorFallbackAvatar":"","message":"OMG, I stumbled upon this article while looking for solution as to why a WebAPI call would hang. Apparently closing the stream fixed this. Thanks Stephen and Paleta!","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2017-04-11T02:12:55Z","timestamp":1491876775},{"_id":"2842fa07-a000-3d79-927d-5d18d79effd7","authorName":"Sonny","authorEmailEncrypted":"IMzhKound3wtPhc6xW5BlIYm64oWtiY20YClizY9rc6famxCTy71+45WdV/SNN5YQY0yEQqwuAmYJ+t1wOS3P+23yFni0sWgb9EjsWduijAiKqqySHqyFcsHDCvjeYO44+VHEd8pL30+l+Xrv4Lx1txEvriB8ZnBSAMxqXBIrDWGa7OLuxARuEgAGM9/zRxoA8DLQd+/FA6zvhonrWuXg0thEiN/HJsv5wE4chDl1+7yksQdAMdVo8Zz4hGQChxbuhv4tNbMqxXYztD4/IshK4vYaWtVAtKsnEEbEDCKewkzxO0UWVqX1vAOISCZ608lz8BgGC4SMtyhw9NdklMUuH7/7kZV9OSI24LKHlwWnpOP6V7f9erVE6ZDcBY7y/5Lqf5QmhfBRkVnucM/hTv6DXhxiIeewCaaF0uk0WVPVsadH8lrU7g1lXlbMfTdzNh44dxVaIsbTu7lmLrM7cK6oMBW1q1aXfmGY1WlX+mgpI0XJQKJ3dXWgiA9GGZkgn1cV51RysIqq9oNzteEKvUFbpo1STH8hWlT21ebBPN9p3lAgeKd6FQ5W4zBZhU+6RT/5WKFVpGzwj7FXHvQICiZ6zfjlC45k6gs1Q4axGNQXdj07OHZHv7wdMx94Y0b3Z+o58Mz6QMdjmmnnbG2e9nS2HrcXZWxGxWy7JsO2q/AFdw=","authorEmailMD5":"2e078251b5fc2aa998d2fbe7983c7ff4","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"Sorry, I meant to create a Client using HttpClient and read the zip file (sent from web api) and save the file.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2017-08-22T16:49:58Z","timestamp":1503420598},{"_id":"78b88171-f2f0-3222-a0ae-f6615f0e9130","authorName":"Sonny","authorEmailEncrypted":"UTRjP7/7goPjeyC6d+1Yai/hUvfj/CDuNIT6xBc0RFC/7Oo7c6QI/P2EVbsSFSLLyA5SqfwjsTxKgwhskh3KGYcLQQtZg1DGnXxFZ3EXKXuzXSVJyc5C9Jrn83z+s1nB8rLMai23BT/dYJzZERZfnVEXS7dGm+Z+MIuKbQAAd5vu2NACCQ01X/iZdRON5U6e7OAjK9sTULFbtI4cyFZak+dNdx7KoINIS+tkJ7XtiX6f/n1/v+tJZaPHNDwVf5Ybt9l5/KvkqPV9TGNYIcG/X5GLlRmvLXDj7jQhno2ssnK1swmyf4IqwU4ivuwo2wMwQvL5d8VPtczMvYi+dtCp8zco5VxScEE7UiglFtp8BJ56hDtWBxS3jx3YSGeB8Zow4StaVbpWr1JE01H/wo51X/94Lw5U/QXOTaYXxUKVqQPF/q3dreKNvGaJhEbaPFGIKlT+LeMPllQ4V4w50HlsdDMPfnHt0pRUxkQuCPInOJD8lMSYL3GiC0RIZY0A8+5lNq7Hc3A2H62ersTSlJczI3wesfOARO/PEsSy+phNUHr+NtLU4e5XolQswgR4kT7cUFVV+JZmuVcy5YpgBJ21vUc0PSNXWCmxaoxj609gO9C4ejvYlD0NGQ8Mjg9B0fzvz+3fY7BG3mI0st5yWawgdq/sJbLXaBX6pq7LFm7zG9w=","authorEmailMD5":"2e078251b5fc2aa998d2fbe7983c7ff4","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"Thank you for the article. I am new to web api. Can you write a client to create the zip file. I would appreciate that. Thank you again.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2017-08-22T16:48:31Z","timestamp":1503420511},{"_id":"a80800e2-f5ca-31ea-8e6f-9e656f0c67a5","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"I haven't ever needed to do that, so I don't have code for it. It should certainly be possible, though.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"2842fa07-a000-3d79-927d-5d18d79effd7","date":"2017-08-25T21:10:20Z","timestamp":1503695420},{"_id":"1fdc79c8-f741-3d2e-a52e-8cbff0abd3d9","authorName":"Shimmy","authorEmailEncrypted":"n9q/K6ZDn13lEbGDsuO/cRWZbfxHKEhnaj/LvriIx0k2Brc6M7XeUhykVrRAKIromduA2ds1Ew6q5swEGlJf2glzURCPNYPcoKl3VrLWtcP2CQxA1OuE/zSk5wtV6V4Xj0eFQkrHycHLzxBJbSlmxsE/LGDmDbcNO48VBbs1QdYjByEcRg6zGpyy2DGjjhmLqOplAbkzLZpBsRmeQ+DVyE+fwsvP8GzpbItwrCDGwPfdeDgmhLeVUCQAsZcphn+En5KBJ4k81Gx2ow3d3iVWELOSgBnfy1k23wZry80n+bzvQXIsKkSg3d3g2Sqir+v6NN8c/aAcvBcrhlmZnPnIePCCOsK9IFCAWguiCfPpTfWW/R3+Go/qXVa0FRzuGaYvobw4o35TadyFs499ESFFdhU7KiIHgT0F1H3hxd0g5qZKp53Rw2dbZU5Iiw2CHOsUaqoWVD6mdlIOsLDIMbxV6s4O9KPiyMSrtWppjpQL0bUSG1pG37LAu7/n9jMUFN560wgQ6mOJxuUv0H8eOe3Z3VkB7HkAiyzG6Yt5RWRcPhX/89DLNcVJq0eMgs4TJXJC8cwSsQJdcfwzm21Ge316CQqw1lMrL8nVTcTQGFkyqTYUNcHiTNzxBxyL9W6jomCc87Pki8B+X1gylwWXMkYKAUCY0ehoj/Hua5YIPWFbsfg=","authorEmailMD5":"8ac32db29e5bc37f2baef574334d79c8","authorUri":"http://blogs.microsoft.co.il/blogs/shimmy/","authorUserId":"disqus:weitzhandler","authorFallbackAvatar":"https://disqus.com/api/users/avatars/weitzhandler.jpg","message":"Thanks for sharing. Would love to read about an opposite situation, where the client uploads data to server using `PushStreamContent`.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2017-12-17T12:18:13Z","timestamp":1513513093},{"_id":"43134df1-9a4f-3dcd-80a7-9f73a1937b5a","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"It should be very similar, just using HttpClient instead of HttpResponseMessage.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"1fdc79c8-f741-3d2e-a52e-8cbff0abd3d9","date":"2017-12-18T02:42:47Z","timestamp":1513564967},{"_id":"95ecb05b-8620-350c-bee9-d1eca71cb96a","authorName":"Shimmy","authorEmailEncrypted":"gNYQaczNR5oAUE2Z6kDbOA+pCKA3NL35rvHWyx6/B58Mphk3ynzEwsmKBIWyDfAlhEnNSPYZ8yVuUsparP/4kA+24eMg5g/hTdl0PSjdIruJKa06rkTq0Dtbc0EvyWv9DOsFVKb1RzzBCooEl4LMUw9K4mUk06ewRK3uZuzBJThot6QKzb2yDCPk75zuJ/nfUNhP5NBEd8Bl5aaBvFcD0gnBV+8hpQIYWzhm4JhuqxNwzNqSLAEagkZb/4TSOphXIS06tfmEITBVbGeNHXxmSH4zYkKvyzqGgChIq230kNicFNurawXBWsRoCrySznqvkRPjDqbQQIdN40h3bq8VF0fgMMVvnMilQuIpoFSmCqTAUF23NMBFe8rOoQrm1t8MNeQGQ5mNjBGxZG6OsDzJU9jk6zRr9iaVOlMbOPcbkFOARXuY/TcN0pYnULi8iB0sPfPAJEMCyCmZSzMjJR1xOixxGjlKE6W5GpVfKMoPz1R19U3LS+vgupXJqsFqnfDY09wJJnqJKAmcNcpMks5GzoFPLz24wOV+BZdpHYRjduvAl+9jLHxkOCNL+dY0vnaypnlzu3Cqq0iuG6oVU6BrRtxwWqNB9E+mIrNi9DDlza8h9DuVgvD9/ETmvT/PILmV81S4ZvomZ0xZ8b3zJvmv2ybLMl+b83tjrn8KO+XzX8I=","authorEmailMD5":"8ac32db29e5bc37f2baef574334d79c8","authorUri":"http://blogs.microsoft.co.il/blogs/shimmy/","authorUserId":"disqus:weitzhandler","authorFallbackAvatar":"https://disqus.com/api/users/avatars/weitzhandler.jpg","message":"What I don't know is what to do in the server side, do I just read from Request.Body? I mean, how do I 'give' a stream to the client so it can push data into?","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"43134df1-9a4f-3dcd-80a7-9f73a1937b5a","date":"2017-12-18T09:56:38Z","timestamp":1513590998},{"_id":"b78a495c-0b56-3b46-8c6a-7450639326da","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Ah. The client will write to a stream (optionally using PushStreamContent). On the server side, you can access it using Request.Content, e.g., Request.Content.CopyToAsync to asynchronously read the request content and write it to a stream.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"95ecb05b-8620-350c-bee9-d1eca71cb96a","date":"2017-12-18T13:23:26Z","timestamp":1513603406},{"_id":"11b9f18c-fe75-3588-95b2-ee9d086b5123","authorName":"Shimmy","authorEmailEncrypted":"OYJ/eJ7mv2Yv9KOdErnIlV4CX5CpOezSure1KvHSjzRwgd0sO3KBGSYLBqXV630tetUJTfl1McNc8eEoj/siKHxs8EHWOgvAcP4shO+Wr4h5XjRpFnXUqy9N/Zo5dyejhTeILDvSFrt4csUjq1oW2DTXv+nVCCGBbbjTOwHv1nLvicANqnfG/ViKKqZvUk9wNHWJr8HOw/KJO7fIsGnUTfwqpLvsb0vozjQUydLGc8klX5LyLCO/Ih4s21xMC7RFeTQDuHQ2NyXcbyuHUh0X2PcZBYATJFJR56S7DITQCVkibxQUy3UjO6682cq+BFjijEOF5sOcbphXLeO20J9kZuMAbU2fqK9t2vNg9dv8iL7HSU42HVueyfK6gHYh6O/sP0ROoLF3i6qbn4XiX6vWCp8tL7ZabDUQ7/EyjqSvehiuXFwlkP+URgNwU0EN2ZeLJC15ty/UP3jGjFaxGhXRAhuGUGojRCOWY2cFaeeEuGYo1tU5Z69RRTOUC8aD2P+Cfk4NWtVolnY153Hw7i6z4ihov7Oki6EvDUPzsaefNE6N/4XlXsP4qt2bNMiIYP/zyy06EWaHCNTA39wjJ5Ewx1WEgIyt6PDEfeIjtlIRjhSnSOzIuaTmID8ptt7yTLvHXampzK4ERCKWz9HlRIZmEZWeVl8lu0u63XDPl1O3Lhk=","authorEmailMD5":"8ac32db29e5bc37f2baef574334d79c8","authorUri":"http://blogs.microsoft.co.il/blogs/shimmy/","authorUserId":"disqus:weitzhandler","authorFallbackAvatar":"https://disqus.com/api/users/avatars/weitzhandler.jpg","message":"The problem is that the callback in the client (I'm referring to 'async(stream, content, context) { }'), invokes before I reach the controller-action. I want the PushStreamContent to be 2nd section in a MultipartContent, so that the callback is only invoked when the server is trying to read the 2nd section. How can I achieve that?","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"b78a495c-0b56-3b46-8c6a-7450639326da","date":"2018-01-22T02:01:42Z","timestamp":1516586502},{"_id":"1b05236d-f187-32e0-b75c-13c24b5f9ff4","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Sorry, I'm not familiar with MultipartContent at all.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"11b9f18c-fe75-3588-95b2-ee9d086b5123","date":"2018-01-22T14:21:39Z","timestamp":1516630899},{"_id":"8f20c757-f415-3440-b01a-aa5ccfe0d2db","authorName":"Shimmy","authorEmailEncrypted":"vIoEqYdvwEP7SPYfXGrMOtrXfXpa5X44djHPQQt7Wr3G4EnTb2b29HxBs4eZZn2/070VLb2Dwo5UaYxaJ3Dbr7k3tq0fIEQzghAIpXCZtyrmb1kDSYxwfn0D9rQm7SBUnJdxbMdka5Y+LraO0SdxUbD54DLgauj4TRIkx4/blbkdSSX8Xrd6ae6BOMJrFvg6Q9zNaZARzM8dHYKDHGi8yxq+xpni+JhJ8M9fa67U2VuFgAlxNNpFAPa8ilY6YTUUTRlYn55cJzK5GUbZO7rNx0mP2EghkJs43mUSQFbCSjbRMGl2Q2JKav1tBIf1GxUP2rsLqJpOxcH4RXb/MmNTs4/uuk2xg8Z33WyEzw5oGh0eAWNF68F68Q2disPZwYijs1SvjxTMC7voCAnK3FQKtYxm8fkdG51/Guk6caJeW/4qeTSMyAUeqZrHPSZXPuStDN0sKkLGYOQrlOki7Fm/7qxz5daIvlM+4x7xWlS9QnGlolc13DUBqx6nUBczIj7NaGnenDcusJFXfNwkF/2s5hk+ZzRoYQ6yRfbUV4Am6nym8NlyGZ9i+NntcHON9mXYi/XbeBguwXxz2rFNK0bMEyoNsw89qGsPDkoMQagskLgslaB5w+Y33rengjRQxSNE4M79zzdrp44dLpyjiKuv06QYXhHYz+YActChE5NHkGM=","authorEmailMD5":"8ac32db29e5bc37f2baef574334d79c8","authorUri":"http://blogs.microsoft.co.il/blogs/shimmy/","authorUserId":"disqus:weitzhandler","authorFallbackAvatar":"https://disqus.com/api/users/avatars/weitzhandler.jpg","message":"Still thanks a lot for your reply!","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"1b05236d-f187-32e0-b75c-13c24b5f9ff4","date":"2018-01-22T15:20:52Z","timestamp":1516634452},{"_id":"78477bbc-40ec-3758-8fc5-2ef534a3dd68","authorName":"Paul","authorEmailEncrypted":"CGNx8xwS8ZfkeZWSpiv3PVkYSwb+IbwN2yYeZgZb+/UcBxtjnAL9Lh5SUHJmwmUl3qNu0pwuK+CiRKxGdhN8a0JCYO3spo9CUNwPY/L4it8cSm/E6u1gxr1iOXGrH5jNtzGAE3KWfheac7pllR4Hd4NO5FzY2HUdcAO13FA0gLemtW2b2OSPG8GzIpKCg08v6NJz/Gf8bQmUpBz0rmmWlXQ0N4JruwKnuQbsma5gxui4aRe2iRD+36M1SrB9ui0bobvC0S5P6lQlUETI4i9zicMw5eg+JWSbOKQqkphE0C+jE/qZoA5fYqDQB66YZLm+xnhBXiUYqxm7rtrEMVp3zI2AU6fXQLyX+yjpwe/xZSrZAxHaXn0QaMzebSv7KXDUEivYNs68OjHIfVR7zYgZ9IOuIklWc/RXV9T3CJB8Pin6huvf5/E2aOgwN7Cgq7wxxXBJ4FLnfLA9lC1SLT+ur/NmtzxgqJkIRLuYLzarLTgv8j4Yk9iax0mXgsC7ULTYrAVBZPvl5pxw8U/VNyX2WvY7P7kOyn7st1fa55DNGIqhIWzCUBLdcLJJOWrSYp9oRNIX23/92/VNQrNffCpKYSbd89XmmPyVXb3D4UTaRGwrV7v/AVZZ29g5zlNveOxnZn+Q+KRFZYE4YEg6off+aFKgp+z26cCg+prMxMFEvtk=","authorEmailMD5":"ff21ee6139fe445f62792ff0170733c9","authorUri":"","authorUserId":"disqus:disqus_DllHLq3XQH","authorFallbackAvatar":"https://disqus.com/api/users/avatars/disqus_DllHLq3XQH.jpg","message":"In my case, if the ZIP file has a lot of entries (100+) and has been streaming for a while (10min+) the connection would get dropped at the end (Right when the final metadata in the ZIP file was being written via Dispose()). This only happens when accessing through SSL + Firewall + Load Balancer. Localhost worked fine... The only way I was able to solve it was to return Transfer-Encoding: gzip to the client, set compression level on the ZipArchive to NoCompression and finally wrap the ZipArchive stream with a GzipStream. This way the downloaded ZIP file was not compressed but it fixed the transfer issues.","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","replyTo":"","date":"2018-02-13T15:07:55Z","timestamp":1518534475},{"_id":"4f63b9a0-1ab1-11e9-b3af-a36dbace8a5f","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"K2CDQmed0eBZkw/yIutsUoZ6J+4xpv+TjTrvLZwofzRH6n2trfMYZZ++bu6uMZ/sCRk03/XQ87V6MdDHJHhpVy2UfNbssvGJKu2+HSejIbo8mCKhxCQno7Tl6c8SRidzVNwEDgjdrRNN2wcWp8mg6+IDWHF3rBUrJDmc1FUApt0A9a2LQ1qqkU3iadBENtqY3hHyPDoe4fztAISo/ucZ+0+DrmBzZOOO5uRHvU6lnC4gel9CxNex8eSLTdY3SDEFl6QU/z128ZfMRS/dOuRqeFXF/Ti5X5+885WwTvPpe94tWuEhQDrkHrJUxs4+0Pwy3V3C43/O1GABsp3ih6+ATYg/mXhc4ml7rYLbDd5G9G8A/I9pofzKhjMQbzFlHZCDm47T12fxp1xBJ4PF/HdX4LxKEbH6+1JAZEwMkodcxPlMEp7TKoMJWjWDzb2VPJcIBa0VOlLeEpHyZTGQYttjIgny7kv5ORq5ovugPKpCd4MXGpE0NI9+dt6UFL6n0z3Gr2P3CXf49x59Kj+jn7X0ThoJ+xv+pxo9Kl/DbVLNnvm4jLqD7MKLctfm8F1r6zNsEVTE7dvEQlQamt+9T/TiectnFUzBXCeY8WYuxtA9S/P70bIX8/LCGZk98TFObR8wb6ZJlgEtMjQe6jNp+ZKIKPlFPAtaO1VtXS/JjxwoOo4=","authorEmailMD5":"7906f61e1f20b3db1ea04359a43d0ac8","authorName":"Sergey Boiko","authorUri":"http://localhost","message":"Hi Stephen, thank you very much for sharing experience!","date":"2019-01-17T23:40:46.055Z"},{"_id":"789c06f0-5a22-11e9-9ce8-4922cfe39b3e","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"cc019440-59e1-11e9-9ce8-4922cfe39b3e","authorEmailEncrypted":"PJlADNQD9t8qL9npIaPuhEEf1hToPvXfPvYmDIFwI5u/rzl/XkKjCRxiw0p/br9Ww/QB7+LeB0eM/0CFDFUrRLy+d1vyoWCPT6vCI+aHNM+lgK/IPJMIphIMn+UW1TqvlsXbGcbmQ+AXzayp+r3YiYhm8TVt7+9o3hOBFT9EAXqNGm8V5YwksSp0v3hllUl3Lf9XWZh7/2IU6ZYBYpRUmX7HxyPuKXtTYZj6snWQ6QxAF7hQ4MNKcV6WEnnDWPk4OA6Nfp+mceE9ly3n4wiQ7OjjPAURGZhFIDUvAFiSrjYlVvHye+XT6JxtFJFUuN7x61r0C1+fdoj1r9T/6NP+IazB5eABKhJyNnEQ3G+P+EmsMt3xCGAwE4t0LBba+Y8U8V51Oi9P9yKoymeEwLXOByCkFnTosb/rk8dULCyHMkNd7om00v+iUgVwjWcCJZ30yYxRdBOvy6EN9g4ouMFklPID7ToTzppHfoG9tlk5oORXgAVrZwE/9ZWcA5T5zW2BAdmt0i4AJTyLOIjBa7GBXh8bAuv7VLQ/cmwPUE6tJMMUARjEARVS/8RJHfuEWSzagTdchjVNOYvOzhvhN6/DIZAXK3aq5s5+SQLnmRnqvjihLQTb1yeJm/dZDcSIXCmMFy9RSxe9F1zRLPVEstnQq4B39CyfiZGcJwa+uL86wxw=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"[`ZipArchive` doesn't work with non-seekable streams](https://blog.stephencleary.com/2016/11/ziparchive-on-write-only-streams.html). Also, make sure you're using a [sufficiently new version of `PushStreamContent` that supports `async Task` delegates](https://blog.stephencleary.com/2016/10/async-pushstreamcontent-historical-note.html).","date":"2019-04-08T17:19:31.645Z"},{"_id":"cc019440-59e1-11e9-9ce8-4922cfe39b3e","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"ZTX/jTIaeSv1W8Rs0eES8XTFdFL3bhKTOxLgQHycKiJG8S6uyfkrFJNqUjOi7ChT4rm3ejhNy1k95Hn+NhtNzNiUugFIwMLtrNguxAIMvGXoq15LEHUPz6snrjHfeKvZRNddDiExk6g5sR2YUZ7WdtO6NpXN1eNPbf4v8hQlVRFbfTrgferb6OnG2UTVhXdOrZdLwQxTnJWWa4Cgf9EAb5VUcbtU/0e+Vc/BTsJPGB3s1ui1KdxbShrxGy4vlW2nqanJP4ISDvAlFITiWCzHr6MmHmMgB8bOK1yQH9CqGdwVUz3eVz2u8tXtcYEqeS8WEYELMNoWGqRHi9NomcTI2miVBjHWON3fRLIGCWVYYTSRFTB7plhPX1CEvD3R7Cyo8I2eDP57gy8PLexrRcr3V3gkgbuXkzLLVImeTZEoTrFDhwgXoY9Sdx/GMI0UL9gvbgwZJDXPYz7dD86dAOxA+mMDkaNzHPhoHQRmv+E1G67L7n3AvXy+zQVzHea7tl6NoltZNA25JQin3BVcKhhojtnKN0Vku1TzsIqHC/EAsAo0s0X+8FlraiLqd9gVnqHP/o+qKMvf2mgQluCt8t8R13r+SBwb9ECZtnPDmjLDF1wxft4rzaYbv+SiMCBn18r3KY78MbygbKAY6QrWhQZrJnYmpYS89jV82kG1gf/+a4Y=","authorEmailMD5":"cb99972df868b756f5d5fe31271602f1","authorName":"Neelesh kumar","authorUri":"","message":"Hi,\r\nI am trying to zip files that are locally present in server using web api. I'm using dot net class ziparchive to mutliple files. When i try to open the zip file that is returned, it is corrupted. \r\n\r\nSample code is as follows\r\n\r\n        public HttpResponseMessage Get()\r\n        {\r\n            var result = Request.CreateResponse(HttpStatusCode.OK, new PushStreamContent(async  (outputStream, httpContext, transportContext)  =>\r\n            {\r\n                using (ZipArchive archive = new ZipArchive(outputStream, ZipArchiveMode.Create))\r\n                {\r\n                    foreach (var item in Directory.EnumerateFiles(\"Folder containing files to zip\"))\r\n                    {\r\n                        ZipArchiveEntry zipEntry = archive.CreateEntry(Path.GetFileName(item));\r\n                        using (var zipStream = zipEntry.Open())\r\n                        using (var stream = File.OpenRead(item))\r\n                            await stream.CopyToAsync(zipStream);\r\n                    }\r\n                }\r\n            }));\r\n\r\n            result.Content.Headers.ContentType = new MediaTypeHeaderValue(\"application/octet-stream\");\r\n            result.Content.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"attachment\") { FileName = \"MyZipfile.zip\" };\r\n            return result;\r\n        }\r\n\r\n\r\nAny inputs would be great.","date":"2019-04-08T09:36:34.246Z"},{"_id":"076e6520-dd7c-11ea-a1e7-f7467114aef0","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"Can we flush the ZIP file immediately while we processing a large number of items in the for each loop? .I mean Can each item stream can append to the response output stream while downloading the file in the process?\r\n\r\npublic HttpResponseMessage Get()\r\n        {\r\n            var filenamesAndUrls = new Dictionary<string, string>\r\n            {\r\n                { \"1\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                { \"2\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                 { \"3\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                  { \"4\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                   { \"5\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                    { \"6\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                     { \"7\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                      { \"8\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                       { \"9\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                        { \"10\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                         { \"11\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" },\r\n                          { \"12\", \"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" }\r\n            };\r\n\r\n            var result = new HttpResponseMessage(HttpStatusCode.OK)\r\n            {\r\n                Content = new PushStreamContent(async (outputStream, httpContext, transportContext) =>\r\n                {\r\n                    using (var zipStream = new ZipOutputStream(outputStream))\r\n                    {\r\n                        foreach (var kvp in filenamesAndUrls)\r\n                        {\r\n                            ZipEntry entry = new ZipEntry(kvp.Key);\r\n                            zipStream.PutNextEntry(entry);\r\n                            using (var stream = await Client.GetStreamAsync(kvp.Value))\r\n                                await stream.CopyToAsync(zipStream);\r\n                        }\r\n                    }\r\n                }),\r\n            };\r\n            result.Content.Headers.ContentType = new MediaTypeHeaderValue(\"application/octet-stream\");\r\n            result.Content.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"attachment\") { FileName = \"MyZipfile.zip\" };\r\n            return result;\r\n        }","date":"2020-08-13T15:45:36.115Z"},{"_id":"f55a9c80-dda5-11ea-a079-7b0df3115335","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"076e6520-dd7c-11ea-a1e7-f7467114aef0","authorEmailEncrypted":"QXGtcEcc8G+e/aHoOKq/YHJfUt3T3syeqJKLvcx13RFQVpHDI8xmp7sv65Wrn2mbJI9OnLNe+PTW7KhDvTrpSOUeyTg3iBcrQJrrFHVTRCETliBuNHg17N83luZvUX03aSc/dzHGX6d1Thf1OdAL+fmr2zQkAY3QNlmJDXBEgmahM3Ey+IIQHSkqgnJVmmLsNsbZG8/x7Qrl1qme/p6Hss2MpH+Xzw+/13xgk/GGsHbHTDHo4YYc86EYOJHm3d4cW3cE9L+Dz3WlROPZ3RpVXG2q6/HvAXw4qYEShM7qJPyFJo+K5OusoWj6XIZTORECduH6XdbpI0w14+4KOJ7C4BFEBJfzR+fSHUQLOBcQCuva1+zD6Lbhihx5wOosH/9ZaEbbHBWM8hgypsb4JGz6FTCo2/jxb7JTPzTXGDrjJ7ii3HzGa4Oo0t3bu1RYTwFAafii+kXvG6ZEEl1ADyMly8isYhvMIxXOyW4tyv9tFaxcafUp5ZsnsYBAZXfj1xuDXXJrhPXA8/kcZx/eNRSoxN96GmCsJ1OrsKJ2aAGnIfLii5yNezvGsYWS6fY9jreEzMLJrADIHX5SuwexI5/q4BQx4Vgzv0CTbAUxRXQXx8qOQJHupBVvayDFY6W07dCocjMNqHDKcpa19iolabWlX4SqKF2c30wk7pTvAEbGJ/E=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The stream will send its data as it's written to. There shouldn't be any need for explicit flushing.","date":"2020-08-13T20:45:44.638Z"},{"_id":"991ca0b0-0c96-11eb-931b-132188ed21b3","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"akmurKcKDZJuUBnr4QMl80V9rWC7iNo4U9IDAR5+QJDPZqhLbPHGq8VTdndyYqpLBo1bph9nADHh9i+eoNktVNhoefLp72XtNOP30Ig8FocXDx2zYL5acBwhgvySjc2UEcCyKgvyxwjU8dCWzOyMYIZpw4ORqsw06zbx5t4cd9hhi9PWsOjgDEXnuKotwpM2XLHlJ7i6v4Tk4srLyeSqnyd4w6exYqzrNN+001ue+y34mE07rgSew0Mh4RWW7/fQ/LWBCEXOt3ywvdKoOU1kFYxTIFQEq7R6+JSTJaSY7DyfYPoEvZB0tr9ZYw3O3gIoBaTo9ZALtltBw98B41zfqLumDPhu3m3ItPIOkYtKJHYevqNlw4bx9/oM8TqWONOveDEkoPevwSRF5SyYdqVHvUnZx0LSKidKI7OTSEslU8Uet+c9pniyPz1mXFYa7+Te61S6+aHNhH8namhvj6aMDu+iVoFI7gEpPbRaRVMOrxqvKwxg7Lduf6oMbWbG5PxrSNil/grErBXNgWv8n97mm83CfQR6YHEN3k/jjjlKaqssNlrCfNRT52vnUJR3QsE7m08jx1wHWrW8MYaoMwRYUwuU/WUuLjKLHK1cTvkmdfxQe9TikxH1VwsMa8iXU/ickvRbFFBk4olClHv2JcDhn0mJ/gL3RFkimOHwKypewwk=","authorEmailMD5":"959334c98d5cb411f3363bb71aa83d99","authorName":"Alex","authorUri":"","message":"So what about the chunking in play with the Pushstreamcontent - for example, when I write some data to the Pushstreamcontent - from what I can tell it doesn't necessarily all get sent at once, instead it get's chunked - presumably according to some policy (that I can/cannot control?)\r\n\r\nserver side (let's say that I want to send a frame of raw video in a live stream):\r\n    \r\n    await outputStream.WriteAsync(currentFrame, 0, currentFrame.Length);\r\n\r\na consumer/client:\r\n\r\n    byte[] buffer = new byte[stream.CanSeek ? stream.Length : 14336];\r\n    int bytesRead;\r\n    while ((bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length).ConfigureAwait(false)) > 0)\r\n    {\r\n       //do stuff\r\n    }\r\n\r\nyou might expect that after the first \"ReadAsync\" that we would read the full frame data (as long as it's smaller than the buffer size of 14336) but that's not what happens - instead we read in what seems to be an arbitrary amount of bytes - and it takes about 3 or 4 iterations before we've got the whole frame (this scenario would matter if we were streaming frames constantly - we need delimiters between them - delimiters that you would think you get by calling WriteAsync each time ).\r\n\r\nSo what if we used flush in this case to try and override any PushStream flush behavior- well same thing - it still doesn't appear to send the whole lot in one go (and we're not talking about mountains of data - it's about 10KB for a key frame of video or less for a transition frame). \r\n\r\n    await outputStream.WriteAsync(currentFrame, 0, currentFrame.Length);\r\n    await outputStream.FlushAsync();\r\n\r\nIt occurred to me that the media content header may have a role to play in the chunking - but I tried a couple of MIME types without much luck - application/octet-stream or application/stream+json did not convince it to behave differently. \r\n\r\nany thoughts?","date":"2020-10-12T14:24:12.210Z"},{"_id":"4bf58c50-0d6a-11eb-89d4-516b131c198d","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"b294e3b0-0d57-11eb-8d51-0bf708f61b4b","authorEmailEncrypted":"vk0VKcYGO/+JTeSFqiryXTxtpcjOB/08z8wfQFOl9OvSgoo5+Vq1yDVGVZQvk/5cep4Q5UmqznNlSzCSWLMb2Q0IEycD7JmiB68DUiKzk4Kng6f8dbNYEjQh/czAOwYZhgmR9QBNszl2iy8a+mUTq+leCjimDCKAyT+pokO1VV3bkyr8cWvZFORU4i+CG4IJCQ9CqPUPg7TpxQ4pboiz/itjvX4lKfdxk+2kmCRFNbDs6pYu5PGXcF9fLAQnJovmH8qr9RPHYWKmRzl29EIlQHahGO8xqPUESymZX05SzSZekwcYI7Yg9pe+lxzgPcB3x9aChB1QiHMcupY2grr5pCnS9NnJ4utBAXqNF14PZvD8sscX0sQxD9ogZTanqm368ZH/7xvn5X/QAYK2Pzy5I5Qi9rRj+AJiDRP2Z9UulbZWKJ3bs2tB0StUTsssFr16+WBYyWK86IGOAoNIgMbLyjY5uIFdmrTpK0tqQoGIC2aVK/MlCGNcAL27KZiq4JikqNKPuVBKOUdKpqB5IVHK+xXWWFB/ceBpCpV2uBq8THa6gHvzNoLQ/wp9FW23w0CTVf+DL0G0tNEt7Yjeis9geYoNGq0l8OFpXvoSfvlitKXMHZ2HkDiA0QUSk6d36spY/fZMldhW0fWBsINYzy1w8xAN8QY9dFtOt0g7SrEF2Ic=","authorEmailMD5":"959334c98d5cb411f3363bb71aa83d99","authorName":"Alex","authorUri":"","message":"Thanks Stephen - appreciate your reply. In fact I already did put in my own delimiters just to try it out - it's good to know that indeed that is the way to go about it.","date":"2020-10-13T15:39:35.961Z"},{"_id":"b294e3b0-0d57-11eb-8d51-0bf708f61b4b","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"991ca0b0-0c96-11eb-931b-132188ed21b3","authorEmailEncrypted":"hMCh48VtFf3zfqquI+Vr/YIKfeefSJGLBxSKtMwGerRHubpSzVSnBpVo0pObZOcTrq1H61GiMSVwItQYkdo0em919bjN+KCJGhbgPKfgngcNtD3+La3P/V6014WMxz54D52EjPLhMT78Ex2TXKbBIRxTl6sL3M7p7yQdxQkCzkHX7yiSavvcz811e7yhBO6bTNOMEPlVEiSN2/NCcuF73nyzOTS8XEhnhRFqN2xJrQ75HsdTJNWJYt2zf8DsP0Q+2+dt5imiVyiPM4NS6P6Ps1ZbWy7GHWpFZ+am8cBZoIBt6ewic8ikFWXgsLKWFDyUy8zecZQhwMfu3TGFvbMmBgQ+iePeaCz0TtmGTx4ZHKLfs4nthP2kHgKJ7vXnWD7lJwfQzDpbWNT5pRlZ1B3NsvH7g2VIh3+x6C7N7NeFJzJAQ6d5PCdAvMubrSnKjhb0o3MJju6pgwQCarHjx9GrKB3F2ft72NEPbFMiE+54iB03XPii4cFuW9f4vsBr37arNGmtBFMoZGnW1vQG0+Wvxm4/U/Mn/3QQPAE4Ff82dZeqILSlX9ClYPb566gCaxAp4802sdGdVRr5ORcVbIRv2Qdm1NcTVqF5hY5PgY8N/rg1ZziQ1C7t2SkNRMjO2IxQDgLd/1gAVPUfKltyb6UK1r5wH37quUNbH6YMLp/0U/k=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"This behavior is normal. TCP/IP is a stream protocol, not a packet protocol. Furthermore, HTTP sends a single response; by writing to the stream, you are writing parts of it, but it is a single response.\r\n\r\nPut another way, `WriteAsync` does not provide delimiters. Neither does flushing. If you want delimiters, you'll need to [put them in yourself](https://blog.stephencleary.com/2009/04/message-framing.html).","date":"2020-10-13T13:26:27.767Z"},{"_id":"fe77e250-1b08-11eb-b39f-015997c81207","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"bukejit","authorUri":"","message":"Can I just say how absolutely amazing this? I keep coming back to this post again and again for little nuggets of wisdom.\r\n\r\nBravo.","date":"2020-10-30T23:38:21.093Z"},{"_id":"372fabc0-0418-11ec-becc-e1a0e883808a","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"dHHsR56aRVt1ChuIWZrr2wQEPN7+Q05qvg9RxoTX1PZMVF8oSJioVKD+NM/tZewTkLB6HJROk/PDW/Kl5NSYBvxL+CFA125kYrmh4fGKN4cs5z+ZomWvOGd4yXaQ89MlgGdGhX/x96iGnZlnBCvi0pylRYHUeakyArfshb4w8kCYwTERnuepgvf5DDOtKZJBCSFvMBug0DPPE5fqrDHl/xnfCRNwWlfXWuT5ZUB2QUgNWwpUTikPIcsdheLYvaj/5aRvGqdQd+32106Fbq7JTQt4GGqwxYZTxRDSj2ZS/0c0pEUVxNAr+5Yg81DccpgmNmpU8tdVpSlaDc3sgQElBKBPwVW0GfPR/fcSuf/ugcCjJiL70jWk99fm0hLMgOr2Fan0SmwSkEKniB4GWpGUkVRGSXp5uJr/V/p15bhuE/vEXKdaTeDp2x0LyG8zSXtV9Tbm5/7WNxnDB/yovlIdg50ePXyoIpz4Ir/4NU7ArfFx2aN+o3R6NzLxEMIeKyLQEWUGkuxfN6lI7oRMDMiqQDLAsEPBQdaUFM9EcNqlh6msbDj1p0X0CkmGGeThePmWMWT2ql33o/Ev1Ootp8Jjo92uP1s8MSesWnC+EbHjmpPhDTqgfTRfX7PYYnQHYLAwAi1Q5pVVb8ADrcdrMfSzqL84CsI1BCkw1INj9n+af+M=","authorEmailMD5":"768bf9cb2a12b3d3f90c29007a99fe57","authorName":"finarne","authorUri":"","message":"Hi Stephen,\r\n\r\nI have a scenario where I am downloading a single file by calling an external API, but rather than my API return the content to the caller, the API will upload the content to a DataLake folder using the UploadStreamAsync method.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/azure.storage.files.datalake.datalakefileclient.uploadasync?view=azure-dotnet#Azure_Storage_Files_DataLake_DataLakeFileClient_UploadAsync_System_IO_Stream_\r\n\r\nMy code is contained in an Azure Function, the main part of the body of the function\r\n\r\nSomething along the lines of:\r\n\r\nDataLakeFileClient theDataLakeClient = \"get instance of file client on correct datalake folder & file\";\r\nHttpClient httpClient = \"get instance of httpclient\";\r\nstring externalAPIEndpointToCallToGetFileAsStream = \"endpoint\";\r\n\r\nawait theDataLakeClient.UploadAsync(await httpClient.GetStreamAsync(externalAPIEndpointToCallToGetFileAsStream));\r\n\r\nThis is a simple hack that \"works\" but I suspect that the code is downloading the entire file in the GetStreamAsync method before it then passes the stream to UploadAsync method.\r\n\r\nMy scenario has cases where the files to download can run into the 100s of MB and so the memory pressure on the Function host seems to baloon.\r\n\r\nShould I be looking to pass a parameter to the UploadAsync method in a different way?\r\n\r\nShould I perhaps pass as a parameter another method that returns an async stream, and in that method use some of the techniques you demoed on this talk: https://www.youtube.com/watch?v=Ylcl8hKks_Y to \"move\" the bytes from the downloading stream to the uploading stream?","date":"2021-08-23T13:44:19.519Z"},{"_id":"54721200-041c-11ec-becc-e1a0e883808a","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"372fabc0-0418-11ec-becc-e1a0e883808a","authorEmailEncrypted":"BiINsCsaqkQ+jJJMtaniBDgsPr9Ax47IO5yyhPzwhK065hNcX25cF0b/DfLm+Cd9kOCbOxTOKmy23l+qO/jt4LnjJrbL7RFpdlHfLn6mrumlxzlGgsCVRbA5ZVFWgiwJyAuKG2TYFKabQScG7ndwVWzIRf4p0B4ZKkiWgyZCRirqSsbr0LkfiVamoAyvumNE9oS1RTfsVY/JLh3Q86NBPwQDrV132aKzQHukuCB9cjH9x/1scB24NzvVrh7RGYI10tWh4nwMmHPVcZTheMg0FIyTmyzu8k7cRfPKdx96wRmgW1LyPdn9Qd7qESX4BPsFBojyR5vzokU1pqwk3v9PDsIwfGC2LJcU/HJaUsGu8KWYB5fZlaN8MPsiHsNwvdLvRM1fV6hHYx3EbJWbwTtW2cZDUsCQ99hdG+jHz4J/P62UeP1dpXjl0Ls0UJJaC9HMtHlnKd13zTp/Y0+XrBoBHmwSD5aYDiqoY5wVJklHG/5swZeEVDy+5zRco12zmhxHRj/iU1yPnHgbZDeY3n1HdOEHNJ+tBIuBeXR9wU8Zwc5K596Cd/6zsQmNtcJPKkwBi00MHa2GwHYRCqfX6X2k0pmgnN5vejlx5zxWbKmr3Sjw7h+TM8UCoM+gP2Oi1A/K/Iyz63sopHdtutObNQk+u4cRHuKzRaMyMxoqGeTeXyE=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"`GetStreamAsync` should not be loading the entire response in memory. I'm not familiar with data lake at all; is it possible that `UploadAsync` may be doing more buffering?","date":"2021-08-23T14:13:46.568Z"},{"_id":"aaf6ec60-04ba-11ec-85a6-9721f9cb04ea","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"54721200-041c-11ec-becc-e1a0e883808a","authorEmailEncrypted":"MqahwXbASZix4xTvHzJ7BSIfaieX4eEa8fq00mWsQxMJch+MNiwUs4yoQ2kW7ofHjQuIDGJUtqspcC/EWZGY4Tl41IV/DmUFCaKhjNGzNpaqomWkLlTwn5VTp81EeQcnXmqN8JAGGtoOpHJliYIaVTM1AI8kHQyi1STe+tRjcKYI64ZVboTX23MpJGZHOiP3pV0kMqvlvOXm/izIbZBRuB+O8VdgpXQJoswYKjkH5uMkpXZqbWcS3FNtQ6xcCqh9VzTBBwu5dwJLUhR9G1sHdSZOmwf/HbkhwtK8YPcfrUsR9MfnFjKBefs5XbazCVBcGC91OzhQBD+dSnSYGQQBffsyK3HuH/elUvtB1e1enTWw01aE0PXWxJsp1zLHZcQGnOT0HCCHd1cSxAHdYMkkdp0ZmRzgB34xFN4bEbESRcON/efHecxlxF9rwIxkoPmcNrt2rna87prr1UuI8zR4nWtFbEK2/LrEenX7y4K7WWVrS076ngk7qV33Y0JGKC6k0VeUF4q+2KLv7QXpC0z2eTZeVB1J8CjMqCTM8mDScGUq/uaR2E7CaVrnoUb0/4v41RVwDBW4vc4+zAryp6I8gctllgqvYbqcuwiksIr64ATsXdCTSix/tX8G9QrOQU4wVHmXVLyA+D2n39sdAtu7zwymo1L37dxJdzo0pN5Q7mc=","authorEmailMD5":"768bf9cb2a12b3d3f90c29007a99fe57","authorName":"finarne","authorUri":"","message":"Hi Stephen,\r\n\r\nThanks for the response.\r\n\r\nI'm not too sure of the inner workings of the UploadAsync method to be honest, I guess I was wondering if this type of pattern \"should\" work. \r\n\r\nShould the notion of \"passing an incoming stream to an outgoing stream\" work in the sense that as the code is running and the data is being received it will be \"copied\" from one stream to another? Is it possible there are some internal properties controlling the amount of bytes to copy across in small batches etc.?\r\n\r\nThanks again for taking the time to respond.","date":"2021-08-24T09:07:12.236Z"},{"_id":"abe40150-0503-11ec-9443-1bd44fcc4cae","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"aaf6ec60-04ba-11ec-85a6-9721f9cb04ea","authorEmailEncrypted":"ho34UdiC2/483DzFNCKqf4EQt2mC4PnJjahtfeqlNbLDK5JZgkG18cPCdZ0mTbvk7dfD9Gn8eq9HiwFT6LdH0Ziu9VTTezd4jtCW/X5U3W6+mwQMLHmljnInywzD2kWLr1CW6+yozlkVIXShVZBoGg5UhEpg4C4Bxc4bUvLQF6f0wF0QUw0C0bl6l7jIGhMws+yUUV9RiykNi7wFZNT9OiL7q1KRHlGwJKbIggiVE55/rPvdywJlzslZDKcuFnwTr/iwvTl0QgmvlvH4QIalfCgNECIML4MicdNaA8aVGa+W3yKsi0rNccsguXU4YrnHiKlMvmMcWKXPCqRKwbYsQxZ9U41d85ut3K7yF2cltr5xJa6OB226acBtP9/OgiNfUz7MfRYkhFWXlMfzKnBJmTj3sx/M2p1T9EDNEv9pzjvANrmCDxv5fYkCsXC0skn8CIRZV26PHHQ4e7TKCjzAsxKgguM88DqW5o2+sTem1jTbpYJSzzV5j49qIiJ+CyDggF3EvlxfCOanQGn0z4INKn6ZUfafx8IjHTjQOG/p8AsfPefSwXx41CLZx/yV8qar+1uVafqclARfsup0m0pRGD4HUNsDqcRwi9iyvF/NUw/GGcZfYg7KajYTuHFUbrg1z27ixk1SMHupW9dFNwFKn0kvP0FGaaMUYm7vxPCv6S4=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"There are buffers, to be sure, but it shouldn't be anything big enough to cause memory pressure.\r\n\r\nThe OS has an incoming socket buffer; the .NET socket may also have its own buffer backing the network stream. Then there's definitely a buffer used for copying the stream, another buffer on the outgoing .NET network stream, and another OS outgoing socket buffer. But these are most likely in the 8k-64k range each, so *maybe* 1 MB of memory overhead per function instance doing this kind of copy. It *should* be unnoticeably small.\r\n\r\nIf you're sure that this is the operation that's causing the memory pressure, then you can create a repro and try to track down where the in-memory buffering is happening by changing your copying code (e.g., is the memory jump between the calls to `HttpClient.GetStreamAsync` and `DataLakeFileClient.UploadStreamAsync`, or is it after the upload starts). Alternatively, you can start reading the source code.\r\n\r\nThe two most likely things to check would be:\r\n1. Maybe Data Lake needs the size of the stream? I'm pretty sure the stream returned by `HttpClient` never has `Length` set, even if the source sends a `Content-Length` header, so if Data Lake has to know the size of the stream (to set its own `Content-Length` header), it would need to read the entire stream into memory just to measure it.\r\n1. Maybe HttpClient isn't working as advertised? The docs say that `GetStreamAsync` should not buffer the entire response in memory (i.e., it should always act as though `HttpCompletionOptions.ResponseHeadersRead` was specified). But maybe it is anyway for some reason. There have been several versions of `HttpClient` through the years, so diving into the source might be a good idea there.\r\n\r\nThose are my guesses, anyway! Good luck!","date":"2021-08-24T17:49:47.036Z"},{"_id":"e30cf660-05c0-11ec-91da-cd78a2c54854","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"abe40150-0503-11ec-9443-1bd44fcc4cae","authorEmailEncrypted":"pKPfVT2GNza28ZXNSxwG0HljYom1jETKL+qg1oZ0xla6fyB+3MlTZzbTzcVFQyk8KoCUSO6p6ysumopRFPk0az+wRr++Q9QxGfCahQFunn+YQIR7sMn9IGUQ33gjlCV2whDq5qPbM34MllEuJywPKNYh0Q3KmcjwRpxGiTUHNT6GiaH1BZNUWkRjYJX74FGXFU6S/5jinDAze4COzaXMh7m4qj8pTVlqKNkLrB8tS5a+RavokatzpbXbkhq4HHTF5auzInwX914S0fJ0by6BKMr5cb4HI5A9RqHLy5SYbUmtK/01z7f21sYPKqsTTSgcORw9s+2BCjvXujeSrakELrToglZhBTSaMgLWzSju1JbUKfdIbejlEQF1jn4VKx3gL1MqMa0AqOpBaQ+nDmRQ0MNi3+mHgfGvYRhR5mVeMIMNC1vuc6hTaxHF5zPQFTMYts6YyoT5HofevazrinrXHFddeZ+F3Dy3kBKcrLCx6TT+N+bC0iI84agLrqJ4gdZcvgFHlnNjBZ3KceXrwbsHVtCewr/08t2MDKUYnch/CQv1tjOR5deJAUWtRbrLB3lT77/PVJ8xw7n2YinudEbXjziX2XgriteC7Y9rgnATChSZLE0Ik8szArtMzB9JYvgqMHKqEzOHpxKhEVmkeHPNTn+WgKEcjZAgmY2b0FkcHdI=","authorEmailMD5":"768bf9cb2a12b3d3f90c29007a99fe57","authorName":"finarne","authorUri":"","message":"Thanks again for the suggestions, I'll look into tweaks to the code to see if I can tell when the memory pressure starts and also delve into the source too :-)","date":"2021-08-25T16:24:14.484Z"},{"_id":"86a48340-2d1e-11ec-a400-172bb389b531","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"SCpDTNr/nPE2HINXA/Iiff0dcGw6rRDrx94L9hVPAAxH8767GKuyPXreLImIPYKqsIH9q2aKBC0W30qA6/zJeX2XJ5h2LPW2VQU7fyNuq3FMaYwm+/3P+45yWZK5OvT0a2cHDA026bqgsS22hXyjT5Sq4sRBBNkfhKMIHAieM+eVsDL1Cog32xMjhBoPg5a8oOHv0lVlG/XqTnjK17ZDaitW6WUQfWtQNAxRWIokb6qwr5PBaNzMYu30Q8Ryd4MA6DNa4MuUufE6dV+Aml4uJVcXan+M5aM5fDrGI5BKBZeG1xRH9v3Ef6clAEuRE6Nf/L62U+I6BEn/14Vea+yZRKwLhE61u1c+Yy4flRfNo/0R2rXZRjhxnwFfPhBBNHDWTqKUaDmeMwZmrhyn6GPNX8tmi4SCXnBj6E67+0VUsyXD/XvqYTp2lZvfBRLvg+lYgCmhWdfleM1Fymd3nrzkR2nBz8tfR9NNvubHDrNULIZ414d9Jxop/ia1UYXs7HEFkpJtBZO5uB5DL4yFrGGuEpqfDvwvzmX8UIyYdCwuw4uvLIrwK1dHc//1Jyty2oHavZwANx6uDcD7yfeaB4anSU0Wfmk6ikDk+zBzzxjykFQgITKKGux2PjpJqwfWwN8ZkHluzZYXXyOy7QkHO6Vv00TKqi9a+cjwcCh84aMbAo8=","authorEmailMD5":"126623abae2b71d7558bd66c362c2964","authorName":"Steve Wash","authorUri":"","message":"Hi.  I know this is something of an old post, but hopefully you can answer a question.  Your simple streaming example doesn't use a using() block or dispose of the stream in anyway.  Is that because this is a simple demo or is there no need to dispose of that?","date":"2021-10-14T18:42:47.504Z"},{"_id":"6a37d820-2e0d-11ec-bb59-5bb70bb2381d","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"86a48340-2d1e-11ec-a400-172bb389b531","authorEmailEncrypted":"nKcUGhn8ntozS3RYT9sSY7IXSt9X3wL5NxWMlDrLSm153o5F/TJ2m53loUPlE5umJdfAJrBV4lVGLwqWR9jzqYe/FnxH9po78/dYM93/24+cZDVT2xSebzMDSrRrnLOsH7Jcxh9+Bo/JMcHeQKq9KJcMP8JpvNpL0qts87fWW1dMik3aUHAcSxdJAbaFUpsjTtXjzUdo0ruwdlLrWUIVzgZ8B4+Vb9jd1NuMeTKQJHXjUSFiiXY0V6ZAbdquk4Mn96l90AzLu2C3qf8aNv1y0JFRQuAJNJ8H0KSHtPTJdLxpvierxRRrrlzbufT4bDL6zyY1yBOgOr02mBONUlk+Mt4h0/k3B1IfLHpU2wMtHcVoCLF6/Lo3shz+DQS/IubtmT4ZTfu0byLxqySLAPvVZ/+HkNZpyqUVo5rlzuVZeOs7IrDGaGmT2ffx6RbcaV9SFPw5pUfBU9VXGvKjtDCJBf3tBIy2vY4PcLO62Af+xKop8gF8ikAfaNLIb15+Poh3hqh3VJ/5T5X6/fzOBN0QcgMniODjtoEV5jg7l/GTA9FVDEgx6DroN8Dd5js6NuR/2j92kAQjZLZegClvSfYCR2nOyKdsux2hl6wv8QDV0/okknikO8GnDKUGJDasg1ntOuT9wFwkm6Lp/LNA3Snt0D4S4rhqFHzsErPGb+kQw08=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Do you mean the `MemoryStream`? `MemoryStream` doesn't need to be disposed.","date":"2021-10-15T23:12:49.477Z"},{"_id":"34f1ab60-3046-11ec-a682-25d9df8f390d","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"e9a11580-3039-11ec-8140-ad038df3b40e","authorEmailEncrypted":"uPQgMOMqWxtc3+loy9nlkuO6jVTw+ajv0c2OpGiqEH/3HZlrk/vLFBZH4QER8S04AsOHfz0OvWinalH5OsM7PnY6A9aAInNyzjJJgNvfW2feZuXWLIO3UOAzMqI8oi7uL/qxxCkA8V55cyy5ATanXV4oLYuPP0axdFUAy507ySBzF9NalBJ67/Myhoo/ZLFvImztueik4zni0jMhQueWSZt/C3qzeZ+2dASh7VEq+Tq5rpBw/cH+gxZm/oS/5dKTkuWjLT+aLJ/rhgGGUQppFtSKXALZpmTH9rO/qMJrbTx2iuSExZ3Z+A/jer4rI00UMXmDe94vuVC0aMWMrblvAQcw+fWLghnZIw0fM6dl+F979pkRTCaITLMXClgfF7hhw//hdWIPdDt14NDwOJEE2f0gWI0bDDWscvbOuKmEcxwTMRNi/T+pdRrIVapwThas4rIk3A8/ZK0yjc0SEci5uFWL3zqmZAlmSCvbeV2Me5IE7ZwtQm9Su6vTLNzmR97dHwn1hq0Edpj+/w99Htn/wFKcw7tYGcuZ7QXfVqTbhMZ4ryRulpPE94OgZWAc+Lfd4ekUJMgjbu2u2XTOQzBV3ASYKXBzTzdfwpELdHQu5HL8pdJ/YeezGB+AGfxFY3LhfZ1pVmVuv08ZL9OYQlYmKroykEizYeBmFWcVlRbpeKs=","authorEmailMD5":"126623abae2b71d7558bd66c362c2964","authorName":"Steve Wash","authorUri":"","message":"Ok, thank you for your responses.  I'm returning the HttpResponse from within the using(), so that might be why it appears to working for me in a very small sample size.  I'll discuss this with my reviewer, and we'll see if it withstands load testing.  Peak time, we can have several thousand users requesting downloads at once time.","date":"2021-10-18T19:04:23.769Z"},{"_id":"6577b140-302c-11ec-a6ec-11fc46880e32","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"6a37d820-2e0d-11ec-bb59-5bb70bb2381d","authorEmailEncrypted":"ZDaXLbt6v7GGTjGmAqw/EkQTTWTpXx5vmq2HJtSNYN7mV7H+xby+pgLzupfBr0/veYl4Ha1XrwC9nr3O69XlJzt7EXN3JGn9kMYXn1JZHJVMInyJfI6lQZhhHJqkLy5YmkzTBKV6FWQAzr2aDW2/ad3yEssPdrtERZe90bh3DxqbiJEA8MivkScU4zwj+choBaSdCWAqIIxTlArfxpUhmDbLg48Q++66OVC4ooapYT+mwKIi+00Tihmq2caC3sQBGkQHpQKLpGeC1H6L1xWzeV+W3EW2sApFA6OCt0rk8SSEUs9EePW5K+jlz/y3WF0egerpnvBhZTBM0PD8/SfOASPSRNS1DpHxydCtUaKbeCG/XbTKfxJqCoXso+npnbZdGiiPL0/PFqHQUN++25ogFNWmPmRGIs6p2NLQH0WcZLRO0sNsKsSi3KJrsU7DeYwAfewTrMRFrdkjk9fUpAY4KZxpIh/QtmbtvqqV4r5ftHj28S5Hs95FRjmr3m/VRLjycFzk9yoCcDlBiuPyC1KIhzCkmbQf4QMRklgbVEgpkBuW7ZtOxgYQ5uyA88CCiHSJ4Z6wxEwLVBRWAVdCLTsHFsx3dRDAV6jVrUWXgpNDjC7RFLimXLICvPb5yC44FZaovgUjB/Q9VTkpaF6P00TFC5qlWyiZbu7FQnZGO0BNYIw=","authorEmailMD5":"126623abae2b71d7558bd66c362c2964","authorName":"Steve Wash","authorUri":"","message":"Thanks so much for answering.  No, I was thinking of having the HttpResponseMessage and StreamContent both be instantiated from within a using() rather then just \"new\"'d.  I've tried this and there doesn't appear to be any drawback.  Is that not neccessary (or even harmful)?\r\n\r\nMy code gets reviewed, and my reviewer is asking why I'm not disposing or using \"Using\".  Something like ...\r\n\r\n                using (var stream = await _httpClient.GetStreamAsync(sourceURL)\r\n                {\r\n                    using (var streamContent = new StreamContent(stream))\r\n                    {\r\n                        using (var response = new HttpResponseMessage(HttpStatusCode.OK) { Content = streamContent })\r\n                        {","date":"2021-10-18T15:59:38.305Z"},{"_id":"e9a11580-3039-11ec-8140-ad038df3b40e","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"6577b140-302c-11ec-a6ec-11fc46880e32","authorEmailEncrypted":"aC1u/BWX4VAkQZQqk6V+7AWZX3yVPanuQNC9Nk1Ia7jrf4a+LYnCTj2JUfzVV4mo2V9L9DRMRUeiz9NHQNL8wx43U1uvgyiOzDcsnIw0XFlVRXLoLqmhXVyLPj1c0cELdonWuld+tcye9RzjwFwiA/nFyaTzg5hCckaX6D4m88NHjyF3op7TsTV5HlKOjs13nczzM2W2q/1jS0GRhqmpo+vbUqoPxrNvW/ooW5I1qn2K1u24L/qHdCvgX0Kq1qOO4Zi4u0wBMBTYIXHPV1zPkWN2wP3tFcTamtqpQT4KeBvbNBUP00IaiR5AyzXCzg47IXgCd+CkfFcOTcrmfQbHuS3vj/u1muVw7PCYfnFDxEQRvWzoYpTUcT2BxfmegoJi5A5dflZM3X8jQJYnKoPNGQ8rAPoDQ6z6CkYg8vk0SM64rWbJxJuk8wFttbX6AHxFFWXeEjoYde8EeOJi7TDNi7PnsWKCKD+VAxDtcqem2OPEyFQKhJNR82Jdz8EwH7uQZOzGrTUVq1quYTkLEZf8FvM/nuURCR56z9Be1awwn3bHpoxCrCs2bLHJEAawAoQVwUAlHxjucuCE/gE5cW3pzG3zCQkDITb2qmxyJj6s+RkRbTrdx3+PzReCMsNXHhuvisQGaG+yae74BCyqsqxrZ33ZYTjccbPqJMe+Poj3NBU=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I'm not sure if that would work, actually. Since they're in `using` blocks, it would mean the `HttpResponseMessage` (and its content) would be disposed before returning them to ASP.NET. My first thought is that if you tried it, the call would fail because ASP.NET needs to use the `HttpResponseMessage` (and its content) to send the actual HTTP response. But it *might* work; I've never tried it.","date":"2021-10-18T17:36:23.444Z"},{"_id":"34898efe-6d11-444c-8363-c131842cf7e2","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Andy","authorUri":"","message":"Hi Stephen, thanks for your shared.\n\nI have a question, when I ran api, this method return contents: \n\nStatusCode: 200, ReasonPhrase: 'OK', Version: 1.1, Content: System.Net.Http.PushStreamContent, Headers: { Content-Type: application/octet-stream Content-Disposition: attachment; filename=MyZipfile.zip }\n\nBut I don't know, how to client can download this file. I using .NET Framework 4.8 and Jquery.\nHope you reply soon.","date":"2023-06-10T07:12:04.9829897Z"},{"_id":"0704cba6-e70d-4ed8-9921-c696ee98cdf9","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"34898efe-6d11-444c-8363-c131842cf7e2","authorEmailEncrypted":"Ui0bkU9PVtBHBW5sDP7pl197ugsBV/2qLCoG4PN6As10RnBcfq0hr7t9IRQ0YpaY2dv+pWZCPQStEImnPpqTzk5zpDw01oXVoeVk9Q1oD8NI+tZCoCcfbUloQgjV16txENwyIYrMgOsZqNy+qb8tZ1XKa8MsCPORIiOEpP9e+lHsC1hkrmgqAs4Ty5jiLGUsp3PoHsusjWfvaDFOs/MO8FO7AnwunckYZ685gBquqqYQ5/sErSuNss7p2g3qNVBOqyLFcNRyFNEQqp+gFytnyfl5SgzAygKk+wdzeU5NRcwdOh1KJ959xyWYZDd7XIxt7dUh9P2EIM71ca34FG4as693fcD0JTZZFnxbPeGvzCc26ri43Vn1DQYiwcUsq70B9mr8UvjInNLH4y7I2n4UUHiiPh0wm3R+rRa8QjG9JbFhq95I3e/E+d1PqSsq1BsvEmVUWYh0bC3h2JSfjrliOa5H4q0dVCKaAjb7aaX0Yba121eV2zlr6AZmBNWThBihWhbN41u9JyeaK7qSCqbNskUUezLBhC710imaYuqF3SgHNKk/E14BeUAtWpoWyEnpyTtCIBgCHNwSK02Eon+NxOIZLmVpZA5mRFJ4fRVPAM2ZBA5UkXXUFpWxbV6xXa3GUcho4hkl3IjPrALbH/+ldVwuK5s8R4c/i5yOnNINWGE=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"JavaScript code should be able to trigger a download by calling the `window.open()` method, or setting `window.location`. The browser should take it from there; the `Content-Type` and `Content-Disposition` headers inform the browser it's an actual file download and not a web page.","date":"2024-01-28T02:44:14.0449678Z"},{"_id":"39619c54-1843-4359-9431-1883cfd5d9a5","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"488e1fb7-959f-4675-b51d-15d664444461","authorEmailEncrypted":"mJ/qu8xKqSQ9RA6NntnkEe/VM/FDJPfhBoexrMYL+7qAIeTqFSHWPGSAT7zkGA1s8WLnuXS4YVrGywUUu+MaV1ehVf9eQB9H1lqMohPlspQlcN5BrReNzl5iErnrmTsUXN9FMRjuvAVHYXHKpD7TEtEdSaPwjzBskQU1O5NDXjUTy6gKuOSmBTO0rMrpn0XJmXFBrOvzqaGjkzT/TBtblt1Wirj+gMdH10r6Dfg60xKKYtc18w4pI3MP+0exMzYbhic24IRGdoteVnWH9DPi4vf5mvBt/ZZWSuagbdrN1CO/PUPcbadt0H4UssJJFROFUHWMMyhRFG74Kaq14UwdFteTzpZiqD2CkHj5z5gmkt1fpIGUy20Qq0tGKNzAg9xqi1OUBdpHXOY65KxOwfJEnYer8u2IG6C2rM3jxcMV0Py73ptgOuKSg1HkUkSs+GKo5gOGwIV6UMyFoER/KlnlFYPWh+69sEMLKWdvZMgeE1JZYMw4MdCs9zZ29Ii1QKYW0hIEx8gZVgwGqDLirxhZJS+RCwyayz7C87j5xZf65xvGdV7S0nhxjYrBW97YjtQpetSGP51rJXX8TNRkQZhqzW8n9Di7wJ00zJeKVaCoY5FVu4NtNRb4hY9iOb6RFGx3TYlLNWnhpSu5DTc6xx4shou2xUWqDfHtTNBwDscP6fk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I'm not sure if this is possible with minimal APIs. There's a .NET 6+ version of the code [here](https://github.com/StephenClearyExamples/AsyncDynamicZip/tree/net6-ziparchive).","date":"2024-10-03T06:03:12.0051616Z"},{"_id":"488e1fb7-959f-4675-b51d-15d664444461","postId":"2016_10_async-pushstreamcontent-5049ebdc-8d32-3bf1-b970-f0ccb6d5b458","postUri":"https://blog.stephencleary.com/2016/10/async-pushstreamcontent.html","replyTo":"","authorEmailEncrypted":"rC8gdNMojOtk/F6l7+4FE5OIAzHs7bJj3d12I/0djQxcho9fqmHez2lWW7OkJR1B0eFDJuZxiq7IqXetjiIFdEKu0qGfBxJh0SY2JJW22GRmgW0xBeKeZ8Au1wzv4T5xXwpJuLGhKQtTu+bXFAmekWMWQRVluLOyB5xrVswb3defuxCYiqZl/Ce9ksxsdhfeHsYXbndcASMp2Cad+Xduhxeggr6eMCjO55qk2uTIQkNk3e12Eyyszi29NNwVlohGk9zzs2mGtTVLTYLLYKtB38viFG1/iZSC5LLSFz/YSdNg4roU+EF6DP2AJQ+68q4ylkjjC+uLbn7kBGXjyqMq+Vm9Er4pIDtQXbieheB5KuGlio8TI71Pw1GTfqKplrZrK0+KMlLi8lKktjBLHUxljJmwu3Ly+oy1ASg9yNAun2W+I3mrjE/WenxQFEAICKwJR9Yr0BxZaFeVL2QC2+G4KB3thxJ3ttgjIm9lXzkpfH/zxumsHW8gKSz/c2oYjQXmJrBIl6YVRMOpJUms9YhCGiINs1u1UMoQTVWhzmKnFR49IsG2WJPRJoWdykERTkdoduYhc0ZYKmYy5wvWh+XJW09ZDh+IWYrkmHq1dsL5O0MTQ0+9xPklGUDQNZveyV59Zhgl0ik9klHQspzzgnVn1MNIjClS2zH+33WG5XK1ebA=","authorEmailMD5":"4080923c44841e0a8701586ed1a4b1a5","authorName":"Terry Aney","authorUri":"","message":"Is this possible in .net core 7/8 minimal apis?  I can't find the corresponding classes to figure out how to do this on my own.","date":"2024-10-03T04:04:10.5423261Z"}]