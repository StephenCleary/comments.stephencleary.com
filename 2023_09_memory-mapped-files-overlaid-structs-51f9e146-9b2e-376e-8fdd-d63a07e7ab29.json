[{"_id":"61699356-af0e-4cdb-8cba-57123dfba102","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"eMzIcxZf5ZPsD/DimwuSTu1BFfXNwpKPoo8yRw07oPP8lcgp37pmIqHx/hyOXc6C+AiZ49NyntoZAkVjKzKEAi6cB2YDcsUgfDYl3YN7CJg6dCKDXxuXtUOyrV3oTSKrxajKdk+msr4enSjt0DscoK4s0cpB8boJ19nU40Z/qI/CeyeqnydMEGU90sMPCcW7TEPQ9tduCwn4B0pOnwd38ypP2+sSCBSdUupCCElsbNHI4ZSLd7JiWmTq3OD1db+pATJQWRcPocL90PMXHXcXQ/shT4jftxxRS2vym7D7ImDQWVxuvXLlMTbpiJM6QZ9bDpcNooTtd+iO2stCJSlbW3gNYqKj8RneDz+aA8qjqL84FqWPFL/S4BgjiCsYYNjOjw6HY7m4ujzWF5UpZu2v1v6L5BtQ/VLuI1rSN7kgy5o5RzMxbDM0h/cfX+8iYkiTxj6edbp7zzkcKWWXyEZFbL9MMUeUS3v4Ktpe7ojDI6FbBK120B90dHR8DYDwSWeILKgrh8qmMmixzzrvcuYk1fobD6TfI7PUehdhcUIM+1zDC5NQVe3q0YZdtHbe3QlBun8b1BlAvu9iZQfyluG5ky/xAKMD3T4XXzmgKBvDC1K2jLljFC18ES6R43SFZTyH95Fv6xBIWbkG8JGcwMHX/xXy0NuIC/hZe0/nnuk46JI=","authorEmailMD5":"25b1eb07c2eb076b70c14e1651de75b8","authorName":"Antonio Maniero","authorUri":"","message":"I guess it's not possible to do that with class.","date":"2023-09-29T15:48:47.8121752Z"},{"_id":"0826c84f-1b33-464d-8b41-b75d6e316095","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"61699356-af0e-4cdb-8cba-57123dfba102","authorEmailEncrypted":"r7l3B5OarC+8La1dt5/0+f1Pe2Z18Z1E9j4D5alGFoss9Y0251YydlGrrThR5MnWXs0+s/nPTjMOymgok0G6gn8DR/aIxp0FQFXGgRUqm+734yJFhwzLee7PCYV0judeRZ6BL+GTssbWaXv/6s+DZR5U9xahx7cPi5ItiPsj9MAuWSvOLb7VFTN5ogsqwT2vrOdT/jmabrGKFDK4neF8czWnAvy/fi92S4X4IQDuKGnYzlx/qhZefrLfF12OBfcFg73con7bCI3O7bqSDpq9O76nDJQMsnQfptnh5LjIlfesYqPXnRkOMNADdmOnx6256XwJ058fU+ds4X5NkZpPJGFnXv4hjZJg/Fn+Zys3oQ+7dUKpjjRm174lsGbmYNQlECNTXy7WdtCxhwlNtAOmsShdGCp5nan4tbEple19ymp4OE+6aG9CwIza2BbSuHO7GnUMk4VoD2CWkbuykaB8Jz0mYhaK4VLqJLdYibGP8H/d2GvAR/wlNjQEn330E7OIVg/OpU3I1HI2wKhrnPAuj3DJMf1H9IYGABh7ZDBafNDRM3xjfKlFkM3DHDiuyAXizLeUP3DENS0eU9k2lqJuQD8+MxU75FK2LvNYx63zpAkLZilyFNxtgkejZFVMzdZ/ickvX2X2Ydpa3OHjN376wu+z5sP4Bd05P9S9CuuwCKU=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"It *might* be possible. You'd have to specify a `StructLayout` and then you'd need a way to have the class reference point to the unmanaged memory. But I'm not sure how to do that, and classes have some extra data in them that might mess with that approach.","date":"2023-09-30T18:19:41.8290545Z"},{"_id":"64ac7f5d-e8a6-471e-bb80-ad090824a792","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"f00c62c7-b315-4a02-b389-bf8c7a2b3242","authorEmailEncrypted":"Nz7A6klNO5e2xog0dHVi8VWGduEZCvNPIlX+yznHmrJTOEixmfmPWCJuFFit+uh95Dk7Zq5eLf5Raj8Gg8GOkvztWSexXhzUWuT4p/xMyElqmRNsHpg0t/JO5N2OwGowOU/Qvt5O1r0af+NIj+ZLip1WcVlZyDHwhVmuHeEAjdOZZh0Da5/Fio9DJrHOgGffyb5+lkCPqeqL7fO7vwzwsKNNe8AJd+zvV7fwLlwVqQzXEaihhGBSFg1RLifzLHOfVBT8b9gzqR9oYc7nAMlmt9ecFO30/uf5B2u6pQS0x9staa8Pr3SC2HuUQns/Ka/a6vOFTD2OKFjsI9BwuaCvJ+XfSNNoLLgMvjVFM5i4QeilVbcLaDZyG5+A9+GYnhHhgQ9Yaw5EJP5inHWxKR3mhWd0OQjoE3m0MhjvpFs3v0D/I4KxycpdQtTmrm6udoPUyR8Bgwi356QEn3LFFRka4LXoBrpthCMFU9WNvUvGGy1TjQUBKm+kNfFEUcgCI6ZP+tmSMPZOIq5ChY89amcYYT+ZRNovEePuTViP4HJxOglPLQIOy4w5zNVX9lv1nImFpFFA77Po6IaO7T8GIQwtqunAu3IIwNyEDGk5HanOfJ+beEH6059ULm0LZDqtYPpqg+YoXIUhgsKk5OD6Leoy/rXn2MjZ9GAzU4Y6z7htP9Y=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"It is; closing the view will flush the view, and then you can call `FileStream.Flush` to flush the file.","date":"2023-10-02T11:30:46.7482186Z"},{"_id":"f00c62c7-b315-4a02-b389-bf8c7a2b3242","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"H9pjyYs1Nknucl8nVjbE84gnwUQS69Fw7QJ2xYUSJjtmi4bXRElXHjxM4IG0w0QTyKn/g2J4FOtfQ92EwuHHEyIBEwT2VQTJjhZILoo9qNfyo42/Y0G+EOt8ucAIlaDCTJEdbV6L+fpe6TrlH+05U1TEpjHX40A7tMN8lUNpNJ/gEKzTudQrppxxr9WivwjVmqqoKmVG8cX8G38Zia6x5nSOihLNYUegRpRfW0sYqKZM8BidVFut3f4PL1diWzjYKhShMG9nkAeELMxZb3In8hFmiXZgM7OR/88nVDNG+yPX0yDnwa0BKsOAzmQxDbeG6EmKT5ZU0ddZ3APUkplEklS4TVOeevROipN4QPz0HjxM9Rv5MHGkdCu810WkMMzX5goWrwBu1RfD3p5dBUfZ0TYEZicVZUg/DRRpmtTviDyO5baxwNsJi2m3ZDPb1ucNyvkCAFSS/Ims6I2JpnAjLtOUnwpgJmJyFd49q9b13BDr/xB/6S/JBMI49Krv/MY2nsHPCGm1z+n57VN1Uo2oZA/aK0YKzsXYwXU8Rp04UpdLUNTFTOrRaeP0m21oODnfvyO6mpE19BeBheFijtxtIvkav+DpFyCzEuTkYe0HYS2qXqa1OF3P94dd2QEQjF1Fi5OlWa8voRWyfoyb69gIqOx+mN4i8TvABhGLJC4l8tw=","authorEmailMD5":"b3dc08a829e59f4f68c14d1abc124ddf","authorName":"Gordon","authorUri":"","message":"> And since memory-mapped files are lazily flushed to disk, I/O exceptions may be delayed until the view is flushed (during disposal).\n\nIs it possible to force a flush?","date":"2023-10-02T09:40:12.0322501Z"},{"_id":"9ef2e3a9-9229-4d8e-b33a-853ad01502a5","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"dca30cd9-f819-497e-8745-23f1636cfbe7","authorEmailEncrypted":"HCkr89hx/+3hWP1fXWxQjbG+XgpZRi2/Fzet/B0RAt00gQCZjbO4KeByERbR8L0zaaqZquZEVLFNMAt3X/HPIxqJHqIoj+pKJUbtlLZYo0G+VH4E5EFok6oPGEeDqPLAde1Y7saWRVAj+04xzlyp4IRmz3hAGqvz3jDlJFdXQCMOBxShR/rldJ68z3x50/LgZy7Hj0WhtmJdy6P5yCD68OAagqbiBGBKHi3LA0R7DQupymb/Xb+//YITyY/Sa2+D628V87KPs6rQ+nho/B8Gk8Du1vjM3zaN4zcEE3H/5xD+0CV/sEireUfE/ZfxCu3qJOobiudCjhZkDoq6ek61ZOsh/eVYAg7fnND8+BOTzBalSOK7D8BwNvNuOwie1BntzopF4+1SXzMsN7CrL2sMKwe0zOMfp3IJFvyD+dz4AZ0Xh9l3hvJt9XRoLqvhdZB6HpNRHnD9Cd7jgJBxoQXALLJANpS9cpar4nlWZgGaVjtq4dNCmB/E/Mt4Dc7EkhQFhsyXkZQ44Mtn42fbZ+TW48WaC6CjXadMEtwb7TKZ0eKinNNixCkQ2xdF8PCZ60tgWHB+lqqYf+uARu6LXCFX6JSR5zG5SFN3NWKwQJuuZru0muF4D8vEBLEPvFABwRORZGnE1BLvkY6m/+R3I/Exf1BHDl9XgVq6wCjuTzMf+QI=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Nice, I love the source generator approach for downlevel platforms! Could that be enhanced to sourcegen the inline array approach for .net 8? If so, you could make a useful multitargeted library!\n\nI am planning to cover the inline array approach in tomorrow's post, along with a few other approaches.","date":"2023-10-04T13:08:27.4887336Z"},{"_id":"dca30cd9-f819-497e-8745-23f1636cfbe7","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"YOE1afuS7gFD+2OyTYD2LTYqLWV/cVjj5ZBVF0lBoJXNn3G6GFWkRx0cbDifE3mbWwyBsyv29cnT6OS2s0ELlCiY8SOPYNtesRJlAJqp6nREZJDlNyfXvLROBSZTlXC4nFi3GIN0sSRHw3EieYEyqd4gkDHRoAvJ+KKDLGC8SroinX3BcyuFvMkD/+9oGJ23JahElnG9x448Wsz9HwGAxk302v22nLarrqAQNVp9hjyRJwEkpXPk6d+Ofq2RgF9LzByD1rqRujL/+TgE4fy57X4ImnbUTvr4cPMXXwK8/ctz609L+WfA5e/mbzQEbSPhx4y8PnNGorkOWCNwddTC1+CCW528sekMLIlXxXN5/0NFCrsuNEBzcoNG5Ka+svFIm6oGfm0bo1+PbALg+OplcKcafyc/A8Wer0kXRjvGfMyPMHdOv15uVBAxvcpSSJlPmIUqseZguIb+SGYllyccDiCqn+cp4I2E+w5I/55nq+JF9G2Dhmls/Cczlw90ic1rCvmG//GBw7+huvkJAKCw2hf59kowtPjAWVSY10YyzL1VHC8X3wD737p5Kf7MZ7zyVssmgKOLfE9+ptJXxLxb9+dU9V8LwcQLDKdwTdVq7jgk4RxUuf16MgSQR1IzC9aLOuHUJd/eiVA0GlJyWjaPwke0od7KJ5WbGeRcg7lafa4=","authorEmailMD5":"235f36c03bb6b8f3c92fbe0439258883","authorName":"Diogo Trindade","authorUri":"https://github.com/diogotr7","message":"One extra detail that is useful for this usecase is .NET 8's `InlineArray `. This way you can make structs with arrays in them that still fit the  `unmanaged` constraint. I wrote a source generator that achieves the same on net 7 and below: https://github.com/diogotr7/UnmanagedArray.Generators\n\nYou can see where i ported an app that uses my generator to .NET 8's way of doing it: https://github.com/diogotr7/RazerSdkReader/compare/feature/net8-rc1\n\nCool article!","date":"2023-10-04T12:48:34.5236226Z"},{"_id":"f15ce53b-5d18-44a1-99ea-b7c1dd0e8124","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"9ef2e3a9-9229-4d8e-b33a-853ad01502a5","authorEmailEncrypted":"maIwA0kZnIOCURjlU4MFvJfUTsdB6t5fc06E0Q3ASDTOo2OuS+cNPIaULBKVIGg/IC3Kr6srpkRpITB+LHMmJmxudiROUPkxZC/GTbIvRqBPQ3Nvxpl9jerDJZXp1vuUb9nRiR82zOMNHFT/+Rm2JaUOHK140uAM/0yXyUOyGkEGimeBKMcw7/NL4F3N74cXxk4xevGPzu/JYSjc8WwZPd9AIZcVwzrguRiQkZjn6hx55qjoWg6yCuKohucQIPpWiWxWIx/M/M+kcki8D1IswWpwEH34iOPEiZiHZqY7iJE+zrR1o5q3C9dLEqQF/pVydu1/MJv8BaFekypr9VY59fzpQqjzGUb/uJ1K5CCLs47IE0vCbiooA99kDorYIpFN3hEjMTFrAih++j5rq/K7ixfn3dft4Km9Mx/aDuC//Nxt5fTFFoxzb0PZGrqgQVlKHQjdAufxajIaH+2PyxfhEPwDmqSayGeMjJij6dictK7WkIDzA5pFVxT9WMTwFcVkkRTE+toRh7mzACH/B08ZI3DjmJ/R6RA+uM4NIcyP0HXtznwLCQakp+leG+/FBD5l2sl2QTVTPq3DXxWQOkOip1fSEsk9juHCGlrAG9gWkquzdE0yPFcRs9dTKbhw4ZJiGcJwlGzDp3RI8NaouWjYHcZbgpdSueqdMb575DOnM70=","authorEmailMD5":"235f36c03bb6b8f3c92fbe0439258883","authorName":"Diogo Trindade","authorUri":"https://github.com/diogotr7","message":"I came up with my generator before I knew about InlineArray actually, the similar design was purely a coincidence. I could adjust it so the API is the exact same, might be useful for back compatibility","date":"2023-10-04T13:29:13.7748556Z"},{"_id":"de529348-d5c5-45a6-be73-ca23a64471f4","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"Great article as always, but can you continue by explaining more in details how we can use the MemoryMappedFiles for example how to read a very large file and process it in parallel or how to read line by line and parse it into objects ( like a csv parser for example ).\n\nThanks","date":"2024-01-11T14:11:28.6004150Z"},{"_id":"005659cb-0c2d-4fb3-b02b-20bd03231113","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"de529348-d5c5-45a6-be73-ca23a64471f4","authorEmailEncrypted":"wGRd63f3bOM/b2ghkJ391EPtW1Vco4ufc6X9e1O6oQf2wpUAlv6twRoJyoJUnBEa8C3cC2VjWsyKAMeTtEu9PSHGymGD3Ylcu1693go1Y6/wy2t+8pIpWzRme3CvNHftdehBeqi23E0U3xr6qgoVNt46SgVKSszc+rvJyrSXSvbMcWCUCTk3yHksqcoYkhw1ulMFwjiTXO4jaWeT/f1JczteDo3o9UXjicKzQ2g+EmthtJkdrr4/HPK3nGYVprgwH5GMUpgaRaVYj4vnkwmwXVeWmvwb8b17soI9FsZOSslxmCuWwgmqq1Nq43vurKZF/i7Nj00ltiFKrRlnidlnVRqRgBdWUhdMyWe3PeXTkcaOkquTLJ+EZ+R4wvePfLuc1C4AkJvriuFD6vQGwQRtjKQRCDK2z9wuf45N0Zt4QI5bNJMGl/Lt6AkXcF3QHeSoo1F1RFshmWaH6HjCN64K8xf7PuitwUiLJHmSZzWVNBCfoqfNfJaTeeTgdyzBpSu5qni1q3qEfq0faFhTnCIAgfjEj0bnIhHhjd12kPit15hL2VUWuSQFrhklDn7e7u4rWlwqJdegqUkXomLdB0Uc5tdSu94Vlac1hLZGfoi3cEfsFiPnCLIIFwpmJRxwefrzs9QbFDKHEfpbkHyNwjLFUOavG722LW3yz8o/nVqNcCg=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I'll consider writing more about memory mapped files as I explore them in [this project](https://github.com/StephenCleary/ArcDb).\n\nI'm wary of parallel processing; memory mapped files are data that _appears_ to be in-memory but can trigger blocking I/O on any read. Parallel processing would cause multiple threads blocked on I/O, and disk I/O tends not to parallelize well to begin with.\n\n> like a csv parser for example\n\nI am aware of the one billion row challenge, but I'm not participating due to lack of time.","date":"2024-01-27T14:20:30.2483901Z"},{"_id":"6fabfe1d-5d56-4dc7-b0b8-2176a3628af7","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"005659cb-0c2d-4fb3-b02b-20bd03231113","authorEmailEncrypted":"ctffbO7Z27SwKQ+gch6+aCmo16VjpKpMjTxs5F4IkXfE5SfwbehBevmc0+pr8pSyOGcLlSJTSvpbiok68ucir1li96JW4BDGy4ivZ1rxfh0rcoCNV1d5uXmc6XE6ndOs9F/0IBXDBzzLlxG4a/oyHrGJwNLycltTNAsrRQy1lE0nWpw2Day/GW8KWHb+fUVLejfLe88j2AcY0cSfykofwndn7Px1aWJzxCjxkZZOJQiBYojTE58H6EI3o1sUt64lpd7SUKTMczrtOW9EUPnpX/kwZk/0e5TTRFCshesbTn+4MIKZv6Y3zCN1O6AEazUzTuUWhtNuKsOOTDajx8xliSs8qHjJKumWQniRTGFestfytg+ShzA4KO4jLRSyEOc4vaWJ09eYpSxbkKKvs6YtBi6z8A9lxXdCzm1ZkHVcYN6UIm9nqgWM5DRdbdOPoFr5HveRjWeentWB/YpwFj1RcEX4CEcyCkpUY4N3MQX4TkmqyW1ikMqJDhBKD9leeQ6K+amgq1HkXH1gBavDBhihqvzf+EP7w5chmYV3GoSk8rL80lSfo4enHH8Uia2pPDtRIq2wZ3hkAWFHrffHwFHdvNNEZoU7jgHN57cENYqTvaPn9JKQ2MvsRnivqUxCUha+0CExleQ9VjQZfYUPiqSGSKrQfVVdBfEWa4VgfWUBsnQ=","authorEmailMD5":"58e46aa002ca1df0b310d912a243f29a","authorName":"António","authorUri":"","message":"MMF is designed to work with big files where other options fails. And a cleaver aproach is the right direction. Creating parallel accessors pointing distinct file positions you dont need to care with the file locks... Kernel knows that and avoids any internal lock mechanism. But, you must be parallel writing in distinct ViewAccessors. If you want concurrent write/read comitted to the same file/memory portion, then you have to use any available lock mechanism, like mutex or other option.","date":"2024-11-19T23:33:55.0362092Z"},{"_id":"f40dc446-8c50-4edd-a516-63ebc1d41bf5","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"f61fde2f-799d-4c02-a469-d5d0fdfdeacc","authorEmailEncrypted":"DFaMfVW2hX7DCq8nrsXlncPqM2Lro1AhGAP2/qT3Ca0/UrGXnM0Fg9HDyNESj0kH40ZepPaYP1A8QsNhZ1FmQQyOXkWuYDYoEz8f5OZLnM7jXKW5ANKJUc3gpN6SjH+knzQ5cjy80W1Cmbf3plBvL8EfMlkpMeayw67h2kIjTornh5H0fjBwDHCf5+PlyaTykvWSFymmMFNihXJUb1Gsm4KtOVH4xnQl9ZMRjLzJToWlvkgkGq3f5Gvk4HJ18zPKfFUpGHzjn2EepfALzyLtHt3iJYbu8l/kITTk+cCra1dd236YzPLJaH+GFuulwW/XoaVlRvb/cBbBZv2G/cXdYzWxBotLcqCSqzfc3ss/veqqAtBGaqgTxKToA0Je5VkbREqZ6SVa72bC4sovsEOhVIZC6KLn6WttUxYrLgZg+n3OWzcPZ7hfwqGQFWxiVeZVrS3iXvP/jBET9iz8N59rT7/k4Re5Ag+diZ82F6xSXnIrwlVmYMg/9T897m0sjCiNKKiqK2HdZYsVS3vIy998lf4y3rtBySjZfVXOGW6do4tbKqCpm8nxrHPMo023X5B7N0TjoM/qGrXd2SFbr4pAlGjiX7tpO1i6Le0QqW3E3CmSuo7+B5J3EhaTqp5yxD7V+uW01oG8cdUA2rUg+CorDE9x5z/pDkgn2dbSiYCeXL0=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Delegates are a managed form of function pointers. They wouldn't work here because we're dealing with data pointers.","date":"2024-11-19T23:31:26.3565026Z"},{"_id":"f61fde2f-799d-4c02-a469-d5d0fdfdeacc","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"rLeP4yKW400Z95V2N06eriglBGk9Y8jm00rD6Kx3cfPXN8S7P94ou8ZUhgmz+u5EvyNewnXsrSWm058HjUEaZcIWW9vqF1SNucZbayDoQ5sZMXQhekyAR3JDSkL+y0H1GtBpATtIdNv9eCnJHh0hC0j6UP2oMuDkiQeQwQNWZBT+g40ITam8egVz7MyEBM/+vLY+xoElwyHns61hzCI7se3s6gn6V/ncF6DgA46AkXa/0sTbg03HfSmf5ZwRu1cuXUlVgC3i5wvJEk2rWMldsTCndkcXnIXpcY8fwbZvxqBHwRBw4gRfCQexJoHqsa8lQV7jFGQOtbwrO5Eb8ZCEwwY1WtvcbUfC0F78NskQDOKCLiBNyUL/RrHGIZ3Rp/1YLQ7YoADDscUNv0AOGVoPiv1SNh18e0gtnExLFSB/6unzO1UzZEquSpHwuhNAIKo/Kxeoq1vCGUU/4mAY+oUxg4vS0wCvLVHO/prjqI24QpI8m0jKMLhOaRll6EWWuZbJmSMtKP75jZH4OFoLiXZ21RqcEGS69O1AfBy0tk478khtH1d1AcyRpu8yR060XKrWg7X6LjiZHWGi3jpv6wZvmUyLX8G2MDt6/Ogrj/qbplZbVLjcswlxq0ncEafbvXYZhqGU9Mj9lm/ejx1Pz5LYqTRNdcVqVp/saLR52KT80Zw=","authorEmailMD5":"58e46aa002ca1df0b310d912a243f29a","authorName":"António","authorUri":"","message":"When you use pointers (*) .Net always forces to use unsafe context. Try to replace \n the pointers with delegates (which is a managed option for pointers). That replacement just resolves your unsafe context to managed context, but doesnt add any benefit to what you have already done. ","date":"2024-11-19T23:20:51.1371152Z"},{"_id":"411eda95-c3ec-4d90-aa2b-6278d22050f7","postId":"2023_09_memory-mapped-files-overlaid-structs-51f9e146-9b2e-376e-8fdd-d63a07e7ab29","postUri":"https://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"KJ898VnR303LkDRD/PVanHdd6sWpgeSLRDOLpwxBKDJi4II6pjPhcLVQJhbGDZ/Xxp7ws4VQ+5d5arFhu/QHPvIQ4ULWlA+qE8r+JtIqvb3ZRtQr4JI1m8Lz2jJLpdh2SPrTU13UNvugA+jC8Zrpejw3jmc/ruZD2yImff+SYa56KQgMswLuFRlg7GNz7u1gCoZXqoNKu1zHVWnfxxxEtnBjjCcfBTwq5zikkZJwYBPwKdjO3oVCGc1K66e/zs+MqcVPtJcLALHggatIe7fJo1dAGB2c6s1qodB284Cn3RbDZW9XyV71JMtjKJvjKQ4fQmEegQA6eFJwhAx+d8NvxDAvML0A5uvCLDuJe90hY1Wy/V7OxUBe7bEZjdH+g5XcjBqDbYLuN6xIrNAr2/s3dZsQGZ3LDupJvTzzfS2y5FR/WO4Z1h/jfLjKAPcJcMcSfeh1zJxBHQFXGwxth4DqHmRwI1PrYk0BZzYWOdY2GM72PIJ58krEVR0Pah6poro+atUMJKQQAhfHnMZBlLXHuOcCcxCWk7GzLyewzRph5D8R+4Bh4eu9eOHlRORBmsY2zrxuR9aaKkbCxMy9bEfU6Lcld0f2Jn7QDSSY2OR1ZWdb6aSDU/0BjhJOIWvwGAE6GriiNaJqIIgnnAMmdNnNeT+Zb0UMLQQZrVW+ip/2pW0=","authorEmailMD5":"949718454f30ee0fd9dccdd64ffb8dfd","authorName":"Fred","authorUri":"","message":"Great article !!!","date":"2025-04-27T07:58:26.9955215Z"}]