{"_id":"8be6d5cb-146d-380e-b0e1-7d0e70e74f40","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Yes, those are all examples of methods that do not have async versions (and should). Win32 is where it breaks down; async file/directory operations are fully supported at the driver level.\r\n\r\nFor these, I would just call them directly, and consider using `Task.Run` from the UI level. Windows is still a preemptive multitasking system, so this will block a thread, but it won't block *on* a CPU. For this reason, I wouldn't make my own thread pool. It's possible to throw off the heuristics by running a lot of these at just the wrong time, but the chance of that is so low I wouldn't worry about it.","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"3aa84c01-81fb-31be-b5ac-52281102c1ea","date":"2016-11-07T20:13:53Z","timestamp":1478549633}