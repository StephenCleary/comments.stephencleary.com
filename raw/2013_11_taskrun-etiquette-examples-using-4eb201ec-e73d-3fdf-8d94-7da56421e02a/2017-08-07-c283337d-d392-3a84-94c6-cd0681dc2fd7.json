{"_id":"c283337d-d392-3a84-94c6-cd0681dc2fd7","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Hi Aria,\r\n\r\nTask.Run executes code on a thread pool thread but *outside* the request context. This is why it's not deadlocking when Result is called. This is essentially the Thread Pool Hack that I describe here: [https://msdn.microsoft.com/en-us/magazine/mt238404.aspx](https://msdn.microsoft.com/en-us/magazine/mt238404.aspx)\r\n\r\nHowever, you shouldn't use Task.Run on ASP.NET. If this is just temporary while making your service asynchronous, then that would be fine, but this shouldn't be a permanent solution.","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"1a82fd02-06bc-3e30-9bd3-828d06325f82","date":"2017-08-07T19:36:35Z","timestamp":1502134595}