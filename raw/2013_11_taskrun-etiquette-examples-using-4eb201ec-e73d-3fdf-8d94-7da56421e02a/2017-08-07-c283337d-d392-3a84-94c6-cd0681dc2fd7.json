{"_id":"c283337d-d392-3a84-94c6-cd0681dc2fd7","authorName":"Stephen Cleary","authorEmailEncrypted":"L0rfawHIFbtrGj+dyu54b9iJCRuV8wQlLyyoc7vNzC7EdSwdvT2IVm3BJjIBc44rpGZiXSxmzGW3BBpVuS7cq0qeUPJVKh4zSBij/1FbEhCbUzxvhc8dUQ+uPO4IvYn6RVoTkxRg6Q20vnLuMR+DB13BhJo1GreJYsvEOw0hxBnZ08L/1CfprebRDcZn0YXXEjQyc/QQEa8rmmjLhkZnuwXRF6cXrhiFs9c0UVCbKPzsXpdJ9t8+xC2gUSophg8MHy/nIe82YO8LzDMjzceXfkQRXl8Qzd9h0AYnIMOOiWtaOI9tApWIfm8oDTRq2YTgbLE27gl2ljrYUrT7LVBD5YNJCYPITNiTrpju1DwZmurjp1kBF9BPghgZH6cLWeP8hn3YToATPc6vlOAznfdWXeAdM5Mf8zNzKHb2BaKdS/UpXC0/Rq8bz4v0X9W5ypjYXpUkDR/h5Tvfga0VRkV5eaChis1jcMIis7bc7sZfGDl9g/vEBD5FLcAIHJa1yjGOiWraiBxxYus5o/+cVigNF9RtroC2H4Rds69s1kdJIbQLyoWdDJ5xKRulDRi6+cJGQ1cCGkeNqkY1H+dPwf+cFf0Hwxvj4aHVebTojdyT0pJTV7N59fDmlRCskxqS0sax6f74HOAUllirsx+mZXAaO7jHERcYgl17CeyZohYlMww=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Hi Aria,\r\n\r\nTask.Run executes code on a thread pool thread but *outside* the request context. This is why it's not deadlocking when Result is called. This is essentially the Thread Pool Hack that I describe here: [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/magazine/mt238404.aspx \"https://msdn.microsoft.com/en-us/magazine/mt238404.aspx\")\r\n\r\nHowever, you shouldn't use Task.Run on ASP.NET. If this is just temporary while making your service asynchronous, then that would be fine, but this shouldn't be a permanent solution.","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"1a82fd02-06bc-3e30-9bd3-828d06325f82","date":"2017-08-07T19:36:35Z","timestamp":1502134595,"authorUserId":"disqus:stephen_cleary"}