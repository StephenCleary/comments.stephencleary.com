{"_id":"c283337d-d392-3a84-94c6-cd0681dc2fd7","authorName":"Stephen Cleary","authorEmailEncrypted":"T+v9s21MCGuB70zKr17wfZ1vdAXfNw6bgQfJPwpoehUWuLVeA2DuUs3PrNT9dpUggkwxxT1bGLFUwH+1iBgrq99VmlvGKtd9JUzI1Is/YTCti+oH5k4ztYxzoPSNlLwhoWoFi7YcF6dk/XD+LRnm1pKSjXZW9Fr+B6/9wX2zYWEaGUkCPU7wyXjs+qCN5C4DjVJB1NcVNC0M5tm6dAx60AlcPyzAtFkpxBUb4LHqtmpkuRtKS9gqv5sbtK5Ghhc4MYi0Kk5UR4B2ZC3M+PqUOCk9KmaeLuwdPwzrUYn9eaemadpe5sX/de+rfV2E/O5s6Qc/ILDUoI0kAWmItFMK5KKnNVSuEUbvSgkoVXWd0Fg09vMnWvATg0voWTr+yle0gt/3NKW6ta0VuuB00MKE5DRuIqr6XDKrWOwL2YCrHNHNwghyzSU/UKid6JhF+km0C0JzSb9fQc6jfFda15Z+Op9kW65wnoKCmBHL1zacc7HrsSlQ9BTejGTuIs/bE3Q+sTpsJ4OavxCx8v1EMNT+fEB+PfRxihDZS3YJgre+tg5Y2ztNjq7+WovP0Bsc4QQNn/LUl/Mk/bBfqKy9PXiN3pmrf67MRXZ3f5zzSeTfMDqQzXnNpUvm5+UUxT4POrli6/9kUNYpJYxEy88EA6ajZG30OXy4RrujcAAY0b+AuCo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Hi Aria,\r\n\r\nTask.Run executes code on a thread pool thread but *outside* the request context. This is why it's not deadlocking when Result is called. This is essentially the Thread Pool Hack that I describe here: [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/magazine/mt238404.aspx \"https://msdn.microsoft.com/en-us/magazine/mt238404.aspx\")\r\n\r\nHowever, you shouldn't use Task.Run on ASP.NET. If this is just temporary while making your service asynchronous, then that would be fine, but this shouldn't be a permanent solution.","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"1a82fd02-06bc-3e30-9bd3-828d06325f82","date":"2017-08-07T19:36:35Z","timestamp":1502134595,"authorUserId":"disqus:stephen_cleary"}