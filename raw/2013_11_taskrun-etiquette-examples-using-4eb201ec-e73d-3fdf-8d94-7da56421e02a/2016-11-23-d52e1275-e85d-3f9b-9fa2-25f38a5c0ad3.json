{"_id":"d52e1275-e85d-3f9b-9fa2-25f38a5c0ad3","authorName":"Mike Waldron","authorEmailEncrypted":"FoiydKGpoKo3/pXWd3SeRhc7Br2jApHxb0XOZig7Oo/HhWLg1qBQetne+WZMrr18ROdBurnCfZbzFsOnUpLQWe3nvUbTjsxlCXyxlhI9d7j8AG0ZeqzIhv1J/p+/+FU5obmPjF+iRwXaakRhWkG3n5pC6radKA7s4yByV6wPSfQELzdMMMHMyvAgN88/YUHgc9EJV9NfE1WW57Im+XU6nucOZBQXUkaf0lUbkj2vgtURav4UIlWblWMhT1oj4eZDuRnQ9HP4Lst/PxtA30dIxaOZanTm1Jra75fr/rIeTs0vSl6FWJUMt/aM3HFjOlYAMnvOwUG7x7FAWqhDVuJIWfz0KXuycG5bpMjJQuNEFynazjZ3ixiABChMw/504gPnxEdLdaPHZQdrXuWYaiThYIoi3uwYBcKDCaqAWT6KIdTaKYEaGsqYcjjCEoOGpEn7rJ0HcqrXE4pKZ0l+LqU3uUlYgWDtKljVYwlLSPiXSD6sQfiYakmsq+UTPCFzblMV/v0jeWxH7br+ZuQIpbaFZlPO6tQjyGuKkLl+YnDXiSzkBPEXyE34zidc/A2m5sRCVwuw65v30ExgsIA7HL2X+TixUL16vzHE+wV6tZuPRlg/hd3CKWfPXycKkf1DejsF96btNyg+JBUnraRFxdzBIcQRqJtulcop6bh6u4hvgGg=","authorEmailMD5":"568ebec42b1b05a894243580ba4fa18d","authorUri":"","authorUserId":"disqus:mike_waldron","authorFallbackAvatar":"","message":"I'm a very literal fellow, so when I read \"CPU-bound methods\" I assume that means something like \"We're going to multiply these gigantic matrixes the CPU happens to have entirely cached.\" I never need concurrency for that sort of thing - I'm always waiting on a web request to complete. Where you write \"Itâ€™s still executing blocking work, blocking a thread pool thread...\" that doesn't sound too bad to me, as long as the UI thread isn't blocked. But what I think I hear you saying is that the blocked thread is sitting idle on a core, rendering that core unusable to other threads in the meantime. Do I have that right?\r\n\r\nIf Task.Run is not suitable for freeing the UI thread from waiting on synchronous web requests, is BackgroundWorker a better tool, or does it amount to the same thing with less syntactic sugar? It seems 85% of the web server calls I need to make are synchronous-only (no async calls available). One way or another I need to make these synchronous calls without blocking the UI thread.","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"","date":"2016-11-23T06:15:54Z","timestamp":1479881754}