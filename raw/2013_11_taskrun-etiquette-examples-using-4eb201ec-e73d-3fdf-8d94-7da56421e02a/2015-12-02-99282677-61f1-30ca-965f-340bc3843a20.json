{"_id":"99282677-61f1-30ca-965f-340bc3843a20","authorName":"Anders","authorEmailEncrypted":"ITq++wZCokmon+9TFsd3v27jJKLkC2DvB1zDpHTucsAdTQB1UHiBtqAH9msjIex7O+X84cz64L6DoJDyWoJG/3i6ximNg18xQbEevwtOea7EoihQlxFt7GEIeoccGhcz9j5g7sd22aaZZ4iicospWkuGCS6UvV20ELscd1EhFk4pJ6uAo/qusQe/6G2qb02S1Rn4og+k0IWOIAq3JAklrCgiTqVOgVcwEIH/oodJM3A/xS2tCSPWY7om21mrl46enrUW1TTeWMy0l/se3cILqh0TJ4crOtnzaNbNTBd2nT8f7alZIl0YsIxf8KJ8HIROAspLSSHPeyENh76rjvSR8ny1rueaa8EQzfFBpv5EMylBo2XUHVWTHEnI2sDDAo5JhH+qSpDIE/DwtWbrTBLT1M88vZRSPM5jJuHhTriCHRlvjI61xCo9xMdoIvkrdT/E9vQUuyUDv6efssLnfv++K/XZEXRZRICwvpZexlN2iyoy58XLq0pF7Ti3L0uiQ75bMShbR1C4E8tPVHdQWK/UFX8Hmdu6fhqt3Chbs6U/UeIxFGPIl0ao3wxKoExmnFuZRq9vTvo2ZCW5CGXVLDs3VOYQu9H/bzeOb/kA/pZegAPJvzVqE8NES1IrM8qqDU42XmG1lg4BhEwUOQhyo+NgOQSnChkMqWOVdbYkdzN2Kug=","authorEmailMD5":"df0c87fe57a95cce1df1b512109a0e0e","message":"Hey Stephen.\r\n\r\nI have an example of an IO bound call where I'm not sure how to avoid Task.Run():\r\n\r\nasync Task<byte[]> GetMyData()   \r\n{  \r\n var myData = await DownloadMyData():  \r\n await CacheMyDataToDisk(myData);  \r\n return myData;  \r\n}\r\n\r\nSince it is not necessary for the function to await the caching, how would you avoid using Task.Run()? Calling CacheMyDataToDisk without await throws a warning and introduces issues with exception handling. Is that really the way to go?\r\n\r\nThanks for the articles!  \r\nAnders","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"","date":"2015-12-02T15:56:03Z","timestamp":1449071763,"authorUserId":"disqus:disqus_czcHhkHzPx"}