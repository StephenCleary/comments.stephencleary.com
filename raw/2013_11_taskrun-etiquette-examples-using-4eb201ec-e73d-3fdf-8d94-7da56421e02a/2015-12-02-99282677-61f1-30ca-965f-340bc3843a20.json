{"_id":"99282677-61f1-30ca-965f-340bc3843a20","authorName":"Anders","authorEmailEncrypted":"PwsUaTY418KEdmNctimbnPEtxLZk/kih7w+VHGJUEX6hsqRhrVcQgDqd7IwbHeSLyzBKG3IDteUg02EyFlSQkCD1q8m+nRGYr7VPhDslvKXpdLlpx/Rzi4qE8FHsV6MPq0lIxNyxYMuWcCBUWMNk+rJ8qUOR2qhA3z+hN8EltuV1wkcwzJn4MSdjn1ZRYny6HCp3tb8b7yXTmW0/TSzz+S2NW2Jx15JgS+j9ncovi0m2ab7/hgyeOgZQoS3epNlQIyeN5fMsw1aSDBxeKwNvJ/16jrNQi6zpR744BOUDXOWsCaCEWGbquvk+5ulCIq5Vjv1zIbkItvo4JNYWjUTjgbRNseNx4twvB2rslBmKkRoYBVZlb2k/RxHZVFFLPdPPvdSMuT/wUcq7huTaG5MqLFAmgEWKdIL+88F+b+nav9XMzeAaGgMGLjZVCft7aAU4yZfCLBY8cqwmIl8UUhP6S2tVeJRJAGGyhCA2D3mQ6YulWNzVnbX+LjQM3BmkdUqlEGl+4mvIPxUgGO8EYxggf2WX/dH8ZeS5fOVbpNvI0jYckj54zKkPfgV3xp1DIsrVg1JTl3CwButK44uOTu34oZAjfu0AXlELvI4+PGbsi32FhESS9B4/WfaWmUdl9yjS3g0T0z0sKl62/h1LRF23N4fYZeF8LEUJ79kmhRyG5d8=","authorEmailMD5":"df0c87fe57a95cce1df1b512109a0e0e","message":"Hey Stephen.\r\n\r\nI have an example of an IO bound call where I'm not sure how to avoid Task.Run():\r\n\r\nasync Task<byte[]> GetMyData()   \r\n{  \r\n var myData = await DownloadMyData():  \r\n await CacheMyDataToDisk(myData);  \r\n return myData;  \r\n}\r\n\r\nSince it is not necessary for the function to await the caching, how would you avoid using Task.Run()? Calling CacheMyDataToDisk without await throws a warning and introduces issues with exception handling. Is that really the way to go?\r\n\r\nThanks for the articles!  \r\nAnders","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"","date":"2015-12-02T15:56:03Z","timestamp":1449071763,"authorUserId":"disqus:disqus_czcHhkHzPx"}