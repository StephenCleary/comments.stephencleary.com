{"_id":"99282677-61f1-30ca-965f-340bc3843a20","authorName":"Anders","authorEmailEncrypted":"YreE95CFpUfF8eQpXJN+bHQ+zH+o0HEBzdiwJPs2YcitHHnk7C1d1b+ElrPZymMXWrYmgAr6XQIBv5TrKSoQJied3k7+2R0VVftRQep1lb5XPS+bXpUunqx4esI3vHulQFngibAbfn2CJs1F6j+pj2h+jbGjdzylM6cudCGFBBZvByu8KvnMfgV7T4WRHPFgVV4jJIJFF4R2esFK5rzWGjYVZnrgGa5rLNKeukX8DvtFfuskil7tUVlfZr0L1hM9ndMusJ6bwFJnrd+W9TqWfBAjOLaXXW4+5l4Xp5XMJ+kWTgrjMe+wNNIvIDjdFwg06MZXCJYSnBVeH1Cc8nNj04KeecZEE2R+TLLfm5IKlt3m2Jpy8JaNMB+JZJO06mt+rFspvOaz47ORC77AkHueAUsVqwj/z4jcRH1vGElLki0AflQScyEDMRzy0o/c89UIje9cUCm0mFoiVIvTS2ODy8n3d/J/Tmm/QoB34TTWMsqsjzCCdnNp2g3+QLb4n7pwjBF9Cextlk1fR2TKxnKHA4nPTHZnVkg4H7t9pDrMergCDSnzBNhAn9lb5Uwiu6WQLfyJ3eBrFPs17GNX7K/On5NlHiPRFW5TripTKNil0SkxxnacKmbyfwN2wHbhDtQDsb0dqynf4J5bDbAzqd6VoJEjOY6zuvcwyeOZgMW9txc=","authorEmailMD5":"df0c87fe57a95cce1df1b512109a0e0e","message":"Hey Stephen.\r\n\r\nI have an example of an IO bound call where I'm not sure how to avoid Task.Run():\r\n\r\nasync Task<byte[]> GetMyData()   \r\n{  \r\n var myData = await DownloadMyData():  \r\n await CacheMyDataToDisk(myData);  \r\n return myData;  \r\n}\r\n\r\nSince it is not necessary for the function to await the caching, how would you avoid using Task.Run()? Calling CacheMyDataToDisk without await throws a warning and introduces issues with exception handling. Is that really the way to go?\r\n\r\nThanks for the articles!  \r\nAnders","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"","date":"2015-12-02T15:56:03Z","timestamp":1449071763,"authorUserId":"disqus:disqus_czcHhkHzPx"}