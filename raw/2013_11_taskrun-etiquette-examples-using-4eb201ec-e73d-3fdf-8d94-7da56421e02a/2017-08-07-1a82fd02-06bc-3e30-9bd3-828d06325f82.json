{"_id":"1a82fd02-06bc-3e30-9bd3-828d06325f82","authorName":"Aria Roller","authorEmailEncrypted":"ElygvTuH48v70Dzk40vM6LSEg9SQTksMXwGSYA1oEiKG0Pq661XgSzwLYFfblv3hXTxE57w0XDRDMJlQW3io9krWEd2WV5/v6ZeRMPacqKE7BOFMELK7GUMRm+6MvV5qg/kAu93E20dt81+hz9CT4hqRcONxS6MVve4dbEPY7BdqxmclhAXQrP7b/n7903de4FUWDGV+62f2rvz1Y9nfM9gTR9gxoAfYsQK51SGmO4JDDJpMe5eRoyQX2YmMHmuLUiqQ4SzzjOB+iZlKX6paTnMqic9F7iqQe4xYb8RZQQ/kLSOQMA99umtg0Bj8BHhXiy7FpW25eUqizwFcGHzaNdg5pAVnCzLMwVhmHB+/i1c9O+0R6hgvxAbGwe5o0wEIuFQdduMtcjcCEEn49Fqo5oBOfj7bD8+BP2A8oBEh9vJGuDCAzX/a+1535jKUiE5rZka3ClN6p5px9wSCiYYIKH1HXtnD3PjZmwRJ7XpzyOvkI2pOPFylLv/W+U7siqMkxGOOSZsaxbBa26dRg6eNiBRvVoUVH1MfUHY7FVLa2/mJ2i0CxDOPZVjSsyoJds6bNR/mvy6lfEdTkZvbAN96lxQ6c6ylJN9q6f1s+xIDVeJbioJgkX76ca1ltYUcJTwUEUtjwBS73UzSxY7yqGhWr0H6b64Qil8fMJZbJeIx40Y=","authorEmailMD5":"635f80f6f28bd346fa155fb2f1f053f5","message":"Hello Stephen,\r\n\r\nI know this is an old thread so I'm hoping you still see these comments =)\r\n\r\nI have a question on Task.Run implementation. We have a page that is being loaded synchronously using HTML.Action calls. These are calling sync controller functions which are then calling an async function with .Result. I beleive this should cause a deadlock situation but it doesnt appear to... code below. I'd love to understand what is happening here. My understanding is:\r\n\r\n1. Call to Task.Run gets thread from threadpool  \r\n2. Start execution of MyMethodAsync  \r\n3. When await is called, synchronization thread places a pointer in the Task object being returned to MyMethod()  \r\n4. Control is returned to MyMethod which then blocks the main thread waiting for Task completion  \r\nHere is where I get fuzzy:  \r\n5. Task completes and sync context tells main thread I'm done  \r\n6. Main context is blocked?? and cant run continuation of Task from MyMethodAsync()  \r\n7. Deadlock.... but this doesnt seem to deadlock.\r\n\r\nDoes calling .Result do some sort of thread synchronization behind the scenes? Thanks in advance if you see this!\r\n\r\nWhat am I misunderstanding?\r\n\r\npublic ActionResult MyMethod()  \r\n{  \r\n var item = Task.Run(() => service.MyMethodAsync()).Result;  \r\n ....  \r\n return PartialView(stuff);  \r\n}\r\n\r\npublic Task<t> MyMethodAsync()  \r\n{  \r\n return await SomeOtherAsyncTask();  \r\n}","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"","date":"2017-08-07T15:54:32Z","timestamp":1502121272,"authorUserId":"disqus:ariaroller"}