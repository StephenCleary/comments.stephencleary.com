{"_id":"c76b5480-8827-3a00-a63c-289e4b64bcef","authorName":"Anders","authorEmailEncrypted":"iT7mhUTg4Htrwu9pH67w/BqRoy9biHi78FEtKEaB2laDDS5+G9InedHhPg04+YqjfQMQl+2rTK+juQeBT+aFY54MEVVtonbtmeu+ksA3RKSJ3Sb2ViAt62//eze+Bmf0+O8DD6zwyXtEGjueJ0vkJXFBggjoqu/YG/YiKzBgMlU6Z8v6X0guLVgJuf4uXiPxdf+xPlAlkVwOGNMfgrSqktTANf8QnVPpoQ6yOVNtR8a7jR3mHCnACG0nHG1aw7zo7hw4RHAnsHtfalwVgQln6RSDSkOWbDuFbkLYBoXgb1rFtljTKw+CQXs25fZIVej5H4tgJmg5yxZKgcnSriXdTFM4v4d809HYvy1H5N0baaLpqVmKfCDWcEbukW1NWXOTjZU4eG1zVUIVAyeEhgkfIGRbPUDuq/Ll0G3/OJitXX5SXH1JYIJ1LNRqM4l/tvMVFOaANzA0GwliHjfu+2VihSIxI0Lj+W4qfaC9pD5nHBfzJitgmTe2Ke9a+RUx8OhaGGq3K7WdX0dfF50TrJoBtbhdCDvhSd+UbvlzeGMXt6pAjvVaMqXnPlWx8eN7yRiTd5Xansja40QzhceGc1kWQPYrNwmtwvbrYsqHO+a52Cgi9RKwbJOpJdgz12Iy2/OpHnDJcX1hKPHgmvjAIqeErtUCgRnuDe3F6S1SL5JBmKM=","authorEmailMD5":"df0c87fe57a95cce1df1b512109a0e0e","authorUri":"","authorUserId":"disqus:disqus_czcHhkHzPx","authorFallbackAvatar":"","message":"Hey Stephen,\r\n\r\nThat will introduce unused variable warnings instead. I could disable warnings, but both solutions seems sort of hacky to me. I find that I very often run into this pattern that deserves a prettier solution; Doing stuff that is not related to current function but should run in current synchronisation context. To me, it seems like the async await library is the first major C# feature that isn't fully thought through. Unless I'm missing something and should think differently to solve the problem the function above attempts to.\r\n\r\nThanks again ;)  \r\nAnders","postId":"2013_11_taskrun-etiquette-examples-using-4eb201ec-e73d-3fdf-8d94-7da56421e02a","replyTo":"84c7f830-8ab0-3c97-8abc-2845cb38e4b0","date":"2015-12-02T17:05:05Z","timestamp":1449075905}