{"_id":"b4edf360-cb7f-3912-b85c-7474fb081ff0","authorName":"Bombadil","authorEmailEncrypted":"","authorEmailMD5":"","message":"If the intention of this example is to be as fail safe as possible I would avoid calling a method with unknown performance and (b)locking characteristics like Trace.WriteLine and new Win32Exception from the finalizer. Whatever is intended, we should always make sure that the finalizer thread just does the bare minimum of activity for stability and scalability reasons.   \r\nI would also avoid the string concatenation which would cause a new memory allocation from the finalizer thread.","postId":"2009_08_third-rule-of-implementing-idisposable-832d2031-f442-3138-9c21-3930cda700c7","replyTo":"","date":"2014-03-21T12:33:10Z","timestamp":1395405190,"authorUserId":""}