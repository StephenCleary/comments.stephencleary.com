{"_id":"c7d3a450-2416-11ed-85f1-d95c93eccca8","postId":"2013_04_cancellationtoken-behavior-with-asyncex-1260b370-12c7-3bdc-bf6b-afac585327f5","postUri":"https://blog.stephencleary.com/2013/04/cancellationtoken-behavior-with-asyncex.html","replyTo":"","authorEmailEncrypted":"qOdch6xKEfjpM5J20u4W7PJuc64KwruZmy7vClZ51tiafC4UfXQakfXXqwJnvXLC3eKqaFBZRE02O6zS45FeXdy4+CzaQBnw2Hy1mpraJt4xhSqXtYgnl0evVMDZD05TuBJmd+APTO3SFwYmaImqnZcBEhO3cw7SBBphSlj0eL8Lz3VaLjOi+ERD2hjBU2jrinS22E+WxaxB1rlvG5HzC8jSqhjVxHigocEwKmSHvesc1BajRreYTfquhNtNZxjcKLYTS5E1DbXN8SsX1Kkww3DoLzqMN51+D4p82IQUmBBYWNJy48Vxr2jo3arVtASVFwqxP04g7BBDgFxi4MBmVu1KFsBAKGIGRSKGaQZOO24h8+PrPfJ7YucBSN+iYQwVRJlfPkLKXC8MzL5zAcQyn6Ypx1BcXxqeAJJ7KgiQ/cOJXRliT4Iw9ZOuxnIsbT3HFNaeOHKd2SHrdhrejkWXDclByZzZ3rcGJP8tnaYbj/SfM1MlsUncDFzDUbp1fMHGtclo3emaBRPdmFd+FVptgV4Xj+dpCDh8CHBVdPs0o6NR6vC8l/VkQ4iijxXS1tXwl7jUz/D2CEEoajdUAZs5dbefS0bWOHE4lwdGIuRMQ8zVkt/0wyRkWb7XsH7xL83aMAS9navv38WtlBUkgUKpZzF3lEqTRf/7xp+2DVWFXqM=","authorEmailMD5":"b2afb7e356d278742f347baacf6489a5","authorName":"James Kidd Smyth","authorUri":"","message":"how come this spins up the semaphore max count threads..\r\n\r\n            List<Task> tasks = new List<Task>();\r\n            for(whatever)\r\n            {\r\n                await semaphore.WaitAsync();\r\n\r\n                tasks.Add(Task.Run(async () =>\r\n                {\r\n                    try\r\n                    {\r\n                       await WhatEverAsync()\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        Console.WriteLine(ex.Message);\r\n                    }\r\n                    finally\r\n                    {\r\n                        semaphore.Release();\r\n                    }\r\n\r\n                }));\r\n    }\r\n\r\nBut this doesn't \r\n\r\n            for(whatever)\r\n            {\r\n                await semaphore.WaitAsync();\r\n\r\n                await Task.Run(async () => -- DIFFERENCE\r\n                {\r\n                    try\r\n                    {\r\n                        await WhatEverAsync();\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        Console.WriteLine(ex.Message);\r\n                    }\r\n                    finally\r\n                    {\r\n                        semaphore.Release();\r\n                    }\r\n\r\n                });\r\n\r\n                //System.Threading.Thread.Sleep(100);\r\n            }\r\n\r\n???\r\n\r\nThanks in advance","date":"2022-08-25T01:39:38.048Z"}