{"_id":"f9c96f10-cce0-11ea-a9e0-b5aaa9f7d429","postId":"2020_06_a-new-pattern-for-exception-logging-727f531a-2b21-3b7a-ba16-032c960fc67a","postUri":"https://blog.stephencleary.com/2020/06/a-new-pattern-for-exception-logging.html","replyTo":"","authorEmailEncrypted":"fUVZbLqqD8muhUfAktHIQaDvNnekM1E5ZaBztU+ha1eLEmFkZvna2GrVfTq6E88RPI04G1WZbZGAZYTC2foT9t+NUB5/bwS38N9qwNn1fos+ivWiW6/7K4oe4m3SVAO1ty4eeaI+/gMS3BLbbj+qMfQ88/aaErhiXi9+eNIFAim60FHoo5U/YRn32C0V6jY0IiETyjffXmDEeRNxPX5EsIb3O2F7re3AwciqJUITWj91LQbBc4v/Si5nE+q0NOJdNq9xiny8vEOW1TU4WW9qgTlpfBSXL5Y4c+6X7loYzvapfX1viiP8QG0sL+FLHlBd1844c09n2GS0xQvvau745xZsIGnp8IsEsFylKTL0bi9BwYOBH8b8mTl5497TSy5X8R3UiosY3pxbHZw92O/SzlQHFaRqZDS5pxN92/MITw0vss2eue1P4ISyxRFZ9YT6igwDdle6uscQDxWFPZXI8CdxulP5pvJUCECG8iFAVJ5Kgom2aqfAXvnMDfEgbUqjPaJbF/TWcI80Pxekh13RbweAtvOH5/py731ImlKLhOv7i9yipg7tn6g4YKQcuepvMvPvlGVUY6jnG/P0wcgB1FUnqV1FCp9KJanCSQAQ0M8U0QxEc0Gf/kwbQ8yA9j9Rv7ieG9mIiH4fMtPJodfPxBrrt4kZAwjn3bFK+81Qx+I=","authorEmailMD5":"67cca6565ce823a15b01bf82b213b967","authorName":"Enrico Massone","authorUri":"","message":"Hi Stephen and thanks for sharing. \r\n\r\nJust a question: suppose that I have a `catch` block where I want to create a custom exception (by wrapping the original exception) and throw it, instead of the original exception: \r\n\r\n```\r\ncatch (HttpRequestException ex) \r\n{\r\n   /* I want the consumers of my code to handle StudentsApiClientException only, in order to have a simpler API */\r\n   throw new StudentsApiClientException(\"Unable to send a request to the students API.\", ex);\r\n}\r\n```\r\n\r\nIn this case, I should use the `True` helper, right ? Because this is basically a way to handle the original exception, correct ?\r\n\r\nRegards.\r\n\r\nEnrico.","date":"2020-07-23T12:35:22.597Z"}