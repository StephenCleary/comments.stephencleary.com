{"_id":"8faa6080-2b5e-11eb-8cee-8fa79486417c","postId":"2020_06_a-new-pattern-for-exception-logging-727f531a-2b21-3b7a-ba16-032c960fc67a","postUri":"https://blog.stephencleary.com/2020/06/a-new-pattern-for-exception-logging.html","replyTo":"","authorEmailEncrypted":"d/YwpKCqrPCWob41LGj/gVpMGGBwj2HnUCjwGu/Qf7p9UBORg4PgedJ9hube3xmWO8dC+yDRXU18JEqX/D/q91+QuEI/FEyOaG+qGELdm7jgyrMxn9QlAIiJLx7TIQziNSrJftT5pd2+Rv7/HG0hy3j3EbFoh1lH8QYuHDcGCN6Ov8D8kMnTMRrKmjDFCIqNAGile0fMMjXpvZ73WO0/z4/Z0chCx0xKIUibm9kAqHyEZSaaym+OqhO3RZbucOx1jPQOJvIHMbherZO+bxJVlei78hdEiXfIHwalXaSqEON0bTteOwc5Q0UTP2q2XrCK/i8RyHA4OZyHQezC7mZF9uFUGyp6vGIwpc5ObM2Fa8pRyOiOqA+KFlW4iUmzxl1P0XqcUADEaD62vIS+yX0XhpjuQ6GfRq5cIfjwVAQTq+PiJmfu2Q05T1Bgr+9lYTAVzavrvRGSznameuRFFmMeRJn6M7jAmsZuF12JAX2UrZPXkYriMjUCC7WKL336peUSCCvG5cLyHRUKRJiz2dWVXFhZTLA3sHOGhIDrdlfdTFxD5WrGeuanR2YCK1tASEWo6vP2H1NhAXCEGwlgPoznoFJPI+8a0SHr42d5uihpc0um5KlI8IE3NK1sJk/v9uimh3/Bu7Xs1lAhxxMCAanjGdY69C25jLjJTi6dt1Zrfuk=","authorEmailMD5":"a1ff38f3fbd7c8d46093ed62c43c065a","authorName":"sx2008","authorUri":"","message":"To keep my bussines logic free of logging dependencies i use the following pattern:\r\ntry\r\n{\r\n   var customer = context.ReadCustomer(customerCode);\r\n}\r\ncatch(Exception ex)\r\n{\r\n    // fill your exception object with useful information\r\n    ex.Data[\"customerCode\"] = customerCode;\r\n    ex.Data[\"ConnectionString\"] = context?.ConnectionString;\r\n    throw;  // and throw it again\r\n}","date":"2020-11-20T18:31:10.509Z"}