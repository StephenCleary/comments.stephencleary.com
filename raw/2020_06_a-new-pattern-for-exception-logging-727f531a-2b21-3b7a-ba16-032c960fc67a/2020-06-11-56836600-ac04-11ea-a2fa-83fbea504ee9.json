{"_id":"56836600-ac04-11ea-a2fa-83fbea504ee9","postId":"2020_06_a-new-pattern-for-exception-logging-727f531a-2b21-3b7a-ba16-032c960fc67a","postUri":"https://blog.stephencleary.com/2020/06/a-new-pattern-for-exception-logging.html","replyTo":"6070f290-abfa-11ea-a725-f7ae09b4319b","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Zack","authorUri":"","message":"Maybe as extension methods, for legibility:\r\n```\r\nbool LogAndPropagate(this ILogger logger, Exception exception, string message, params object[] args)\r\n{\r\n    logger.LogError(exception, message, args);\r\n    return false;\r\n}\r\n\r\nbool LogAndHandle(this ILogger logger, Exception exception, string message, params object[] args)\r\n{\r\n    logger.LogError(exception, message, args);\r\n    return true;\r\n}\r\n```\r\n```\r\ncatch Exception(e) when (_logger.LogAndPropagate(e, \"Unexpected Error\"))\r\n{ ... }\r\ncatch Exception(e) when (_logger.LogAndHandle(e, \"Unexpected Error\"))\r\n{ ... }\r\n```","date":"2020-06-11T16:55:22.224Z"}