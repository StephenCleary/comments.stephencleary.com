{"_id":"10bb7b1d-3380-3927-899d-663e573374d7","authorName":"Stephen Cleary","authorEmailEncrypted":"qnq+UTpLtb+KIdz6pcbNTGqUVztc8uzV+QIhWYHhl23d0KXnIOI67x0WYDHHwpDohBcIXhHxjrHgFMm27apGNzZUIdRRUVSm5JC8tRxZp0PMi3U+bkbQYykMwoyWHu5rPa09u7wCPU05xzjYhFJHWieT8kMPHnuuYYRBzGINMzezPZJNFsPTk2sfGvzR748zk81mOzO4efdqu4gq2LhXTt4FmpMU/hJTgdi1QdIw9/2KAQCja9lAAIWtpBXxkRg+PomYA8Ggy+HRK+k2GuytG50K3CIFuBEZgTiFQbOd1fy2140RISCayjLr9v3bGP0YfIHAMyOC/vnkNOxNbbou0iY149iRfhub0CHP0nnTk7iM+V5SO5F7+32utG0undnUPClvUs9OTu6gaN86Gsrg/ypePxLh7arvHiz2FzgG7/uFZfFF05CW3aiR0amczOZRkf/kDavfYr+mEGVproYO9bGuWjE6VGffsCYXOtbXzsuOdnhW3AUTpzP/06ai68QduroU+eqUkS+kznPEHWG3QQeIm+v4gNaNa8cWTyl72FK52i1NSyUX2aSLhtO10LnvZZpr3OgfG2XY2bOEMPAq88uVCMZAYdEsGxJ6MmYopa5d+PsCb1QGv5njdRF+biH1mllozewPkTnVdm4kFvvbFPoBhy2ZLpQzQfPmO6tUFH0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"First, from this description, there's nothing CPU-bound that the code is doing. So there should be a straightforward way to do this without BGW or Task.Run at all.\r\n\r\nIn general, you can start an async operation by just calling the method and not doing an await right away; instead, just save the Task in a variable and await it later (possibly using Task.WhenAll or Task.WhenAny).\r\n\r\nThat same strategy can be used with Task.Run, but again it sounds like there would be a better solution without Task.Run or BGW at all.","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"a18c0153-26fc-3d80-97ba-0cfd969789e0","date":"2014-09-24T00:46:32Z","timestamp":1411519592,"authorUserId":"disqus:stephen_cleary"}