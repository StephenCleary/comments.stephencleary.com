{"_id":"10bb7b1d-3380-3927-899d-663e573374d7","authorName":"Stephen Cleary","authorEmailEncrypted":"YzCv0YUhRTsawXDjuXCTRx978ljPkXuOil3R0Rkv1uHmEWpQyk8qZ/aGb6nw4jDomo8hlvRKDEiBTHibIwJWEMInwDhkCdVt2PmSLrOjKH4dhHtL9hrlGyWfQYn7PYZaHd3E5sUBAJMZEI2MXAW2Ylv5I3bgnw9cI2Yw3N0UjNADr8rWvVcgWhE7NYfNqxsaN3si3iyfaoZsUhTFhmu+GT8wNzw8jTYvm+aTOKlcEp18p7xGl2iOQvizaIYG6tSfrLWu3oPPItASWDgBztxdkHoSqS1pe7RwkmDC1Ma6zqzcykeM1dJ1isCn0x/rUsFMsziReSwbTAH6a3zf4ANOiAbGNYErWSN2Vb1K9V14bm/cWQD6fIITZsLSldJgJc+pKLo/1y8+/HvBkxmseOlN70movq9qFTszr/rzzwgizYSrmBQQccqhFofpXBimsF1A0oFU/HK9DzbJTrfZOBjYyVUNhDrFPPzCAx0O/aJNZXFqeWijtf9cyGUlJ1LW+XvM/N0ZUdMOD4E540IyFm345719qRB+/gOEt7Z4b95nT6s1IJMIij+zEOOVTQKstR7DLIAfacjvdSdrCek1Loo5QUn1UaMhphOupq95+GJ3r+W8gci9Q8IuOINvqn47dNOmnF8sEPr/RPAF3rco8LEBXzOFCOXAuqrX9tT6rlTLCKA=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"First, from this description, there's nothing CPU-bound that the code is doing. So there should be a straightforward way to do this without BGW or Task.Run at all.\r\n\r\nIn general, you can start an async operation by just calling the method and not doing an await right away; instead, just save the Task in a variable and await it later (possibly using Task.WhenAll or Task.WhenAny).\r\n\r\nThat same strategy can be used with Task.Run, but again it sounds like there would be a better solution without Task.Run or BGW at all.","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"a18c0153-26fc-3d80-97ba-0cfd969789e0","date":"2014-09-24T00:46:32Z","timestamp":1411519592,"authorUserId":"disqus:stephen_cleary"}