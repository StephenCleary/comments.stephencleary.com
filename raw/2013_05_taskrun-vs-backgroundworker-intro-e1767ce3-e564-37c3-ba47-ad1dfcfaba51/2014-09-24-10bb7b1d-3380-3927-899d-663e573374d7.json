{"_id":"10bb7b1d-3380-3927-899d-663e573374d7","authorName":"Stephen Cleary","authorEmailEncrypted":"PRdsiIhfn7GODt8yOHddSSgZUvmWtf5GnbS4OO9XSHb+UqwjAa6UJb7WE+qxqTC9khblWz+M7kCrF4I0YbAVw3ELL24PyIu1+5EVnF1bvOrDhuHEVGiGMH64PSJzWxvMZTUIsRTxoVlKbVqM5ENgM6yy1chxmzQ6gK7X74ARHlkZ/+YbZsluHS/07cYz65/Eb0KFGRcAlbeuRJbL5l0eldd6dPLXFpahUZQmVRWatOPvtya3oCt9dUGwNmlJUEuGtQn9VBWQgwpKR1nzHJJdpC8T7jJnS3Qi7408HCeE6jgdVIw3sttukJ3BrLb8a0vPVh5IWAE/8/myc4GyPr6nS3CB6CrgVnXd5dNsCJ6td8DRo1Eqqe7xtdi5X064nDa8NFBkqxisJmP7xKLztsci5PWz4DCgeB1yepy+e8s7OzhjBX3qbQPjsG2exUGO/T8/en3hknTtcHXDL7HnNGg6G4WnY1gOAEGs30OKidkD6T8hzit9PEKxTCijXloukkYthAyjYjIpFRHc5co2t2AeKEP08KoS03+h+UnviD8H3c2yvwqKkWLmBpeTw9bfzoAlDGT+vTYGBZhNfrhMA9BuvvDgWNzzqFkMzc0PGph+xulIXD9++AlOEeK5AKM8HrWyjFiL/KKV4NCOBokxq5NWY1WxoNv5iJkhzsVx5V/vFiQ=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"First, from this description, there's nothing CPU-bound that the code is doing. So there should be a straightforward way to do this without BGW or Task.Run at all.\r\n\r\nIn general, you can start an async operation by just calling the method and not doing an await right away; instead, just save the Task in a variable and await it later (possibly using Task.WhenAll or Task.WhenAny).\r\n\r\nThat same strategy can be used with Task.Run, but again it sounds like there would be a better solution without Task.Run or BGW at all.","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"a18c0153-26fc-3d80-97ba-0cfd969789e0","date":"2014-09-24T00:46:32Z","timestamp":1411519592,"authorUserId":"disqus:stephen_cleary"}