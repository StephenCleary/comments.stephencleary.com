{"_id":"10bb7b1d-3380-3927-899d-663e573374d7","authorName":"Stephen Cleary","authorEmailEncrypted":"BXfjl06OBVxXHKu1dPPp3iXCyfNMaR3+RrTthBjYqTqfKOYdQzAIuQm5bByrOlnRxBv8RfPuQZylShqzKDXapL7+qqCogRBU2O6/vP5gkMenKjwyqhLZgsQp51dgiSi4x7jmaTyDiudT+91DSr0ugevEEI1elFvGFFWK1oO0SFKrw5lWtXpYAEMRmYgBil77oR4mWvXKEpzgA/DvjkkUr8W0pTk778vcrjiDHn3gkKSdnSwUgEDCftP2Zfqd7J5LhezrWkZkhmXnkMjN7PiS0gphNmc4kfy6D6N5YoHDUaeTWZKq8c1gHTpqwl78sjHMrdeHJzVpDQ2GQjlhwx8SuLoBqDYztUsgB1JN7m6JrfSa6r6Pw3g7+Xgf8C/5bS1iD0epymfa0gMZotsh03/af3j0R/2qBL8YblnZxt1gIy9reA8OV9e546DiN5ajoTvyc5KJXh0oBb53DB8+qIcsH1tpQTIDl1F9gGeRy03YDNDmrd6lN4sjpwrGSd2a+bXulH5iFjc7yrXJ34Q8Ki6M9VCpgZ7Eq4k5tP+d4K0mXr1oTRxO0I/BmEDaFTHa5VVi+Jj7/WPkOlvqeRYR7SrNNLIo34k5GLyhX+JzOsoscLH+vPqvg1OjB2+VuVLQB4k/2mwfNXviw7Czfpl3eLNmWGFeLQ8CQfE713e+V2V0TNo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"First, from this description, there's nothing CPU-bound that the code is doing. So there should be a straightforward way to do this without BGW or Task.Run at all.\r\n\r\nIn general, you can start an async operation by just calling the method and not doing an await right away; instead, just save the Task in a variable and await it later (possibly using Task.WhenAll or Task.WhenAny).\r\n\r\nThat same strategy can be used with Task.Run, but again it sounds like there would be a better solution without Task.Run or BGW at all.","postId":"2013_05_taskrun-vs-backgroundworker-intro-e1767ce3-e564-37c3-ba47-ad1dfcfaba51","replyTo":"a18c0153-26fc-3d80-97ba-0cfd969789e0","date":"2014-09-24T00:46:32Z","timestamp":1411519592,"authorUserId":"disqus:stephen_cleary"}