{"_id":"ff3b0684-14df-301b-8d37-462f44674dc0","authorName":"Stephen Cleary","authorEmailEncrypted":"A4GcCyFc/QwRq6iLq/cBpB+Jtg7/dkjyYZzjMo7oGtHQmrTu78zgBd+GCBU0xQA06m30XhgihumYkZPbNrqkhhc4L+yzJljtszpZZnnXa7kdSaWGZII9wVdfUpBiqMN05yQs3yXJXNUZTCrRQKFRAqJ9UMpNC7dKRPvVnq5aV4kZD7jh17NO7fjsmOpjed2DZtgBQ9/MxCvQyxOqY5R41bv9JnYZqTdHuJuJUtssxOizyanBNBTT1bRFBt6eg2lBa3l2BvgVhb72vWUAkKO8EnXp0KntMPAKPxdxzouM5EPs/z1LiZi97ce5DsAlyPvbfSNVZZKT+qk9eUJXHUweRsaEKelSOytV/0cMAXIEFGT8Soka+/rkPRMKmcmiIor8Q8yhQRQMJuAVWAAZxcdtsdOk62EUBDtqHBuwataUEK4M2nn2NppV6Egg9K9BJr/zJeUbKv0C4yD+jbH1/cNZxPJdpF13iPaZOEUCr3JO4U3gpZ895StnimNdQ6KQKNRtKxnWwZfHqpsBHrYMaQ0wTUGDbMr7nugCMDCfnxYGubnQ9AKg14bcvwGwBPyajwHcPThfdM3xWxuW6mbd5j036AaAU9ZR1j3B9tldMJfvjtWB+rNY+ATVV76/tPEzhC1LraP0hlEgclbAMk7L52+yBYhz8QwCahGGEwIvBM7tk3k=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"He's speaking from a language perspective. At the language level, async/await has nothing to do with OVERLAPPED or anything like that. It's just a code transformation. So, sure, you can use async/await to consume a lot of things: asynchronous I/O, CPU-bound thread pool work (Task.Run), timers (Task.Delay), combinations (Task.WhenAll), button clicks ([https://blogs.msdn.microsof...](https://blogs.msdn.microsoft.com/lucian/2012/11/28/how-to-await-a-button-click/) \"https://blogs.msdn.microsoft.com/lucian/2012/11/28/how-to-await-a-button-click/)\"), ...\r\n\r\nSimilarly, you can achieve the \"there is no thread\" scenario with any kind of fully-asynchronous I/O. Whether it's async/await or OVERLAPPED or IAsyncResult or event-based asynchrony doesn't matter. I've written a fully asynchronous I/O model in C on an embedded system without an OS.\r\n\r\nIt's the combination of async/await with the truly-asynchronous I/O implementations that make the modern paradign so powerfully performant. All the other asynchronous code patterns are much more difficult to maintain than async/await.","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"66589d6e-3555-37d0-8097-af3823ded819","date":"2017-08-28T14:16:50Z","timestamp":1503929810,"authorUserId":"disqus:stephen_cleary"}