{"_id":"6700be30-d3fd-11ea-9f94-3dc3516b29be","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"0a3d8640-d1ed-11ea-ad58-79193f5c10fc","authorEmailEncrypted":"QnPeBAdYKx4i782JtNdwWNdg6kNAXx8C2TbDlVxLAg0j/cgldRtINKk0yjQ5CBD0y8K+7GW4FMJgsl8//p8o5SgVRhnRNiS7wxweH+gFTOVV+Ose92TzzlZX9jgj1Ezg215z49H2lFwxy6ENqrSs9dR4ByKrou8g2EV3/oxkDIRjy+AUYYQ7gxmSc2hmRnolQ8p7iuqeRWuhg+l0MR2A8hVl8BV4ULlwtRV8+y52hLBfu87bByuzYW3ACrPyQ1PAmxRh+Epdgusmr6kcCo3o4i4v/wm5I+yYdG4qOYfqVFgT5amZdmiJ1T54jnqZH7n7K+tEY0uF7heLUjs3Uuqf7i+CF4NAN1TOF878IuJ9z0ywsEGmIOV070zmThILQZ28Y6caqWycn/Ph2GN2w10HK8kDSnxafaQs/2bGslZEak5ct4LvOmAb1qrIbg2RppCYVe17mv0QEaPBt5obScOkICBdO0qQwqYJ4oJqoFtxp7HJiAjJC7vjz7V3XiRtdYQQFBO8OG1tBH5w/XOXXXqkVN+ZOIGot9lPnTTvQhM36RGrZqxWHLloDqM6N3a7AKjCL20C4+fX78HMUDhLDuOFubEc/GWzX45c1NZ6o/yB7fJdx1oWzYNPj/oMiDm7HdW3d9ou77ms+7042/uBp1vyTFKOXYCGjj7+6Cof8qvkgIk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"","message":"> So the thread will have to wait to fully deserialize the model. The default behavior of HttpClient is good only when all needed bytes arrive in the first and only chunk.\r\n\r\nThis is incorrect.\r\n\r\nIf you are using `HttpClient` to deserialize an object all at once, then your code will not resume until the *entire* response has been read and deserialized. The thread is not blocked during this time.\r\n\r\n> If the result is large, I don't want to consume it until it arrives fully, I want to consume it as it arrives (streaming).\r\n\r\nIn that case, you can use `HttpCompletionOption.ResponseHeadersRead` to complete the initial `GetAsync` operation when only the headers are read. Then you can get the response - as a stream - and read it asynchronously.\r\n\r\n> I cannot hydrate an instance of T until all the bytes required to fully instantiate one instance of T have arrived.\r\n\r\nYes; you would have to read the bytes from the stream into a buffer, and only hydrate the `T` instance when you have enough.\r\n\r\n> if number of bytes required to hydrate single instance of T are more than the chunk then the thread has to wait.\r\n\r\nNo, because each additional read from the stream can be asynchronous. So the thread will not be blocked.","date":"2020-08-01T13:46:29.865Z"}