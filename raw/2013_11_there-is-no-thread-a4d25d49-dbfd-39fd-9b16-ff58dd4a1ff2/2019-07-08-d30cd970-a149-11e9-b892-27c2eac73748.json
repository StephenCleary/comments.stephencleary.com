{"_id":"d30cd970-a149-11e9-b892-27c2eac73748","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"dear  Stephen , in this comments:\r\n> Imagine we have another async method in between UI or web api controller and the async IO operations. Who executes that code?\r\n\r\n>The code resumes on whatever context was captured at the point of the await. The built-in \"context\"s are generally the UI thread or a thread pool thread.â€œ\r\n\r\n\r\nin this post,\r\nhttps://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html\r\n\r\nwe know there is no synchronization-context in asp.net core  any more,\r\n\r\nso there  mast  be a  thread pool thread execute the code ?","date":"2019-07-08T06:30:06.007Z"}