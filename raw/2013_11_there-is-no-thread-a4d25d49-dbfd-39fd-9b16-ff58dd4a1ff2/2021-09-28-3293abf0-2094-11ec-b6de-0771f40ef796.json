{"_id":"3293abf0-2094-11ec-b6de-0771f40ef796","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"eb72d940-1e67-11ec-9450-c35d41a02b84","authorEmailEncrypted":"itJ8zv2XrhYqmohpK4bREBmuldzQyPn1R4buDWQBLGqXGwlT5ojYxN3Q0Bm3HvuEYMrbHqPiGNyS2lGk4tYNv6ZoRuMAejwm6Juwlh75vbYRpwuIQH2sZowF2EXB0l1swo7LOs9BjdQy0FsFyEtzGdcxpYUi1k+QEoz1PDfXfWZ+/sgdc+WUhIA38XgE4/x3LK2b3tDkChC7ZHfzB36TSM+D9VeOmBLyzkFigItkE1teEr8I0zb3qsdxAqezHvz1Hn/NXfIlFfs1PJV7CN8zQY2y4f2kS4pGnzslBmrNlV35rEnaxV6DDLyHof41Z5lv3AGFuYB9xRdbPLmze3eZglD6ChSvPYVg9DGzrYfDD7ukOUoUBH61A1jWA1fWs3nhW8Mpu2WtOJcx/ZxputNTAgpEGqb83ChqJvIC5dTRNICBIOQQvjIQD66TTxIVkSFECZ7e/gXMDzmocFp+zRWGQzVRbh8mWRnvIjdQli4HQmuoJTl2yiqzpPtRTyYsBTlVMTeeF95Mf28Pw73g/uiRuI/a7ziJVrjdz9iWKu4LHth0IfK0mEBMrnBXYEKfh9xcgAbxZuTygOG0ikLu+PRmNy1FzXOXU6mJEWvPAslQgOAapkC0eWJ/wAIA5Wm1EWFWGwix2FL2OBzjuWuKquEzFgr8pKCh77hsdaz1GobsJiM=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"You can check whether a `SynchronizationContext` exists by checking `SynchronizationContext.Current`; it will be `null` if there is none. You can also check whether a `TaskScheduler` exists by checking `TaskScheduler.Current`; it will be the same as `TaskScheduler.Default` if there is none.\r\n\r\nIn UI apps, `SynchronizationContext` is used and queues to a specific UI thread (though there can be multiple `SynchronizationContext` instances that refer to the same UI thread). In ASP.NET pre-Core apps, `SynchronizationContext` is used as a sort of wrapper around the thread pool context; it queues to the thread pool but the context handles other things like ensuring `HttpContext.Current` is set correctly along with the current page culture. ASP.NET Core does not have a `SynchronizationContext`.\r\n\r\nThe `SynchronizationContext` is what is used to schedule the continuation. Contexts generally do not have a queue of their own, but rather queue things elsewhere (e.g., the UI thread queue or the thread pool queue).","date":"2021-09-28T19:42:21.897Z"}