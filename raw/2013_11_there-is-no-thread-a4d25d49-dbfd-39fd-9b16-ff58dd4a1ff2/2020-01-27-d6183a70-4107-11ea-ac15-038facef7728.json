{"_id":"d6183a70-4107-11ea-ac15-038facef7728","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"0bd991e0-1b5c-11e9-ba78-3d3ffff9172b","authorEmailEncrypted":"RORESBi2AboT6qAxO2K9vQvLwt65hQLHCXxS6cO144wSKGSyNt3ue9YaE0hUuMff9czSf3ZlLDhcz8mS+RSFMXo60MiQ6RZSylUZcBhiM0sBzQRYAVufR40mLCN1qPdBaCl9ok6PD43tPYY45E7FSKtb+2JcdPbSKkCZRjpqIDhhFDL3SVgJzC+p05Bqy3MYWiXcjrU5iMWfmk0ldb2f2P5Qc0VS+1wE0xQzAuaGT20RuGiWNm3TdAHQ6pJYXTHq2Sdtglk6fK+hDb1jqbj0oN0jeSFAbtgFDDkZc8G3WRZ4E7HKE1vkeZX4PAcpbp1qN8qpsOSONMHA4/2DuesthQVexusVhpuvMg9XtxrqLCSfiKfdfEluGHi0iGnpBEERc31znifiL9HN7szyDi5Xhi84pJsbDbvZFROzKQ5nVPw8H1l5HlE85WbRQtik53DKWhYxkumii0E3AT8c4RKVuceP6+UcXkGwEXav4CUBjqZ/RSPKRPJHZeBU1lmQMte4g3WsNT8MDDiz/OyoY9qTAIRRQPLyF3WDItklpE3FFrJxirQnwATkillGdo26vlUi1AohSz70SCxDxLADgxN96tPe0qQ6LYuCV1tDc80HhG8ejQCblUP2eqStYQQf+rAXcMZBf6a7DQJYI5AfcRtRSRTsA3jrZuv2rePN6y3Q2oA=","authorEmailMD5":"8e49ab37de99f97ff270632bcbaee49d","authorName":"nowave7","authorUri":"","message":"Hey Stephen,\r\n\r\nFirst off, thanks for this post. It sure did clear up quite a few questions I had regarding this topic.\r\n\r\nBut, there are a few remarks I'd like to make and a few questions I'd like to ask.\r\n1. When you say that there is no thread firing the I/O request, that's not entirely true, since you have at least that original UI thread that initiated the I/O operation in the first place? Of course, your argument a bit further down the line, that there is no new thread being created that will block while executing the request is a whole different statement. Am I understanding this correctly? I think it is important to be as precise as possible here, exactly to avoid any kind of confusion.\r\n2. Now onto something that is still not clear to me.\r\nWhat exactly happens to the UI thread (or the application itself) during the propagation of the I/O request all the way down to the device itself (or to be more precise till the point when the BCL/library returns an incomplete task). I'm assuming it remains unresponsive? Even for no longer than (and I'm guessing here) 10ms?\r\n3. And finally, you say that the BCL has already registered a handle with the I/O Completion Port (IOCP), which will then, in turn, be used to create a background thread on the thread pool in order to serve the incoming APC. Which handle would it be exactly and when was this exactly done?\r\n\r\nThanks in advance!","date":"2020-01-27T13:20:50.633Z"}