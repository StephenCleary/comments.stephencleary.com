{"_id":"8e3c8550-d1dd-11ea-95b9-71eb1bc5e14c","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"","authorEmailEncrypted":"LS4bc1h4neyufsOIxFI9whkn8waYCTW6jxXantUxoC00CkaKsigGyUvy9xsFKb7hOOCruBR1Ot66ocYhrhdYQfkZga+4KyNME0OEfzdZmP3u38K2hXr7sKcoUzXsToUVRTh0cwXJOcUS6RJ4pecAQKra1qNLlCbkjaDLTFSGWmDmBZhSoX07AeAWp7NxpfSqodRE9xAS9g1MmaXqB+FfKP2Isfxmzz91IEjPGv3n5L/NQIrLLgK2/RxzwkgMGgk5+lkIl3ul2cSpN6WkOHtOt647OrxIi76ykeA6nZFx+fQXxPyjCxbVk61MEi1zH3NI++O3J2k1OF8eIi5AdWSk7CC9qXn7bUcpmA5sjfrgCrv8v1D9dRjAu11tPQOApQ178bDkYtvu5KxsRES5icJXdl4kU32XnK46jHxMXl9n1VYtDZ4PyLK21X9dgQR69GQ03835UVknb4pj2gosToyaggB3Nuk5/E5RbessEpAS4y3z/BUlHlKQSO3nu0YC1txg8ZJm9k3API7tt8HCPm45xTcjX3H/LObBOGR4qL71m3Ar+Fqhx5JKZkvk+Ahw3XlUvZAAeJ1JV559+gBpPBnhvECh+pSKCjD3CUTF7Cmv6y7DH8IzNrQyHEKWE3f5TsCcct+1Vh1dBqqJp94qhUDjVkAbIpt8U6R9tHutUFdL3Ok=","authorEmailMD5":"38f94e31ac62e70238db3f90b034896d","authorName":"Moon Fisher","authorUri":"","message":"I have read this article many times over years.  I kind of partially agree with this but mostly disagree.  The main reason is that the notion \"There is no thread\" creates a very good reason for many people to \"not think\".  \r\n\r\nConsider this simple code:\r\n\r\nvar result = await client.GetAsync(\"http://myapiendpoint\");\r\n\r\nUntil you get hold of the 'result' everything is async, and you are right, there is no thread involved.\r\n\r\nBut the problem here is that you get hold of 'result' as soon as the first drop of data arrives (in this case may be a 200 response from server).\r\n\r\nBut the reality is that to actually make use of the actual response and deserialize into your model there is no way anybody can guarantee that the thread will not wait, because the amount of data that is required to deserialize may arrive in multiple chucks.  Hence the waiting thread.","date":"2020-07-29T20:53:29.548Z"}