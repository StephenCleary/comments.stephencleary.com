{"_id":"923aafa7-8632-33b7-8034-5667f92234b8","authorName":"John B","authorEmailEncrypted":"Yer+knKAyXxrZzJp8L3/8SZv+6bM4KfcABdug8Kz1xE2xMMupwbNENiofNvxJCgnEK1myYghXfzJ1jbl8CyZsKo7O3TEcwSkt1fwDT3IXVXjdxy7u814UVpNeUFdflJGomEYKahJnrUgo0SGE8MOV8udHXxmW/FKsm8pNgTlP5/9E6Bp8LA0sjQUoHgu2LIS4AudWQeQgadK1OX09FWqdUb4AUHSAD1UWtm39lEublPB1f6i8LbtGtbmPveWWYoBp9FbtQla2B+5top+3V42isGI1gm7OzkQW7vfPweWa6Bsy904GegFcvL1XbuXgsNDuoEfTGy9h/44gviIb7WvU1dzv1IcEUMEl788Kc1QgYRSilmKVXEAD6ghN3YxCU9iXRxRdtWIU8U8/0Az1/7kJ6rOjLm34x1IcSMwDHv/uK1YnMMGaaLjtXC2A4UjKQMkd0lL09yemyTBnmp5AHU7kfWw0C9IOmuNdWUJoxNJ/+pTz9bZXBtPBkL9bnyTnNNX3glmV66r7HFSwo77DW3gQ/fZxqEa0tV0RmEw1IaIUJJfDtfOauBAXIr8DPyM1zd4AqKbtKfK6t11Yg/MdXl8ZG9BhK7Gy2aJe+AJV+vn14MiBy+HN8e9OwtPxnZTft+yUsPmoArrUXVeQ5ObsNFGDy5/9UALz4PGGo/EIcGUn3w=","authorEmailMD5":"481d70341c9faa90e85885faa2295f47","message":"Really appreciate this article.\r\n\r\nDoes this mean that it's essentially impossible to write something that's truly async in C# alone? In essence, for a method not to block any thread, it must call another async method, which calls another etc that eventually gets down to an OS level call which is inherently asynchronous.\r\n\r\nI know the \"top\" level of those calls are available in C#, but say I were writing against an existing library that blocked. I could kick it into a background thread (which would block), but I can't see that I could somehow magically make the codebase avoid blocking altogether. Am I missing something?","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"","date":"2016-02-01T21:29:56Z","timestamp":1454362196,"authorUserId":"disqus:disqus_BXp0qg0lUk"}