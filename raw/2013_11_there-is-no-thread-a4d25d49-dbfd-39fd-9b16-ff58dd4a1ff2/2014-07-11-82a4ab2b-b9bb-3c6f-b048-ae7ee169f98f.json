{"_id":"82a4ab2b-b9bb-3c6f-b048-ae7ee169f98f","authorName":"Stephen Cleary","authorEmailEncrypted":"MS9EzKcEyYnGNjZguPisJWyt8csDBqSH/l0B0Xne7+hYtk35P0n+RdTDkAEB7xtv5N9TElPaKFJ+w6MSQRWfKaNGQ2XFzdgPDG+kEHOFkZaCEGxEIW32zw+JafUPKSRGB0FxD2dJzJRCjb4wCd4eE6VAGauVRrTrTnVPqwLM7RkcIpi5vzOfWPGlbqlsEdmXyyRmErPf+9NqHEZTahdFofIHZSk1cRqHNkXkMcGX0F/9DUKgQVL7YIYjq3shh4D0g+75hl9o0mB1RB5iy12zngKnfjqKTyIqFzXyAk/JCl40hZs7t+Xaj/OJ5qxjBZ1JlxTLkvByVM8tV3Y/GqhRk0ZlzsrB71WiZzwL8dzExYYYfiQQTxKN5MZwf4EUokhbxkpeT0e6mTvLTXLU/AygJaUMElOSHQiuR7y1JSmB3OOvs+aqMTSM5H1hB1J0eTbEZx+cgbqllq2wXM5L9+GlU+lxAO7uva47ikCAmNTFrkbCF1m7xQE7XgefuV0tWWGLqUoaJKvzdRnm4gTgfN3LuAGqm1dSO0K6TUNBsv7wO2K8W13DTVSJqdjKQJ87Uffmg6Pi0nkbeVp4tlfCww7s7lpnpY+6lQ930TNkoWhGF2jbC7KLILvP4yCydANTyPPFxYZ0yL0OGO+iTZMPH29HlXFT5cuPtMG7YxNlSVE0okc=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Yes; this post is specifically referring to I/O-bound operations. If you have a CPU-bound operation, then that code must run somewhere.\r\n\r\nCPU-bound operations are inherently synchronous. One thread can *pretend* it's asynchronous by offloading it to another thread. E.g., the UI thread can *pretend* the CPU-bound code is asynchronous by wrapping it in Task.Run. From the perspective of the UI thread, it appears to be asynchronous (i.e., it can await the operation). But from the perspective of the other thread (the thread pool thread), it's still synchronous.","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"0f4118e4-3ef4-305a-8b7f-ec2c77155ca3","date":"2014-07-11T13:24:53Z","timestamp":1405085093,"authorUserId":"disqus:stephen_cleary"}