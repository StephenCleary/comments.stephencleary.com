{"_id":"a7563b80-1b54-11e9-ba78-3d3ffff9172b","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"http://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Mike","authorUri":"","message":"I think the author has over-complicated something that is quite simple.  I have been managing IT domains for 20+ years, and we know very well that IT loves cryptic sounding buzz words (so that people think it is all way too sophisticated).  Since ancient time faiths have also used this technique to create an environment of mystery (or even magic!) to create various beliefs.\r\n\r\nAsynchronous is a generic word used in various fields, it does not have a special meaning in Windows, nor should it.  Asynchronous simply means that two entities/things/signals/processes/threads are not in sync or are not finishing on the same clock cycle.\r\n\r\nThreads are really processes (piece of code running) with minor differences.  If you want to execute some function, but not wait for that function to finish, that function will have to execute on a different thread/process.  You can call it mama thread or papa thread or basement thread or whatever - it is a separately scheduled piece of code task-switched by CPU.\r\n\r\nUsing all mumbo-jumbo words and OS specific convoluted abbreviations does not change any of that.  Again, if you want to continue executing some code while letting some other piece of code execute also at the same time, you are using more than one process or thread (does not matter what terminology you use), and it will be task-switched at CPU level.  If you have more than one cpu (core is also just a cpu) in a symmetrical system (as is the case now-a-days) your 2 processes may execute simultaneously.","date":"2019-01-18T19:10:01.568Z"}