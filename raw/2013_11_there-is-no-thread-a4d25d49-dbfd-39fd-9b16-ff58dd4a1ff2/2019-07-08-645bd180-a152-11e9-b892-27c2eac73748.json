{"_id":"645bd180-a152-11e9-b892-27c2eac73748","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"","authorEmailEncrypted":"TED2TiEndVj0G9XyJ/yts/CM529v4+6mI17b5UJIMbGs3VlZv9fEnZPTT712KQYCcUKpTJ5gDob09J6Iq47vwxTOr6dfAT6U1CMsZVKMBcs2k1q7Y65aPsr+E7rlwXUslEAFIU4bLZvH0pcnfWj6xCX7NzyRJxvNSbxpkL5D6fdDEeInISaLosRUzO37F1eT0aRc+SkscYL14pOS4Qfti455WQsoUiYhAuj32ChJrL/WZx+MZHgUYj/1dtHnghrkCv6JeN2jg0Gi/o9gcR5TUsMl+nBPbh8oFjB++Hm6uPSFGcYHOHm2mpInlHQsxnmtVPWfwc9/o5Qb5Zq/08hXb27kDev5aGWbYd0FemHusHvOGHhVkaPBxQasP9NiG7wGbOrfzIWwU7MYmTvG7xHION0dymlxdOMB6orDNm57OFAmo560fqcgl9W6uv898jlqkZn4ZlBLvR24zSJZz+QQROuArcoMP4zi+KNvwgQqkJNDztl8jY+uGTB+loWDC3m8RtRuvRa3Ipdlo7x8rPFoOXbaH4hJHP3WDcJY9/Bl6KOi1MInqdB84F4dPTvtj717qGEoIq7uiUA/vmikTDulmUzknhxI4VqoS1brAF1qLPLJfPLBdrM8zXvttahu44512MC6Kl6d5suQOLu7vA6DacojKzfKL7bgVv54WnCRAGc=","authorEmailMD5":"3bc8b45d450d59282a0da5cced6d70c6","authorName":"cookie404","authorUri":"","message":"dear  Stephen , in this comments:\r\n> Imagine we have another async method in between UI or web api controller and the async IO operations. Who executes that code?\r\n\r\n>The code resumes on whatever context was captured at the point of the await. The built-in \"context\"s are generally the UI thread or a thread pool thread.â€œ\r\n\r\n\r\nin this post,\r\nhttps://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html\r\n\r\nwe know there is no synchronization-context in asp.net core  any more,\r\n\r\nso there  mast  be a  thread pool thread execute the code ?","date":"2019-07-08T07:31:25.871Z"}