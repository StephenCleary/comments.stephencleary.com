{"_id":"f5123730-a593-11ec-911a-df8dcc954f5e","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"","authorEmailEncrypted":"Jo6ZjScBFk2KiFaXBsrOoGcjn2wOiW6za50mNBA8oJcLD2qwD1n7mDQJfE80dCfQDiK2pUUQhrkiyMOGhwCNAUmXFiQj+X73ddesd6XrZHkq30rnqHOi9dywlaN8ukFX6ARVQjqNAcjplKZghq26L30HjmdMNdGrV/heiFnbkAU4XteqI4qa0t8as+a7ci6N8IhuXhikKRGgo1VCsmWdl0eQzWeCvfmpFtWjvoTjJBGJ8qybincOXNKiirX+g1rL1hWBX5EhVH+6TM3/q/oWu69qFAr/AJXIE77okwKPqyW7eKptjV7LVqT19id9XWzNMOJwkc0wgmUPHTxXT1+7LspU4XE4HbquJkhDnEgEGYi0FDyl06kYQ5jA3z7o/t0Kpt2U0gEZfdYL5E8j0f3C4ziR9k8ZH496TaEshfndq2c4//KCuM/ldSduGY6dUkeYeIDlp7yONxb9x2eJcMaEEPR5ogXyqBg7Dp+BXZCnSuv7ouXl5lRBpuRbgBNDztvdZih7MBPUjK+18q4JzbU4zeFxvdbzSNPGnkdIvDkAZatLr9wJ4TlFyMMFx2o96QjcZTue2mSRC5RFDLXEdOXElkXAMXmFm3wwdXrYxIpFmTiKjrNU4SBk86mgVZsouYCA0RxUM+vkM+eUrpdIRuylWj41EcdCXgx2bqJGIxrafMs=","authorEmailMD5":"2f08a8b49638d5c3ef6ce7c5ccc8f0a4","authorName":"James Smyth (SHP)","authorUri":"","message":"I'm going to guess that this is pretty well-known issue, but quick googling is not helping .... I've been playing around with doing Parallel.ForEach(blah, async() => { await somethingAync();} and it is pretty clear that the MaxDegreeOfParallelism is not honored.  I'm guessing that the return of threads to the thread pool is \"confusing\" it.  Which begs the question of how to see how many things are being awaited on in Visual Studio for example; it doesn't seem to show them as threads (which makes some sense). \r\n\r\n(ps. \"confusing\" it in quotes, b/c i'm guessing these patterns are as fundamentally incompatible as some other thing i've seen you write about, eg BackgroundWorkerThread and async/await)\r\n\r\n(pps.  Yes, I was starting from an older app and trying to add async calls into it)","date":"2022-03-17T01:45:43.387Z"}