{"_id":"0bd991e0-1b5c-11e9-ba78-3d3ffff9172b","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"a7563b80-1b54-11e9-ba78-3d3ffff9172b","authorEmailEncrypted":"k58XSbKR2ESt6V5hm+pVNO3iyuCrk0sWmNCgQUIexGC5IEsVe3RdEK7HZgDBNkm65Zn6AmsG4wOeSCqnA4lk2rQHy3B3fWY7C4mk9ALPWRlnJFkuIPCVl/Qh6+E00KgtkrkfMp7pVDpluZ2BcE+NK4mr84wL582xJcnwz3b/pf4JXEtd/8XTJFTf0zQN0eLxTHN1tSDvn/KcNFtURdYfdIyCNIkL44eEoMjoTNTkU+7zEdbh6YSnMEXsvL/oYB3YjrSfX1LF94av40kq65TGeuO6yn5SxvtmKQEz1z0UYXW2Pvfwv/ZbSQhdvtF4cZ9ZzS8peyP75a2rFfVq0oKcOISIW3RS8xp3UwZxFWY/kMGo1G+5GAgLoEaxPaIgVKZteymy58aDrIWy/VjfIpARnI/41ftMR1viYVATmXGDZBQXAnslmpW9sb6bSp8BQfUA52EkyFzzJ7bY3yRfHrvbyY2V4RaNUQHF9e6hxrC3+TrbOm6IhZdmfpMiLcHI0pxQWWuOurpP1p/GuvnDkm2mrpiQTOHSjd7QkQCz2pW9PWoqc4TmRVGoO+f9BKShI0XlVz2xQIAGcmaxSTqOQG7gonINAM0LjVesDzo2l6SzVbZ83s1SQsFMYAdJgXPhcQqOl2REo47i3B+Jwi8FGPtIGTqTQ7zuK696MjtHJj1rmuo=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Hi Mike,\r\n\r\nThanks for your comments. They illustrate why it is difficult for me to explain what I mean when I say \"asynchronous\". In particular, I wrote this blog post specifically to go into detail (on one specific platform) explaining how it's possible to be asynchronous without threads (or processes, or whatever). This is one of the biggest questions people have after reading async intro posts [like this one of mine](https://blog.stephencleary.com/2012/02/async-and-await.html).\r\n\r\n\"Asynchronous\" (as used in the modern sense) does *not* mean \"runs on a different thread\" (or process, or whatever). The modern meaning of \"asynchronous\" is what us old-timers would refer to as \"callbacks\" - just a lot easier to use these days. It's true that asynchronous *used* to be more synonymous with \"parallelism\" or \"multithreading\", but its meaning has shifted over the last decade or so.","date":"2019-01-18T20:02:56.726Z"}