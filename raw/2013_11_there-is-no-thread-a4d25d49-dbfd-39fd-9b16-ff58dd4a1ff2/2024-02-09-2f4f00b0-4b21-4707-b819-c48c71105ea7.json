{"_id":"2f4f00b0-4b21-4707-b819-c48c71105ea7","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"","authorEmailEncrypted":"fhx4dIg6np8ujgiAJb0GnY80Ats2rLBI0CAFWh99z/Vwh08fwXr7ompzz\u002B6lZ2rruobMfkLYbCN7A3vXSavCM9c\u002B5ZXHOlVqXBu/X8MezLp\u002B7KAgR82FHN0ozbfRse5i25XMy3Pztv/8HIvhwTPQxlHdfbif01gaonfee6biT7LywUeWPXlqM2CQmMlWabO/fngfBRhGjHpbFDAxJ8NcdyjL7vLfxuoDQay6tPXwhbWotQa5nzyZOhPVjMAkRdeFz7ZqXZQU64XYxbbcuF\u002B3y/5Flf\u002B6fGe2j78cb0VjRvzqrj9d1U3tfoBcucIL1i1l5g/dYz5vD/b9YjeB6lzYeZfkSVHBf/a/xcvRKe1YXLudkg63ahbCDBYmIgFKt0dGg0ZlYjx0mYuiap\u002BpolGeTc1B\u002BXxoBSSl2xvq1AKUl/QaBmbsD1J1wyxWjzYkfJYvlkD1Wo1aZiheB4jMJN19eJjVe9v3zOSGbh76xkxGc5p3NG8bTYJcgwj\u002BwBXf6OmhEqUQSHD6/ibDQNtuyqDWrQPU/kcL\u002B7D7cZ4/r4ylcw\u002BiKXK96QMIYMlHKJW/Qs3eimLOLpEW6eTINGPyc0BUdvg05tVsAm\u002BIwfuFXv9SJgX8tu\u002BuMFhMfU0\u002BvxnkqDpd0XKp0eup4YEcPG85ra3g2Q9oHUC7hV2EcdYU8xqFhRA=","authorEmailMD5":"6cae7683ff5e265431fbdf63c6faf896","authorName":"Mihai","authorUri":"","message":"Stephen, this is an awesome post! While trying to understand how the UI thread message queue executes the final state of the async automata (*method resume*), it is apparent that IOCP (kernel mode object, responsible with the receiving of IO completion notification and owner of \u0060OVERLLAPED\u0060 structure) pose this UI message queue entry while borrowing an IO thread pool thread, which executes APC doing the invoke of the *method resume*. How this IOCP relates to DPC was unclear to me: does DPC (also marking the IRP complete) initiate the IOCP registration and checking of completion status by the virtue of SW drivers following standard P/Invoke overlapped IO pattern? What initiates ACP queue with the Task structure and when does this happen? Thank you!","date":"2024-02-09T09:30:37.2016386Z"}