{"_id":"9a48d390-30a2-11e9-9886-cb4396af2ad7","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","postUri":"https://blog.stephencleary.com/2013/11/there-is-no-thread.html","replyTo":"402c93a0-309e-11e9-9886-cb4396af2ad7","authorEmailEncrypted":"fvzFj1CONlSZtQAMHvyAW9thXdITvbOBzsaFQ1bXAXO3qNKviVmMsKkReRFOPDaDh0m/HCBziy2MvpAV4KvrqbvUKNmrlrWl8VnuAF1MDkNuCrnJ2MCL/mCglIsYngDojkDt5YI4m21pGJa7Ap/oa0tKMGhA/ojsso8+8ntzK0dv0P9IBdFwsZI8iJf6ix/OWoIvaGLryZtRwNQzUVswI2kpgQfK9PgZjxIPrkONcA/4bBwlsWBjr/Ot98mIdMljVZGaRHcMJedM3h4EPbkU7CF27DZKxlu1P3NuW+u/VdDgFL8fyjQhKeZ3Xdvh86uMsCYJ2N06TyF3ra+bSt1g/3ToXAa8+i8oUTrXJa9iu6Jd5ssfURmGT80zpHR2vaOXJwaogja30ZLi1Q5aGuv0PQ+G8y+mBiLdKeIocxOthuDVMZGhJ20RiWEeezd7W/UOHPT4pRKqMsPU5iRtvLbmPPhkgaR/4gi4PgITTaPR5yK4oJtxN/sJ8wAkDAOONluaILoIKw7gILzW2tke8vLaSdPmTlEqcW+40o/xW3uTmKcMGYMbXALZ+rfsVM5EWfmXY+Nf+NWlbVWNoBCOXPicyxEfFiV7xf9jJeHu96k1kpiAHHoMclM5i4ed2Qo4O3NZAVB3qk8m7Lh3zeCZhQbq4EWm8bgzWWOeWMkBKjULgk4=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Copying my [SO comment](https://stackoverflow.com/questions/54681739/c-sharp-async-await-are-syntactic-sugar-for-the-task-monad) below:\r\n\r\n> I believe `async`/`await` are syntactic sugar for a Future monad, of which `Task` is one example. Compare the `async`/`await` support in F# and Scala; while not exactly the same as `async` in C#, those languages illustrate how `async` can be built on Future monads using functional macros.","date":"2019-02-14T21:50:54.835Z"}