{"_id":"4541174d-bd4d-35eb-a22b-9174c01e2dc0","authorName":"Stephen Cleary","authorEmailEncrypted":"j9P5osk1PErEMufjv71nuL6YgXHjbXmwL+gJbZQQ4Xvn3oW0yuqKQP2xWLJ/cVRWdAaxNO2R6fBe+KiIj0hWb3rgp4eDFewJicy9zvBhyWdTDLgyrvKYhYC6zqjE/nAec60EpqmBagQNhFxqIuD1oG0j3lmc1JwEJVYshLloDDg5C/NpbeBL2D/BNuqoAeazOw0SL9TZm1YqJ1c0n7ZrbGPFz/ARh4D4Xk9vAgWzp0+nUtnUQzj3BXlyGSavR0pqGoO376p0/eZpdXalItBmZefVqOHbn2zqKravXXw1VTfACeRSlh2ElALwcF/IUl1w2Wrb96C5I4tGASrW6xt0jrbBik81t0WYEadLC/ySCANs2vBNCL/6XJf0tjHkamh6jFWUFbYDprCsNlAxPD6Ak4MkZsrgjApW3Ym7/38IT4NhBDTmhSfoLYbYEo1i6mqE6KoCx5kD9v4UoCpUd27j72YluAfJGzsi2Ja/ohIQu28LnEF3g9KVwwb296vkJKx4hm+H6g9/UI4uXJG86+cNkRzMtkV4ubxBvwJGi1yfjRLekF+PYyOKu9N3Y6zJN9ryePBZtUrenN1zxVYjoGMANEITfqw4C0OTVoZ/zPfr1+47e1EoLhgupngtQRyIvCGl6c8L0+sqV7I1QnhucNG4r36OIc0KdH8gh8fRXjkGwWo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes. Since Task in .NET 4.0 was originally developed for parallel processing (with asynchronous as an afterthought), there are built-in mechanisms for this. E.g., Task.Factory.StartNew will queue a synchronous delegate to the thread pool and return a Task that completes when that delegate completes. It wasn't until .NET 4.5 that Task was extended with full asynchronous support that was much easier to use.\r\n\r\nIf a method uses Task.Run for its implementation and returns a task (i.e., with an asynchronous signature), that's what I call \"fake asynchrony\".","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"1a2a9bf7-2708-3682-b3e8-70f0fceb8f15","date":"2017-01-25T13:16:36Z","timestamp":1485350196,"authorUserId":"disqus:stephen_cleary"}