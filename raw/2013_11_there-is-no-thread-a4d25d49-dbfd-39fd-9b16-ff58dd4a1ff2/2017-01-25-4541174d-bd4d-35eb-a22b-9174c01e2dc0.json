{"_id":"4541174d-bd4d-35eb-a22b-9174c01e2dc0","authorName":"Stephen Cleary","authorEmailEncrypted":"cyGeKg8U5jgYv5N+JReodN0LD+ff+GstRCxmzqcnHwjeriVYUoUkHeFHtpirikkbvDGArX5VfWQu0iV4gldhACD96gK9kTwYPqhYrkXZ8ND4hgEYMzE42gwC/rnx4dEs7tRSxNWk7dOo4/dkya3WmvloLduF1MthoLqMI5x4gnHWsdxCl15ie4Mn19kqbgHR7MofrFhWEykjV7qHlRxLYPJ5D5a1THp0SerIT25HOP6fbmKKJJCtGnBeSnlM7WqgZrXo5PqSPbQvHFd7++AbiP1lmJ3t1GhYMpWgsDdv1rM0xtBeGmKifngJI6v/CITAGDjMOXXrda2H5zy0hWHJqDs5AJ/gbE70HPreWL0x4xiUaN2CMQz1OLo7hq+c/25WcW035rtf9tlWllGj3Jzw4zRInUlvWmtqqevkg64pdpBLqWKshjGpyHvxvzr2ZYUcunR0CWSOCtyDtoDxpOb4+TJm20PgY+LX8xEDqobV2SyUCm2tUrw3IUrSSlFRyxKhr/UMILgA9W3lWkGL/KwJ+5nacAHWR4Fme/PfctEW/A41gfZWfUVG57VLopygxs7WmIVLcgUJOBecnDL9Ol2hUyjUUK1i8yzw76xyRI+0fV2FE5czEp5XGwYmA7upBzcGC7Kj8LIuT/cVWGs7YR7e22h22GvK/QGJejUSlJd5CFM=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes. Since Task in .NET 4.0 was originally developed for parallel processing (with asynchronous as an afterthought), there are built-in mechanisms for this. E.g., Task.Factory.StartNew will queue a synchronous delegate to the thread pool and return a Task that completes when that delegate completes. It wasn't until .NET 4.5 that Task was extended with full asynchronous support that was much easier to use.\r\n\r\nIf a method uses Task.Run for its implementation and returns a task (i.e., with an asynchronous signature), that's what I call \"fake asynchrony\".","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"1a2a9bf7-2708-3682-b3e8-70f0fceb8f15","date":"2017-01-25T13:16:36Z","timestamp":1485350196,"authorUserId":"disqus:stephen_cleary"}