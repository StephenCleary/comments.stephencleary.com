{"_id":"4541174d-bd4d-35eb-a22b-9174c01e2dc0","authorName":"Stephen Cleary","authorEmailEncrypted":"pufySKZ6NzEeZeJu7/du0Uw1yoaeJmO+dQrliInrXfv63SKwme2aa6tTlRQZhSUyNRhrCWCBWK9ApCE5dbn6PKm9G8F4gmKXfR2Lufa4h4WCc6MYCZ5KJ9DSDTbsReIPxuQXDmGybzgRZdYent7H9F81qGR7fTqC48qdKAptSl2E7KsWyek3GwTlSBCCVqXne57nwRhA3ss/g+jZVcZN6a3v/bDuyzi5Chb06fIRVuzDxNaaqvzM1ZASMYIahZtHthGw65th+y7lEeODfVoHNICW3KqsfsKPwqkM2XCQlQaaolLX/tVcuJB1ER7J1MgREzi3t0xyAMvsX61iBSzeUp447jq8AxzNRln1SplqEKEMDTbXofjclGZ9spqViR6DsWieqwJ7QtMGmy8fVWfIHRPU7VFHQ21UQ5ZiIPBdPQAyNJ3rRkjGcJ9RL3eaF4PENScGVoimByXHXqN/xOYnMKjMJoeD2JoR9+Z1KRth0BOjT9lWOqCDL7Sd0J9vOVyUMaiceK8hhyIs6ep1PT1OubIWP1h4vKczUvlFCWWzCHRSQPnxLo66LjNxxtvuKmAOyFX+WHaKFTt9BJ+2+yLByY3fKnCGDSI/sK5LtmRFGtsSYLQyg8W+JdquHIHj3ZkSVq2nwIr7K2UcMN1TP23/YR8J8NVHv0+PG20oF/AzbR8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"Yes. Since Task in .NET 4.0 was originally developed for parallel processing (with asynchronous as an afterthought), there are built-in mechanisms for this. E.g., Task.Factory.StartNew will queue a synchronous delegate to the thread pool and return a Task that completes when that delegate completes. It wasn't until .NET 4.5 that Task was extended with full asynchronous support that was much easier to use.\r\n\r\nIf a method uses Task.Run for its implementation and returns a task (i.e., with an asynchronous signature), that's what I call \"fake asynchrony\".","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"1a2a9bf7-2708-3682-b3e8-70f0fceb8f15","date":"2017-01-25T13:16:36Z","timestamp":1485350196}