{"_id":"4541174d-bd4d-35eb-a22b-9174c01e2dc0","authorName":"Stephen Cleary","authorEmailEncrypted":"TF5bNbG3oRTqG6fFVe0oZpSXgzpgDMLHxBmcEaDJ0dDuI9yeIXpXx/UWPNeuVRyBKFMNodNsV2J6htdnSFXiTrRTUJ8kzLyNPdj4M9E9XlT52CUIGRbdMAU8XTgCmpOsAVw0w3Fe9O4z04WUKXPabTQHmO77+PTuw7GJar+cGdzEnE0r1TuIy9wmE8okdepgMNVjnmHlp3GtRz1AW5ZnCIF1XD1pm3BqiLgUxwU0E2heW9QK5ndcQFm6rRQ3zBvimXnMk1b+/gsarrxZSxlAAiCPIfRr5hj8x0KvDgohEME6205nbPE7njon7W/30ojkdgbJ763wTOue35IUB9mzKykkbBDPEhCA2iDZAV5gXDVyZ91qFwU9vs6iqjCFbA1ZHZojL92Z0gFN3IGPLxYlH904a5eIwt0rdocsi/R1bQaw7koQeNWX+dqlx1EiwKRsRnCy7HGFctwm+urXzkOTkmHvZ09NGzCY9SdscUkvF8ipzfvBcd1O5pFjBHP+mUYLuw1p2GiYGNoaEyahPILjQS8RNITmnQdhHUkoCSu/j+Qy1XWxDYb5RY+5sNZIwJrPX+AdsRYyNFpDlwr9BnohKZVORzntACfx+L8ziaCmlQyS6Rz/aN42uhazVDRmw8LgMJKNg3ScdVPdLMitQlYPrirgOZBFpWR7lfCmW0PgeyQ=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Yes. Since Task in .NET 4.0 was originally developed for parallel processing (with asynchronous as an afterthought), there are built-in mechanisms for this. E.g., Task.Factory.StartNew will queue a synchronous delegate to the thread pool and return a Task that completes when that delegate completes. It wasn't until .NET 4.5 that Task was extended with full asynchronous support that was much easier to use.\r\n\r\nIf a method uses Task.Run for its implementation and returns a task (i.e., with an asynchronous signature), that's what I call \"fake asynchrony\".","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"1a2a9bf7-2708-3682-b3e8-70f0fceb8f15","date":"2017-01-25T13:16:36Z","timestamp":1485350196,"authorUserId":"disqus:stephen_cleary"}