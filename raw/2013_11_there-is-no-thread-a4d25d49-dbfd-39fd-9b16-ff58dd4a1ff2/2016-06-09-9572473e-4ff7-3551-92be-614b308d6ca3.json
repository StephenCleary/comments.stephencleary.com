{"_id":"9572473e-4ff7-3551-92be-614b308d6ca3","authorName":"Foo","authorEmailEncrypted":"aQmlpUOeB1l17jDXG4q9T13Y1efGD69OmIiLJ4StNNfq0+pcRHwNB1T8JT42LvXMYNv9rzsYRCpaLM79IN2DG6I8qz/Z/KCdqc35+MNRJDsgPTdh4IJDc08q3ILxLZW04a6L/Ch0h7G9Svfe83fOsG/AmGp/IcAZMm5mdep/uvz2Oj9r6QrmcZM+nVjZY2YiBMiTyeZSPHQoCEDp/PD/LU/EzFYXba5Fllw+VPpm6LyyrcgiVfSLlJwcUHTktinBrlYZBm2obUFS4OEgjUU5Bwfg+g7dBrZc88ptxotdWKWvbKE/u/mgP8qUq9xPR0WNP7yjEeCzlaGnAtpAXSs2Ncv1e9SLEJdYTl4K1+P4lHy22o0yte0STptGLzhz9gZqYHJ+nRZUw0aEwUiWx6qFzAX10AQggpcsSRWT9dJse77u8Bwo4UwosUqnnvB5zj1BNEhVo7Nh1oTe5Hd7xy2TNugqdUg9gR1CRXcwlwrjrmMdJbYr3VUH9sawuamrlxyW1z5HzAx9P5qFecn5UG+UxMVS8mX8TNUhoBPuWghAIwzjy4sQKIOZZkqjiwCbuM1a5iigLYVT+NQboXOuzjJ4kV9MVq0KStVnvFmxKa8oEAPNENFvCd2hJYpPm4uAhripQnpGnXVxCTCzot/2RtFUQ5psIfnpZQRW3efPI3U4hpU=","authorEmailMD5":"2b225b0dd03bd728a5d1e51c031a34a6","message":"There is a thread. There has to be a thread.\r\n\r\nThis was an interesting read, but I think there a few inaccuracies in it.\r\n\r\nFirst, the quote from Windows Internals. It's wrong. The driver chooses how it handles requests. It can ask IoIsOperationSynchronous(Irp) and if it is a synchronous request handle it synchronously. What is true is that when Windows passes the request the the driver it has to be prepared to receive STATUS_PENDING (even for synchronous requests).\r\n\r\nSecond, a thread is needed to perform the special kernel APC which copies data back to the user memory (assuming METHOD_BUFFERED). This is either the thread that performed the request (if you don't use IOCP), or any of the threads associated with the IOCP if the request is associated with an IOCP. Note that if the request isn't associated with an IOCP, the completion must happen in the originating thread, and if that thread is terminated before completion the I/O is canceled.\r\n\r\nI'm willing to stipulate that in .NET IOCPs are used, but that's just lucky. If it weren't for that, you wouldn't be able to terminate a thread that made an asynchronous I/O request before it completes and still have it completed successfully. So threads matter.\r\n\r\nI get that your point is that there needn't be an EXTRA thread for every asynchronous I/O operation, but some thread is needed - those thread that you say were borrowed had to exist so they could be borrowed...\r\n\r\nAdditionally, there certainly was a \"thread that was blocked, just waiting for that request to complete.\" If there' was nothing to do the IOCP threads were blocked. They weren't waiting ONLY for this specific I/O, but they were waiting ALSO for the completion of this I/O operation.\r\n\r\nIoIsOperationSynchronous: [https://msdn.microsoft.com/en-us/library/windows/hardware/ff548443(v=vs.85).aspx](https://msdn.microsoft.com/en-us/library/windows/hardware/ff548443(v=vs.85).aspx)","postId":"2013_11_there-is-no-thread-a4d25d49-dbfd-39fd-9b16-ff58dd4a1ff2","replyTo":"","date":"2016-06-09T23:27:11Z","timestamp":1465514831,"authorUserId":""}