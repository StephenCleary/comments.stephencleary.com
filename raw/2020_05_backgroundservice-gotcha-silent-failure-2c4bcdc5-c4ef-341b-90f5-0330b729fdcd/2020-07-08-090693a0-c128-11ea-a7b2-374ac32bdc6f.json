{"_id":"090693a0-c128-11ea-a7b2-374ac32bdc6f","postId":"2020_05_backgroundservice-gotcha-silent-failure-2c4bcdc5-c4ef-341b-90f5-0330b729fdcd","postUri":"https://blog.stephencleary.com/2020/05/backgroundservice-gotcha-silent-failure.html","replyTo":"","authorEmailEncrypted":"cp6MQniZg49W0ovZLw/yOphduexORzsTnvrJQDAEBUP6DXpJyoaTYK5DLWWjubDQ1Gh5jshafYOOOQfCczPTevxQlHg8MCJm2cx4EyQ7VeYVFp7euMTJZ/4wvB1IZ4xZi/Sr4pbNNJITGFzCRv/B8DlajF0XNpDCTHpkkw6vWynyYyHfQhaGfjNoNenGzJ3UxQWcoOMA+ui0ZePHLyaqIPaC0xNd3p7ZGgMDlOU7X145XlcIwnY7pOuVGBDWBJY1ObYv4AnZEpEq8pZxdEpoCFDV6v3VwqNvufKpsm16bdfOaHhZEwoj5rWalaquhT0ldwL+ybtob2EiJuPsLaAKYXdm3h+C7+ri0+WKTerc1mT/X8w9VLDhyBofNcY0e8eXu1bh1n+5l8syC6bRxcJF7tVhuS2L86lcav9gu6tgCZvhsxhqKOGKmJWZhEUlItN3aT6T8IGVM0cJbZyw15TMrESS2Ud40pSn553fvyGBdQzVbCnKv7CD3kCGg/km+/cKZl707ntB+X5hc4C2fwfVqdsgVFn4w3TRWTuluvKDuIaL9U6iAKxnlQDl3iXWODlsuatb8wM4uCfjhvB/48zhkn410cl1DsOZnfjE5vkEtBmORooT7ysGduc+wBgG6HsU9bJOTssAYejJKELZT5hygHZOw1yOuYChsO9pKqjwSGY=","authorEmailMD5":"67cca6565ce823a15b01bf82b213b967","authorName":"Enrico Massone","authorUri":"","message":"Hi Stephen,\r\n\r\nthanks for the great material provided in this blog. \r\n\r\nJust a curiosity about the top level exception handling  pattern that you suggest in this blog post. \r\n\r\nI noticed that you are basically catching all the possible exceptions raised by the inner implementation of the background service. \r\n\r\nConsidering that the background service should be designed to listen to cancellation requests (by propagating to the called methods the passed in cancellation token) and considering also that in .NET the cancellation pattern is exception based, wouldn't be better to catch all the exceptions but OperationCanceledException ? \r\n\r\nThe OperationCanceledException does not represent a real error inside the business of your background worker, instead it is an exception raised \"by design\" when the host requires the cancellation of the running background service by calling Cancel() on the provided cancellation token. \r\n\r\nFor this reason we should probably ignore OperationCanceledException in our top level error handling strategy.\r\n\r\nWhat do you think about this ?\r\n\r\nThanks !\r\n\r\nEnrico","date":"2020-07-08T14:33:48.524Z"}