{"_id":"b17d6302-4979-4c7f-a85c-ebecfa47c0c8","postId":"2020_05_backgroundservice-gotcha-silent-failure-2c4bcdc5-c4ef-341b-90f5-0330b729fdcd","postUri":"https://blog.stephencleary.com/2020/05/backgroundservice-gotcha-silent-failure.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Mike","authorUri":"","message":"Thanks for the excellent article, yet again!\n\nThe exception handler will catch all exceptions, including \u0060OperationCanceledException\u0060 which is thrown when the app receives a \u0060SIGINT\u0060 (CTRL\u002BC) and which is thus valid. So when stopping the app, it will log \u0022Fatal error\u0022 which is incorrect.\n\nA better approach may be to exclude that exception:\n\n\u0060\u0060\u0060cs\ncatch (OperationCanceledException) when (stoppingToken.IsCancellationRequested)\n{\n  _logger.LogInformation(\u0022Application shutdown requested, stopping service...\u0022);\n  return;\n}\ncatch (Exception ex) when (False(() =\u003E _logger.LogCritical(ex, \u0022Fatal error\u0022)))\n{\n  throw;\n}\n\u0060\u0060\u0060\n\nWhat do you think?","date":"2023-10-04T07:04:31.2705154Z"}