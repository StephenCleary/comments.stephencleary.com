{"_id":"91c9cdeb-e508-3185-b2b9-4d14f0d7fc30","authorName":"Stephen Cleary","authorEmailEncrypted":"Du1vKZLjndN49k8RyLgz/K4lwsUtHVyq4tQABdUKLvz4Wo8bxdRN2hFgu2zKV2363VF/ZtOz+UpB2ZikXw6CHVdJNGVb8pvLe7Td2of8iXIi9k4X2PLMqlDxbql3nHEBr8LF4+xN/DHZVU6wrUSoUKIzy2LPhDZ2Jnz9KVPwWxBqItfbuGeXPaEUuMYBeEz1KOYL7a/HxCqvEd3P7LSDswlKRSYTueEyFIBsX8z77eVATjlRZf8XjjxQmxQVJTR5SiY3Y7/MkcuYPQ34VYce1bqFlHqVzOU6GBu5ImtCY3cWpDf+QV1Lzxer0ZY2G9oiMm4JsHgwVGrMqiL900RITq9Y4qqsIruJE59iCVcqeoMzJMscvGxn4MCfHqXw+Putr7UrdlpjxDj/u7M/wfQSJ5e1rT9BKisBNbxiHrNsqkWvgWeEsVAWxXyqLcTYmf1B3/sBm9fqNYiFfE9EcGsMV3v3sEAXg09NhyY9oTN8oJ6U7pWuLJynQLwZjlPlmedA5aTmB/Xfpray8KCb3HkbvwlRprTeSbg92fDTPLrOqqTQHhOUtrhJCZjqznSUkApZIoQwX/wLZIQyk3r5riS3pNvdivgSsJ/a1V7/WeIJx9Ldfcpp0pdulFWPnGsXz04BhzvJreMtSZywD85wstopIisHKBpYA0YoNnDjny/WEGk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Task.Run does return a Task, which represents the delegate you pass to it. So when we await the Task returned by Task.Run, we are (asynchronously) waiting for that delegate to run to completion. Any code after that await will run after the delegate has completed.  \r\n\r\nTask.Run does put its delegate on the thread pool, so yes, in this example a thread pool thread will sleep. This is similar to (but not exactly like) the behavior of BackgroundWorker, which creates its own dedicated thread.","postId":"2013_05_taskrun-vs-backgroundworker-round-1-b69afd34-80d1-3c0f-9885-0555b3d7c797","replyTo":"","date":"2013-05-13T08:11:57Z","timestamp":1368432717,"authorUserId":""}