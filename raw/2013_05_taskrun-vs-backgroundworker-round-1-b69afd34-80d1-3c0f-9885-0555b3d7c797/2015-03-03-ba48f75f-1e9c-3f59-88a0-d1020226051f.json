{"_id":"ba48f75f-1e9c-3f59-88a0-d1020226051f","authorName":"Stephen Cleary","authorEmailEncrypted":"kLXbzftjAtmMe76jyq7CYEQXKGm1q2cuR1p6RDiq/DrfrTrHctLJ2qo/0W+VMpP1YleGLm7N8a03uWcBVitHdVL1Q3cTv3kdCFyUxbuG+FBuHw56E8IiLvl9/ANOMvhakwv6h8dS1R8zU9hvxir+aBX4npRl/isiOG+A7/UI44pQ3Le5kzO07UDpMfd09AcGILpTcf3sHhBQycORYMgJdVdUAviEBbLIs2HogHYtRjP1jz/6T93eTEKW3DY4opCdvgeWdVGvRrnRSwWv+fKQDBEpMbY/IPJOD/iVht3u/KjvWL3WzXurvvkNSWAP3j+kFtMQeefI9v5MfTbqcOs2ZZFbGHHW9dlMpU5dJ2P0J8uVz41he062QoSCpgO4XexT7FVCoXVwt+FXhJOXArni8qzeiKkWfxfuUYZJiDF9lk+vtttSKqIecn6PXmARt0tgS1uaiU7KLH0ou4Vk+jfI38B6gXO2aPVKt6JK358EiDzhQbn3PRVQcQLk/rx6GD6pB0ZfJvkA/s3v4gonopfZ0PvWMPXtG1lRneUaeyS50SoC4NuR4WRMnOUoXKWWkqqXNgMTBqT9rfmdOZJPaDhaAEiTDypKE/BZvGGnEDlYGOqiUUx2nS2DEohHW1O5F+ivqF3gC6f4bMEWxn45huWmi+eRnX5Aji8a6MiZBeqJCP4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Not exactly. The term \"asynchronous\" implies a freeing up of the current thread.\r\n\r\nSo, you *can* call BGW \"asynchronous\" from the perspective of another thread (i.e., the UI thread). It's this definition of \"asynchronous\" that MSDN uses in its older \"Asynchronous Programming Using Delegates\" documentation. However, this usage of the term \"asynchronous\" is actually for executing *synchronous* work on another thread.\r\n\r\nThere's also another type of work, what I call \"truly asynchronous\" (and on my blog, whenever you see the term \"asynchronous\", I'm referring to *true* asynchronous work). This definition of \"asynchronous\" also frees up the current thread, but it does so *without blocking another thread* ([http://blog.stephencleary.com/2013/11/there-is-no-thread.html)](http://blog.stephencleary.com/2013/11/there-is-no-thread.html)). It's this definition of \"asynchronous\" that MSDN uses in its newer \"Asynchronous Programming Patterns\" documentation.\r\n\r\nBGW cannot handle truly asynchronous work.","postId":"2013_05_taskrun-vs-backgroundworker-round-1-b69afd34-80d1-3c0f-9885-0555b3d7c797","replyTo":"644763fe-2607-38f1-9868-cf75a3e5d7e0","date":"2015-03-03T13:35:52Z","timestamp":1425389752,"authorUserId":"disqus:stephen_cleary"}