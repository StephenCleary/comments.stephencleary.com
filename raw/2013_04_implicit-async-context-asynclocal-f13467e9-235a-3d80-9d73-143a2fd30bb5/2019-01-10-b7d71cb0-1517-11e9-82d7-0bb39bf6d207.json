{"_id":"b7d71cb0-1517-11e9-82d7-0bb39bf6d207","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","postUri":"https://blog.stephencleary.com/2013/04/implicit-async-context-asynclocal.html","replyTo":"","authorEmailEncrypted":"n8NA/hgR8l+giWefVNwCCdfP157UpuE1QArk2pBaxyLmUrUGBQYiMebOS4XGmFrSBoDDvVFjbOiX6NTFeqWC9b71qZNpJ5DsCaAFu1cQsUII+xVBkSW5Mi4R/hlZoweHDAnbZ1nFtsPlrmxI65gmstMmab7vPN/lo5KtqIKzhbSrQDfjWSy1s4V1kRK1/mh9p3bYZaR9Pe58DcS98tvyahUx6PTgkczA0ccwBPwh5BY9fxkr1LUe0FKNESIew7VGzoePLTyAiCgtY0I6jszInJ86nKsT9+9aJPMtWCWEwLBpmhlenAyvZoCbdJsULzxGisKSkRTLi6gXPGdT6e9ZfCJ94R6l4tq8jIi7M8B4/0M7mGu8qJ7pJYI6uU88AZoj/77VNMKRvP7sJng2X1lK3IQwqxRrMl+b1Z78+nlKa2i0LVsZzeEsM7vBtKPaYBAvNzrfy0OaC8YKVrjJwajIDBot3t8VDYzbuJidQiFfA/WnWv7/PzuVrk72ayi3IshccRmnXujj3ZboD3llIvVeckhSPfWVJfu6ZNurExyUXPZU4RZVXtR7Lu9zuLjG6orEtuOabyDh0uql4qS1yvmCHPaUQP9moow53JSsTl2cJ7FaHcji5n8JfqKzD3O/GFWoYmsf56/xugJBOLnQHBFOqrGlBwcPNx3vlJFSCJOiCR4=","authorEmailMD5":"1f5c48763ae2b49cf16d86d4a99ba878","authorName":"Manaus Lavens","authorUri":"","message":"Hi Stephen,\r\n\r\nThanks for your interesting post. \r\nI am having an issue where I am using a concurrent dictionary stored in the logical call context that keeps track of my registered instances.\r\n\r\nFor each unit test, ( I am using XUnit), I register my instances in this concurrent dictionary. The code uses tasks, but no async/await. \r\n\r\nApparently, 1 out of 10 times, it seems my dictionary loses some registered instances. (The act part does not seem to find the previously registered instance in the arragnge part).\r\n\r\nDo you have an idea why this is occuring? You state that you may only store immutable data, could this be the reason as my concurrent dictionary is not immutable?\r\n\r\nThanks a lot!","date":"2019-01-10T20:38:42.948Z"}