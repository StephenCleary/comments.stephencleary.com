{"_id":"1ebcfda6-3da6-471a-afb2-db28dbd09196","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","postUri":"https://blog.stephencleary.com/2013/04/implicit-async-context-asynclocal.html","replyTo":"08ca8437-1a79-4fd5-8899-f73b9066be0c","authorEmailEncrypted":"YtA2Af0HMeMlPZzcIO\u002BJ7w/AHTSVvuH\u002BRdjaf6F59J83z9Ld3d7aUbtLJcDMiJ1qwAq0Xr3NwX31Zni3YPppt0HpYQyeJoVTlSmwTuSKFGgWioNsgu5W86zdY4EconKfwRBgMLPBrOEB9CejqkRB\u002BO4KPMCOxWXTwiEG0\u002BRgoKOJZCuNOlrSrRFYJbKQkT4ZMYVH6pYRPrQWwfwca9Jp9JKRBOjyCIGD4T64CPbgySOqRl67ThBN6CegL5vdgb9h9HwuDBmlFfHtA8Zg/DYvsc9JLMcMg1Z8iymV35i1UQ1DxjFihwc5UfQsezCX8PQVSLtIsjvLuyevtQGNPckGIP\u002BZ1RA16\u002B4LxnPwqdTEbFRebsxD9QSfGAm221psbEoz5SjwxeDyV15Pz0kYhLxxCEo5eqfG0urv9zkApx7\u002BB/mSEwJlX495180oViwqiaoAMQvg2GFf62L7dWAGbnKGnelIGNQQEOgjvUPYri987RiHUZJ0jhrgQIXnoMroSXUZj0wbiMHnJLiEnYwbFf3kaBSbIc8mNOz1IPgX9u2Q\u002BgH7ePSYxafXg7V2DsLqL\u002BMY7lRHA5c5NCsGhnDwK\u002B3FOEdvdGYb47HRztH8KC1ctyjrR/drIRC\u002BuyOLEuzGADlfhuDewFmQmkyznC0nIUJuUiffU/\u002B7aV/oTMqI/fJr7jE=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Hello Jesse! So sorry for my delayed reply...\n\nHere\u0027s the common problem with exceptions: what we *want* to log is whatever context is current *at the time the exception is originally thrown*, but that is usually different than what is current *at the time the exception is logged*. Exception logging is usually very early in the stack of operations. This is true for all apps, including ASP.NET.\n\nI have a generic solution [here](https://github.com/StephenCleary/Logging), which uses \u0060ILogger\u0060 and ASP.NET Core. Unfortunately - due to the limitations of Microsoft\u0027s logging abstraction - it requires a call to \u0060BeginCapturedExceptionLoggingScopes\u0060 at the point any exception is logged. This library works by installing a logger provider (just to track the logging scopes), hooking into \u0060FirstChanceException\u0060 to capture scopes at the time exceptions are thrown, and using ephemerons to attach that scope data to the exception object itself.","date":"2023-01-31T22:50:59.9185656Z"}