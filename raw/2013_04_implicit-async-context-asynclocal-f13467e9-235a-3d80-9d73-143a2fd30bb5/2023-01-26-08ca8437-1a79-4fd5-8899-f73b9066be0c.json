{"_id":"08ca8437-1a79-4fd5-8899-f73b9066be0c","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","postUri":"https://blog.stephencleary.com/2013/04/implicit-async-context-asynclocal.html","replyTo":"f31382fe-9644-428a-beb9-e6921bf2aa8d","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Jesse","authorUri":"","message":"I think the issue is in my implementation I\u0027m setting the AsyncLocal or LogicalSetData value whenever the first log entry is written during the request. This can be well down the call stack but the exception handling is occurring farther up. But the data is only copied (or \u0022flows\u0022) down through the ExecutionContexts, not back up, right? So I would have to initialize it at the beginning of the request or use something that already is like HttpContext.Current.Items.","date":"2023-01-26T19:28:04.9666213Z"}