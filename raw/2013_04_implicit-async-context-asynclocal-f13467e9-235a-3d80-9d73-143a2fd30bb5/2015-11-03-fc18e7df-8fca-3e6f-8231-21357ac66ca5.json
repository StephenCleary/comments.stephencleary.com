{"_id":"fc18e7df-8fca-3e6f-8231-21357ac66ca5","authorName":"Stephen Cleary","authorEmailEncrypted":"EispLwRd+oeROlE6zBInwvntOOEP50fC9IueXdJQYnqfqWKr6+t/K9nAnQdjdgIL0v0fSu9wGd7ztv9/SHWOeO409WPbqHqlLl5GXL/oiWV0PStTLGX906wGzSpSVedJedcxVDRFFE6NDRAFqerFzF7XgtuF/dLyHHv+AltVyU3A3Jj7dvAmCXOIaZZ9WRReOyudCuUqRGRhhhfCKc3DD+Ccc1R3GM+yODPWz69wCfETar1caYwrzYSNWntrv6LYQ2xZaKdzBrlYkVbEKHlq6jHwBaSiGiU0gclOqbERSbpkuLHNp/o6TjZK1Fx3sI1aNYne4o+Pywdp0EOcWwytZhlSo7dUiualoPPQzGvdm4m2p0mITXBdB1rxuddPzhVY6mDpFEDyqtjQMHnolYp14YXCrycmGP/1+zR1UB1nx/dzrf7v0efS17VC6QDkJLMngOzbJOKmgkxTmOqDJPBJQOUmczhFgkF3UA7/MDnkBXKNk5WgvdhJemxVSzDKe3Q4cXX67ooCKuUkz/lwvNGvUEwpuRTOJXKgZ6Q251iPsypMDciN+4zJVPc7hYzj0dNC2R+hHT03fYY+/D8hf6oT1CrhOrHF8/IBQjy9iWRdMtMt03nAIfa1jQPxhSjuetQjLTUvbufLlO3A9fFONjm8mHsWbfGVFVJLe9VH9En1aVA=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes. There's a difference between inheritance and copy-on-write.\r\n\r\nThe logical call context is always inherited across threads (this is what makes it the *logical* call context; the regular \"illogical\" call context does not cross threads). Technically, the data is shallow-copied. This happens every time the flow crosses threads.\r\n\r\nThis is different than copy-on-write behavior. With copy-on-write, every time the thread enters a method that cares about the call context (right now, this is just async methods), the copy-on-write flag is set. Then, *if* the call context is written to, then the data is shallow-copied. This is important for asynchronous fork/join scenarios, where it's quite possible that a single thread will handle every step of the process, but there are multiple asynchronous operations making progress concurrently.","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","replyTo":"85cf54bc-ed72-3df2-8e64-187b258d2c29","date":"2015-11-03T18:00:55Z","timestamp":1446573655,"authorUserId":"disqus:stephen_cleary"}