{"_id":"fc18e7df-8fca-3e6f-8231-21357ac66ca5","authorName":"Stephen Cleary","authorEmailEncrypted":"U3B5F+4s0qEJtuf3PCpKS7Yn/BFYrrYk/IxlfTwLyJrZ3Hmql+bvV8CGtb4rBpm//gPzW6yyxhNTDmOrvub4XVBO/kxi510y/bOknHD4owIsScmiGfhJdjWEZS8JrOsDa3Du/mVbstrJbWolmOW81a9ipFxbJzaZowX7GMThu0a6+bLkSdpjGR27N7dLK2fuSyU94wdoxqgWK1RPXvBQkdPWO0jaHkM5LvZ4l46nXkKWnndQ1S7tw60bnvzpkdnBuHm6Ay/R3apRtDmsL787vtlZZc6Ex3rCFVzyetlBA68uxkpyx7M1urdx0Bzf8l1IfZPo53h3Hk0/0hSzh9sC8CUbni1MMj5/L9UnfPJjZMeFF5d9j6NuKTCU5LI3ee4RhifWr6do7s/lVDmk9Eve24vaJiOm4jyYfljQyoDmlzprZ2dimj9u+C0ohR8+gT59cWyqZVCjqLRegyo1XOBCsMGMhehM2QHe81qZ1IuIlUYokN1qSSpOaZO4jXPJ2w2/02OBD+a5qe60VTbD7iDiSnnWCSyrkCEkcMi4Np3JcXQ9T+49OUjds9qp6k23jRVUdOUe/o/CabBeO33AzwgdzfQlCpWfDleGQwtrHkVowA9HiabqLDidUDrAOHKlN66aRqbmoR+T1z4Drd8wIRC/TAaLU0/FTqov/xLFsoTVzig=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Yes. There's a difference between inheritance and copy-on-write.\r\n\r\nThe logical call context is always inherited across threads (this is what makes it the *logical* call context; the regular \"illogical\" call context does not cross threads). Technically, the data is shallow-copied. This happens every time the flow crosses threads.\r\n\r\nThis is different than copy-on-write behavior. With copy-on-write, every time the thread enters a method that cares about the call context (right now, this is just async methods), the copy-on-write flag is set. Then, *if* the call context is written to, then the data is shallow-copied. This is important for asynchronous fork/join scenarios, where it's quite possible that a single thread will handle every step of the process, but there are multiple asynchronous operations making progress concurrently.","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","replyTo":"85cf54bc-ed72-3df2-8e64-187b258d2c29","date":"2015-11-03T18:00:55Z","timestamp":1446573655,"authorUserId":"disqus:stephen_cleary"}