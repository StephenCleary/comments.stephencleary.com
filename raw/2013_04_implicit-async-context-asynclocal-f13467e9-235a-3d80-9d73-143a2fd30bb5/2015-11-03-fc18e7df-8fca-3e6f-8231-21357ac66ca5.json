{"_id":"fc18e7df-8fca-3e6f-8231-21357ac66ca5","authorName":"Stephen Cleary","authorEmailEncrypted":"eWqHrG6jLX1pX33c6oTx2ByDfu3ave75vs2LzcW7Dgbt5r5QnVRGNRWmIfOYu8gx5K7CCZ6DSoFFgekzCYMgfyBWN4hvNXvEYECDRqohl92AHUr61Pq94BR1z04VuZjuHUZAdEAnUXUtSClp4hsDS6SPk1tb0gdCzbMOo/9KlrHdHUxZPaAD+1IEGW6cM/vmYC/ytJPVIKKxFvUroZ0LRU3jBiUOW91MNiPwlIvKY2mRZaJ+w1Wex9CzElqxy9df7efIJ708A4Y/eBBQCL5yz1N7wAA6WtH/hE0sfF4sKJJgS7XsfPALJXVbuRfsd2x/GDk4VcF5qFeKgVlJMfLjSDPSL4+i3svK3e3pY5et23Ts2LEMW02+qw2LVEOX/LRhFdliQH18Bw5/eP0WKKDaPh2KtVYBck9Lyk3JOB3bdaMyUrKuOrO9J2+qhzMOVJ1e68Av1sVTvjFfw3dn2iMsh4kldjVdTJfw3AYt19ZIzi7p/2DyJofRwXQFiaqKQsbn3l5if6RKxgNNsrOGhPjjmKa7M5iM5gC3L9XjSjUDe3t3dKYanCkj5AQOUuTdhkGHgpC2y8QuvIO9xwL/B7tUDqiS2MNgoDJjoUnaS1JAx/pzC7TWKlL+5RGnSkKI0hTF/ClZ6c1Rl8wSdd+VDyAYRUBd1meUh8qfAhSO4jE7u0M=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes. There's a difference between inheritance and copy-on-write.\r\n\r\nThe logical call context is always inherited across threads (this is what makes it the *logical* call context; the regular \"illogical\" call context does not cross threads). Technically, the data is shallow-copied. This happens every time the flow crosses threads.\r\n\r\nThis is different than copy-on-write behavior. With copy-on-write, every time the thread enters a method that cares about the call context (right now, this is just async methods), the copy-on-write flag is set. Then, *if* the call context is written to, then the data is shallow-copied. This is important for asynchronous fork/join scenarios, where it's quite possible that a single thread will handle every step of the process, but there are multiple asynchronous operations making progress concurrently.","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","replyTo":"85cf54bc-ed72-3df2-8e64-187b258d2c29","date":"2015-11-03T18:00:55Z","timestamp":1446573655,"authorUserId":"disqus:stephen_cleary"}