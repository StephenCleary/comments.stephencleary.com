{"_id":"76fc4fbc-9698-3d58-acf4-72a9b5ef3baa","authorName":"Stephen Cleary","authorEmailEncrypted":"oREp5I2Rp6uOgJN8+iwZocQUkgqLVyEkv16RNK7QJ2BXlILH0KpFsgCfGTM0ltS2y0ocBdXdSQhJdfkd4s3TeO4YUZGkMIVhtxOEJAuVg5rIKKnF7vruarrXbx7iCzrd2XIlvzpltJlT63Z+kwK38moZa/IoYhUR6AV+xcHNq+mwsGsXHL6fTvSUXTTslUZQiouySuXMguAItgzB6uKoMsZNbBBC+xstAbgpqHW93uxfVMr2Wqu2lhdu/PgNHGBTyv5eQgzdgxIYfV4LFRFfz8Ctt6FDj0eSBx589TdU61TcMCAcaxufrGqsktZV2OEYkhqaUFGiAgJHs0JEcDqqsbcK0/UEUcM3DDZf1ZwgNMS7FJmolGhrzjPpK/L1Kt7SoTVxqJKYjYuECSLYGeZy7+oyaDdCWKSgQc1E/r1oGKyMMLWG/4M/n8GnlZV69tQwIT6nzgr4fprduBkN/NDW5O4nNtaHPH2qy/MMlpZq9vaF6JMFsYm+UiEd+kaGoEG6WdkHdxcSPNNrSv0g7B82++jDu8na5PHPZf7uGp4ixBINWTHVuktQvA+RIlpYq1vhpr/5cBJTEjW7qlIJUNtPGeL9tALgm+GwPzCigAlraP4wDl62oY4XfqMKMKW2p2drrYhfm5QY+rxVudOPinYNEnVdzQgMRBW+5pulOCzWZpM=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://www.blogger.com/profile/13192873941258824056","authorUserId":"","authorFallbackAvatar":"","message":"No; this actually happens even in single-threaded situations. Async allows you to do a fork/join (e.g., Task.WhenAll) on a single thread - what I call \"single-threaded concurrency.\" In this case the mutable objects will not behave properly because they're shared between the logical call stacks of the various concurrent methods.","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","replyTo":"","date":"2013-10-03T07:52:39Z","timestamp":1380786759}