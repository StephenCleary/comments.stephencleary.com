{"_id":"76fc4fbc-9698-3d58-acf4-72a9b5ef3baa","authorName":"Stephen Cleary","authorEmailEncrypted":"mOVDvo6O4FKMT1usyzMzJRCor90j4udxM7e8uKv9cbc2IdyqYP8+2fCbdGInVqqh43PTw2VwhhiqG0Hd9pEg7BJ9bP+udONM7U7yGCNHfnom8MnkRPHCESXpWi+3zEjaNO+6NF1ohgpztwpb9s4rykPBCzfpXrwnNsv8C3Lz/oewQmm5FzG1MxszBb/ug+z1U/kZSe+r35NvSC72+3FK2zagdOqcLaW6XnYcOTe7SAqEcbURMLrN4BAkXVgGpBC08Rl2ylof0Z0ExAzQ4R5ua2EDIRmMs7y7WPtBfQ9sphzHNmuEOjlG3zUenP9DDe1wKe1y2zlYEIDj5TKty54WkBDMGZDy5OeTsyOwADoPtyWN0yNQoJE9vY8/s8jy22sXi4m2X4BuVGIVCi6vdhOuxTRTUj3DabgOameiM5HJVmFyhQp4Uu0q2ncxxUXil4j2Ug2PgdYRq/KTWXwrKNqihOgurnDQLw8FuDGoW2F9RkXmeuijLKF6mLsdpxrCR09P8nHtz1ay5mwYWd7OsQqUvLVPdyKNht8x/a5KYDMvR31xPkrH3yDSazXgn41XTVCqHdV35CDFeI7AdvIWRejJE4kCjxwkQAoJTKZRswxaUuZCtb/BWHyWRSM7Q4JTL8TqkGqpkKC7CZHAwjUleDwQMD1ZyCAOkmLpThbhJA6kz4U=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No; this actually happens even in single-threaded situations. Async allows you to do a fork/join (e.g., Task.WhenAll) on a single thread - what I call \"single-threaded concurrency.\" In this case the mutable objects will not behave properly because they're shared between the logical call stacks of the various concurrent methods.","postId":"2013_04_implicit-async-context-asynclocal-f13467e9-235a-3d80-9d73-143a2fd30bb5","replyTo":"","date":"2013-10-03T07:52:39Z","timestamp":1380786759,"authorUserId":""}