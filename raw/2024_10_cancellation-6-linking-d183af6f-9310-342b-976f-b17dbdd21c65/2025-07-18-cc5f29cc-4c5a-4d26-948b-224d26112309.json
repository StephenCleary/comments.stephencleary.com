{"_id":"cc5f29cc-4c5a-4d26-948b-224d26112309","postId":"2024_10_cancellation-6-linking-d183af6f-9310-342b-976f-b17dbdd21c65","postUri":"https://blog.stephencleary.com/2024/10/cancellation-6-linking.html","replyTo":"2dfee15f-2aee-42fc-a725-df6075ea8a70","authorEmailEncrypted":"dURjv9ob/N\u002Baz8MaCmUhzTy3ajdUljY4qKK9yqcYkaG\u002Bc98kfJZeabqiDA35Bc6WKijTlIQ33VlUqDgEAFF4FdGn1vMRwbWc6woc5DFVh8xUFqcozWsR2W2M4e0Wavkffbf1zkvap09guLSJQ6ZfFl3Ev4JyqfBVkLQUkEcJerb71yCV4kPO9t0iY0ToMGSTbWUR1pXw3CrOME1pQp0e5rW8R5qgQ2bksrgcOprun0Ot3ATrbry4PWFAR04K5ak5\u002BkpnBiyJKXmGMLTRnyrnUXkGf3AKVJl7dduowCsz2/YDtT59lszuxDem5l4okEImyKZ7wGVNmKe/FUpyNAQOws/oekAA\u002BqlAAhZNSxXIJQt59FuEG9Oe4YzIWeQKEsrC25vazsgyQAMiDisJQH\u002Bqgxy6XfeNBg4cqQh3YYst8Ko0D2GWHvwW00ovBxFsxt65Cgk7Y9EGut0NYwSWsv7HWcB3s4OuQkrNuWrs7QC/O2/1Z3xYMuntNkCxflRidqWaVn9mVlasFFvm5zsCBqooqO6KPjoU5ajk\u002BoWh4\u002Byt75IRMQhuFLAJlZrYzbT45gzD4lT/lIwFF7/f\u002BXcVfWqHZgAuStbo9gHs4TbtSoznwoYkSbFqAcNWhKvrkjj7nnzO4\u002BGxiODLcoM\u002BnTmUWjWhDYYkeQBoJbTnyh1DT\u002BAOZdk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"It sounds like your consuming code isn\u0027t cleaning up properly. In particular, any \u0060Register\u0060 calls should dispose the callback registration if it isn\u0027t needed anymore.\n\nLong-lived CTSs don\u0027t leak on their own. E.g., the ASP.NET lifetime has a CTS that is scoped to the lifetime of the application, similar to what you\u0027re doing (\u0060ApplicationLifetime.ApplicationStopping\u0060 and \u0060ApplicationLifetime.ApplicationStopped\u0060).\n\nI suppose if you don\u0027t have the time to fix the code properly, using shorter-lived linked CTSs would work. Sometimes that\u0027s a natural approach anyway, e.g., ASP.NET has request-scoped CTSs as well.","date":"2025-07-18T14:53:37.0299106Z"}