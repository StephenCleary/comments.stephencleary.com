{"_id":"1e453095-7ca4-3a19-9269-7c19639d8dfb","authorName":"Exploration","authorEmailEncrypted":"M3bouSkZVXPbLMHT4QFMYoRo5MM0UknvuXDbP15KH2s+1bgRu8XKqcmrUQjRiS5WL3YVDW1K6xAvxBiN3WmBDfmRWgpQxRsNGbSBnZyesoJpAiSQ8Vr4CLwBTYeZh2Hwo2kgMTqFWHhmBNThclPIOZzcfpTU8mAomkZqCqfDnvdsRZtTqSAo2LQq+XXduEmVb/TIhu21TuVrty8in+qPCrNGEgMvAsMAsOhH9QR9YzKuu0Oi7UZYaXQcAOZmRSjn1zU64aqKH6CAZniN3HosZsUYQwK14KQw3bAbUKZxKd3AO7QMoAgA9dZajkEf8b5FjqmvF0KrGzMSb0dJh+Y9nbTvpPB+FjWi90P96Cbz0EG3HStxjJqNxQTcXOmjb0T1tvEJn+CLSTdFn+cFndTHf586YBXdbk9rkPPpGl6Hp6vFrGdPcyK5kJxwxCkMz37DuDSewfQ9VsO2SVXL+UHj/c7suyJih2BOyHujdCRcCy9c6M3pH0H4qTY+GhyH4Q5+NC3egHGDRvbIfLFNnfTX502x1g42hi7B9ywh4pI0sqsVHqpAwtCgcryrDlMYdNh7zP1yfI+7sWGmSOixYPnVG3ckDEBri5j5JM2xWU1GvpgsNNhDoj1yOtfj8uz2Rtbz3gr5izO7V0ucPqfr69sPIERNnRAw/o0dFhsece2nakA=","authorEmailMD5":"17af4a0b233cefb3fc3084a9f3942ea8","message":"When i put this in my service the EndCreateTrafficAlerts method is never called. When I set a breakpoint on the callback(tcs.Task) line, I can see it get hit but nothing happens.  \r\nIn client;  \r\npublic static Task CreateTrafficAlertsAsync(this Release2Client client, IEnumerable trafficIds, TrafficMasterAlert alert, Release release )  \r\n {  \r\n return Task.Factory.FromAsync(client.Contract.BeginCreateTrafficAlerts, client.Contract.EndCreateTrafficAlerts, trafficIds, alert, release);  \r\n }  \r\n\r\nIn server:  \r\npublic IAsyncResult BeginCreateTrafficAlerts(IEnumerable trafficIds, TrafficMasterAlert masterAlert, AsyncCallback callback, object state)  \r\n {  \r\n try  \r\n {  \r\n var creator = new TrafficAlertsCreator();  \r\n var task = creator.BeginCreateTrafficAlerts(trafficIds, masterAlert);  \r\n var tcs = new TaskCompletionSource(this);  \r\n task.ContinueWith(t =>  \r\n {  \r\n if (t.IsFaulted)  \r\n {  \r\n if (t.Exception != null) tcs.TrySetException(t.Exception.InnerExceptions);  \r\n }  \r\n else if (t.IsCanceled)  \r\n tcs.TrySetCanceled();  \r\n else  \r\n tcs.TrySetResult(t.Result);  \r\n if (callback != null)  \r\n callback(tcs.Task);  \r\n });  \r\n return tcs.Task;  \r\n }  \r\n catch (Exception exc)  \r\n {  \r\n Log.Error(exc);  \r\n throw new FaultException(exc.Message);  \r\n }  \r\n }  \r\n\r\n public bool EndCreateTrafficAlerts(IAsyncResult ar)  \r\n {  \r\n try  \r\n {  \r\n MethodLogger.LogMethodCall(\"Started to execute method\", MethodBase.GetCurrentMethod(), ar);  \r\n ar.AsyncWaitHandle.WaitOne();  \r\n var task = (Task) ar;  \r\n task.Wait();  \r\n var creator = (TrafficAlertsCreator) task.AsyncState;  \r\n return creator.EndCreateTrafficAlerts(ar);  \r\n }  \r\n catch (FaultException)  \r\n {  \r\n throw; //just rethrow  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n Log.Error(\"An error occurred in the EndCreateTrafficAlerts method\", ex);  \r\n throw new FaultException(ex.Message);  \r\n }  \r\n finally  \r\n {  \r\n MethodLogger.LogMethodCall(\"Completed executing method\", MethodBase.GetCurrentMethod(), ar);  \r\n }  \r\n\r\n }","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-10-25T22:24:23Z","timestamp":1382739863,"authorUserId":""}