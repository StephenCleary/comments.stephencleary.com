{"_id":"91f51b08-ea36-3d2b-a703-ece742cc427b","authorName":"Drew Moss","authorEmailEncrypted":"LZ6B2RSG+m01ovDrTmLGVL0BXoc4zb2JmYIp80A7av8JBbnu3G+dIaj2PhqixzeKNbWFlawpX73xR3a9RN2rTrPG1WQ+iH6bxUVJ7XP/M1GNnoXD9MAFknOdLb+vd9u7T/WFjnDHQb9GYy+bVxe5jXCdr82ZshfMH2IH1NsOmxmZtmpT0myuZipCRAUi6gMvzC8OrDBb3UBIR9jds/P4ED8bJ1fM8G6QAjTF2MiHlMxp1HMWDeoQw79775AvRjKtToEdf2G1L0FOMu9w5XLcB4Vo4h+s4V1+MwgzolGWpZYuJge7lx+fedHlNiOBdmpaLEgFlrfxAjJpuh16CxGnxj3ePxjHyDrGAiEkKgzbZPIWDcNF/GFg1uLm8jhdFWB+kPNudQrolDlDh+DyHq7T8H5nsHhUVWcPLMXK/y2I7NmXW9m7uDX7hWdrFmjuJVPJRKulmxZt3npPhUv01UmvDUPXLjQWVZEbUtLEk8DBJxHND6eoilsVXOtEP1vYIZNc51q6iLOgTLrozRX/21MgivLYsHL4xavrIGU9JnBCccTX4dpwvjgWUXbp5ABXy5q8KwwKelg6X2YLOlJl4RxTtRaheGzZMWtoV6LJnbrnMqT9BRj4CS5PqCqWx0oE2BDehb5oIDt5T/c7Es5Xfjkgb8k0DBsATza0/DSvylb4/Sc=","authorEmailMD5":"0beba79365b67b98ee3039d7d969f578","message":"Stephen: So, my WCF service has mostly I/O-bound work to do and internally I'll have to use HttpWebRequest (so that I can configure Tcp Keep alive due to limitation outlined in [https://blogs.msdn.microsoft.com/mast/2015/07/13/azure-snat/](https://blogs.msdn.microsoft.com/mast/2015/07/13/azure-snat/))\r\n\r\nSo, if invoke HttpWebRequest from Task based method (see below), do I still benefits of async programming i.e. can I process more requests when the below IO-bound activity is in progress and there is no thread consumed/blocked like it's outlined in article at [http://blog.stephencleary.com/2013/11/there-is-no-thread.html](http://blog.stephencleary.com/2013/11/there-is-no-thread.html) ?\r\n\r\npublic Task<int> DoWork(int input)  \r\n{  \r\n // Invoke HttpWebRequest and get result\r\n\r\n return Task.FromResult(result);\r\n\r\n}","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-03-28T04:19:41Z","timestamp":1490674781,"authorUserId":"disqus:drewmoss"}