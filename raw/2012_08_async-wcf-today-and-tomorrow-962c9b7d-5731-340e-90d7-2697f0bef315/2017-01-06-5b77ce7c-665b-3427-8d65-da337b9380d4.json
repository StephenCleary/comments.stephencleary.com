{"_id":"5b77ce7c-665b-3427-8d65-da337b9380d4","authorName":"Drew Moss","authorEmailEncrypted":"cDF4xNo/JEkAYiOB3oqGx1mHV6G7RPLDJ3eG20GDQvdNksP0gSoaSUPO9BUXt6xnZaoRk/QjdfJflEA3CINeJEwruYnYhT+TCbjQ0PNtH/+YgX5Iwh+kd5bTGtndrMjBk2AR9Oet59lHAhaGeMji6TtDkwNouFr+ntEGkYpBPV76sGKOV/Dt34ybcpmcVMa6dX91+6xNRxTkUiAnWRZOOHXdO6U9Tj5nrsWFSMfcsJrz5WM8jkaEwy5WXKQJfuoIBpTuKi0bVj96ctDxjesqoGhh6PClsTV3ku0tF0CLjoQj6ONZ+D7Bcyxm+7HQMl3wll4h8SJ/Jck8Kt7y9pfRqJMFVKl/LNz7GtmC2n3R4JWrqjarH94UhfU/MY9ewc98jLNZJf6qwx1U6+lKAChLLhpk28dlsfAm6QANTBg3neuzVSq5N6ndfnp9dBLu5v+LFrNvU1rJYHZyrdsQmNv59FizRjtdbmgWov4NxRRXLaH31q9G+HN61D8nQF4GGCp5e+2X3eeUG4HtqVheiBVdHl+1g6RU01Snqz7gNc83ifiAYjc9DZtf2SakuGbTu42E1tUcsxeMmVeMwltcjfo1DYiH+EPOtWvcW6ELlcVNNdGn7SsScV71rNn9u9EsI//DN1ZmSgQtFQOe24BrzJMXaQGsCd2ieD+3Q71IWFn7j3A=","authorEmailMD5":"0beba79365b67b98ee3039d7d969f578","message":"Stephen: I read your article ([http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html) \"http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html)\") and this sample and have a fundamental question. Like in this example, if I want to do a task asynchronously using either Begin/End pattern or Task based pattern, don't I still need to use Task.Run which would create a background thread. So, I'm curious on how do we save the resource (i.e. thread) by using async programming. Agreed that the request thread is freed up, but we still need a background thread which would do things like (parse the request, make expensive remote calls, parse results, log,etc).\r\n\r\n\"What About the Thread Doing the Asynchronous Work? I get asked this question all the time. The implication is that there must be some thread somewhere thatâ€™s blocking on the I/O call to the external resource. So, asynchronous code frees up the request thread, but only at the expense of another thread elsewhere in the system, right? No, not at all.\"","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-01-06T03:05:34Z","timestamp":1483671934,"authorUserId":"disqus:drewmoss"}