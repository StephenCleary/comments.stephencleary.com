{"_id":"5b77ce7c-665b-3427-8d65-da337b9380d4","authorName":"Drew Moss","authorEmailEncrypted":"Ya160xQKEamc54t1hfbdB8ohicnNihPK3rqmYKr0Uk4l2Y27GPQbiq2XxOK454f19aaA3A95RhdLvbg2JCPd2qWLsQdg5ymWad4uey6/IyKnmu0Kb/DzAx2nasHVgId9Ab7WRdBfnBQKTxTm+1677cIEMUk/l1CsX1GtUQ1OeP2rJNlfP7WX66tNFRFogijoL92Zwr1bzrVrP2jK/ts4L3BcII1vbJK3sCAZrWCt4htDc9BcjwDJc+lupfvBSg6q5jVM2HABOiE27SJTYCM9i8kSn8Vg2TBlXIPwGQ08q5Fka1ofOaJnIG3+iby3OAvOPYgmUFXjjzsJxdjehHxoor2uO8vaBjD/b4zNuYddponExrRvSg0IiN3sk+0eUDqqd1fb0dhL+6lFVzSc1jpjjz8+iVTf7LBDaUPkdckc9er6J/xluqUdQ3Qdva8z9iFLfqBb7ZBF56TmvFKl6pAqPFYcdmbuX69NfZgD7dTD6wN+ParrBZNNqJsEZwaX8QxtCp3bS1yTQhP3IRWkdLOCQ7+vCAC0ntjMpy0WZtRQs+kIkY05QQvjByNZ/EH+YSvq3AsQoff+PymOZHyjQNbugzbxqnD+uabD1hoXCRfNN70gW1xvRU4JS+zHdoxtol00tNhH2IajfdptuxP4PQBnnSebSf3WU+ka93BcGnaMEA8=","authorEmailMD5":"0beba79365b67b98ee3039d7d969f578","message":"Stephen: I read your article ([http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html) \"http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html)\") and this sample and have a fundamental question. Like in this example, if I want to do a task asynchronously using either Begin/End pattern or Task based pattern, don't I still need to use Task.Run which would create a background thread. So, I'm curious on how do we save the resource (i.e. thread) by using async programming. Agreed that the request thread is freed up, but we still need a background thread which would do things like (parse the request, make expensive remote calls, parse results, log,etc).\r\n\r\n\"What About the Thread Doing the Asynchronous Work? I get asked this question all the time. The implication is that there must be some thread somewhere thatâ€™s blocking on the I/O call to the external resource. So, asynchronous code frees up the request thread, but only at the expense of another thread elsewhere in the system, right? No, not at all.\"","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-01-06T03:05:34Z","timestamp":1483671934,"authorUserId":"disqus:drewmoss"}