{"_id":"5b77ce7c-665b-3427-8d65-da337b9380d4","authorName":"Drew Moss","authorEmailEncrypted":"SI7HV/89sKoM8xtv5bI+rHlDZg+VNZCVe87w7Bxoa7G7g4nsYYhomPRwKJYTr6fknXQu1UC+sr3gdtiDMSGuprJUUho18AkrIkCPPmgH0nhZWnaI9dsSU/l40eZNLws6yJ3hJgc2SQ4pD1PN0xAOXrqUV80TsOqn2gS+pktkwljUUPsMkkyfNYc6Ub+lfl43eqUoeFFopfcHnINlozXlyhZat7iNTObLC15dtpXRRo2+vlBMMAU4YXhj9Xj/kAzRdjEaDGjxZYkuqqZ5CynCPMgH4c3pgU3HPRco4+x1ooXR32EOWMqp+nQjCkT94Rqv9757llIoEJUfNmj7AHNW35xhMRn0g+89ZNQ3FJnosEyB5UGe1ogJlopqSbAXlfLF1uWMmK+7xEC+cTZoDUKIl2Y92VmnJQytTpNX9gjcqE4STwJiDNwtkuS8dxaeILeZ95b+k8EsCbdin9j5Mw6dQCpoheBC705H7h0cHq0y7MYwr391DGxta9NG24+Oo3ybBxI9n2jJPzeuhjyjrslQxPYhD0qRQQUEr2UE06jXCbcrdYvM3WCHWZVwlEY3380ueNqaiZCb2yPdHrYgJrRyVZ36gmK+o2JK+ItWIMmoFwVgE+fAZU/GPCyX1HSMCAJZ2cbs3pAw6tM8bed5IfTsdYNtZyp6Glvw1ODeN+HTwy8=","authorEmailMD5":"0beba79365b67b98ee3039d7d969f578","message":"Stephen: I read your article ([http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html)](http://blog.stephencleary.com/2012/08/async-wcf-today-and-tomorrow.html)) and this sample and have a fundamental question. Like in this example, if I want to do a task asynchronously using either Begin/End pattern or Task based pattern, don't I still need to use Task.Run which would create a background thread. So, I'm curious on how do we save the resource (i.e. thread) by using async programming. Agreed that the request thread is freed up, but we still need a background thread which would do things like (parse the request, make expensive remote calls, parse results, log,etc).\r\n\r\n\"What About the Thread Doing the Asynchronous Work? I get asked this question all the time. The implication is that there must be some thread somewhere thatâ€™s blocking on the I/O call to the external resource. So, asynchronous code frees up the request thread, but only at the expense of another thread elsewhere in the system, right? No, not at all.\"","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2017-01-06T03:05:34Z","timestamp":1483671934,"authorUserId":"disqus:drewmoss"}