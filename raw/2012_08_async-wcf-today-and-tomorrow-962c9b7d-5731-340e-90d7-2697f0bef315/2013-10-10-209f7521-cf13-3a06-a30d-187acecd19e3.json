{"_id":"209f7521-cf13-3a06-a30d-187acecd19e3","authorName":"Anonymous","authorEmailEncrypted":"ifPBN8D4lLkC4J40BZEy7tmfkQ8fTlYTa00KQoxWd3Rjdw7XaCr7vfz2jfZwKm+E+ttKI0TRmGhuY6/M6MrZdnsuE2WY4ua/r5sZ5nOEIO22NDp8HILEaKqqUjZKKX5k5GEWaUtp2ARIh9HVXcCxak8/bp/I47TL+zurVOlKVOT8QDYB09Wr7SuP5H5nMEao4H4f9/ai8s2IYnFspZbigAPIt09FqkE3lkTEquGSox47XVgO2Xd6PRa+y1wK9i2nzZvniH5OcJephtr2uZgx0XH95Vt2DuM7ccLiekR/gAU7oSmL7RlGDydHtC2+89uKkYbbTvqBdggr4TkG2h46IKh7593xbeig2SuUXmjn0QrOOALAOC7hfINwkEopE2SP2bJPPwwF9ErqqsIxsrunIgKl0JUyZ8gv57LGZ07nDZv+n9r4t+EUvlyJ9YkIf3vj7mdYtgS3fqlNGaht57hi040SxbZEvskUriDOPyXEwrroINg96cGNOvmUH+YzaGuJBmPmueU6UuCtuklfLd1rA6S9nfuioqg6IFukV+wS3/xUr09SauWr5Oygt4Jop+QxG8/exxzFhP+P0CX3o8ItP9LBKSPN1wLTB7oP68VVlJXQw5V3bzRgTKxS6dBraTgbQpdIUBWoUAEvTK/wl8VzppV53cqM8Th4DogOqUayqdU=","authorEmailMD5":"3cb42db01b5edab948a576e1bf94a281","message":"Hi,  \r\nAt client side Instead of CallCalculator().Wait(), how can we delagate result to another function( like old callback functions)...  \r\nI try the following,  \r\nasync Task CallCalculator()  \r\n {  \r\n try  \r\n {  \r\n\r\n var task = channel.DivideAsync(10, 0);  \r\n\r\n task.ContinueWith(OnWorkCompleted); //You should see result at OnWorkCompleted  \r\n\r\n }  \r\n catch (FaultException ex)  \r\n {  \r\n Console.Error.WriteLine(\"Error: \" + ex.Detail.Message);  \r\n }  \r\n\r\n }  \r\n\r\n void OnWorkCompleted(Task task)  \r\n {  \r\n\r\n var result = task.Result;  \r\n\r\n Console.WriteLine(\"Result From Async: \" + result);  \r\n}  \r\n\r\nIt works but if we try to divide by zero, I do not catch any exception at client side.   ","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2013-10-10T14:57:24Z","timestamp":1381417044,"authorUserId":""}