{"_id":"e39931e7-25a5-37dc-94c7-8c92ebb56aaa","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Returning tasks are fine, as long as you cover the edge cases, like if your synchronous code throws exceptions or frees resources: [http://blog.stephencleary.com/2016/12/eliding-async-await.html](http://blog.stephencleary.com/2016/12/eliding-async-await.html)\r\n\r\nThe caller does not know nor care where the returned task comes from. The async keyword is an implementation detail.\r\n\r\nThere wouldn't be an advantage to wrapping the PLINQ code in a task. You're probably best keeping the code as is. The *client* code that calls into the WCF service can be asynchronous, though (and likely should be).","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"3ac91931-6c74-31fc-9330-d417e9f375dc","date":"2018-02-05T18:53:12Z","timestamp":1517856792}