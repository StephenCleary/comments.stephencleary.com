{"_id":"3ac91931-6c74-31fc-9330-d417e9f375dc","authorName":"DickP","authorEmailEncrypted":"PBg+5B4dUKYjygGdOfqPFnVd3STBU5uDnoZMKjuoaLaUxKy0qyhBA3Ht90CjmlWl+PS14uPzFlpnJ39CFAFKxUgysZyfaQTxwoaGoXAYnCESg5bIkGmUPDuGV+fOSW8ER3a4b3P7foOFDn6WfzsEia2zYBYaUO1e1EgW552DIrV/74+ArlU6uvBcNX+y10Au0mcwSVm4b3IgmdoC0Q/BXPnWwb7bPgiRuHxdFWcBLIMYwmUisfrdnJ7ceTlGUSTLnEKVG5GRrCIxob/KGqSTyaMZ+gG+Um6Cxw/0jxYs6k5YVv1S3zXFI/wGn+4IZni7SKRuv+uBP+P7TvfFZVgfihoAkEpwBwCYUyEiv33UPXzn+3A9rbILKom6tuxX2rOP1OmJwO6yfkYpzxnL440BKOyZFFhcrY2zcZRjS5z3pNGRdAZHrp6PZ8G5JdgApACrTBG44bkR4WpjXTTtZCDIfVsHv1XvbMPRCa/PRv/1sSNkUnTJdgROFyS5Lz5VRwQPIjV9LXKoDYqVWP3x69vRA4bwScHCkvTbvOe42p6e5DIqVTZyooaYfd4x23K46BZRkm3Sz144/1NN9vhbtnP8DUuMbITLxTOqesE+Du4o8KbUowpjtr92VfxTLrhWJ5MU12gowYpaEOm/SWQlhwXcBNbgaRCocNdq0e12HCXryTg=","authorEmailMD5":"33a553da13151bffb2e5e33efbe2548c","message":"Stephen. I am committed to WCF for the time being for a complex fintech project. I am currently using 4.6.2. My app includes both I/O and CPU Tasks at every tier. I generally only use await when a method contains continuation code or needs to handle exceptions. Otherwise I simply return the Task. What is best practice in the service class? My service operations often have just a couple of lines of code to instantiate and execute a business layer class. Does the WCF runtime prefer a returned task or an awaited task?  \r\nI use PLINQ in the service layer to parallelize a large chunk of CPU bound code for requests with batched payloads. I just leave it to block. There is no continuation code. Is there any advantage to the WCF runtime in wrapping it with a GetAwaiter and awaiting it?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-02-03T12:57:49Z","timestamp":1517662669,"authorUserId":"disqus:disqus_MYL9vvFXQc"}