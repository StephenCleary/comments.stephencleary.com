{"_id":"3ac91931-6c74-31fc-9330-d417e9f375dc","authorName":"DickP","authorEmailEncrypted":"V2jpuuhbze2Bf/XG/c5z7qlqeVIy/7EWqih7HT2vfi2iuGfDjIfiwD/F8YhOWUODG+5kSMUSpE8rYLNKeZAPyNi8xdYHbmjRWHD9fQCS/n1Cm4kcbGrLtoDfNoI1S2UzPNfcIlv4ssGvyFim9GKHY/DFP1ynQO6fowqkxoGUUP2Cu4RMqAeyW2MvqTI2iZGuf4K9HtW9etEEWjpu2i88vYOf/65q9vYWWUTT2yju1Ou3KL7qBJcUq/FetGSOwlY8xTGoP3BKQCpFu/CoLEeHeF3rGqn+cbElslOmASpVP7ageHwUxF88UCpvg5E7WDsgxUV94K2E0JcFGVOp2biQQfVx/xvJiT/lORg570XYwZKDzSYeRWXl5UUV+8FYlvi4velHYvA7qeuVTDcx+WVlUDFXmFxLTc8CIJYT5uuJLxHS/0OP/AamIDKZr0VjKSLqVBxt/ipY10M+XjBDyxApPMlaYljNYXwXHbJCZgj99pqRinv7svaogD+b5ASumXdnK0YqwEkxYB40SCtKCoFajeO/W2zuN4XL1wxC22DshaTDktt0/hlGuVeyTc0fYC84/TZmJVfuq543GiMNCNy3V/0C8FPWcC751ptIz+YuwRg/G2jnnUIN72NYkpbHMoMRH21xVDGrND4/WABoehYyQj1fOkpIrXxZNUawNGFdC38=","authorEmailMD5":"33a553da13151bffb2e5e33efbe2548c","message":"Stephen. I am committed to WCF for the time being for a complex fintech project. I am currently using 4.6.2. My app includes both I/O and CPU Tasks at every tier. I generally only use await when a method contains continuation code or needs to handle exceptions. Otherwise I simply return the Task. What is best practice in the service class? My service operations often have just a couple of lines of code to instantiate and execute a business layer class. Does the WCF runtime prefer a returned task or an awaited task?  \r\nI use PLINQ in the service layer to parallelize a large chunk of CPU bound code for requests with batched payloads. I just leave it to block. There is no continuation code. Is there any advantage to the WCF runtime in wrapping it with a GetAwaiter and awaiting it?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-02-03T12:57:49Z","timestamp":1517662669,"authorUserId":"disqus:disqus_MYL9vvFXQc"}