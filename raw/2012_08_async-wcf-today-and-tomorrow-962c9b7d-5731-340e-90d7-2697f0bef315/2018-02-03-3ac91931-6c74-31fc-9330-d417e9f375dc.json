{"_id":"3ac91931-6c74-31fc-9330-d417e9f375dc","authorName":"DickP","authorEmailEncrypted":"LzkaMxrlTPIVmNW9anuzwsoyWzgNXG+5hfrlYxAkEE7Sl8NRjWTyWF+PXsIF8CwnvTNjHtG7mEL/gNc9JZytryimraYKhboOElI2i+3WkFSfMxSuHyqQtUkubH0V2gGFNLkdpyAbtYKIBtgGHBuqbaIEiTpjSy1ij1lh5JPceLLJWhoWYVeSAOwhFbba5jg0xI3oO/rUNzepEmgczaxrpSAKMbz3r3X8zp++fPuECZCAyCeKlgxD1Ak7kf9EkfrlmS25iuiXv5cOryHbldp8QXXDzpbRkBvMkj7r2zc597UMDcA8kRxRXrKsiFak0dqmRLs9SSE2TAYvOoytvWXSA+qVn7jA3xn+6EL/SfXq7ZPs5HsUQp0OALeHw6PvjuRzLhEOi3MDcyNES2WVgGZoqVKHRJFGf7cpFeNSgfVPOllVhpOZkw8FQbJK13Jir+RoL2cL1Wa1OlmQTv1kN6V7o9+7pZL2Pe02ivo1TSagJorm2aSv4OwUK92i2NHpSYIL53HzkhpYeAp9IV92N4MOCjSfR8S8H0KCifWoEkhRbDOeZqlZY6K44f3rETLuTFw9kOWtnSm06Wbv/O5p12i5fL5HIvIFG48fNZwsT7PrBhcTS0q/D1+fVJQgVc4f8LX/TzenO6gcfxyh7WrAJFwbkTa/mbuHcrNxEGoavzG3Jb8=","authorEmailMD5":"33a553da13151bffb2e5e33efbe2548c","message":"Stephen. I am committed to WCF for the time being for a complex fintech project. I am currently using 4.6.2. My app includes both I/O and CPU Tasks at every tier. I generally only use await when a method contains continuation code or needs to handle exceptions. Otherwise I simply return the Task. What is best practice in the service class? My service operations often have just a couple of lines of code to instantiate and execute a business layer class. Does the WCF runtime prefer a returned task or an awaited task?  \r\nI use PLINQ in the service layer to parallelize a large chunk of CPU bound code for requests with batched payloads. I just leave it to block. There is no continuation code. Is there any advantage to the WCF runtime in wrapping it with a GetAwaiter and awaiting it?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-02-03T12:57:49Z","timestamp":1517662669,"authorUserId":"disqus:disqus_MYL9vvFXQc"}