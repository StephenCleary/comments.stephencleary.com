{"_id":"3ac91931-6c74-31fc-9330-d417e9f375dc","authorName":"DickP","authorEmailEncrypted":"AcF6VpEayeKm9RPaKPjBV8MJT67Jgmn1P05b3qIAC2SKCZIDRC5PM4Lut7lWNspCcqlfLK5QYTQayA/clH1IaFK7kHRKJKKOUulD2jxZq9GNb+4cLGOkZZBi8Oqilcujo+1ehcecqSiVakINBzd4OdC4KESPWr3Wzxj4kJWQ/l9tRog7JUIEVmi+cNX/PWkBaEh9KFwjzjzAYFqcfo6pbEq0q/FmF90UFQpdUgBzeovExCOxo9oG4X5YCHbSnH28sGL+Bn1eBU4B4uipfni9Xat5QBMzV+EGphizo81NosO22uhI3556SYSjaEvrkm2lNs5uxGWjCIR6uBp+5OAjZhZGJvT+90wt5Zl92EfuTFYXuQsxiVbpi5WXY9ErxJU9CIIZOhnYwWzqkiZCjRRbCH9RzoSbSRRbeO6mFJAWsEAbPstGgWKSv2IPcaMIrOJ9OHoOZ90/k71ZKvBRO1xAhc3sO6Dat/+EtNCY0d5gX4fW8J3bUiv68SYo5rPHgIutdp1qcQOWqMCnjU7ji76KWlEi537xl4Y5MNErDmFNWw3jEIyh8WmAAwkZpm8EomT/ZdgSR8+HYGp64C5mG9ccIDxKGvrSngytNmHWKGEpi8Amxf78DID/mkWpNajypZe9qjDmWvrqSnxvUB35GG2CE7ryXTlt+2QjF1R2ClEicJY=","authorEmailMD5":"33a553da13151bffb2e5e33efbe2548c","message":"Stephen. I am committed to WCF for the time being for a complex fintech project. I am currently using 4.6.2. My app includes both I/O and CPU Tasks at every tier. I generally only use await when a method contains continuation code or needs to handle exceptions. Otherwise I simply return the Task. What is best practice in the service class? My service operations often have just a couple of lines of code to instantiate and execute a business layer class. Does the WCF runtime prefer a returned task or an awaited task?  \r\nI use PLINQ in the service layer to parallelize a large chunk of CPU bound code for requests with batched payloads. I just leave it to block. There is no continuation code. Is there any advantage to the WCF runtime in wrapping it with a GetAwaiter and awaiting it?","postId":"2012_08_async-wcf-today-and-tomorrow-962c9b7d-5731-340e-90d7-2697f0bef315","replyTo":"","date":"2018-02-03T12:57:49Z","timestamp":1517662669,"authorUserId":"disqus:disqus_MYL9vvFXQc"}