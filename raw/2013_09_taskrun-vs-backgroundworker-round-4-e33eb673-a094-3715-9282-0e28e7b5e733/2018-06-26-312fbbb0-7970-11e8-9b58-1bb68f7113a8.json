{"_id":"312fbbb0-7970-11e8-9b58-1bb68f7113a8","postId":"2013_09_taskrun-vs-backgroundworker-round-4-e33eb673-a094-3715-9282-0e28e7b5e733","postUri":"https://blog.stephencleary.com/2013/09/taskrun-vs-backgroundworker-round-4.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Detlef","authorUri":"","message":"try\r\n        {\r\n            await Task.Run(() =>\r\n            {\r\n                for (int i = 0; i != 100; ++i)\r\n            {\r\n                token.ThrowIfCancellationRequested();\r\n                Thread.Sleep(100);\r\n            }\r\n        });\r\n        MessageBox.Show(\"Completed.\");\r\n    }\r\n    catch (OperationCanceledException)\r\n    {\r\n        MessageBox.Show(\"Cancelled.\");\r\n    }\r\n\r\n\r\nthis pattern didn't work for me. I had to change it to:\r\n\r\n        await Task.Run(() =>\r\n        { \r\n             try\r\n            {\r\n                  for (int i = 0; i != 100; ++i)\r\n                  {\r\n                        token.ThrowIfCancellationRequested();\r\n                        Thread.Sleep(100);\r\n                   }    \r\n              }\r\n              catch (OperationCanceledException)\r\n                    {   }           \r\n        });\r\n        MessageBox.Show(\"Completed.\");\r\n\r\nThanks a lot for this  very helpful comparison. I","date":"2018-06-26T18:39:00.830Z"}