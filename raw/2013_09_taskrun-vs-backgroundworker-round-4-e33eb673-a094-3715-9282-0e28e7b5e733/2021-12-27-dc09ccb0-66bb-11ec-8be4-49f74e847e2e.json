{"_id":"dc09ccb0-66bb-11ec-8be4-49f74e847e2e","postId":"2013_09_taskrun-vs-backgroundworker-round-4-e33eb673-a094-3715-9282-0e28e7b5e733","postUri":"https://blog.stephencleary.com/2013/09/taskrun-vs-backgroundworker-round-4.html","replyTo":"bb2511a0-63b2-11ec-8ad3-c30f69466807","authorEmailEncrypted":"lT9BGzZu3FuUY9JTL7oaAlWPC42Th1ENt1CJ/Ls+9JbfPPaRBTDEqmoeJKBAG+CINlrvecdvzGq073w78MZ4I5cleNrODfksejcHOAPhPKdRg/Pr0Oy5kUgCMxgUnQ5JmTHf4gHJC6a5YsWnI4TyvceT9UcUXdfEYx7CSZhNLuH0p/+GjiHmCk6H13wkNKts7+Qwe/2DgmS59ODAozk0BCP9NkK8nyXFniOzAy6jRe9UOQFa3YROkgO9RFbINZkurJXPvxuQlmqx0DCKuYlX17o6RR7C5/py/J3vy3KKHkAF+bBmsnEKg/+bjmmQda12o8h9AEsn2DZrgyR21044Fsvq/jqa6msyeYm7N9LDlRY7Xg89H1g7Sdd6gG4ITaOsa7Ymi93p9Ra5PYAQCLQdwGd2tOvsSmIRfSp61C1GMygYxx7lWHgGladITr9AUHUItdXaI8BlMwLa2INt2SQbmg8zpFtwa8vcwtWn7Gr95832phqDWhLIdR0l1ddwtP/d0CqWO/qhtRwKPe6TdrOFJ3SwP6ZiqjDRAp//urDuhTpNvyG62qJxvVs3ttqh7byZ17IKCWaBhwrHweJ7i6KM4EgwcLhjmrpMCRoxHnsfPUh8yVWm1cJx59bf65YB+gVAUMvSsX9tJpJxOjavAQlSbAQa4L03dP3vYNtYNHppagA=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Since fetching from a database and posting to an API are both asynchronous operations, I would recommend using standard `async`/`await` calls.\r\n\r\nThat's the general rule, but there *may* be exceptions.\r\n\r\n`HttpWebRequest` is an old technology (see `HttpClient` for the modern approach). It does proxy resolution synchronously, even on asynchronous calls, and I believe it may do DNS resolution synchronously as well, at least on some platforms. So, if you find that the standard `async`/`await` isn't sufficient to free up the UI, then you'd want to wrap the asynchronous posting code in a `Task.Run`.\r\n\r\nAlso, the vast majority of databases support asynchronous queries... but not all of them. SQLite, for example, implements a blocking \"asynchronous\" API. So if your database is SQLite, then you'll need to work around that by using `Task.Run` for your database fetches as well.","date":"2021-12-27T02:22:37.941Z"}