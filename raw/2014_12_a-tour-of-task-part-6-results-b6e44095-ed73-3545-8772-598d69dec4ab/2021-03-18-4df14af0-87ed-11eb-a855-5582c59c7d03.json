{"_id":"4df14af0-87ed-11eb-a855-5582c59c7d03","postId":"2014_12_a-tour-of-task-part-6-results-b6e44095-ed73-3545-8772-598d69dec4ab","postUri":"https://blog.stephencleary.com/2014/12/a-tour-of-task-part-6-results.html","replyTo":"dc707a80-86df-11eb-9ada-ff8d14726998","authorEmailEncrypted":"W9yZ4kKMMbSubOmv8Qfha+8SRibStLYQwzsjzm4pYYnaTSM+kOGbnngjiYG94bUam8FCyF0OONqFF+qCTOr/4WuI4aJ34BPxrN55uSSYlImx+AXkNQcOLE/+zOrqOMkWWbmiuMdaQZ80idJuBdpXtK689Rw9/iBC8f2GHD3BeRb9MYp9EeRlxsR2sASZweYav/2SfUUB9y0KO14m7E552PS+hIxmSu2PGD9qZv+GnMzaQVEFI1bhIHj1LG5NSIP6/2Mvs4I6FropXZIekzIC2myWIdTLJWB4E6NQyAuVVtPxoOTxBc3lBse4xSJlfZXGNQi8yIta+uBBBAJCQBZNBikbMHLCH0nZjnNu5Ug/vGA+08texwdJrq+3+hn5cI5W/aqvkqHnGY8O9iDwkqx9AkarJG6k5N5LyvYmmCvyvZYJzas15q4HJua4s8Yjw1L4f35lIC313qCJ6S01so6792XA8GdtqvIW+za7zp15o2vs+dBmbxyeX3FJpSjKgXxfcZfsDomxxp0T5oezudb8J9xeUcbX9KOzmyKg1yklMhGoflCUW7xLh0aD/BstXrY50cCKWgK691FgLqbIbAjxP3u21A8+cNDI4kbvDHJlC7oFKGKHAGrhxuRlJq2cBZoDmzALJM27Sef35L9golDbf407wTMcRQAcXcngacUcVGk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The best solution is to go [`async` all the way](https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/march/async-await-best-practices-in-asynchronous-programming), so no blocking necessary.\r\n\r\nI'm not sure what you mean by an \"async / await block\" - if the `Task.Run` was `await`ed, then it would be in an `async` method, not a synchronous method. That would be better, but it isn't possible if your scenario is that it \"has to be synchronous\".","date":"2021-03-18T13:24:45.359Z"}