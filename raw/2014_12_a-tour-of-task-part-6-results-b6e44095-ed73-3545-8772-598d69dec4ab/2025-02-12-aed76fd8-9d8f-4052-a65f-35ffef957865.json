{"_id":"aed76fd8-9d8f-4052-a65f-35ffef957865","postId":"2014_12_a-tour-of-task-part-6-results-b6e44095-ed73-3545-8772-598d69dec4ab","postUri":"https://blog.stephencleary.com/2014/12/a-tour-of-task-part-6-results.html","replyTo":"","authorEmailEncrypted":"aNAJ3KQ83nMUmBwR9mYQK4SbCwoAMpsofeWRj/e9fBiHStJPvW8MP7/PpRX90Pdl3CEH1HhRP4CBuNyUbty0x0GeFklby42UmCqFAKcJ9eIjPfcp0Ovh7bxIqlFnEgUilDOrW9I9424ed27ao1LWt5fcGj8Hw5ijas/OeX43mWyfEqYKt3tCFQCW2gfjGzRxBnf9sA/4sP5iAG27jsD3sNOUqdrlxUDLWOEIYHLnd3VsxhYKyhWpwOaGi7oDSysTvpar64nrdlvgWIpQdiNYPhaIJDVQ9geQ\u002Bj5aVA/\u002BHEQca8A4Ho8LL3iq5AMFobJGcPoEg9e3NiVyDXe/EK9i0iy0aor2DcVVoH4zYuQOACZq0GdhbubkEsk\u002BbYYNWZ/MIYXXm1bH1hRoHLLCX3NM8HvcR8fUsbTl7w4DXVdjpc52hVrmMOHh0T\u002BwShZKSooHr4hAxkCfMNuJzJAMbKtJ4cw\u002B9plKe2MWQgOguWr04Kp5j/Y8yEwBtqC2Zf5ncW9BFM0gyvCSnLQHkyns21Ljh1x3mzMDS\u002Be4Ygr7iiL9FmShG5NMHTz3soalw4aFwNIj5xDavijGuyEHdPDNfRVfySQN6bLF6LHYgIgWWSA3tZohVtnvOOVrsr3eEbNWZQBqRbJ\u002Bi2\u002BMBo9CROAfT9ZhnEsnwZ6xxmdN3slB0a7x558=","authorEmailMD5":"88b8601f2a393ae56e00fd79f61ecde4","authorName":"Lee","authorUri":"","message":"Stephen,\n\nWould this be of any benefit?  Could it be implemented to achieve the same results as an awaited task in the underlying internals of the Task\u003CT\u003E or ValueTask\u003CT\u003E\u2026\n\nprivate T? _result;\npublic static implicit operator T?(Task\u003Ct\u003E task)\n   =\u003E _result??=task.GetAwaiter().GetResult(); //this is not what I want, but I dont know internals as well as you.\n\n\u2026This could, likely would, lead to some unexpected behaviors (due to the implicit conversation), so perhaps explicit is better.  I almost think an awaitable implicit operator is what is needed but, again, while I am pretty versed in TPL, there are parts of the TPL dependencies that might prevent this from being a good idea.  Thoughts?","date":"2025-02-12T19:41:23.5710154Z"}