{"_id":"7ab4fb80-9040-11eb-bdc3-61a057cc069a","postId":"2014_12_a-tour-of-task-part-6-results-b6e44095-ed73-3545-8772-598d69dec4ab","postUri":"https://blog.stephencleary.com/2014/12/a-tour-of-task-part-6-results.html","replyTo":"","authorEmailEncrypted":"O431PNDzBxMjqMU8UjYS19WasZB1oNf0OAeMjraMc1iuZwUryqsQMXMVajQzBINcleFKYcmzNoU7TB6wMZmLpGTX7BBS53jWgWY5Fq/JPCi6qkpoIPeeqs9bNRnNzIdbVGKHpciEyhr/7Y9A3RwMgS1y9+hR5s/iukdW+d/3iYbkot6PMJyRH31ogRFoWlOwEyPlOa67iGhJ1drmkjeHnaC4h48YfDOk/RePdbgoZlDVwZhUfj6WZIN2ehcpREL3KMY+TtpdCB2+3k1r39CdtZFmCWeTItEJx8fZvoCYZ7YUIScLvp2n6pmjfiB8CFLS5gEqWi+J2pWlXt9uHm64wgCyzZsU84+eIkNM/aN5b0l+49kUZQ74FrzWWA4Cnzkx+RSK6Zokb0ttPl4KUQj8nOR6NETtNJsedN+Tk8clCUU/MqCuDAGXP/+Xgfpa/buCJrWm6NZkRQEPinBsbHle/IP5+WeTXHsWJwJY3a8xaCPaLi9IMGvzxhsliz59Mo7bTkLb30UEJO6hjj+6vvuDFHYZwige5i08tXeQ35d7IPZaLd4c/g5x5d603eHw0QqWQzCtb3X59wXOtt5YnfPzOB00zoXMJYQuIj7/LYfO/71Qb64b/5isCYxyqtEcL9t32C4oELvtndzuQpNBsYYhPxnLU4qB47Jk4RSgYXaHym8=","authorEmailMD5":"7ae8adbd9242fc874b6a1978d2722453","authorName":"Mike","authorUri":"","message":"Hi Stephen, love these blog posts and im really enjoying reading back over all your older posts and seeing how they may impact code ive written  in the past.\r\nI have a question about a project ive had running live for a while now after seeing this.\r\n\r\nconsider the following synchronous method: \r\n\r\npublic void doSomething(){\r\n    \r\n    Task.Run(() => AsyncRead().ConfigureAwait(false).GetAwaiter().GetResult())\r\n\r\n}\r\n\r\nWill this deadlock or will the configureAwait have saved me? My understanding is that it will only deadlock in the circumstances:\r\n\r\n1: The AsyncRead requires access to Http.Context.Current\r\n\r\n2: The code requires access to the return object","date":"2021-03-29T03:40:18.140Z"}