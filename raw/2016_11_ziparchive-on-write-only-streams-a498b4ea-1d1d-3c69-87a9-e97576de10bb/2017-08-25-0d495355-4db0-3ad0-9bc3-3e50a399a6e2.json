{"_id":"0d495355-4db0-3ad0-9bc3-3e50a399a6e2","authorName":"Assil AR","authorEmailEncrypted":"RtiC5AJSWtWAnBnB3TcvoyKLn7BouwscnM0Vr0Cz/3xiGWGCRn15SzsJZUbGSrqzO/6skrr6/daSsA6vPbcTDTxzCtuasxWhqYq5nPxoSCsPgeirfmqCaP2OyakUz3fw0HnL6XTR2wUxUb78ehyf/KbsBfHKFixh7ClL4xScAUn/W3U+0RBeMBfG1ftbbRWXR5310HTAkUXvc4MWjz/61jQvFmkgEKOc05/RulPUaIVfcfn66Nka/Ca9oWxHswQylT++uSMOFiYqj/JpuOMjIKoZoy/J+sqnXSaDFWGMA9g1TRsgp3A3mx9Ap26q1fqe7Q8w84SLcEj50qKgmxMqIMzFcoh6pttsdObFK5JLbuBm0NZqUjX8fR+NYIUmEovCoTSp6iIuxGFDTnD3+4P8QmWxNBgK291tv28d1PJrDTFkqQQPn6prbLw0CnNw0mE5V6Hi2YUA/gRbKm4sUFk3tkKRPHubKxnyaG8KX0ClOewBIH/YqZfbMZ852LskoZ1f9SuPTjF6mQ0PqHtbgyiJTwBNhsdsRWM5H8/LweSOqvBao44wU1BzKtvENoi1L53EoCpbxEJ4q8/LI9BpRykFObnisX51Ir4QZQiNwsgyo1K4qy+YAj0lD+5r76sh5z6vFgrvMUH5GlnNp0loSQUfkvSVzWyN63WGbatzuYHGAMQ=","authorEmailMD5":"3e9c5cee36041dd7a396aaa5fdcd01b2","message":"Is this an acceptable implementation:\r\n\r\n using System;  \r\n using System.IO;  \r\n using System.Threading;  \r\n using System.Threading.Tasks;\r\n\r\n public class WriteOnlyStreamWrapper : Stream  \r\n {  \r\n private readonly Stream _stream;  \r\n private long _position;\r\n\r\n public WriteOnlyStreamWrapper(Stream stream)  \r\n {  \r\n _stream = stream;  \r\n }\r\n\r\n public override long Position  \r\n {  \r\n get { return _position; }  \r\n set { throw new NotSupportedException(); }  \r\n }\r\n\r\n public override bool CanRead  \r\n {  \r\n get  \r\n {  \r\n throw new NotSupportedException();  \r\n }  \r\n }\r\n\r\n public override bool CanSeek  \r\n {  \r\n get  \r\n {  \r\n throw new NotSupportedException();  \r\n }  \r\n }\r\n\r\n public override bool CanWrite  \r\n {  \r\n get  \r\n {  \r\n return true;  \r\n }  \r\n }\r\n\r\n public override long Length  \r\n {  \r\n get  \r\n {  \r\n return _stream.Length;  \r\n }  \r\n }\r\n\r\n public override void Write(byte[] buffer, int offset, int count)  \r\n {  \r\n _position += count;  \r\n _stream.Write(buffer, offset, count);  \r\n }\r\n\r\n public override void WriteByte(byte value)  \r\n {  \r\n _position += 1;  \r\n _stream.WriteByte(value);  \r\n }\r\n\r\n public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)  \r\n {  \r\n _position += count;  \r\n return _stream.WriteAsync(buffer, offset, count, cancellationToken);  \r\n }\r\n\r\n public override void Flush()  \r\n {  \r\n _stream.Flush();  \r\n }\r\n\r\n public override int Read(byte[] buffer, int offset, int count)  \r\n {  \r\n throw new NotSupportedException();  \r\n }\r\n\r\n public override long Seek(long offset, SeekOrigin origin)  \r\n {  \r\n throw new NotSupportedException();  \r\n }\r\n\r\n public override void SetLength(long value)  \r\n {  \r\n _stream.SetLength(value);  \r\n }  \r\n }","postId":"2016_11_ziparchive-on-write-only-streams-a498b4ea-1d1d-3c69-87a9-e97576de10bb","replyTo":"848d4384-ef66-3f83-8cc8-fa8ad47fbf57","date":"2017-08-25T11:40:58Z","timestamp":1503661258,"authorUserId":"disqus:assilar"}