{"_id":"0d495355-4db0-3ad0-9bc3-3e50a399a6e2","authorName":"Assil AR","authorEmailEncrypted":"tNxxt+RIVvW6v3m10sg6XBAAcMlRGiNqhPcy8erd/CtDSzUYGYshzeeyMwuZDSecbcoKqSIvXvjigXl0JXqkUT3B8rxE4Ya7TJIWZrXX5ggIRrXaFV3WMF3pgfb3KBZm9M8w3olZt8p29hyBHGCpq4PWU7/ybZjDa/7iZee98zWT7Dl7nQv0utsn1FrYHCoWjgHFT+KsGBun6ywFky+TxTyQrzPTQH1NbDcYcM3TKaDExnv3pwhENvE/2TzN7ilwOhGmk8zNcuzMB+VVpf4jWRrj7YzX0BdXHNfHUfFEmBbqVtVodU9xPFwN0d7EZE5jcJwri+YbLKNqQn8rf522xf2i4J/rStF4Iw2h6PDR5BZbLilImfGWnCCF6RnET6KhPvYz+BUrJA50c3WYooHlKrjcCOVV9mn3TCAJWrL3uN4ezwYxM0X7LfVbOi9wcXHXqtBExljEnRg7QHogHYyQiJer+9iisDFFe+F+YmVADOPkS4RygO8E774MfKxz2x8UUPMrj1qA6H4PAHNye+vcW3yxT9On3BJaDcLU7eQ6R7HpJse//V65EK+89v3OwSleeg53MP5EO+HK4/gTXRKqGzImufNa1KvhO+tsjfL+OuSJSI4rBmb1um+J+3W+85khkgUsCEwVmRTDvUimsyu5cGDbweYHbsuTlzZA0P0DO7s=","authorEmailMD5":"3e9c5cee36041dd7a396aaa5fdcd01b2","message":"Is this an acceptable implementation:\r\n\r\n using System;  \r\n using System.IO;  \r\n using System.Threading;  \r\n using System.Threading.Tasks;\r\n\r\n public class WriteOnlyStreamWrapper : Stream  \r\n {  \r\n private readonly Stream _stream;  \r\n private long _position;\r\n\r\n public WriteOnlyStreamWrapper(Stream stream)  \r\n {  \r\n _stream = stream;  \r\n }\r\n\r\n public override long Position  \r\n {  \r\n get { return _position; }  \r\n set { throw new NotSupportedException(); }  \r\n }\r\n\r\n public override bool CanRead  \r\n {  \r\n get  \r\n {  \r\n throw new NotSupportedException();  \r\n }  \r\n }\r\n\r\n public override bool CanSeek  \r\n {  \r\n get  \r\n {  \r\n throw new NotSupportedException();  \r\n }  \r\n }\r\n\r\n public override bool CanWrite  \r\n {  \r\n get  \r\n {  \r\n return true;  \r\n }  \r\n }\r\n\r\n public override long Length  \r\n {  \r\n get  \r\n {  \r\n return _stream.Length;  \r\n }  \r\n }\r\n\r\n public override void Write(byte[] buffer, int offset, int count)  \r\n {  \r\n _position += count;  \r\n _stream.Write(buffer, offset, count);  \r\n }\r\n\r\n public override void WriteByte(byte value)  \r\n {  \r\n _position += 1;  \r\n _stream.WriteByte(value);  \r\n }\r\n\r\n public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)  \r\n {  \r\n _position += count;  \r\n return _stream.WriteAsync(buffer, offset, count, cancellationToken);  \r\n }\r\n\r\n public override void Flush()  \r\n {  \r\n _stream.Flush();  \r\n }\r\n\r\n public override int Read(byte[] buffer, int offset, int count)  \r\n {  \r\n throw new NotSupportedException();  \r\n }\r\n\r\n public override long Seek(long offset, SeekOrigin origin)  \r\n {  \r\n throw new NotSupportedException();  \r\n }\r\n\r\n public override void SetLength(long value)  \r\n {  \r\n _stream.SetLength(value);  \r\n }  \r\n }","postId":"2016_11_ziparchive-on-write-only-streams-a498b4ea-1d1d-3c69-87a9-e97576de10bb","replyTo":"848d4384-ef66-3f83-8cc8-fa8ad47fbf57","date":"2017-08-25T11:40:58Z","timestamp":1503661258,"authorUserId":"disqus:assilar"}