{"_id":"ddac6fbd-cb6c-33e1-8497-a606dc1c9a34","authorName":"gambo","authorEmailEncrypted":"JTXLjWVGyIooM3qsbPUV8HXn09fyquyvpqNKcNkRrpdMOCvxOjMlToCgM6YE034qgbm+XFT/3DvFKkD+6107A4mhQegXCGoehFnsnMHKbj5unv4CJ2i6kWa0un+aw401h+Jvgn8eWQhWpXdurpVwTsYM5gXExpxFXKmL70FlUvB36IT66ayC4D2N4yxzs06FlSDoSZ7axWrQA+cQXtw/CjT4yc56dMJKjMdFn8emj42U579bCFnCpb5xrjOkGOrj0PA99oUogbMIfzv++24Ye/xufGNR2a5ZOB9etoRj+DEKTnECBJzHGeMOwKZ+ezS79jcouBBPO8LjYFToFvTLPPFCs99it3gwmvsGFBdaf4TpyaMHRZTtZBWj5BqvplxB519XM0OcHs4l0AKOHCHjDl7nX8RfwGnDj6bBwOJfjUdR1tCipg3KLn5gEGYPfiunSdM+gymt2U/1VKar958mYoccpOJEvKonIQt3Mb1Tnbx00tWNa27VjIE/OCPPGnoickVuu0qejSNkK/+vjSFMllNRdGSsSzxJm/ubJ+BCZWKPZf17aThAPXA/fvrkw4UrYllwkJNxTq+XtpNi1k7IikgVpOfa8J7OSDdGgOyr/gT2FRv1KL3JB1FKmzDndyu25ytDMi4F6sb7htRCES186mrzHONzDPu1eVCVJ8DJT0U=","authorEmailMD5":"358043878dc0f3fa0cc9ee251d274d53","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"[http://blogs.msdn.com/b/tmarq/archive/2010/04/14/performing-asynchronous-work-or-tasks-in-asp-net-applications.aspx](http://blogs.msdn.com/b/tmarq/archive/2010/04/14/performing-asynchronous-work-or-tasks-in-asp-net-applications.aspx)\r\n\r\nQ5:\r\n\r\n\"If you need to, you can hold up the unload as long as you like, because we wonâ€™t unload until your Stop method returns the second time. However, you should be well behaved, and return in a reasonable amount of time, and preferably immediately the first time Stop is called.\"\r\n\r\nYou can also test it yourself.\r\n\r\n>>>Power loss and other catastrophic events can be handled with a proper architecture (persistent storage with independent backend).\r\n\r\nSo how is this async operation different than any other in that respect?","postId":"2012_12_returning-early-from-aspnet-requests-a3ecee00-e6ac-329e-876c-4366c0b78693","replyTo":"aa158d45-209c-3b49-93b9-6c4933cb7adf","date":"2014-06-05T07:54:14Z","timestamp":1401954854}