{"_id":"ddac6fbd-cb6c-33e1-8497-a606dc1c9a34","authorName":"gambo","authorEmailEncrypted":"QpNL4gn3z2YJL4LtnpX/trykGgGmGIL3Luhvn9lGRpmAb6gMG7BLOQTinOFtqldc1+peeVV/os7fT0ewYvqklfUh5AQRyeqBplH3qB7ES5lll2xAL37D1fFNVrney+kKKPptizT4uD5OQjZZx9lJ1JUxzqjcaJACbG7yBLOTSrj/ZMqsdSmOCTJ5zU3WDqkLbsGR0ZEWkOJbxvquSUisH3tYE97wRNvPMTglst1rRueqynunxkay+3zZJR/b2f2AdVpoC1/KyiEUe47LtfLT+3vZC3om2LDXXB4lgc11Cni7MOT203r1basHH8MuiCXIWiiVBPTmpAVgU3wi0W8QSHzTJyaAgp1heLk4SM1GRR0Wnm9zps4EkaIoX+BGe3ydzW6vbMTR0AN4pPYBAlPeVCpuCBiBQM6nyXKA/bJkSl4iI6NZhcRbDAkaPGYt3SsiO66mP0v7B6ZH5yS5yZHczzqmUntlPdloTY3TG3ccxWTlBqkBUkiF13EYkIVG4PWYctm8Pgoh2qVSdzwrR7AF+pVmukz+PnVtNQBcPZEEt8XapOMTGAvG2MbHLWoVHhhWW1+j6uk59gzt4Ia+uiJW0Dch6mO3mrL4oibZ3FnRdxTSGB2dA4sne3OMF8cFTvc4wwBZAK8vPoA4BsWKWmhPdN/ugm2ZajCBRI5tyuzT7OI=","authorEmailMD5":"358043878dc0f3fa0cc9ee251d274d53","message":"[http://blogs.msdn.com/b/tma...](http://blogs.msdn.com/b/tmarq/archive/2010/04/14/performing-asynchronous-work-or-tasks-in-asp-net-applications.aspx \"http://blogs.msdn.com/b/tmarq/archive/2010/04/14/performing-asynchronous-work-or-tasks-in-asp-net-applications.aspx\")\r\n\r\nQ5:\r\n\r\n\"If you need to, you can hold up the unload as long as you like, because we wonâ€™t unload until your Stop method returns the second time. However, you should be well behaved, and return in a reasonable amount of time, and preferably immediately the first time Stop is called.\"\r\n\r\nYou can also test it yourself.\r\n\r\n>>>Power loss and other catastrophic events can be handled with a proper architecture (persistent storage with independent backend).\r\n\r\nSo how is this async operation different than any other in that respect?","postId":"2012_12_returning-early-from-aspnet-requests-a3ecee00-e6ac-329e-876c-4366c0b78693","replyTo":"aa158d45-209c-3b49-93b9-6c4933cb7adf","date":"2014-06-05T07:54:14Z","timestamp":1401954854,"authorUserId":""}