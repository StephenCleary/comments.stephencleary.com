{"_id":"ddac6fbd-cb6c-33e1-8497-a606dc1c9a34","authorName":"gambo","authorEmailEncrypted":"VyT0xcCRX1IcYk8gj7LOnr2dyURmnGhVNXMOU+msHnd621J1dY/ls5j5nPKNNT2VqA/XE48acAScrBfMk+ea2PAVrhKAQkdEQxiubtWgy9z7pHFKkIDFdolqvUv63rH7ncBpqdKo9XhB2vI2+mrtc8GcegIFgJ3fu/Vbs7l7JnRDkMOFqGPl+6OecDgc7A1guwJ3RocNnGUCkpiyTRsrCamPFvDZxG3b+xqo5PNU6mh40ir0+56RPByNWsbYlxdzm6hLsJKk6gCFI+KDNlAccG1ctFydMVdcZtZVTF2OeDZxXsff7NeQo/1sAjMNuYzU1kWG7SUHyeaumjOCu+KcbqPhvhXWx459Elndb2WXpNg3E7BRzQ2mGINgCCHUgtCnttGYLOULbESLkf8Dz65pcRdesrccS3KhejwEqWdmAFCqIu0lUdHSKZlzmLrZtriV4/0VfVwOreX24ZS/YRpBH1CLK6wRNdYd74TTH3BGaN6e0xjqaJNuGI2tgYJacrLMvJo9lcnHdU0KuAeubAhN+iR5bWc8nV6QpI8fG6YuJNe336rHqhLkmPx3eHdo6D2fyZ5NocgoSg4+SHgr3uDg881+sVYg0hMhrzfCsl+olFaVlbi4Y9IrXapb8oIM91dK8AO/A7mRjvcU+ekN9gQ6gHzL1/N/t9s7Ws6/iNWNNwo=","authorEmailMD5":"358043878dc0f3fa0cc9ee251d274d53","message":"[http://blogs.msdn.com/b/tmarq/archive/2010/04/14/performing-asynchronous-work-or-tasks-in-asp-net-applications.aspx](http://blogs.msdn.com/b/tmarq/archive/2010/04/14/performing-asynchronous-work-or-tasks-in-asp-net-applications.aspx)\r\n\r\nQ5:\r\n\r\n\"If you need to, you can hold up the unload as long as you like, because we wonâ€™t unload until your Stop method returns the second time. However, you should be well behaved, and return in a reasonable amount of time, and preferably immediately the first time Stop is called.\"\r\n\r\nYou can also test it yourself.\r\n\r\n>>>Power loss and other catastrophic events can be handled with a proper architecture (persistent storage with independent backend).\r\n\r\nSo how is this async operation different than any other in that respect?","postId":"2012_12_returning-early-from-aspnet-requests-a3ecee00-e6ac-329e-876c-4366c0b78693","replyTo":"aa158d45-209c-3b49-93b9-6c4933cb7adf","date":"2014-06-05T07:54:14Z","timestamp":1401954854,"authorUserId":""}