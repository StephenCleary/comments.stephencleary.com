{"_id":"9f5805c1-dbb3-4a55-a423-e9573c55d744","postId":"2012_12_returning-early-from-aspnet-requests-a3ecee00-e6ac-329e-876c-4366c0b78693","postUri":"https://blog.stephencleary.com/2012/12/returning-early-from-aspnet-requests.html","replyTo":"0fb2a5ce-c1f3-4786-a965-d1887a558450","authorEmailEncrypted":"oZnh9b6CR191lDf1n\u002BsDPb/Kz2pVCG/bd5eHxyEl2n3aIs2MsR9oTUUfwytU1FB6CW62W4RWmMnqz4RZh7yn5y5ZtYasHhanQxfsWor7rPtCyIFf3/SOeZ4iDSzyasBfQ5EzNuLAQTvs\u002B3TAJ6bORnZScHNvpVTPn4tDSxiqPDWLY3RLNAAMSd7sgUqnqLUHFxqQrlJICPPQbFlLyHXMoWIaSfCbs5/BpJt3STtBKn26jJOd/lMDrIvkGvfTLJ01m98VlqnuUJgMluzSmtsxMzvPgxkpTEWzvc0l4OchkZ\u002Bn\u002B5R3s/zapFaXEHHOEjkw5nMMOjbOFuKyR5PgVoD8mu9pmPJHXBAmrqg8G6F\u002Bmyr85A3f7bwI5dWm1KOnsTxjrBW3WiIskvBmx9fEZsGV38nvhl9MrG3p\u002BZjN6O9zURsJLvu5J1GfSPCWq4pJZ49Sz/2sLimuacwIdTlnmaSCCQ/gf32ylRMwl1iERfvVl1lxZd9uJg4NCcSdWb3x2FWmLdNBvXmyxCZDxU4U4o6XmG/6lU89efBBh3qZOhggnJVD2s16/aTd/9\u002BwhatDczyquirDqxq8qoA\u002Ba3/jab3jfVWgCXAdP9/n0sUTTDGG6fJyOqXlw/kXIOgS/vqsSWBLULxihDruhfHaD3aHaUw8yjaC7ZpYF/Q4sZziHF0E0Dk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The \u0022built-in\u0022 solution in that article is quite dangerous. It\u0027s essentially the same as throwing the work onto the thread pool using \u0060Task.Run\u0060. It\u0027s more dangerous than \u0060IRegisteredObject\u0060 or \u0060QueueBackgroundWorkItem\u0060, which in turn are more dangerous than [the proper solution](https://blog.stephencleary.com/2021/01/asynchronous-messaging-1-basic-distributed-architecture.html).","date":"2024-02-02T18:58:48.5994894Z"}