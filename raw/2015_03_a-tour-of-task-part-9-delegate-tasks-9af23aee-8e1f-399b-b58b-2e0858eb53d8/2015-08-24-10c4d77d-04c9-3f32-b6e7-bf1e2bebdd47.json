{"_id":"10c4d77d-04c9-3f32-b6e7-bf1e2bebdd47","authorName":"Ryan","authorEmailEncrypted":"c20ee/35RxvP52I0jAqCFGOsoTBbbEzc+08xzMLHH+KqoCiinn2AB9mx11jA4Jfa57oKtoEMmOxfTyti5XFMjfeIWEtoF89Hn7/Prhmc86lvWfgteJv5G9RHKEf8xyWfIR+3DTTwFIezw/iHo4BjwSbaiV4YWwri3xo391U5zs3rCMLKQfpGsbAbUCqAGxSwV5nktujXIKv6gYYPeHWZZMQHRwsGqUWgIWZPoyte2jASnMj4XdgmRxp+EPeJnhxbKtOudV2Q49fTu2I6KHl5/gvf5lzzc+UqVIkY7gooIgRfB9nDVihcpaCc4UWOIn9se1R26FVc/6r+zjChn9vhgnO9xFhC8Ss3Lf3K2pj2HxCUOsXgc3+dUIoWhJf2YCXu7TAaVVBaAR7LgIKfBxD59RJhlxMvkEvT8oxSWfn+4j1s5EXVAcGD5jX2EYFEiPnaWG7Tv+niwf5768/YS+KHEfJMBDqh2KKluBcQDbeQ8eDcE56CHVGdh3OSbm29sXmTdGiaIErTMPoM5kL4ufi77LpE5iyMltXGiaptsQqoDDTgAoJ6hADhre5FpOGxbyY4/V8QxqKH1etLFVX6OIvbE5v/CLlGiQqVSud669XTsdmUkVZatCF8/63q8EMBg+dWII9OjQtVCpvFGqJlnp/x7TBySQlXTQw/WbmX69D7Ptk=","authorEmailMD5":"81a4cd92a3a74962f5775f58dc73bd86","authorUri":"","authorUserId":"disqus:ryanrolnicki","message":"Hi Stephen\r\n\r\nStill trying to fully wrap my head around async programming (getting there bit by bit). I am in a situation where I am overriding a method that is being passed to Task.Factory.StartNew. I want to use the normal async/await functionality, but I think it won't work out of the box:\r\n\r\nclass BaseClass // can't change this class  \r\n{  \r\n....void DoWork()  \r\n....{  \r\n........Task.Factory.StartNew(this.Execute(), CancellationToken, ........TaskCreationOptions.AttachedToParent, TaskScheduler.Current).Wait();  \r\n....}\r\n\r\n....abstract Task Execute();  \r\n}\r\n\r\nclass MyClass : BaseClass  \r\n{  \r\n....async override Task Execute() ... // What I want to do  \r\n....override Task Execute() ... // What I think I have to do  \r\n}\r\n\r\nSo the question then is: how can I implement MyClass such that it properly uses async/await? My thought is to:\r\n\r\noverride Task Execute()  \r\n{  \r\n....var t = ExecuteAsync();  \r\n....t.Run();  \r\n....// or...return Task.Factory.StartNew(ExecuteAsync, CancellationToken, ....TaskCreationOptions.AttachedToParent, TaskScheduler.Current).Unwrap().Wait();  \r\n}\r\n\r\nasync Task ExecuteAsync() ...","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"","date":"2015-08-24T16:33:21Z","timestamp":1440434001}