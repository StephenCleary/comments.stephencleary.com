{"_id":"72ada546-72b4-36df-bc7f-3b4e0586f976","authorName":"Ryan","authorEmailEncrypted":"Cm8tUpaAP3YTGY0TRIqjFmLC0nWgtZ4Mk3apcqCOuA0zX/Kx1vhc5BEJk30kiY4zLdIe7tUykwF+JxpyHozGriANevKFVQY0AH08fnMgoTx2MkKGEazHTvMpwh/a9BAQyJWJyNFAGOkCURV1UChZlPoCGuxY8pHE3I/PnYi/IFBrQHBN/JMIThOErHzg4bqSuN8J2ndzFK0aMgqzjLQv64oND63Ljmgl+DR/NIUK15+y5a+usCT76Ryp13ihDm6nGy4eTJhjYr6sBlLJsdXduqS2dRR/nDfOgwUYMPntSvlQGWUyeNF7AOqfDFWgjBPtd5ij5vUlAFceeKkcFkbhyf6H+mUw/4AU5UXVvibfHZrofq09AUyOkLhnkn1JSBq7QN1BAwK7+F/yFveCOXZ2wNpd82j5a1mu4KD93HwaLtY5/UY+WiPjUDdPNHsTa7tTDnTn74P2+tV3GnfCv3hcDXs3E873Iy6oyLQXjyUY3+OctRi0OmoI/tdKsTh8YAfGbrZ/9vESAtLthRxbcA3PXgJvYMGdfP8sCKMLTaBK5w0xY6LPB0usHCmQhgmIQIWIqVPm7A5WWXawR1WYjcvsDrw8gOomxFEBqgLYRXH0Swr2nplJHy/5NKSvpl4tQ/amrNUS/pv5123EhtgfmTQ/5uAGSCLW/F/HXrOMHXHYk04=","authorEmailMD5":"81a4cd92a3a74962f5775f58dc73bd86","authorUri":"","authorUserId":"disqus:ryanrolnicki","message":"I actually was wrong about Execute above - it returns void rather than Task. And I was able to simply declare it as async, which worked fine, but the exception wasn't being caught & handled in the base class code (assuming this is context related). I believe the logic is working now using the Task.Factory.StartNew(...).Unwrap().Wait() solution.\r\n\r\nSadly the code in BaseClass is outside my purview - gotta pick my battles :)","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"ca557d58-946c-3922-8764-06535435669b","date":"2015-08-25T05:14:16Z","timestamp":1440479656}