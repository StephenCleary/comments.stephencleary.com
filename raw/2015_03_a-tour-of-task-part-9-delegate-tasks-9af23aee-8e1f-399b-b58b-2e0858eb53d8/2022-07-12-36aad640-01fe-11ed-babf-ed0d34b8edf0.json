{"_id":"36aad640-01fe-11ed-babf-ed0d34b8edf0","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","postUri":"https://blog.stephencleary.com/2015/03/a-tour-of-task-part-9-delegate-tasks.html","replyTo":"62e4fd70-01eb-11ed-a0bc-dbebfd12897d","authorEmailEncrypted":"ZyAlnPps+kmBVdBZ4F7UQORAVEqEFcTmu/uCagpht//TucDWtMMhGKmItlEZmQD24VW0XCveWhtcJcdQirgpDEBU6z6JWv7AK6UKvRQHMEvKtnGs3Fao0hLR5WzZAmTgbk02I/WFS1rIxdvHWdccrQhHqi+5ByV/PTSCay6AEoUv8zqOkW3Vosl38BFjIDZWdO8v5hQsKIhtNpdoY/8e0Gkfq4OSzMNF6WwBuDl6Ctlcwol/aR8tAuSdlL5oWzOakbqLoq9N6tFF9zDwg24rsQW5ruO/uRi9NHCFzE7fUUc3cRnli8qiYwuyXaXrjoTiU6+rZACGKh48UQCTNZvTfN+5Z3dy0KIGpcqfAWhgmnwITtTanX5Oojhwg2WQ4GVE9IaZgHsNhI7Vqb5+YRHlBJ+mrIkRgTZYiyQJs8viMfgN0+fSgzEhQxSxaU+LD1mGVg78xGf9mm7wB5yqYddGybL/7DKeJMti6f+7isrl9ZwoRc6UUddqSBcZlcSFgNCJjhrrk3ptBJVBVaXsikc2Ro024nxc5BSdNTbT7fUL+8TwnuxgsikaE30j11TCV9WhtXi5C2v5zejLL1yAKW9b+MdOkY3cjs8AAQetjvGy7iCcODOJIyN8bJ2s7k0NnqVAMXBvCdS2EmNT6GoKrsjF1aDgC0ONkcisx5YOpI/o68A=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"There's also a possible difference when using `async` vs synchronous delegates passed to `StartNew`.\r\n\r\nBut really, I wouldn't recommend depending on those differences at all. Instead:\r\n\r\n1. Use `Task.Run` instead of `StartNew`.\r\n2. Do not pass a `CancellationToken` to `Task.Run`.\r\n3. `await` the resulting task, and catch `OperationCanceledException` if you need to respond to cancellation.\r\n\r\nThat way, the code will Just Work, regardless of whether the task is canceled or faulted (with an `OperationCanceledException` or `TaskCanceledException`), and regardless of whether the delegate is synchronous or asynchronous.","date":"2022-07-12T16:18:07.067Z"}