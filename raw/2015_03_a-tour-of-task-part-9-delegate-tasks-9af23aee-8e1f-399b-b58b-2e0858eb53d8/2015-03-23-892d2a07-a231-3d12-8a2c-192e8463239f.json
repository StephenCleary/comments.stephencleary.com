{"_id":"892d2a07-a231-3d12-8a2c-192e8463239f","authorName":"Stephen Cleary","authorEmailEncrypted":"bD6BslV1G+mRN3a7QLYibjNTEcn0FPWDubQLbmPoLjnpJ65VJ0oxBNk8XZ40vylBb+TUiA9olqff5XjyD//rJ3wnZOYhiGVf4L3LcZHyMx3VsAITfIolLssRsBQZox/3PckTH89u6JgV/PFYzt3321Z8uiDYhSuEQZ1st8YxVI+A4mrYUg/tSeiB79u/YOIwcjv0qhDGa8DdZFwNQE6f/EXjFtMvbHpHXzxHQkj/6cdegka1b+fazlZS8hw+B0DcsGP4ppuM8VEPWtsyfO6oHlaXIfaYCty4nJKYOYhJJDW0dBytLQVNJzSlCrcENkl6Q2TBtfb/T6wPfImXjtoDVSbNVp6elrDn5MYtiZnqr9AGmi90cuhMuToS7NqydXuetVoCawGD9P0ofOMJO5pOpqpP4BS6McfzQqpoZOdWONIN8jnDMfOh25oxzvuvmPRYaZatnT+y+QpBsBl+vrcEvxUESvY5iAulz5dytgZk+xiuH02YLV53I5ijSBm8UlJDer18wO9WmPQ1SkmSZiJ0LuHGQDHXu8XFNUaE3U7D4IpRETyPFyo8v75IhvYPO/qqUP6kikI40eVxDZFD8aNjlq8yaRqb0s18OCE0v5Y2JTPtTRsnHrpe8mlMx23sV//ToIwj88jWrUybsdNPYSldZgZ4INTxXHqQXozNLLDwzRs=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"You can do asynchronous concurrency with Task.WhenAll:\r\n\r\nTask upload1 = UploadAsync(1);  \r\nTask upload2 = UploadAsync(2);  \r\nTask fetch1 = FetchAsync(1);  \r\nTask fetch2 = FetchAsync(2);  \r\nawait Task.WhenAll(upload1, upload2, fetch1, fetch2);\r\n\r\nThere's nothing about task scheduling or parallelism here; since these are I/O-bound operations, I assume you can just use naturally-asynchronous methods.\r\n\r\nFor your other question: if you start code executing in Task.Run, and that code is not cancelable, then yes, it must run to completion.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"30c1eea7-75af-3c1e-b47a-234108a4d5de","date":"2015-03-23T12:18:41Z","timestamp":1427113121,"authorUserId":"disqus:stephen_cleary"}