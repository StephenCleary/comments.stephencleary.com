{"_id":"892d2a07-a231-3d12-8a2c-192e8463239f","authorName":"Stephen Cleary","authorEmailEncrypted":"meccxlx6mal6r5tWgcuNacvmZQY/ie+NnF3eBeYkDyPgJevWvVpcQMcszvAYSWiUYSXElDUUAC88lVr6dPMh1WZs8D0wG8AFZa88MZuW8Blp/C61X1C7QbmWSH9M4Hb74wYQxEonVfl+tEcDUrxtvrhqLNsJMTjQOsMMuimRCA2yBEKVKr5ipQWH3Gwm0dabmoIzHc+telqUTkdtPHYpPUehJXr2ExSR6Uxdy7b4an2+rNjhMn9ogMKE/Ds5zMVGIDJjUUCAGri0b2zqt8Z7QXlhjdxQI2PH45YfyagznpopwXTEAhF6KZrdHsc5IwTP8xupbYU4VUDmXsnPteGJla+8uCFItN7L90P6P4IXpg8WwGMW0lKOIF5Vo39dRwGLFUT8405ylUYpKok4Tu7qds1p1wqMcubUSN4DjWrgXT83i1Cyz9yNvTG82CMIiRCE8+WjNF1i1SqjhIz65VojsVEzZ0AYxywPjA4zbKxBX4uP/N5IEoPWyS3MB1z/z+9AMwYsYQU/LOjojVcD8gwYEejZQz3pCD+jyn9D2QIXuvWQaUOBJtRS+5YRMkH5Bss4eA5gjZfrx6/ZqTXEfM0cvPtgFV6HpYwSEM8rEoImIk54cgile8wXoUrzuhbCZshyMR0Z/SwlkXehUmulfwlsw/DzwERlt+kO7Jcn2pCeWWM=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"You can do asynchronous concurrency with Task.WhenAll:\r\n\r\nTask upload1 = UploadAsync(1);  \r\nTask upload2 = UploadAsync(2);  \r\nTask fetch1 = FetchAsync(1);  \r\nTask fetch2 = FetchAsync(2);  \r\nawait Task.WhenAll(upload1, upload2, fetch1, fetch2);\r\n\r\nThere's nothing about task scheduling or parallelism here; since these are I/O-bound operations, I assume you can just use naturally-asynchronous methods.\r\n\r\nFor your other question: if you start code executing in Task.Run, and that code is not cancelable, then yes, it must run to completion.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"30c1eea7-75af-3c1e-b47a-234108a4d5de","date":"2015-03-23T12:18:41Z","timestamp":1427113121,"authorUserId":"disqus:stephen_cleary"}