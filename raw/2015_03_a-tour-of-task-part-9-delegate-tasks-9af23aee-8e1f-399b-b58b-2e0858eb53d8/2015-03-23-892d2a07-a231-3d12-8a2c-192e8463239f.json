{"_id":"892d2a07-a231-3d12-8a2c-192e8463239f","authorName":"Stephen Cleary","authorEmailEncrypted":"gt8lTDujuD6H2dskR2zY7kgSOki8veEw199moFgmeccj0WbrAFod8vmEcWOB2PlqjdJQOIAJRFXm8ikwxKTGJECXrOffcrBEIhOke2pg/m6Fh6ze4r42a90K1CWKTp9LLIfAPD5IHnv97AoqYu7iESjhplYXSXZDC8v+2QcPmDHOFQ6SzGvP6LPSfj+Dtv3bFUrk5K7knIFN+olibR920lqXWwnXZC+w28z3OkiLwmR02dblf6BxHrQNDK0iUC8a9UjgM7ZXnx2LnPLkN0T0vm/c5jOy/dSWlqWiv7HlpVXjAy4hp26wdOCNW7pwHF8neoS8E8jhYszwjeBjlxP4FvK7L4thnUC7/it5Pep+inSWmrgJFCLUIX0SJQZ34dtry/jHmuTtr9EDQ50jAvkTN23NEVvE7iVYz/DyUswRbzSVkKbsonF5vYbA2ccJthKXMWrCA6OxfftPpfEfmUELRYLFDeXb9++/bGwSqbo5fVoCzXz+jCx29pJTCKYcL2Jlc8/4VU/xzisYTKzJuufO+/2q4lW5LbzcRnB2yAljcJ57pHeuvYdW5/bkOa/hxFJ7SVGJZmOKTejuWj7RfZL5DgauFjIoE/XgvomSVijW1Vr/8dmc8M9yEni/p6k21i+71UucdxeYWnQtCaUa/sL7ooI2Z+M2I0rFjQR3BG/mnmE=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"You can do asynchronous concurrency with Task.WhenAll:\r\n\r\nTask upload1 = UploadAsync(1);  \r\nTask upload2 = UploadAsync(2);  \r\nTask fetch1 = FetchAsync(1);  \r\nTask fetch2 = FetchAsync(2);  \r\nawait Task.WhenAll(upload1, upload2, fetch1, fetch2);\r\n\r\nThere's nothing about task scheduling or parallelism here; since these are I/O-bound operations, I assume you can just use naturally-asynchronous methods.\r\n\r\nFor your other question: if you start code executing in Task.Run, and that code is not cancelable, then yes, it must run to completion.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"30c1eea7-75af-3c1e-b47a-234108a4d5de","date":"2015-03-23T12:18:41Z","timestamp":1427113121,"authorUserId":"disqus:stephen_cleary"}