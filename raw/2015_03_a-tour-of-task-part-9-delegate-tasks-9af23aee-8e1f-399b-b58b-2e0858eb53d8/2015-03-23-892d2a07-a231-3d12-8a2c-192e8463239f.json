{"_id":"892d2a07-a231-3d12-8a2c-192e8463239f","authorName":"Stephen Cleary","authorEmailEncrypted":"k7ymELRMIUNRdLg1rz+f3VStiq+hRmSEPVJbDSjBNpxytH8kVhNZiBdf8x4jMFQcgu9PweF678i5FevPcbIg8heWwwXFWI0/WiLTMwG7GhlF1MES4vTA5y/j2sAxtwpKMBJ3678Z2t4onDF9M973Tw7hUe6dWnHYFe4hqlQgfO+KXsdMNxv10OMJ05peNrZgMQIj3Pym0Ov1a3YECKVjrJyHDaWb+qFd4vmlzywZiO40tBooQcSHNVPB4zBRIGIvJqx//0pMhCivyrd1sDz2LgU+UO6fOK6mC67Jc1t96AD7KhhbiUmLNMDMEG11fPXRHy9vfMfewKTUI5ltBikrL3qSC/x3DDHegmA71dY7Nw8F24FXvmEBA2UojXnDwyqDolST1uIWQAI/+c4E+ls2PB6LqpzuStxavCMS0BPWtUfpLofFCZ1nqh5Q1josOTMh0k3HDL/hI2mqkp2ly6F0m5XgY7Y66rTgoKzTVtHAsu2kp1VsiPQtY4RbOtvCU+DkffD/o2BHKlCBqB4wzfKpgBTVQBXVgX51nrIZhu5eddH61e9DtE+hYO4ATIxQ+N7L5uS2c//ZPn2DGLlNhvpJvrRdotuVEmFi2nZieTas5Zsxmi3OeVGNZt1VgVLg2IYhYCflH7fROCgBkybAvfYHADEB1eJrHuwLtz4jH64c6w8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"You can do asynchronous concurrency with Task.WhenAll:\r\n\r\nTask upload1 = UploadAsync(1);  \r\nTask upload2 = UploadAsync(2);  \r\nTask fetch1 = FetchAsync(1);  \r\nTask fetch2 = FetchAsync(2);  \r\nawait Task.WhenAll(upload1, upload2, fetch1, fetch2);\r\n\r\nThere's nothing about task scheduling or parallelism here; since these are I/O-bound operations, I assume you can just use naturally-asynchronous methods.\r\n\r\nFor your other question: if you start code executing in Task.Run, and that code is not cancelable, then yes, it must run to completion.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"30c1eea7-75af-3c1e-b47a-234108a4d5de","date":"2015-03-23T12:18:41Z","timestamp":1427113121,"authorUserId":"disqus:stephen_cleary"}