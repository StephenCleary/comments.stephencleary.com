{"_id":"0fa206f3-b09d-34fe-88c2-18cfa4b7e706","authorName":"Stephen Cleary","authorEmailEncrypted":"P9Ep+uQLbbL9vaWv0fURwmEwXeOSb65zZNtaykJPCluXIMJo6i0R9yueRQziqaaqYvsEQONalmHrFCD0w4Mu3p+BLCKdz1sR0DYY8nqh8qZLbwD7I3VkdZS8PvwcbwiwrGxGhU6qE/eQBbXAkz1kktst6sEoVO/FaG57go4j9y5Ww+yQ2eJOMegJc4tVWOeFASt/U30acKggKKC4r+kaIRa2SFptj/9ZrXXiH/V6TKum5G/ScGl1Akb8JyuIjR1kd+PSG3wS7UE8R2nYd0s7Ks8FChaWJ1YpXksrIm/EIV2N03OdIJpsA1jd3knQCyixbJUqSOfFPJBd2QhaFcXfSCanVbY88wXoNDoa613CBrKvxkv1L11mm75STSH5dHVvkf90BA4Qy/KwxUFQ751Yox40RilgEElJUF58bFY/ztxWnB4BgyyQGtgUmJGOdiiz6TZ+E/BBJbSeK0QgFch8mBEVZvIiqaXuoBwUVFOZ6PLHoBcd25FtnKTr74OPRtV5GLw1K+eZ2L89StVhCmMqhF55erQRt5V2gCHMekVGCkJThcNom27fmEFl2YbYexHFyam/c/pgYMrA1Kqltf+dGPJGKBAwGmPw20NkHxoS18IudARoDgm4gfMcqQ5OqnvMFQcNx0Nyj83wAsrPnbdhIMH5bw8V9Zv6nHpX/T3CA00=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"Exceptions in async void methods cannot be caught; this is by design, and one of the major reasons async void should be avoided.\r\n\r\nI assume you mean you're using StartNew().Unwrap().Wait() in your (non-async) void method. This is a hack, just like any way of executing \"sync over async\". I'd recommend at least changing it to Task.Run().Wait() for cleanliness. It is, of course, still a hack, but as long as BaseClass forces a poor design, you don't have a choice.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"72ada546-72b4-36df-bc7f-3b4e0586f976","date":"2015-08-25T11:17:36Z","timestamp":1440501456}