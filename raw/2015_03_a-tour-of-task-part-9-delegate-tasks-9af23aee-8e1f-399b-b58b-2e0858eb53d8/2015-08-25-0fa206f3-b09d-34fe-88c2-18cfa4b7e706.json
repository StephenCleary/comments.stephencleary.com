{"_id":"0fa206f3-b09d-34fe-88c2-18cfa4b7e706","authorName":"Stephen Cleary","authorEmailEncrypted":"RaDJEysGwVM6+W0WnWsurHWtDJ7ZeFxuqpR6EGwkYHDwBB+Kq70uQWk26Ls18r6isw5UheYMvkalCWSJaI7Ooo7kLcm0mFG15+sgOP40pt0OCO0Gc5UwB13loC78tfwzfw6J1zO5YWrNNaHoyPXwvB58boZKkXbco7HUJgqIPvLQzeQuRnuo1yBBW4OW0IssUUbVJYR9WedgduxU/Dz7PD+s7B7B8OQi8uuGQOfeuxEWATRnSmDuz4/UpQpIUXNDhMAbh1fN/a4MlpYTEt3/O12Wy0u+fCASEahnXKWkgjJsVqKiNn+ayKog9xDuocq8zFiNt4S3OPXtsrtu+T04l/U44pOFFOnqL9VBNm3f1SPn9IPpL07ClzZLEtTXmlqNdhSYA/HiUja2BPBgMIRA9Gq+15OapWQplqvGMiYrLlDgQAF94V5gf4+QritdUvS2TMl6CcKC+3mlPnTlYF0VC4Z0QzqfK3X8UFQ57ni/wrMyz6dOA6papBgsGAEqEykCIYNyhL0wwbuGZvFSPjsYZJvY3xRJPov5bCaML0CqV4GzzlDF1+Zmt0RJdj8NpI+svJqrAdvgi9Sij3QPpd+QSEXhKH98SZ2VNeJCm7x9FKwZZkZn6c7ezFCunG23OHm6iS2VYj/SAbOq0kqknCHID/4CFIH1MOfZr6LP67H3HHA=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Exceptions in async void methods cannot be caught; this is by design, and one of the major reasons async void should be avoided.\r\n\r\nI assume you mean you're using StartNew().Unwrap().Wait() in your (non-async) void method. This is a hack, just like any way of executing \"sync over async\". I'd recommend at least changing it to Task.Run().Wait() for cleanliness. It is, of course, still a hack, but as long as BaseClass forces a poor design, you don't have a choice.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"72ada546-72b4-36df-bc7f-3b4e0586f976","date":"2015-08-25T11:17:36Z","timestamp":1440501456,"authorUserId":"disqus:stephen_cleary"}