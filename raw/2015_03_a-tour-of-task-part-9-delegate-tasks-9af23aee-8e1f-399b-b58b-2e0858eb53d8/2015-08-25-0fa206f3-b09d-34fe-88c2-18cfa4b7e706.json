{"_id":"0fa206f3-b09d-34fe-88c2-18cfa4b7e706","authorName":"Stephen Cleary","authorEmailEncrypted":"UYVG+t29+j4YkMXRfOi6j8cTy2DcfdA8DnC+7abvEjIYU+xtnLYqo3Cf6nmsVtHqXvLTca+QS8+b01N7cyn3ils7Kskh7eGPK7RhAzuRbzJPkdbkRx7lb9KqmZa/XoQvYjWlN05K/UQ6lWCxORWybEQc43IC7N9bJgf7e0ATUXVS8SDB2GBuHHO9cSfs8G7bk1MgXfNHqF76t1i9S9hih+whxLIA5oqmqzjfJlNjH+26H+94ecATKSBrc+Q1DIGj3nyYSS7ujFMwdIrDPqv7W/4cg1EVo43GuYYiB7Lemrdy0viaiZqAR1Rzo1hhF91P/m43t8hDrwra14rlKPmmGO5F9GH8hO7SmBr2HDtkdJ3Y0EI/ECcOdzK+XIAVhQ5iYBPcrdwLJqS1gu5E5KEopz7YHdbI4LG/7ttLJy7j+gQu0EVwl4g0e4hnodM/+fnBEZTSqOAYxNvECeEEV1/Dkzwu+D65yg7toVLqJQ6Vou1ya8dHa7IX2grm2t9RSRM9KRHB102jXbbv5mwiTXDtacdXEjX5KDPVJKRcEvjRGU+s9vEXVnCUt6XFxO+xtHGCfR+BqKDrrBBXLK27d129CiTBLsGRaxzItro1bgiUvpTuqUfG8ZcX75b4g4uU9OZnhEVGL8IIDq5GRxtAcX670TEqzpMrAccjlUCDu+Cn3u0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Exceptions in async void methods cannot be caught; this is by design, and one of the major reasons async void should be avoided.\r\n\r\nI assume you mean you're using StartNew().Unwrap().Wait() in your (non-async) void method. This is a hack, just like any way of executing \"sync over async\". I'd recommend at least changing it to Task.Run().Wait() for cleanliness. It is, of course, still a hack, but as long as BaseClass forces a poor design, you don't have a choice.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"72ada546-72b4-36df-bc7f-3b4e0586f976","date":"2015-08-25T11:17:36Z","timestamp":1440501456,"authorUserId":"disqus:stephen_cleary"}