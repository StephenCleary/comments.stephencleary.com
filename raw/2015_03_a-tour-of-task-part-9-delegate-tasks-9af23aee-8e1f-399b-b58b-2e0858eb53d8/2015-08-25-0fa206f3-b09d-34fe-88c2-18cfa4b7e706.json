{"_id":"0fa206f3-b09d-34fe-88c2-18cfa4b7e706","authorName":"Stephen Cleary","authorEmailEncrypted":"OMvjwTQ6m52emvbOh6mzpmAC9x12/O8JfFCf1LTynxGrSA3bE4Lj0m2H0sVmENnyniW8pW6fuAS5gDFVoWPbzTREcTJdoqsrxGzsQ2rNNsGbgGD9mVtzlDQoWkdrcAi9sU6Oyt8tHuuW1o1ClLhLZ4CLeFh/h8//cFqDMTITJV7pYGIRrDRIWawjLqkliYFQmyhQASnxJyO+wq46Xc4JxaYvPS0tsu4h2mnDTpN/6WvmZVoeqU4RhtlZXiWUFzEpf9ZWCXtP9a7Mp7UzyB3Ves5MqmcDUiaKvT/a/hY9fuElk3frbfV0EhHFX3R6FXUpBLZmdItH/dHTqC1aUjlt5t3nIpq/0frnM9wKSAnKOO1r8GxhmfyTyECpgPzIgyb6kqIWpmXXAmgoo/2QRsUQj3hP+9OhqyvyTeX24/W5PDuy9e0uf99EGkju7O/8zMfEsuvwgTyRzCe+a/lzXi9bq3sEIjMYxsPje8TReDXwYMcC6qMapHAcCaEIIQWs4doNdr7/gzlR++KbA8bbuWGyTLF8Zogn7F9C9YGXQRwd4012RlUP2bk0fK1sLPfeKB8CuSePh7YZXamFBWz+9go/EBl5reEVMP6G7NlSMo5SDc0s7lwmM9FL2cJKSeHS/3K2TxFH3TifAvekL6lzKc77pidKYtpLNaYv2Tv1a6YMgoc=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Exceptions in async void methods cannot be caught; this is by design, and one of the major reasons async void should be avoided.\r\n\r\nI assume you mean you're using StartNew().Unwrap().Wait() in your (non-async) void method. This is a hack, just like any way of executing \"sync over async\". I'd recommend at least changing it to Task.Run().Wait() for cleanliness. It is, of course, still a hack, but as long as BaseClass forces a poor design, you don't have a choice.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"72ada546-72b4-36df-bc7f-3b4e0586f976","date":"2015-08-25T11:17:36Z","timestamp":1440501456,"authorUserId":"disqus:stephen_cleary"}