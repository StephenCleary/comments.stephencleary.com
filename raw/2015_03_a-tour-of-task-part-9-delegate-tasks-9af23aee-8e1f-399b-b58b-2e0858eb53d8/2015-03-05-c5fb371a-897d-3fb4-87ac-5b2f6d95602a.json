{"_id":"c5fb371a-897d-3fb4-87ac-5b2f6d95602a","authorName":"Stephen Cleary","authorEmailEncrypted":"hyAax+qnzIXzbPIerX3iMgVAQGnN8Oad9VJ7anxtfeJM4Z2CdKRP60/gmiSRgMrQhF96Sdvd2BsUzts5V+xUI7h5D5Szmz+iZ/sLVUins6UN/xqd1q98S364up4xJEhTF0bFOFkmYeoVuaLJjWGgRmhwPMzbOQ5ckMN7g46Pn+qKWwBXmkvbjHRk4DunWYBgZifmt6tLJdm0b7aXgxBWB6yRclOqdoGwJ3waMAFNnZhUQwFwBd8LlkNt9pfDhX+LxdcQCQkPmBCd4RFwvLEs+6Tg1XuaTKYdWdXEk2y0mNMY2djFWtHnwuI7dNo8b0pysVIIW/VOjSWiZrS0mqzAHu00q6VBXW3hMBK0gdWpsDIhALGSKmSmwU/Exr+MSyfAg1OSoNQdnvU7qo7yA7vSPXpbmFe2KGHbbmDoYte6fdygq6z+72wH+k8BvH92JgTHEveW0KyFXqR1fXyrdTaf5bTXZI86GFZO2TU6sERqBv5pedkIoKvjhnd3NqtclvNszIDx0N+bQn9BLculTlmWrJZLYIlXIADEPWNgdH0yDyHauM6DrSTEyvcK8x159BgpGs74UM8FtmHWFY6eKbXwRkh/m+Vcaip7QJGoIyf1+AMJKNaXVVu8q6gmSrSnxPAs4qNLSA8R2CNOnFjNgFmWsPi/3KuJM/PLXA8H1bP2wc8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":".NET 4.6 is planning to add a Task.FromException method. In the meantime, you can use TaskCompletionSource<t> and call SetException.\r\n\r\nOf course, if MyFunc is marked async, you can just throw the exception directly rather than returning a completed task.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"eed07573-b7ad-3fe4-ad55-05f096f8fae8","date":"2015-03-05T13:19:46Z","timestamp":1425561586}