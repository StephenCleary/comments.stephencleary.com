{"_id":"c5fb371a-897d-3fb4-87ac-5b2f6d95602a","authorName":"Stephen Cleary","authorEmailEncrypted":"eHbBusANXvtAdx+K0l2MWnFEAF7gLc36ht0PWA8J3Y2ckwIqfE1caEpS4U+lC3czXnzljQewIExNy+Psy3GPIJSLuVcdN4TOjd2OnR/mj0JNTQTyVD76i6GtfIR39lYyKBEE0xCkq93YvSTORGqFPmAQLZFUNQH4R2P3/3ml/l9JFvbgX2lH2exF4Vi7MFdl1x8dQR5wQH0iVQOD4Dyx19mMK2DQIYVyRAyA23z58vWIAk37aRx7+cY4nGBSI8hXEue+m0IDItp/CIHY2EyzjJ4/vHywfK8x+qObD3yeY3ygI3MvfKyEkSsFDe7KcfrxTgGP5DaNyizajk29WAQgp4kZYzPWfI3oJSiKK5hqp+CUN1Aw5cPyPODyr854SWZBxXq1QJbSkbcwXgtmcnUTJTKdOrlktQczLBzILqmK3dhXP5GED9CczTqX+GMdBNlUOyXsK6AUF9NLtHXl7DtlfAoNaL/M/rkXlxRl17dIfIWm6Oax+Cqebjx4oJVHf1jxXdZBD1ZhLocadM0HkUsjSwZ5enatQ4XK5vF+YozWuI5vwns4RdvNZ1cdBlBUNxBj7NSm3LmzEQbjp+XrJAyZwgBXQsWFUwL99v9RoWog5cSuAtQlJIH1t0/0vZeCVDDlan0X+g3z7zHhf5blGIvuKfutPlk0HN+n7Ho5BhK8xiQ=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":".NET 4.6 is planning to add a Task.FromException method. In the meantime, you can use TaskCompletionSource<t> and call SetException.\r\n\r\nOf course, if MyFunc is marked async, you can just throw the exception directly rather than returning a completed task.","postId":"2015_03_a-tour-of-task-part-9-delegate-tasks-9af23aee-8e1f-399b-b58b-2e0858eb53d8","replyTo":"eed07573-b7ad-3fe4-ad55-05f096f8fae8","date":"2015-03-05T13:19:46Z","timestamp":1425561586,"authorUserId":"disqus:stephen_cleary"}