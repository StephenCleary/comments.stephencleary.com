{"_id":"71b4b46b-fec3-36c9-9dad-5bef347b3ebc","authorName":"dotnetchris","authorEmailEncrypted":"LKXjtIZsfd/1VhtMqtmyS3N5dTRTXeARuaxNELxkbsvQWHSpuEaN4o9ezR+uoyXF+KAwW+aT0GEzG9ZUdQDv+cQZnsZ4iDWKIjAHAL82w2qazjThSdowqXA26NIyMKaIszgeIVKuZjkadehsyviFpdv/VzQWT38kKgV2vwKqZ5JAAfIRLQGUn/Q6iM8okz0kzZ+VcqY9O4ZghOPii1zvh8MNvoDXQiGPc4zb3zyqSq1H+Wz2aW4ztw8AiAAIwylJHgyj+LqhCwD3nkrTKdgHVU9i0j1YWomeDTrYKXeO75Uw+1CdIF2VnMGX67dLxOkz3i2fDtOg7NtVhNMM1DbNzGW+bQlqcia9fcz/79iqDE3NQM/8Llx+rZQqFs/9kKRJY5zxHIzfPJSwaQ6x415GA9t62SjYZA5nxP6kIbxlD5egabnz2k7nAjEsrM2WbG6YEopry99AxKFGBD0qHgwfPR7Z+xamuqIhQSDG9LYATiyL9hAcW9pDEiRNPKv8Hldd58jEYmP/2CDP/qF8jzkZ02c2YFP3aj7ZTej4kTe1G5ksJASSijWUSBdLSqZONngoHQGqNglL9JOkBYV2jJ3pHyF/UUTaG7aEp5vBFyQ7zQ6Ce/r7zsZ9VuZLmHOh681dmcvDw6mko4q+sK9rAPdNJATxMQZ84BPg32uMiN8NVn8=","authorEmailMD5":"f0e7c2d0d5d83c928cfcfce66928160e","message":"Fair point about the AggregateException. This usage would be under a console application or windows service. If this was ever executed under ASP.NET or WPF it would need to be outside of the request context or UI worker thread as the application would be in an undefined state prior to the completion of the Lazy. If a UI thread or request thread tried to access the Result prior to completion i would expect to either block or return some kind of not ready error perhaps time out based.\r\n\r\nCreateFoo() will take approximately 10 minutes to run during which there's nothing else for the application to do, but the internals of CreateFoo are massively concurrent. CreateFoo spawns somewhere on the order of 50 threads all returning back to the single thread.","postId":"2012_08_asynchronous-lazy-initialization-248a82a4-1ad6-39c8-867f-974206a56b23","replyTo":"e654d7aa-fca5-388a-ad25-d87cb5db5b34","date":"2015-06-02T19:07:10Z","timestamp":1433272030,"authorUserId":"disqus:dotnetchris"}