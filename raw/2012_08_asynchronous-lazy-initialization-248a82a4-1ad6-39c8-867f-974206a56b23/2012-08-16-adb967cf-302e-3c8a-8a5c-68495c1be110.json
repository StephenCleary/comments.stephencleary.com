{"_id":"adb967cf-302e-3c8a-8a5c-68495c1be110","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Yes. There are some use cases where you want to start the initialization but won't actually need the result until later.  \r\n\r\nOf course, you can just do \"var unused = myResource.Value;\" yourself, but I think calling a method is cleaner.  \r\n\r\nWhen you read \"Value\", you get back a Task which represents the factory delegate running on a thread pool thread. Accessing the \"Value\" property kicks off the factory delegate (if it's not already running).","postId":"2012_08_asynchronous-lazy-initialization-248a82a4-1ad6-39c8-867f-974206a56b23","replyTo":"","date":"2012-08-16T22:46:47Z","timestamp":1345157207}