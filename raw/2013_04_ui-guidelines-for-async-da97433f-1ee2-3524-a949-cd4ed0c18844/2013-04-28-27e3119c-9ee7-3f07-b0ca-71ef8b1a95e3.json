{"_id":"27e3119c-9ee7-3f07-b0ca-71ef8b1a95e3","authorName":"Stephen Cleary","authorEmailEncrypted":"JW7FPmg/fk+KT23+weR9IrMMEHul563xZpGtXaY/L6usJ3Y/0yIr+s9TlRfJa28hCgUuCmTG8dnPA7r0SrQ/GfHzBX3VsA0HfCllx6sKMrD/ZKx+p9PUkqT5C3FKAEheklWS5bbQT6zC2/s69QzjozsNpRNIXBfguK9H20/PstFh3B97FJydOueAdJwbwgL1rUb0/I/sDrFZnyAXb32mwcsWhZmewvFGld0QmqAmb7F7WtUG3uJghUUU7NVyPh92QWl93PJB1jzJdGJIKKdtfVdXQI9wkhihmsCxSB++Epij+6aNWws3fDDnxZQZrnFaLNwSzccR7uuaRZsmJtwLFSfLA5H3R+4YVRhC3z0Opy6jeWb0FhSac8DH0jaf+wqH3zWPXtgCnGb9ScRAxh51+YTE7XcQt27435jYX8/E/pGBvkY/pHQ9xQzO9xAXQnPqurAUE6OsRdp9P190p6YWWVYepr7APm/958e99SOtckQRca9SaMrVKTvGV98i5qleprhvlh8E8aqJCIDtO3uefQUSFH6EWomMp5ikdKPLfqxM8gkz5+eUsXXkzyw9JXYku84xuyqT1qlY1fV6GoO/KDAhEIbFPxCvpL2znVuwFIIVyAPZmb1EM83ZI1BSxs1pkek/w5h3bCWZ1vzpjBT5m19I3cLaG3TV8hmyC+ThYeY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Good questions, Travis. I don't have all the answers, but I'll give you my opinion. :)  \r\n\r\nFirst off, any kind of property or collection changed event does need to be raised on the UI thread, so you'll need to marshal to that thread one way or another (either explicitly or implicitly).  \r\n\r\nI don't *think* dependency properties will marshal back to the UI thread automatically, and INotify* will only do so if you implement it as such. Some people do implement automatic marshaling to the UI thread. I have never done this; instead, I treat any data-bound properties as though they were a part of the UI (e.g., in async methods, I do *not* use ConfigureAwait(false) if I need to update a data-bound property).  \r\n\r\nThe new cross-thread collection synchronization in .NET 4.5 is not fully automatic; it's more of a way to coordinate ObservableCollection (or other collection) updates between the UI thread and background thread(s). I have not used it yet, but I would consider it if performance analysis indicated it would help. This is assuming you actually need a background thread accessing it (e.g., Task.Run); if you just have async methods, you may as well just marshal back to the UI yourself and not mess with the cross-thread collection synchronization, IMO.  \r\n\r\nThere's always been *some* support for cross-thread UI operations, but I just pretend they don't exist. For one thing, I try to write portable code, and it's always hard to keep straight which little features are on Windows Store vs. Windows Phone vs. Silverlight vs. WPF. Cross-thread UI operations are one more thing I don't have to worry about if I don't use them.","postId":"2013_04_ui-guidelines-for-async-da97433f-1ee2-3524-a949-cd4ed0c18844","replyTo":"","date":"2013-04-28T08:02:19Z","timestamp":1367136139,"authorUserId":""}