{"_id":"bc94b147-f774-3989-83e2-f9b197e733e2","authorName":"Lu√≠s Fernandes","authorEmailEncrypted":"nb3q2ILkdbeBfQOGFkh/X9NlBxpPKZC4FFfhOe6I94FezaTDcZEmrYTrG+3cj3bSs9rQqnXfhq+7yjOhOSjGEPSgU9csuKnwmsP94xRwAH+oV+KWXLPWXzMfDgeut767Yixg1Dk7+KqLpXfWimZifeOcF6uw4lK21iCVfYttIes0BXjnZdkZVb2E2OcVH9PFsFIggKexYZCzYeAxwoUBy22YEdMOeB//phKA4MoTIcWCIJ6i5bTOu2jtpOC3EPwchRRY8w+GQbYLdeLwYJCru+ABfpc0H3K6ky8sAXDngMQu6JQseTl1fJSv+GDjE/DlVj7kTtyNOU5q79EFgS7IeWsIr+wmcOP6Yk75bJnWcQi1HBCRvhuYUDORMYw34YnYe1hohFs113kyza9oYMathbEGpmHYPbiQ2uHf9YrszJSDjsICRr1tJj4jmuZPPXqr+ZP4SbRSRg6ItmkOR9GjeF7FOkk9K0CRzXIzOXxP6NjVikzlarMBuL4uZBxMqYfH1gN4KNw3dDQOhAT9D1NWhMg5AjDnfZ6Qadk9N2jPYrwfHPVR0E2UyvHLkwLlFoBzBQxXP7FKWR4KQnW4XdZURcqLQBevoSGoecx3XpXnBHGG44Dn+QQiMz10hi88kwHimfd+uqJy4CYYUVqfTGRQueulqJYJUBS99DSogXKH11o=","authorEmailMD5":"f35449b8f0a5a8c3a4a3825517425881","authorUri":"","authorUserId":"disqus:disqus_IUwcFx2IkQ","authorFallbackAvatar":"","message":"OnCreate is overriden, so it's not possible to make it async Task (async void doesn't seem to work).\r\n\r\nEdit:  \r\nJust tried it in a sample project and I believe it's working with 'async void OnCreate' + 'MyClass instance = await MyClass.InstanceAsync();'.\r\n\r\nIt also works with 'Task.Run', but it doesn't seem needed in this case.\r\n\r\nI got some questions, though. Since it's a Singleton class, it's expected to be accessible anywhere. Do I only need to 'await' InstanceAsync inside OnCreate? 'OnCreate' method works like the 'Main' from a console so it's the first method to get called. Or do I need to do it everytime? Or perhaps expose an 'Instance' method that just returns MyClass instance? Like so: [http://pastebin.com/gXfutUZm](http://pastebin.com/gXfutUZm)\r\n\r\nIf exposing 'Instance' method is a valid option, shouldn't I check if 'Initialization' is null? And if so, would that be thread safe?\r\n\r\nThanks!","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"1bc947b8-9310-3c48-a3fe-32cde07c668d","date":"2016-02-12T01:43:43Z","timestamp":1455241423}