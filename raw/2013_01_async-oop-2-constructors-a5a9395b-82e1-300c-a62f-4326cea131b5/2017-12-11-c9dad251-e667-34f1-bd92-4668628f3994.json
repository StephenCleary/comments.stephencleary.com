{"_id":"c9dad251-e667-34f1-bd92-4668628f3994","authorName":"Zumba","authorEmailEncrypted":"ux2kVPPZH3GmdGN7znrnQvHDQEc3/g90KAf7APLbVrdVkqMIaCheCEcW9xXhD1IKyHbXEDj0Ernxd/bGhAeA9Psvvlsty+F+h+P/J/OIOi42D2BdSveM6EjC2L4fvQcBhyaIl5kBaKJg2Mj5oHZi+Jfu+/9Dft8OYEcNeuqdvAKthqvvraWLkq5B9wIlFCSY5nYRR5ErnwBFwQcgvKznOU1mFhJ9APwfQHc02QdNNTeHQmUhLU9VjRqoZAYwqr79bxYMWcmEpTbpZul9lD8tT0vyKpuAjtTQ/5mwDuhKnnUZuQxAIxKb54eCN8v1DpgipOKp9JGL1NhMImqCq4OU+wDF6ZQes3jyd04nIhK2L49xJAsTs58mXp/9oVnvWELCeti9hncL48/GXTBQsY1VhK/G0LUw8B1863TIRddqRbR1LnOMRdTwtXU0B6f7ka77B7yU/6Ww3l9IzKWcHivF36ETANHkDhogWkbj248cP0hVlDyEwFB8CKUGJqQM4Gl7tEP8+A/6X6tA7/WV0aFnoNmItXNZmfLIvEnswgP+z5bxtCIgSoR7TG5wUnLcw0lBF8wsCcb8RO510uKEyMn1K2lx1i4NUILON9SjpnwYUO+Zz7TJc9Yx0VEkJUE9agPEFGOCTvn6P1urrMoa5eZOiRGGjxDt8u4JAscgYbIChmk=","authorEmailMD5":"80836835f5cf0c113b97d32d1bf1e5a9","message":"Hi Stephen! Thanks a lot for these blogs they really help!  \r\nI have an issue if I may. In ASP.Net Core 2.0 I am injecting a repository in the startup pipeline. This repo connects to an external CosmosDB database and so far the template code given by the CosmosDB team connects to the client in the repo constructor as such:  \r\nvar client = new DocumentClient(name, key);  \r\nclient.OpenAsync().Wait();\r\n\r\nMy understanding from your lectures is that this is too bad! :):)\r\n\r\nOK, it's bad so I tried to correct this and it is tricky because the repo is both the factory (or fundamentaltype) and the calling class, so somehow I am trying to have both in one. Is that possible?  \r\nThsi repo is then injected into the controller constructor for of each view, where I have GetItems and CreateItems methods to populate the db. So I am really confused as to where putting the calling code \"var myInstance = new MyFundamentalType();  \r\nawait myInstance.Initialization;\"??  \r\nAnd also, I wonder if the factory method is dead in ASP.NET Core 2.0?  \r\nThanks for any guidance","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"","date":"2017-12-11T14:32:13Z","timestamp":1513002733,"authorUserId":""}