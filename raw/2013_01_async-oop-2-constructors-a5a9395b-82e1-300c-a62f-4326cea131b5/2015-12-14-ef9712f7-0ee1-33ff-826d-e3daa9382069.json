{"_id":"ef9712f7-0ee1-33ff-826d-e3daa9382069","authorName":"Kevin","authorEmailEncrypted":"wqOkNmjYrPYfl9DJr3cpTgsiMLX7bQVpGbEgpZ8FayVa8LcjOSWC+9jGU8k1qOAhY/b+iUq7fg7cFwobWH9kz9iyQP7T3er2AWHI7GOYeI2Boki8jxeyqPhIIcsOqw69IjSjFS8E1ly4H01BDpgiDz4BJIcketYalam7xUDUmXh2kAgESe3qpd1CZXuBxmC+R+iHRh/CnwKFqzNISXQbr7jfKu89IWr4N6mQc7/AiYbOPVhlpsauXE7wlpM1DhzZ7L+RrRfF3NKKw+8MK0VkKU9Bzsztpt0HNg8VmI4qNhqgMDEa7rnl1jEIN2aVFX70oV4Ia831Qy7yImR3jFUiXjqmxsw92gAKMYUohhYburqVZZbWYjxCZeAmjzYB7N8Kjt4f79aL/jkQyuv/JAYC9vJ9MbdaQGXVSjwBgiaY0UUVL3IIWJfnRMzY6MYDBFUGA00tvcHUQGRKlC9MbyG0VjelzfbBT7DSiLbsEyd18mS4yEMg6DFLEUfAQEGNl/6Dv/ORNOZvNRkZI/chZc2xVvDOurAMsZ1PWzYsA4IAyOH6ytGMsuiPE1FCmVLryOoyDjGoPXJJpD25AXr+7dinnPdcgm52n6w16GPKVemwGhvbDO9rNbnEPGqkRLibruEvktcoGfbpav0O6U10hUKwIeQdEFnH+fyKVRwMx9niW6g=","authorEmailMD5":"8c607b1c90c18830d86e2769e6cc131e","message":"Stephen, thanks for the great post!\r\n\r\nThe Asynchronous Initialization pattern is a much cleaner way of solving the problem that what my team had been doing. The only thing that's puzzling us about it is that we can't figure out how to unit test the initialization. We'd like to wait for the Initialization Task to complete then verify the object's state, but when we try to wait for initialization to complete we keep running into the deadlock you mentioned in your July 2012 post, \"Don't Block on Async Code\".\r\n\r\nCould you provide a simple example showing how to unit test the initialization?","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"","date":"2015-12-14T22:21:01Z","timestamp":1450131661,"authorUserId":""}