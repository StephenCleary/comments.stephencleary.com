{"_id":"8281c10d-2063-354f-8b25-621c752016d6","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"I would recommend an asynchronous factory in that case.\r\n\r\nThe problem with blocking on Task.Run depends on the context of the calling code:  \r\n1) If this runs on a UI thread, you're blocking the UI thread, which hurts your responsiveness.  \r\n2) If this runs on ASP.NET, you're using a secondary thread pool thread, which hurts your scalability.  \r\n3) Otherwise (e.g., if this is called from a Console app, or a background thread in a UI process), it's inefficient.\r\n\r\nOf these scenarios, I'd only find (3) acceptable. And of course the StockService code doesn't control its context, so it's not a great solution in that regard anyway.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"07f589ac-968c-3641-9c1d-6d3fa4b1a71b","date":"2015-05-06T19:28:35Z","timestamp":1430940515}