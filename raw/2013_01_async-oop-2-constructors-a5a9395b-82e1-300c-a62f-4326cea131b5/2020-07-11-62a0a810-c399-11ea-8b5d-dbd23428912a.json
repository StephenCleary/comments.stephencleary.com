{"_id":"62a0a810-c399-11ea-8b5d-dbd23428912a","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","postUri":"https://blog.stephencleary.com/2013/01/async-oop-2-constructors.html","replyTo":"","authorEmailEncrypted":"NaPEDMhgHUNe0sFRRDVcDHhEolT39wwB/SsX+y+n1ZcDVVVr2ekP7ftvz2fB/97Rig9QywWX7UTkwT774OEnLw1T5xwaxllVoKd6E3N044XoJrDbt7u77dY1/iJOyIw518w8xl2dw+JPi3/NUViMUK+o8XHMUstagqCFFEws+AL7uJdwnaIHueXJFt/L90wx42NY2ygOPTA/DBt+XYtRqX72Y2bFUMsiPsxD/yN+9BLbebDlWKbXnoaDbp4evCa3UTn1mRkz/MAeRDSJigL1q1FobavQY0VYoX/GpO5Hzd7U8+fTLMUYRa7qmoD5svN3IHzJEPKF+rBsJ1TM0zYxtqr0coVyDB+0A6ZRzc5C7KlWlgCYhZBBrfDr0kHvB8BZiHF1XjmzdWS7lHi4xs/bM64DIxgU2uvsWXiavF5Il0vcLlBY3uZQFR6noJNY1ZcgZg2S8oTHRbEeUkX1Oc8rvdMDskV65a3wP4+M+r1RC2ClAqW1H765fiSqampBQ6z7BjVz0MjrvtYqB3NWI0+sb+wTKCdtJBiynEKnWEEfr/FgY6yCvoyd/jfE3WRDhTfSO1ObIb+AcPW2wGVQkbxYQkPICLAzNLOjEEpAiGwCo8S6wIsxuwHlSf3aAKI6SyxJMK85NY9b/Vej6tn5wwh5d5HhERazfScmd/13/VTLPw4=","authorEmailMD5":"7722489b330840803effaa642d28cc24","authorName":"Joe Peavey","authorUri":"","message":"Hi Stephen, thanks for all your work helping with async. \r\n\r\nI'm using Asp.Net Core 3.1 Blazor and The Asynchronous Initialization Pattern and with the razor pages providing the OnitializationAsync method, I can hook into that to get a complete async startup. \r\n\r\nDo you think this is preferable to using GetAwaiter().GetResult()? Should we fall back to GetAwaiter().GetResult() when forced to call an async method synchronously?","date":"2020-07-11T17:10:14.302Z"}