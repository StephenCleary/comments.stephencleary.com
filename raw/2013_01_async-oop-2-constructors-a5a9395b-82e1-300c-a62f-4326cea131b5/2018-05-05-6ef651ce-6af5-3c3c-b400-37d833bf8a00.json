{"_id":"6ef651ce-6af5-3c3c-b400-37d833bf8a00","authorName":"Zumba","authorEmailEncrypted":"qH0IDPNsRwn+VbBS1cRFFWo1hub2tdZdJ/CF+i2g2350MNV2iVgBku+wH62E9TzQ2c7swMA5hgVM2EwazrTp8/58A1b9ZldZlQCkpbA/F2iHRG15MnRvyuNLeEUolxikg1hawMHx3r5ELKIioXPp4CrUO4rZ5dDKyEHUvRpOlvYWGSXA6rVlH6YGDtlg7qrTDRE+ouWrlldUW7UEyKL7ILktk+htizcBwcp0L45yCaAj3uWkB5NFTqKP7IHJTCxVQtARZWXgtrYiu9WoCs74/Dll5QKCWr+IUoR2vn2YYMiKNhCjkcAwlYaDC8yhFDQW2nnhtd33kQS/hLk6eJODEFBgvTjxrrkjKgHJwbxjNMfaK12Ja8p9GIVTL0nr3AfFuXqQt3Ztld8Icv85DM99eDDgIrgunW91KvVjtqLzjs8kKy0qdO/5N1AO/WsKjkoJHI4RvLvj69aLTzKVAsqAfxnWVWzktCis3mhYc8xT9WmJOmUxRJwfYAn2P0CtSVqFl6hX3XtgpfFnUXP86/qO7MVaE5mOOfwmMMWJl80hGBXUNALZJW/fmCTM+fpqMVvzWnRjz0P/yGDrAiOvQ8yi55/h8PZRSkT2nF274QXItJLQtembaPCbTEiooy6v4MDc3XhR72QQISj0YWOepb633ZMXm9ZpJj9FKGooR4L2D/U=","authorEmailMD5":"946de23d7298acff560ef0d981e2de64","message":"Hi Stephen!  \r\nI am troubled by a seemingly difficult solution and even though it now seems to work I decided to submit it to you in the light of your articles and also the comments you gave below to others.\r\n\r\nI have a UWP app and I need to set the ApplicationTheme (Dark or Light). This enum is taken from a string which is in the LocalSettings files of the UWP app. So I need to open a file there, read it and return the content to the app. The point about the ApplicationTheme is that you can only set it when the app launches, otherwise you receive a NotSupported exception according to the docs (and I can confirm!). So this means that I need to open and read the file in the top-level constructor of App.cs of the uwp app. The only solution I found that does not crash is the following and follows your pattern except in the App.cs constructor (hence my concern)\r\n\r\n public App()  \r\n {  \r\n InitializeComponent();  \r\n RequestedTheme = Task.Run(()=>ThemeSelectorService.InitializeAppTheme).GetAwaiter().GetResult();  \r\n }\r\n\r\nAnd the static ThemeSelectorService follows your pattern somewhat\r\n\r\nIt has the property  \r\n public static Task<applicationtheme> InitializeAppTheme { get; set; } = GetAppThemeAsync();\r\n\r\nAnd\r\n\r\n public static async Task<applicationtheme> GetAppThemeAsync()  \r\n {  \r\n return await LoadAppThemeFromSettingsAsync();  \r\n }\r\n\r\nThe LoadAppThemeFromSettingsAsync() is open and reads the file that contains the theme string.\r\n\r\nI could make it work only with Task.Run, the other options crashed the app literally!  \r\nI am concerned about the practice of this method, if you have any better solution for this edge case? Thank you for any guidance","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"","date":"2018-05-05T17:19:01Z","timestamp":1525540741,"authorUserId":""}