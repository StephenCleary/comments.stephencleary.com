{"_id":"ecd4d8c6-0b4c-377c-841d-59e659fad2b0","authorName":"Stephen Cleary","authorEmailEncrypted":"UQxKmq2/NdMyNGmsUtaVHUw3hxLa85jOoD+aUTNOM/vX8EhRduJL57ZuxRXZxlRnytUnlHid/Gb1or1ZE7LeLXJEVjEJZwb1TKEQcVWfWS7lfRHwWhINIkhFGJVmhl1nbAM90jHIty5bj48XkY5DfdOEApQibafqJB9zxRD/XeqTuZSB6hmXR8j1oK1mb1j2WivbBQHiMEzyd0Y39q88unDjBoYY34xwfYnnii36t2v4OGivwqB4wCBgJ0TdfpFmYupLQPYnARjFnS3ygKYw9p6E5jBkHNC4eGy4rzpFAAbC4NeOrUlTqEI7227SpexuU+g3LmFrIFp65QRjiUQQpQSRwJ26baptuqgSR/YID5FXf1KIJPuAkZdBZdoW7SHThbalVSnhBXes+hRzF/tcS+PTVglLTtAEkXZRaMZ95hQrRJW/tsonJ+0+o6QuRMLus2vbkpgV0g/uK+sVKEQ/xkhcTivuxxz/AArmhPLQNJik86MwUTcm3zeHVgLw0bBAGApjQLhbV7f9wXkC0GlmS4/fyQIvySgs+yton0fyJt8VUgIwPRFG99GkREGBodUC61UUBW2w1sSvdZdYqcj4ElJdH3yl9Snp/z9Rqwnt5zz267HryWprWoH7/2T7oE/lNixlPIZ469TRIN+GtfKzTNdZVlmKrdzOys127QvDHZg=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"If I understand you correctly, you want the initialization for CustomerOrdersViewModel to complete when the CustomerModel message is received. The cleanest solution is probably to write an async-compatible wrapper for receiving a CustomerModel. You can do this by using TaskCompletionSource<customermodel> and calling TrySetResult when the CustomerModel arrives. Then you can await the Task property of that TaskCompletionSource<customermodel> in your asynchronous initialization method.\r\n\r\nLogically, what you're doing is first creating an async-compatible wrapper around the message listener, and then consuming that with regular async/await. It's probably best to factor the async-compatible wrapper into a parent or utility class.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"1ece7bc1-f849-3880-a2b3-0f2e5cea95b5","date":"2015-12-16T03:00:08Z","timestamp":1450234808}