{"_id":"ecd4d8c6-0b4c-377c-841d-59e659fad2b0","authorName":"Stephen Cleary","authorEmailEncrypted":"mGW3dU+YBIdhGz9S76ZZHC5Y4oB689l1WyxpMBU4QjiuPVuD19A65GAGK07LkAm7o86z+PrbqNJzfoVXJDPVXP19RXSEBRqimJ5iWLsdDIh6379H8jhy0HhQpEeiTtrS0/c9SaZpQgVy2akKVkobF6Eh1AO4Sl3BGn1iXmU8+e/Qrys0YnOqoBITo2vFJW0v86Rmt6joQIiGairI5MpYSnxn8vhs3+o8G0i6+koGTXzRNpFJlxV0ugbFhxvhOoeMHuFqsfxxYU38FPxXkRqE/YrBuTopgOUvYxt0tkpkXyjc70Q1e0jaTjNY3YboxgwVBc9ZtLN9BxpGYzeKZSbjImbMDfZQNgJT+ReovnOYXevghDU11yk2mB3RzqEDYUhm+oeNoYgZgvMUEZoiHGwK7jsSuMwUyPG+K3aFp1fSXi9jxCZqX1MhKDKk+SabcA2qswFJmA2rlx/PxiKK4R2fDMjj/QqNJolVNF3FCorLvEWpsp+x9Dq6N/HeRXLvaHkLNNfVkho/0RfF4RTgEJvK/L79Ifzi9ReHAm6GbGzti1nSvUwzabf2P8k/cnT8gRgMszqyRt5+pwPVartycI3EHe2sImZUlkKL7vaRi3vMHT7yTboj5uPNo4C0qLKiQuCVh3fnvfSLC+F1GYkOWt562SYJAncALArvBNuW7tMnP4Y=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"If I understand you correctly, you want the initialization for CustomerOrdersViewModel to complete when the CustomerModel message is received. The cleanest solution is probably to write an async-compatible wrapper for receiving a CustomerModel. You can do this by using TaskCompletionSource<customermodel> and calling TrySetResult when the CustomerModel arrives. Then you can await the Task property of that TaskCompletionSource<customermodel> in your asynchronous initialization method.\r\n\r\nLogically, what you're doing is first creating an async-compatible wrapper around the message listener, and then consuming that with regular async/await. It's probably best to factor the async-compatible wrapper into a parent or utility class.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"1ece7bc1-f849-3880-a2b3-0f2e5cea95b5","date":"2015-12-16T03:00:08Z","timestamp":1450234808,"authorUserId":"disqus:stephen_cleary"}