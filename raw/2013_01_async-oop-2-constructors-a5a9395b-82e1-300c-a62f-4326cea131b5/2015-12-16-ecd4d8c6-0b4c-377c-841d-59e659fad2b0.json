{"_id":"ecd4d8c6-0b4c-377c-841d-59e659fad2b0","authorName":"Stephen Cleary","authorEmailEncrypted":"o4xKFFvjfeVAH6hu/2p0VdbC7Yg8gIDjRvDoc6OYbezap52vIgE7U3aFBDaLWp4ve0taHfKCaavkErCI2w1HYUsZqVemDBec44hccNhxfdeXkBX/WI/ET+weaO3PQ8gObwPwhqj9Elm+ly39QTk869ZjBb0T95xzUc4bh4BLnCv5T4qa67rN9TI3XYn/n+R9e2lDMC4sZb5eL6cKdMRf5NZtjt5xTo2G0lAu5YvpI2raQlw0zmJM7lxmr/AuqWpA+dmwJHR+eXydp5We0XV8lp/PIo/N/+pQ6z0vSdPo+hDzLSsuXFMaeeJHaUHTIgHMJw08KS8wNPFQyM3pPke5AVv8CGbuvlfR7hcE5fUMeJM+Zy/ynQAtZeIIKgBT2oGEtk1+FVs0gjW7DlAjGhzINqz5ta6ciJ02eVVeVxqKcdTcuMR6+gHQZn2uu5/HWDd8KDQ/IEac+Xzb9qtiQurXSSv0v8xGx87TFU+4TybtgXVX9HcKE9QMAga3c9I/B2QVkUEtekxJLBHuASANj2pUJjSRWi6E/Rq/RQWIxLWoUDWbNQgyv611kufw7YLiAcWLCBfzpJkF6uh1CIf/6DF3lcpAc8Cx28tR92TkwB/YYWHZQ4xuUAXdIOEPww/Gt2GkqDcU8ZuCXHXAgqbZWBX47lvuoveOa+UGtw1XZklMZXk=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"If I understand you correctly, you want the initialization for CustomerOrdersViewModel to complete when the CustomerModel message is received. The cleanest solution is probably to write an async-compatible wrapper for receiving a CustomerModel. You can do this by using TaskCompletionSource<customermodel> and calling TrySetResult when the CustomerModel arrives. Then you can await the Task property of that TaskCompletionSource<customermodel> in your asynchronous initialization method.\r\n\r\nLogically, what you're doing is first creating an async-compatible wrapper around the message listener, and then consuming that with regular async/await. It's probably best to factor the async-compatible wrapper into a parent or utility class.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"1ece7bc1-f849-3880-a2b3-0f2e5cea95b5","date":"2015-12-16T03:00:08Z","timestamp":1450234808,"authorUserId":"disqus:stephen_cleary"}