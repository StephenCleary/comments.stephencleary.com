{"_id":"ecd4d8c6-0b4c-377c-841d-59e659fad2b0","authorName":"Stephen Cleary","authorEmailEncrypted":"FZP8vPMWqV/3tvX8KxionpXr+uFt6FRItlot445MkXSVBYL4ViaN1ioEZuqIjDJ+7NF4B7TKwk1VYqIs22dVBbgn9wdOch58lSH/jHWdmGCEBQOntOX/65P/Hpv/wuYMbetI85djHtMprR4XGiwNHOs76BzgbrXelut8cU8qFh7VqSL1lHj9ALZumO2Rl5o3OcyRwq9PdIvfy+9asizoN+HWHMAvGf3pccGhsT4+k5WtkeT+jrJMPgxaRDrWeh87XCd2MUJ6SOUxshNOTnm18F421oHRhbiFng68Q6PHYY82cgcIB3Ha9JlLoptg34NZbt2YpuxAvmnqdMeIeq6J9MIAufZ5FDPOH0+yC2rpjLwo9c9dg4p68iu1vyY7WEaEjDNYgCAotL+uAbTg6YgfyBaqPnEe5gul7TZh1BZkDBsNtgAO5XsIGYDQA3QOH3mFi8PmRv9dCKS/VBTjm31L1hNLU0S9bo5BrV2d6t10rpz5B4MytFTYJnT7krDAIgwXDpQ/ewOdCHU+uR2cXZElvY5Ou+1tD+GJ0PkBovH+0DjSvPxwShsBqmR9130lwOMZAb1I0rxHj8KdPB1gPgetzwlmUPiiPFHowCoHTEMMxJyHTBTVD5A3ruunvhjWQwjQ9UR4Jh2RvCg8U7S3+uc/dhYVqEQJ36/Oi/F2hmCXo8c=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"If I understand you correctly, you want the initialization for CustomerOrdersViewModel to complete when the CustomerModel message is received. The cleanest solution is probably to write an async-compatible wrapper for receiving a CustomerModel. You can do this by using TaskCompletionSource<customermodel> and calling TrySetResult when the CustomerModel arrives. Then you can await the Task property of that TaskCompletionSource<customermodel> in your asynchronous initialization method.\r\n\r\nLogically, what you're doing is first creating an async-compatible wrapper around the message listener, and then consuming that with regular async/await. It's probably best to factor the async-compatible wrapper into a parent or utility class.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"1ece7bc1-f849-3880-a2b3-0f2e5cea95b5","date":"2015-12-16T03:00:08Z","timestamp":1450234808,"authorUserId":"disqus:stephen_cleary"}