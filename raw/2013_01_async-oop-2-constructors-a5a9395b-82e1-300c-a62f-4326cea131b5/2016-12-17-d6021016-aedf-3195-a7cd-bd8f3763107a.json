{"_id":"d6021016-aedf-3195-a7cd-bd8f3763107a","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"Yes, calling Wait or Result in the general case can cause deadlocks ( [http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html](http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html) ). There's no clean way to call asynchronous code synchronously; only a variety of hacks, none of which work perfectly ( [https://msdn.microsoft.com/en-us/magazine/mt238404.aspx](https://msdn.microsoft.com/en-us/magazine/mt238404.aspx) ). If you *must* construct synchronously, then you should use only synchronous APIs in your initialisation (e.g., WebClient).\r\n\r\nIMO, there's a deeper design issue here: if your initialisation does I/O, then it *should* be done asynchronously and not synchronously. I wouldn't try to make it synchronous.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"85280297-64c8-392c-85f2-76133e753224","date":"2016-12-17T13:46:41Z","timestamp":1481982401}