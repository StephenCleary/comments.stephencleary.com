{"_id":"d6021016-aedf-3195-a7cd-bd8f3763107a","authorName":"Stephen Cleary","authorEmailEncrypted":"BGJmL0u5qZuqjEkDgUvgSQgBCDVkFnzFmSjE7HW8qh033FFJu843s7H6LReIqDmss3DDyW2TC6JtLZDkb7ziIVRSwodryNRmwbqVtskzmh38eHe2eSx1N/zq9muZM6chxv5LcfEjlojOutwY/N4nazMW4o/vOcJti+4kXaueHKOputhMpPAciDdfOmw+ExWfDWWWbNZLfuFaIuEaxCR7/u6+2Wkkl6VC2Dc+PSRnQaIcL/heySdvE7QxKy4zQjNXtq6+tbOgc3Hb1PRTN5+2OLv4CVn0YdN9kn22tQOtWO8cvDGqMIc/3vj2QicouJ3PZtHhAx3XbeXdTfto4g1wFtZLK9d04mDmBlZ7CRRk2KBUgGJobuqwCfWp62JlcRIQSMdamE+BiSQmcnLLMUcKikyCvbthJKgcD/fQDfXmnze/0X08u7zpqnhDT7Y9URCA8E9ipC8LsZ3m3UhNOO4K/Q+74ITJhk6exHOVft7Ih0IhmFbtefXR4KBZ5+K1vt9Uii9R3ocOY+Ci/+F5ZogM8gWEA6grEC7E1MiRSSEps3jLyQ0L/eIqcbAk2aU3QYW3nm1MFhwkyrFB+Bnw27Ea1zZ8YS6YgCa3D+cpgk3OTH2XB5aeWL1IqAF+tSKt7rKzlN19e2kbt3JdQQXBZd9j5TFrFbT0TFhRN1hEu22BDUc=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, calling Wait or Result in the general case can cause deadlocks ( [http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html \"http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html\") ). There's no clean way to call asynchronous code synchronously; only a variety of hacks, none of which work perfectly ( [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/magazine/mt238404.aspx \"https://msdn.microsoft.com/en-us/magazine/mt238404.aspx\") ). If you *must* construct synchronously, then you should use only synchronous APIs in your initialisation (e.g., WebClient).\r\n\r\nIMO, there's a deeper design issue here: if your initialisation does I/O, then it *should* be done asynchronously and not synchronously. I wouldn't try to make it synchronous.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"85280297-64c8-392c-85f2-76133e753224","date":"2016-12-17T13:46:41Z","timestamp":1481982401,"authorUserId":"disqus:stephen_cleary"}