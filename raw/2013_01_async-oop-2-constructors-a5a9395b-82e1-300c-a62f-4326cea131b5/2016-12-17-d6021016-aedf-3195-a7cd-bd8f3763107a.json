{"_id":"d6021016-aedf-3195-a7cd-bd8f3763107a","authorName":"Stephen Cleary","authorEmailEncrypted":"Fu3jZ60BvrAEWoPv3wj5XLzjvrLNiREYDgFXt8CPXri2Kl26xuMMTpQMJAH/DrkOMjXl/1UoL+eQmwZPT0EWa8T4hKyWD9UsVpQK2MzptV47+pIjDw5Dkd0NCqBiWjTu+iqXkA9wr+INoB639uyr9Q45bMkZkCbXN2pMnyWeUz/73tS/SgtvUnvaOztSs0Mc8LXRozCbfOcqlMlN4Nf7tl+ZXTQ1QLtV6GoobyQK40J+HjpVrxY4gWZsGAGy0GtClgRt/FrYeOI8ySZgiIcPIDxx45r0fHab1BrTnw4mc9XvGFIVt7WCHo3qvy0/cpgY8F0cm8N5TWUY16zXE/7SywdAqIru//BLTuY4HZ6rlMfdcv5LDlakP3tO23hOl9qoeT1a8MxLjHvawT17qdwthwv8NI3bmc1YDRiRBHPKlh41sk8DMYfUzWUqDvFZJjG1YbXeG0c0pInsQ7mg3l4jEtLTVr/kzzrcoDtW5Q6/cQidM0SkcBNSJDDOj/Azk2PH1CVAY3LnCm+fftlE9dRuM6VQb/qQjfMDnGtr5+4bKpOXW51l0Hyq+RsU7A0lAbewryXuA4Vt1tihvRPIas5vpSgEl75cG2lPZq3cInZNvKW6uywE/2dNCIrBeNuoi6b1CU+EC/0/BH0GmkY1NI7qjDDb/9hZWWwOBT8ilk+Ujvk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"Yes, calling Wait or Result in the general case can cause deadlocks ( [http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html](http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html) ). There's no clean way to call asynchronous code synchronously; only a variety of hacks, none of which work perfectly ( [https://msdn.microsoft.com/en-us/magazine/mt238404.aspx](https://msdn.microsoft.com/en-us/magazine/mt238404.aspx) ). If you *must* construct synchronously, then you should use only synchronous APIs in your initialisation (e.g., WebClient).\r\n\r\nIMO, there's a deeper design issue here: if your initialisation does I/O, then it *should* be done asynchronously and not synchronously. I wouldn't try to make it synchronous.","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"85280297-64c8-392c-85f2-76133e753224","date":"2016-12-17T13:46:41Z","timestamp":1481982401}