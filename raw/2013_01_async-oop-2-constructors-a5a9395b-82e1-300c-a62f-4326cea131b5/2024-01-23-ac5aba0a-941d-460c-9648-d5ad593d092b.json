{"_id":"ac5aba0a-941d-460c-9648-d5ad593d092b","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","postUri":"https://blog.stephencleary.com/2013/01/async-oop-2-constructors.html","replyTo":"","authorEmailEncrypted":"SH2UeuTw3S69MXb7MYoDjzx024LXBWQxeVQFOB5WgCT11RmcWgB4FbNxsx6xFTdjdlUO1ua47cVAurHsgk/sJ/Wo\u002Bj39vTJb4m6utcTqB7H8oJWYy8PpOxgFYkaxbs24\u002Bt8nlRyodaWUDbQejhl1D64/KNolhWBoxgyhEidEFqNuTzXOl8RmQ//xW5qzVafc77ULtsl57w6bZI51ihbWfqmcPcQ1FYU4lWYTihhVjJ/atE3XtaR4hhXDjlwwRE4mZ4GTBklkf46Lj9hZptkYxat/9Q6Lq/C7IhxNdxLyKS\u002Bbn0Wb40tlIpFWTWYJfSKihVVTftRNZxJxow9ZdfEKN8CUG37cSGDzJ4vN2dLhirJ/cfg2ZV9RrFlpyIAxE/DUKgmYOQRnPPN0tPIlA0bQtPzTMFHe4Pemz3jYdP9VQvg5OxKj0wfwUKxVUtURNtpMJP8X7nJA3k5ZFYWcnGYQ8p653VIKVzD6cyMtfAYsffdu/JDlsXtssPDd6W1i7eDwx69G0Gny3tgb85mW81ppv3iuJoRT23Iux/5cDwDpLK7l\u002BpWGcvtPTjiAi0neLQIVm36TGjxOFNkchKTdmC7e8ilhIh4ZeCTGR3\u002B9C1EUdU3UbTi9UiUU7hTyIPaNodAdYZrgYgGj7ABb2/sk666e0BMkv2DkVaNCuK6KNlUNrbY=","authorEmailMD5":"5c114665e70b724fb6b0e2a0f96033f0","authorName":"GregJF","authorUri":"","message":"Hi Steve\nI have a class with a method:\n\n\u003Ccode\u003E\nTask\u003CTUser\u003E GetUserAsync\u003CTClaimsIdentity, TUser\u003E(ClaimsPrincipal claimsPrincipal) where TClaimsIdentity : ClaimsIdentity where TUser : AdfUser\n\u003C/code\u003E\n\nSo what is wrong with calling this method in an injected object from the constructor:\n\n\u003Ccode\u003E\npublic AdfUser GetAdfUserProperty()\n{\n    AdfUser user = null;\n\n    lock (lockObject)\n    {\n\n        var httpContextUser = this.httpContextAccessor.HttpContext.User;\n        user = AuthorisationCache.Instance.GetUserAsync\u003CClaimsIdentity, AdfUser\u003E(httpContextUser).ConfigureAwait(false).GetAwaiter().GetResult();\n    }\n    return user;\n}\n\u003C/code\u003E","date":"2024-01-23T04:39:52.7930498Z"}