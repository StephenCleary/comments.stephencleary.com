{"_id":"54933ce7-8d5a-3b89-a9e4-211b3efdc7c1","authorName":"Stephen Cleary","authorEmailEncrypted":"fdUoqtwKSUdYgvu/W6qxU8qGdO3wR4tcq2CN+aWwuyaeaawAGp8/XTvbS8yo88qoRpRZ3ze6jYnKe497FHDkpp3GFvLgabYFMJnG2xWVqQ9NpiAo8mUsZY6B5NrmkcoZu2MgBZUnW/pYzwJSyayApKmJLdtlIPQ34DXz4+/CeLwPvYgmABUXD1fK/1DvRVMUPrrxeNAYlK4AvNIKIvGfBJHZvHJWfQ8V+/x/hMdC2MqBNEpKoT0ZAeESHqj47GUILLV16Bg30mNykJ5/Y51WMtRlK9CXJKZhgdP2X5nqahvbtVGd6xv2weFADsA2cM9ZGu84DQxUk/t3H/qOnJ10gje9SVB3zjSCBkDyVNYbjNt99L2aQhjTjKLyLRFMOYqQy7/aSQ1iTI9q8IyvgyVnEpsEqPyc2xImi7jFMNhZ/Hg/hw4jl5Cjum6PhetdXNWjA5QZumpsXZdjKFFk/Ca5fr6Im8XP+RGgDl+eVbNRyZ2NPLp0Mwg2XrcJkCxwWIiuaruceSRYNi0Ut5fCKEKYm5WU1rV1TopzaW8preshSWMD0SCYilxjxxUovZ2NUQ8sWQgL21nOLjJvo1QsdfftfK3wJWlj+61BfapN/F0jtlWxBVv2PGpa2lHEBhsuymIsePsUSiRlSSBUSihdBYXGLQnWQpGHVK/3Giri15K7tPs=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Ah. I have some ideas for asynchronous computed properties, but no concrete library support yet, so you'll just need to do it \"by hand\":\r\n\r\nprivate NotifyTask<compositeobject> configData;  \r\npublic T1 ConfigItem1 { get; set; } // raise NotifyPropertyChanged on set  \r\npublic T2 ConfigItem2 { get; set; } // raise NotifyPropertyChanged on set\r\n\r\nconstructor()  \r\n{  \r\n configData = NotifyTask.Create(async () => {  \r\n var result = await GetConfigDataAsync();  \r\n ConfigItem1 = result.ConfigItem1;  \r\n ConfigItem2 = result.ConfigItem2;  \r\n return result;  \r\n });  \r\n}","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"58ab87ee-7136-30fe-a7c9-0df3113bf25e","date":"2017-12-12T19:21:32Z","timestamp":1513106492,"authorUserId":"disqus:stephen_cleary"}