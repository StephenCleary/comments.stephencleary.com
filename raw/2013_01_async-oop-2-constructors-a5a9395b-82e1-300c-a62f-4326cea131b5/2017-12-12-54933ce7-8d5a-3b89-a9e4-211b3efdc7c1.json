{"_id":"54933ce7-8d5a-3b89-a9e4-211b3efdc7c1","authorName":"Stephen Cleary","authorEmailEncrypted":"sB9JrJWOGqUDr8tYugUu4tkQXVeqNFGwU9BtnTx4nHz2u0VoV6QKqbHvvTN1bhcuQTtox4mhU8Ww3g6+N80J3z5f84Mm0Ut/83zpZ9ZuBebGh2kZaWrom8ZGVsTODx9R/5z5w/RNENpGqovXukn1moVwyNr7YQE5SSjT+jcQUp5igy5/A6CX2OwbXHhu3BU85BwEXYHRPfwHf/ZVMWDL6i4NGn/VG3/j+EcJfEbySE+Hape8k+OhGmp3y3cPOilkxqQSo+az3azBaMZZ5JNY//7zTStnAjyIVp9xurdLsBwTn8XGBowgC/MU2bbfb0BkNkL8QmLiixzxeAtkcRfeynYqxzhKcumyHFfSEoK0OGrb9o533+wBXHgUNJaUdMB6eAnsQPyxQWEFifVnB9jvLcR6mrk7FRokrMlxX9WWN+cVfGAOgFS/EPC0TJsKhSZu0+QZGzrNz9A1Mk/klQepBqrMTHGlo1jfE5wK32dABG9Twhb4tXhU7EGois5PrMjxspnItMRA3zeOsjBn9+BnVKOiH1K8ecQ9AmgMQRidDO2evytc+VJvWPtbMyZTbGQYw07+JUHXg5aAcrgVxjzx/+GS1oTOaqruJvY4LGhtAxe6m9MydZXjFLOx8hVxKd41V1RPuCDM+2IgEcTHrioapuWdlV8LgtfOjk8FW2+LVlU=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Ah. I have some ideas for asynchronous computed properties, but no concrete library support yet, so you'll just need to do it \"by hand\":\r\n\r\nprivate NotifyTask<compositeobject> configData;  \r\npublic T1 ConfigItem1 { get; set; } // raise NotifyPropertyChanged on set  \r\npublic T2 ConfigItem2 { get; set; } // raise NotifyPropertyChanged on set\r\n\r\nconstructor()  \r\n{  \r\n configData = NotifyTask.Create(async () => {  \r\n var result = await GetConfigDataAsync();  \r\n ConfigItem1 = result.ConfigItem1;  \r\n ConfigItem2 = result.ConfigItem2;  \r\n return result;  \r\n });  \r\n}","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"58ab87ee-7136-30fe-a7c9-0df3113bf25e","date":"2017-12-12T19:21:32Z","timestamp":1513106492,"authorUserId":"disqus:stephen_cleary"}