{"_id":"54933ce7-8d5a-3b89-a9e4-211b3efdc7c1","authorName":"Stephen Cleary","authorEmailEncrypted":"nHdst2p9Ir7ju4GXWaN7B6Fjcpn88jKEP0e6r0vNlrEyhhA98H5JmLD3JRsYdJ165aqfDQaYGmytblXNNqHDKW78rhNzIw7/uO6ugNTc8g6Q1nzoYupVy1GMxSwHQxyxcadLt7lmrHmEOr3wlDddVlmKrsYmF01oIeEkmK+SxTRkdQ9xzaaQNQIYOGHDq1uBJRvIoU9jEGWUniBAPAUN8mVjkPxiO781bxurcZEMZsMep6TEy1FJ99CTDdoqBYlRa81WZshGXKK+M1DpFK9TRyjSy6HjQdzm2NbNrl4ltXokHk/1FN3II3PDBkeAyGGZRd1UlH/3OOSEFZnWkclmRFovu11pbEZ+gbFlUq2b7Nne7Zn+1jMK9d6I/TuYq8W1KMNp5HaTMpL1AwXuP5t3NCLroiayNfZL9K1tau2I+D37fy1zajvwekDkj9XQif+wRqCLLedjTBDZMY3lEPZa7itpQ/S55j9NjK+X80lHkc8bQwojcbMx6yF4LlKsU+ZMARzGTa8yyPxYDBBGQnGx9v5D/+bpte+WzPxGHkl/guRIg8LgkUN0Ti7mSeWns5Gq7GuPfYhGproFw5zQsNczseI5kxJaRzcU1C1lXku6BCSgq5XCxSlZLPVDPbppBE7WifzcKSGXDVA0SZE8RFy6BN4upA73DuKDsxAXicDvLr4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Ah. I have some ideas for asynchronous computed properties, but no concrete library support yet, so you'll just need to do it \"by hand\":\r\n\r\nprivate NotifyTask<compositeobject> configData;  \r\npublic T1 ConfigItem1 { get; set; } // raise NotifyPropertyChanged on set  \r\npublic T2 ConfigItem2 { get; set; } // raise NotifyPropertyChanged on set\r\n\r\nconstructor()  \r\n{  \r\n configData = NotifyTask.Create(async () => {  \r\n var result = await GetConfigDataAsync();  \r\n ConfigItem1 = result.ConfigItem1;  \r\n ConfigItem2 = result.ConfigItem2;  \r\n return result;  \r\n });  \r\n}","postId":"2013_01_async-oop-2-constructors-a5a9395b-82e1-300c-a62f-4326cea131b5","replyTo":"58ab87ee-7136-30fe-a7c9-0df3113bf25e","date":"2017-12-12T19:21:32Z","timestamp":1513106492,"authorUserId":"disqus:stephen_cleary"}