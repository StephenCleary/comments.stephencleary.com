{"_id":"300d2a54-eae1-3de8-8ad9-91f17990df0f","authorName":"Stephen Cleary","authorEmailEncrypted":"RpfX7DQ4x79HC4TiseI+QrfeTXNvW+0bacR05K/veq/uazZC04f1zjqbmDe56kw849oTx/FVu14rH1HkEZgck1Jm9FwqWzATMg05dzz8HN7qHwbRViVSCUtT8/EPepVLWbFFxe5sCFapFYK+1+5NLw2AeWaPsCjmXp6GNIcPke8GZq2sWEpXh0Cl2EGy268h6EHg3bE+RFmvI3VrLzGNL4NfasoBX2/8+oJpmnvbDp32YeKHiEEEG48NQ0jsqEKsV6iKod6Sd1D1LHyiW0s4Zq4mqmwOgzufrJ4u3oeUby51g6JHx8Yv6sD0To8I8ZWXAaScCR0bjrJqFC/91779Jr1SxxBzNH3Erw7pPenD/pohITqvkqYH7iAJFN3DAFcoqqvm6rx98g7unyHKD/YfKe3KrQz3VEw4U6XsITXHwwU7+yCJMoxj7X9npaoplFptigFqSVeYYok4+ow5ur5mK4gncmWbOgPL4gOFK6Nc277r3/jSe12upQW4hIYS65ukW+1s1hpAy9X4Cx0h9IOqN5y4zgqJkDO+/0hrBXkpW3w00iaVoG/RMqw7E9pgj8GJkpATAhX88vAfxInAvd4mOl9YvKXtG1gZ3Bj+ZKmLIV1UcY+GpjlyHaPuV3iWMMYpn9Bb9WSjlpvPSrYDVn126TCdjVw9ibGD+lwfqNYefNA=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"MLLP is based on delimiters, which I discuss in [http://blog.stephencleary.com/2009/04/message-framing.html](http://blog.stephencleary.com/2009/04/message-framing.html)\r\n\r\nPersonally, I prefer length-prefixing. The benefit of length-prefixing is that the receiving end knows the message size before the message data arrives, so it can allocate one chunk of memory that contains the entire message. In contrast, when reading a message into memory using delimiters, the receiving end has to keep re-allocating the space for the incoming message. However, the benefit of delimiters is that messages can be of any size, even sizes too big to fit into memory. This benefit is also a drawback; the receiver must be explicitly coded to allow messages too big for memory, or it will fail to receive them.\r\n\r\nIn the few cases where I've had to deal with large messages (terabytes of information), I've just split them into smaller messages using a kind of multiplexing stream model similar to WebSockets, and used length-prefixing on those smaller messages.","postId":"2009_04_sample-code-length-prefix-message-ba45f669-db06-32ff-ba50-472b420edace","replyTo":"6a139f5a-3280-3911-bb80-184b3d24a8d8","date":"2017-12-14T14:16:31Z","timestamp":1513260991}