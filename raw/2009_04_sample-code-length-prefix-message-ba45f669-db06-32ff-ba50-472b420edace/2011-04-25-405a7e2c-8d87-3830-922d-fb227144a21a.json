{"_id":"405a7e2c-8d87-3830-922d-fb227144a21a","authorName":"Stephen Cleary","authorEmailEncrypted":"iNnBMKbtFg3y1fnj6CkUq4hCRF/f2IDcskv0PfZW8MwuWXwTTVtEn4jdsYEsER9BhTyqTNvWcEfuVj8wl/ZTpOdyBCLx4U/2RP7+GMX62qQC+8+SUxc7qbrs7OAmcMa0bjsg6V8MnoIK+LKRXl2Upc5puNjRynVlHaPywYXOBNiszmIH38lmzngwhuv4zmkyuRFY8xDPMZZaa4fSvYeA/tONpcPctiFO0uhZ5j85aLtd3SsHXzncTOfpb+iIkg0gPrjMzJulMIVqs6dbGKNQhfVf+q5DyqZJj2gavKXUEYv/3Hn57JaJ6EMnn3obKxS7gfQ7pt5yHwyTGjGNEyPJ+bPu8HOGMtm3QjwY3eXKQVVAv5QCAn0O17FL+aIi6oOaiwyRk2o+xCLgklCXE+kD64EG0uUIuZpmvT/Rst8KrDS2R8xRT1unagKJ09XsStFaSQmuSAMlEBAWhcPQSLjKpDSjxPW+vki4RufXWdKR00s6LL6qtPQsEFXy9n7jZrrRlSw9c8lDco4gcAdHL2PY8sEH/i1U1uxg9yv0q3SBvIK45rvVBqdbo7dJ9sHyUsFKtc90XYBuSkqFkC3b0F+OR0pjgiyd1gKttx3TR21A9QiBAmEvbVJyTZLKkifE5ZLElduLyVM4EMTzrmm5H0VY0BJfRrNq+rKOTVGTj7ntij8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"","message":"Here's an additional test, including checking the messages passed:  \r\n\r\n[TestMethod]  \r\npublic void TestMethod1()  \r\n{  \r\n int numMessages = 0;  \r\n var messages = new string[2];  \r\n var packetizer = new PacketProtocol(2000);  \r\n packetizer.MessageArrived += message =>  \r\n {  \r\n messages[numMessages] = Encoding.UTF8.GetString(message);  \r\n ++numMessages;  \r\n };  \r\n packetizer.DataReceived(  \r\n PacketProtocol.WrapMessage(Encoding.UTF8.GetBytes(\"Hello\")).Concat(  \r\n PacketProtocol.WrapMessage(Encoding.UTF8.GetBytes(\"World\"))).ToArray());  \r\n Assert.AreEqual(2, numMessages);  \r\n Assert.AreEqual(\"Hello\", messages[0]);  \r\n Assert.AreEqual(\"World\", messages[1]);  \r\n}","postId":"2009_04_sample-code-length-prefix-message-ba45f669-db06-32ff-ba50-472b420edace","replyTo":"","date":"2011-04-25T02:20:10Z","timestamp":1303698010}