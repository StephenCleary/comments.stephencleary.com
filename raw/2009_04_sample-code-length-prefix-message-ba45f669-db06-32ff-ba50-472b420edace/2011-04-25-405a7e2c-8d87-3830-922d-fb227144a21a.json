{"_id":"405a7e2c-8d87-3830-922d-fb227144a21a","authorName":"Stephen Cleary","authorEmailEncrypted":"FnMEXU+U5B3B//3l6p2j4arUwanYjquBpvtBOAnDOCZ3pOk6QJDrJo+oD3+rdBq1y39PeU3H+DEyKsuVl5JvcpRXYKUAYgclaNzgteYGbP9J8ZkOqKD4T0J71DulvprmttipNS2pAxB3utvKMJkGidiA3zKICA6iOyWJ5qeRwEOps6GFd3Ilj8bgebzQnSViUAMD8iYqVktQ1N+8cH9P2VAk6kBUbqBQc5aa9vsMIgRg55qvurearmwel58eqCrXsMjb1PQqcgx3+GEr6HUVyNKkRXCBx0qd8ZvD8wFGjZOQ9oaOheE7N86UzWbmPHGKSKLObDix1ljxFD1CwAB2KKenA0TiK6lGqsMALzJITXQoHDKO7k/fqWshReXHmKlFFe8W6sago5yh1og1Fz6kRFtKIEOHlXQWBeOYwPI4d/VfOwsXFxocVqtwfqHruOt0xTJdaECmi+XrDi7QQHIxv5hMkT+zKclANMnkL6KiWyVOSTSHSYa07QW/NqjO0bD6MS4BRmjI89KvdBGaxW7z82B3OPEef4c6OI8goWvcHBLOqquPAJAqbD8lDX9VS9NR9Uki+/yP7QYN8AjE7wUb/c8jW5Y9/PZr4p4NvaYrLGXYyGwmMHycq7Ia19NPqAXMyKYA8kSiwY3G9H2NDB9kjRg0jAWybNkbMpjhh23ar8Q=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Here's an additional test, including checking the messages passed:  \r\n\r\n[TestMethod]  \r\npublic void TestMethod1()  \r\n{  \r\n int numMessages = 0;  \r\n var messages = new string[2];  \r\n var packetizer = new PacketProtocol(2000);  \r\n packetizer.MessageArrived += message =>  \r\n {  \r\n messages[numMessages] = Encoding.UTF8.GetString(message);  \r\n ++numMessages;  \r\n };  \r\n packetizer.DataReceived(  \r\n PacketProtocol.WrapMessage(Encoding.UTF8.GetBytes(\"Hello\")).Concat(  \r\n PacketProtocol.WrapMessage(Encoding.UTF8.GetBytes(\"World\"))).ToArray());  \r\n Assert.AreEqual(2, numMessages);  \r\n Assert.AreEqual(\"Hello\", messages[0]);  \r\n Assert.AreEqual(\"World\", messages[1]);  \r\n}","postId":"2009_04_sample-code-length-prefix-message-ba45f669-db06-32ff-ba50-472b420edace","replyTo":"","date":"2011-04-25T02:20:10Z","timestamp":1303698010,"authorUserId":""}