{"_id":"cbf82642-ea1f-3cbe-a60e-a96abe79589a","authorName":"Peter","authorEmailEncrypted":"MD4ZnU7GU4m0VuK/HDQGaBoVqfp5bNpSNkfUVAt7dTGv5RySUD8CSRYehM0yrC/LPnjziMnMFJ8Yodai3oHFjFdolfmILjOiMUHRei+eG+ngPFHcsNcB4Lmsn+b2xyoxB5JxojQn6QdgHu2dvNohbSSG5ECX2CfYGWH+XghGUHHeJpgUB53cs2d6hUZFiLn5mJB3/UAOmbyW89eVgd62/TPrIlu0C3iezqMGuNWU1i1xCubdrTv1hYxb3HqZT4nr6OG6dLhc5r4QHsU3UWnoJV+9WiNMAaT+lm8ciovvRfYiI9Mrz7Fis2MmO5AGReefcCqnE0382TuJOYccMYO5469t0R0JDGe9CjHCnSd0gD5bwiPflduf9hi2I7t0pRp/GzLVxX5J9RO8PXmeJTUffiLDUJtvMURP3RD/impdjGVHiDJpltGT+LMs5rPWlLEvjQz+nuX7VlAGrF9IAXr8SH5MYWWtB+sZqNL6E7GpoqeRp6UThVlTbGrkzVLyMjq49iMN8t7D2aGrSkcMqIhp+FePST2zSNr+PTxUgIt5AxrLDQEYa15nYg7zNjo1T9mRLIKWYorwKL8zZ4r6Y0dbATzgZsg9ec85u/1TOLe2Tq9uNWy3YsNXJyc0JYcWwR2KEzZLBHmzrJriq4t681UbfQQMi04TvUCOWtYKDjs0Lvg=","authorEmailMD5":"a7432534416cef14f3958dd9224ed0e9","message":"private void ReadAsync(IAsyncResult result)  \r\n{  \r\n try  \r\n {  \r\n _socket.EndReceive(result);  \r\n _packetProtocol = new PacketProtocol(_bufferBytes.Length);  \r\n _packetProtocol.MessageArrived += Client_ReceivingPacketDone;  \r\n _packetProtocol.DataReceived(_bufferBytes);  \r\n }  \r\n catch (SocketException)  \r\n {  \r\n Disconnect();  \r\n }  \r\n}  \r\npublic void SendData(string data)  \r\n{  \r\n if (Encoding.ASCII.GetBytes(data).Length + 16 >= _bufferBytes.Length)  \r\n {  \r\n //spilting data  \r\n string[] splitedData = DataSpliter(data);  \r\n //sending them  \r\n for (int i = 0; i < splitedData.Length; i++)  \r\n {  \r\n if (i == splitedData.Length - 1)  \r\n {  \r\n Send(splitedData.Length, splitedData[i], 0, true, false, true);  \r\n break;  \r\n }  \r\n Send(splitedData.Length, splitedData[i], data.Length, true, i == 0, false);  \r\n System.Threading.Thread.Sleep(500);  \r\n }  \r\n }  \r\n else  \r\n {  \r\n Send(1, data, data.Length, false, true, false);  \r\n }  \r\n}  \r\n/// <summary>  \r\n/// Send the data to the server/attacker  \r\n/// </summary>  \r\nprivate void Send(string data)  \r\n{  \r\n byte[] dataBytes = PacketProtocol.WrapMessage(Encode(Encoding.ASCII.GetBytes(data)));  \r\n _socket.Send(dataBytes, 0, dataBytes.Length, SocketFlags.None);  \r\n}  \r\n/// <summary>  \r\n/// formating the data that will be sent.  \r\n/// </summary>  \r\n/// <param name=\"data\">the data that will be sent.</param>  \r\n/// <param name=\"dataLength\">the length of data so that the server can check if the data transferred successfully</param>  \r\n/// <remarks>\"dataLength\" is only used in the header</remarks>  \r\n/// <param name=\"spiltedData\">formatting and sending data in a different way if they are splited</param>  \r\n/// <param name=\"firstIndex\">check if we are sending the first index of the splited data and we will put the header</param>  \r\n/// <param name=\"lastIndex\">check if we are sending the last index of the splited data and we will put the end of packet</param>  \r\nprivate void Send(int parts, string data, int dataLength, bool spiltedData, bool firstIndex, bool lastIndex)  \r\n{  \r\n string formedData = String.Empty;  \r\n if (firstIndex)  \r\n formedData += String.Format(\"\r\n\r\n<{0}|{1}>\", dataLength, parts);  \r\n if (!spiltedData)  \r\n {  \r\n formedData = data + \"\r\n\r\n\";  \r\n }  \r\n else  \r\n {  \r\n formedData += data;  \r\n if (lastIndex)  \r\n formedData += data + \"\r\n\r\n\";  \r\n }  \r\n Send(formedData);  \r\n}","postId":"2009_04_sample-code-length-prefix-message-ba45f669-db06-32ff-ba50-472b420edace","replyTo":"7d3cec0e-567d-3723-8718-ff3e06d670f9","date":"2017-09-29T14:18:33Z","timestamp":1506694713,"authorUserId":""}