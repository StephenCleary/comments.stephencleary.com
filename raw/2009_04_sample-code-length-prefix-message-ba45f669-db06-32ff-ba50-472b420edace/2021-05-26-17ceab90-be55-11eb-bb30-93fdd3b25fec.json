{"_id":"17ceab90-be55-11eb-bb30-93fdd3b25fec","postId":"2009_04_sample-code-length-prefix-message-ba45f669-db06-32ff-ba50-472b420edace","postUri":"https://blog.stephencleary.com/2009/04/sample-code-length-prefix-message.html","replyTo":"06f6b590-be43-11eb-9ed3-1dfbdccee944","authorEmailEncrypted":"Myj5svk0b50YcFsErlAnaiU/Th5j24XBkZPO5fsl3p8czA/G/mrpv+u2BvlHf68uBbGflrDxjY/DVzAUHvduH5CPlbudVURl7zoyoJwz26I1TOw2OuVr+7czssOIIOUzGiEg7gpC2jQNaJTZkWHhxNp6yf3viZMuzjaXXl/h7B95zbh9a85bj1uiM2UhGHRzVYuVEtqjVt8K0WxQ+q/n1171SVR+Wrd5Xl1r54RyvINMQznGY9T8pD+f8bKNvSycyaFjjCqwN/stG/PIchVEptconmoGJ7hpjy1i0xvNJkDGNg3rT/2x9agpIwcRBqWduiBn7RVsz5CM1PpW1ERS9sEqGVduyE896lmsoRFcLfa4APktrIoCwD2eB2iS7Gd2w4/FIUa3Cbv5PDGq7YqRnmR7GEF1VDgFKd8rVqAN9en6Gk7pKO1D/LfXRFoQ1Ug4X4cwUf+SbaLTOjMsLW4WWB1AykehxhNvSjSnOzS79ciI/EJ8IfTRJAOpYsSkrRZUEGGBQXXKoMiTws5bbe+SMvnj5jL82BgIfymjRvrxou7bepVbX2DaAufrPbAFzOjAo5u5Ru4oTSjCKpAJ/eoITTJo52qh9cLJwBiiiR5O8Jci5KtHVBUkKuZz2RQJ4d3uUY+ArN0arK+Wn+Ji30olujXxHHfzfAOOCDAIyMbMwvw=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Packets are handled at the network/OS level. It's not possible to send or receive a single packet. When sending, your application is placing bytes into a stream, and when reading, your application is reading bytes from that stream.\r\n\r\nSo if one side sends 7MB, then that data is placed into the stream. The network/OS splits that into packets. On the receiving side, it will read bytes from the stream. The number of bytes read can be any number between 1 and 7*1024*1024.\r\n\r\nWhat you should do is send the length first, as you stated. Then on the receiving side, you have to keep reading until that buffer is full. The important concept here is that you need to think about reading it as a stream, not as messages or packets.","date":"2021-05-26T19:03:44.972Z"}