{"_id":"a8f2496e-33e7-36ec-bb0c-f128aae9f846","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"At the time this blog post was written (when only VS2010 had been released), \"async Task\" was not an option for unit tests. BTW, it is possible to provide a context for async void methods and both wait for them and retrieve their exceptions; this is how nUnit supports async void unit tests.  \r\n\r\nI agree with your comment re ExpectedExceptionAttribute. I use and recommend a ThrowsAsync method for checking exceptions on async methods. I used ExpectedExceptionAttribute examples in this blog post because that's Microsoft's recommendation and the approach most MSTest users are familiar with.","postId":"2012_02_async-unit-tests-part-1-wrong-way-36b6b297-8f03-3340-b0a6-10e349ad0849","replyTo":"","date":"2013-01-14T17:55:25Z","timestamp":1358186125}