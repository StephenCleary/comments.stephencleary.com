{"_id":"8c2a2ddb-211a-3628-aeb7-be0eaf064ef9","authorName":"Stephen Cleary","authorEmailEncrypted":"QUDVKFiqt0gt2Qm3iIZGDXD71GQxMtFFe4L5bqwc81M/5dtSoR5BpegEH6jTJZwqWyagDt4FgcQXY9aC5Rww+Dj2aP0inBNwH2apgVu3fW8qXq+sRom1kaMf2RM1tV24zj1QllMeGH0WRAfk6prVRVXOK9zr0uWitGUNwZHzNZQDtm/WHK7Z4pRermNRCzufYV7emxOhVB9BSJ8summnxgmaAAxigaNTXc4k3nQlLnWLnlWc+V+p5OFRTuQ6fCi2mHzdnTTD4K/PihlLTzpGDpz7FbeHI/djpG7HlImwFtXLMZeF5BrMfLDclW6aRHPi3vuJsY70tSYVo7Em9sXJc2NSa32Uk7jzRqFnPIUYKtNwC/Mya89avTqKLgHB/RFlcDZfd3JmCv9yuORqKbI7/IfPdlph7xikoQelQl0o2HetzQMnGBEQnWs+OgfrMfCJEOi2bvhU1TbxVcQ+r79RVakT/Xh6XVvETPepeGg++b48LxUrUua9Er7ms6sB3K3Lqkk4gJvrCBHjgfUQ5q4Bd8QrZsnGsLsmd3AhjfiuWU2Ns4wze4D8/2toHrCGRiowLmurThWUpYUaJEq3iepB/oCCm+1WOQmxcz3gMtMc+PxJIy/heSTfAsYONn0TN8O7UwJ88lnsDB2ofeZyVkkWfKIEdtfjKpXbfIGyfAIxDi8=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Sure, you can start two \"child\" tasks from a \"parent\" task. If the operations are asynchronous, this would be best represented as:  \r\n async Task ParentAsync()  \r\n {  \r\n Task child1 = Child1Async();  \r\n Task child2 = Child2Async();  \r\n await Task.WhenAll(child1, child2);  \r\n }\r\n\r\nIf your operations are synchronous, then you should use Parallel.Invoke or the like:  \r\n void Parent()  \r\n {  \r\n Parallel.Invoke(() => Child1(), () => Child2());  \r\n }\r\n\r\nI strongly recommend the use of Parallel for synchronous work. It is possible to use Task.Run or StartNew with AttachedToParent, but that's a whole other level of complexity.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"e2017b51-c82d-3440-ad3d-c22808973a14","date":"2014-11-13T18:38:36Z","timestamp":1415903916,"authorUserId":"disqus:stephen_cleary"}