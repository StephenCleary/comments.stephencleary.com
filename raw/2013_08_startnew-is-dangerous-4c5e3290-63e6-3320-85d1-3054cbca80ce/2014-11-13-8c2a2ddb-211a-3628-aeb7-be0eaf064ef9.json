{"_id":"8c2a2ddb-211a-3628-aeb7-be0eaf064ef9","authorName":"Stephen Cleary","authorEmailEncrypted":"KKnsq4t8yvPrROHZu14XzL70nkm/Wak+yVMfEYZq661t4UK5YjXEzweAqHFaK1LWKrK0tAGetUTkQKhP9+2fgb1j/CLl31U07Y5vJ+MFRyg4lwL20L8tnC3gBxsHNIrQpRkvapwjflZ1t8eeu7Y4hm0C7hNXlNxn3eHJ3Nb+H636ZK3QsxiCQG8jx6IO8Qs81YFL2e7BGzLn3fTbYhvOkGHOFSvPsFMSlXqhDgTTfSW3nQ09nI8ZVCap3FDGNbps0xvWdtOcn3jBueBswUlNlqKEqWiadXBhZhz5xc5RW3dvFqqJi5WewwCC6/YoIyPf0FrTnNj1owkuTML0qCYTkUhyW9Qh/KNsh0BRIX/APkdmxgtJL0AwJcu69VS6bdf+B675vDDbMQA7sqdlNkzB7ACTCJifv/AmAt+OJf//zXZV7a/eFhGlkbuhLC4uYZgXrLhyBtGTEzNVN7g6uEwEYXtPB3xY+8MAMPhB7eqcgg5OTJnFuEF8HsT4ArVZabgn5DN1rP8KZ9UqyHB3WSkdO2koNZ60FvvHM0YHQM/FJ55ZLvfxEZcD4JAQwEeOXk4K5LIsNF9GHfwAnveDyXtpb/aKU6ze2vajoFfk48FiDGi3Ew9TO2LHSCHn6F5N/VX9hNMG7zpjwz5w3SKnt2cKV1qBwH5F9X2o32CrokaQfbw=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Sure, you can start two \"child\" tasks from a \"parent\" task. If the operations are asynchronous, this would be best represented as:  \r\n async Task ParentAsync()  \r\n {  \r\n Task child1 = Child1Async();  \r\n Task child2 = Child2Async();  \r\n await Task.WhenAll(child1, child2);  \r\n }\r\n\r\nIf your operations are synchronous, then you should use Parallel.Invoke or the like:  \r\n void Parent()  \r\n {  \r\n Parallel.Invoke(() => Child1(), () => Child2());  \r\n }\r\n\r\nI strongly recommend the use of Parallel for synchronous work. It is possible to use Task.Run or StartNew with AttachedToParent, but that's a whole other level of complexity.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"e2017b51-c82d-3440-ad3d-c22808973a14","date":"2014-11-13T18:38:36Z","timestamp":1415903916,"authorUserId":"disqus:stephen_cleary"}