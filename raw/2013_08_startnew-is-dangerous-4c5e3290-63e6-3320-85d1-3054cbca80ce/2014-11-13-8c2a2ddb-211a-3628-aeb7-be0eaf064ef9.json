{"_id":"8c2a2ddb-211a-3628-aeb7-be0eaf064ef9","authorName":"Stephen Cleary","authorEmailEncrypted":"gK/3KOE7jqst5A3I9BMpC5KcU2I6rN+uNZtDSdOO3KEJ3XNRXoi4K/mXxcvkLROiCL+BZl43f8Co0mb44emGiCfud0Ifc5po+GzITkmZLDUJWT8V7028bfDSq4d6H9+8ZzqBSKHG4gpm0z7jvYpiOcQ3fiBCMAQQgEZ5e3oLkEeDI+oVCiOBbYIcA4ZGNRCInNJBj34TaNYGqpLcfOyqkcrlpP2Sep7gPYz86ZLoqvl84XqetZLrdbsWwixdhK/1P8sabQw6+3PhGyns5huIN2P18BlLrfWU2qC2Hkjl3q4cs826f7MGZWLWpZrf4tMtEYf+QB7LMltnCbv0hBepO56C74xjAOTtcglgz/v4m/eOUAQe7GJeQxrJ+dgu7sQNSWKPmy3lBJDUDxPgErnAPRhLhZeE8FwqFPggLkB67sHNhbPWysKHdOWufzNtqci7zfTyE58qP7NJ9NadkbHYUGatpriFwMbllXLwHNE6vAtIv6SX57aUPpQhSfsWw1S8e+ndLILwyVThDijxxp/ddLC67HaQDYEqK3VB6g1ykbph1N91jaWIAdblJm3hLl9R2vBT0avfylxUvnodvGXhf9N9QyLRKVSl1eb/bjjt1Aid9VrL7ZlawLBRA6NEgWxFxNWw0oGLDUldDWlEiHm6Lbq45qNHLlWrHJMrA/jZK2Y=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"Sure, you can start two \"child\" tasks from a \"parent\" task. If the operations are asynchronous, this would be best represented as:  \r\n async Task ParentAsync()  \r\n {  \r\n Task child1 = Child1Async();  \r\n Task child2 = Child2Async();  \r\n await Task.WhenAll(child1, child2);  \r\n }\r\n\r\nIf your operations are synchronous, then you should use Parallel.Invoke or the like:  \r\n void Parent()  \r\n {  \r\n Parallel.Invoke(() => Child1(), () => Child2());  \r\n }\r\n\r\nI strongly recommend the use of Parallel for synchronous work. It is possible to use Task.Run or StartNew with AttachedToParent, but that's a whole other level of complexity.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"e2017b51-c82d-3440-ad3d-c22808973a14","date":"2014-11-13T18:38:36Z","timestamp":1415903916}