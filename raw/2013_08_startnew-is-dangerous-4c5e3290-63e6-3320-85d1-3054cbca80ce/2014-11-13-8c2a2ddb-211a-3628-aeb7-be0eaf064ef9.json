{"_id":"8c2a2ddb-211a-3628-aeb7-be0eaf064ef9","authorName":"Stephen Cleary","authorEmailEncrypted":"rzqmNcn0tS2qof6ayeNITY+eX3oAne4cuS2ptLCNYGxs+UxW7pk2MoQVTOi2DNasVGObywD/6so2LxKS2vaBkWLN+tJ3ikOymXWTP7Wll5ov3P0kkFKziQPeuKSNCEmHT7NTda26l9dGTkmvfVtUHkiWo6LwXetQF1kl2k1mkNA25IxKYtWgWwjRh72mP7CNYGqfGaS+/5U8qbibRw9ASBrE8k1XyOTe0oeVDtGICrisidSwFvmdNGK33N6JttyEXZgyvAG6HFKecsO525B197qRf44whh2c+RosSxwe8EI329pQjxjPLa84p6Fg4R6xkV5DnulYhUf4CfjOhquFNtkEYV3I7aY/P7683xwFtIpSlhUwA6vyAq6tmUcLIn3tpfuS/TXbg60rcsJB/vhPNRCt0sDrNhJFmOvc7JAx3I9Uj2x0Mh9TZK/JzD+4b3plx/fIRdU3GqbfEBP8FTPIGpR2PMYl0Cga720gfOF/5KYFTux0LQK3KXTTYytUTEJF5JWRr9XFMDzgW1CfTPWLF2O+RCubmePmv6lgqSHcxjMD/PDlxMkuZkTrUuZcLxg6UGtdfQc0O0o4pX0iL/H45zBVb+ynZfRWxALfgAcc9obTBtFartDR2nmLUlZqOnwyOMn1a5GJQLjl+ECDexG+oI3m9pMghI1h6rVMSbc4b0A=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Sure, you can start two \"child\" tasks from a \"parent\" task. If the operations are asynchronous, this would be best represented as:  \r\n async Task ParentAsync()  \r\n {  \r\n Task child1 = Child1Async();  \r\n Task child2 = Child2Async();  \r\n await Task.WhenAll(child1, child2);  \r\n }\r\n\r\nIf your operations are synchronous, then you should use Parallel.Invoke or the like:  \r\n void Parent()  \r\n {  \r\n Parallel.Invoke(() => Child1(), () => Child2());  \r\n }\r\n\r\nI strongly recommend the use of Parallel for synchronous work. It is possible to use Task.Run or StartNew with AttachedToParent, but that's a whole other level of complexity.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"e2017b51-c82d-3440-ad3d-c22808973a14","date":"2014-11-13T18:38:36Z","timestamp":1415903916,"authorUserId":"disqus:stephen_cleary"}