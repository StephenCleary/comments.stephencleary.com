{"_id":"c7a8aa0b-ac89-35ef-adaf-21f8bdf83573","authorName":"H9uest","authorEmailEncrypted":"fvOj8iMMKBo5QFiP0TCCEpYsfkKvlPmbee1QadDwF3DIbOelK4v9DmfkDMzQgUgoUolWrqsGF7gETCAutwUa1fyZOdC+bCzTdrCMUSSSGRyYZzDPuMAqVWcM67CQiIun24T2nWHMSzhPYLW88dMS5a3AjFNQynG1ws2vWNPSa6dYruA0jSnR8xp/YLuxdzBiT/4gjlmdjM0s3WYxHGYpwUdrKg4LVdKooM/6V0acK63lisngHv+Ace2Nqbozi3AYOotisA7zRRB6zAcP6Y5n5NkjKmutpogBOg/H8Ig3rtMk4WgmC6q/zWIZ7iNx80LlH27cVpVCxQJa/7sVUAK1sgm8+rODlHhOJPRhHmKCeTQVCC2ly4k76oURCAOh2HNwDLXzUdB+ICOTRWdbnvyX6GucoHyC8kWh82HupgI3ViwYwLzVmre65goLbU798grQa7NmZh1wkHuOBktp/8rQXwEFzSbDGPzJys+6KJ4Onwj+CSO/QYNFIcxt419xjTi55LF9nLbRnMMPsb9DQlxaav+ExThnoMVdIirWRa78pYtV4APNnYgI5HpjMNjH4JMNgxunneQwWEbaTCf5O56OAAAnzTl4f0Rrs6bbIQhoVKr/TmAQM4NetNGdaJjVeEipKzLl36caMZ8qomHH7U+FPYvLSqbWwbLkrb2wzxX8i90=","authorEmailMD5":"0e3bcd72dadd8e7244b046a40e7e32e2","message":"Hey Stephen:\r\n\r\nThanks for the reply.  \r\n1,\"Under the hood, Task.Run does not actually use Task.Factory.StartNew\" --- Literally you're correct. But seriously please don't take sentenses 100% literal as a natural language processor would do. It takes fun out of idea exchange on a forum and makes it more difficult for both of us. Under the hood both of them call the InternalStartNew, which assigns work to a thread. The fundamental mechanisms for both are the same, not similar. Therefore, fundamentally, neither is more dangerous than the other. They're the same.\r\n\r\n2, \"the point of that code example is that the code is *not* explicitly scheduling the computation\". In fact I think the code sample *explicitly* tells the .net virtual machine to execute Compute(2) on the UI thread: ui is the second argument passed to ContinueWith. That being said, everything in the Action(Compute, as well as the trivial tostring) is explicitly requested to be executed on the ui thread. If there's any unintended side effects, I'd say the programmer shot himself in the feet. Not fair to blame startnew.\r\n\r\n3, \"And the central point of both his post and this one is the same: Task.Run is better than Task.Factory.StartNew\". Yes, I agree with you that in most cases where we don't actually need fine grained thread scheduling control, Task.Run is better. I can tell this is indeed the main point. Maybe it just rendered my arguments on the previous two points pointless :p","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"46499f7e-9471-35e3-b0a9-1f909c304660","date":"2015-02-11T16:46:17Z","timestamp":1423673177,"authorUserId":""}