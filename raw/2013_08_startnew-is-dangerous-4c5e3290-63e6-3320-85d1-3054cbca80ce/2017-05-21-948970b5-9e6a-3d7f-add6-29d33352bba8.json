{"_id":"948970b5-9e6a-3d7f-add6-29d33352bba8","authorName":"Stephen Cleary","authorEmailEncrypted":"vBYvBkSQSMpjepPyxTA0ufQ1Es5xflsslM0tOoSSrkuTAw59E3TfBW6q11TmOcBWrY+MJtGcyDWmUzDR671GEr+6fi1123lxHjEe3zEtIm4jnTkHz0+XqJ04/e3qNkOVid9RiZUrwfUYTgYoa2WUH7Us4ASYm//qV64cE2WJAtRb+T6yLEkj2t4aoWdqBQNTZvxc8n3uaR/kmyiaDP2vuwIXrSzuoT/c3bxR5NjezPkYtBfQBlzqXuObTRk6Fj+aTLYMe8pJ6NAnI6h5RrD0hoyme8xN3XDXHAL560a73j8a0ZyjyHO+nf/tfWtl6pXpNfg3TjYlqmhJ0RSjR7gq/fM8TbANtV6b9NAfYZztwcuutKVekjUa3O0ahbUaB6NcO4WHwZFJztHnyBSPkB9w06rlCLguPUfBzqWuqRsRvd2i1TL14u5r/04Ogv1XfOsgRPLp1vr3NrjECxdNozbTCbQupPwpc1/1cyZ4fdiIrnBxxXEdVEuWfU4ovlbZEOmIyd1Khu/Xustx+/7pgAr9vVz8EhwAZqIXJ/I+DPmJ7vOsbLwNJnPNP6+5gMtBfV6a0s4pWByHXyR9BSRt8pPDtGog5l4z7ZjItSv1sXPNHVZL/xDB0Q3opndf5Fq0xJh3tOeaeB3BBGnMy9FOdHEv7wfj04QAtUtXyIsF9fyqdnw=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Yes, if you explicitly specify TaskScheduler.Default, then it will run on the threadpool.\r\n\r\nHowever, LongRunning does *not* guarantee that it is started on a separate thread - that's a common misconception. LongRunning is merely a suggestion that the task is long-running. The *current implementation* will start it on a separate thread, but there is no guarantee of this behavior - i.e., a future version of .NET may decide to have a separate \"long-running thread pool\" and just pull a thread from that pool instead. Or a future implementation of NetStandard (e.g., one designed for embedded systems) may decide to just ignore the LongRunning flag completely.\r\n\r\nIf you absolutely need a separate thread, then use Thread. However, based on my experience, the probability that you actually *need* a separate thread is extremely low. There's a ~95% chance that you should just use Task.Run.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"57978e81-d2b6-310c-826d-1af71d17f69e","date":"2017-05-21T12:19:52Z","timestamp":1495369192,"authorUserId":"disqus:stephen_cleary"}