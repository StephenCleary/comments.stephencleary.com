{"_id":"948970b5-9e6a-3d7f-add6-29d33352bba8","authorName":"Stephen Cleary","authorEmailEncrypted":"tIED3TQdSR18B+14kMPtpj+Jd2xA8D0jA3hlbI8zRbPYd715llibkLZ7a8MQRupMY/1Yggk2f9OV86SOOE17D04R6299UNSY5vGMsWU/bPOBnAKpwQM7nSyQDTYQG26TYRCTjARqHc74xnQtCZOtVZblyI6o1jHECPOf728Ggx/A2B9JnsRnPsWMzbrhuGA1Z1d2a0talCIbJsxjblo/DuDQGndtunxH6Dkb3ryNLggKB4vd6kChZsy7R47Y6CJBQFaHOz4xKL/wJYLWWZI1DoYAMyYOXDTE5u5p2HsFrC1/N7hOCjeVCF6uUQQoeuHcao5mcc7q1Bg3xFvHu9w+rA8b2rCJd4L27/4bDyuZL+jK5wNpx/1TvGoUnzKk5AQb4tAOP1msLq1ydb9Sa5vB387LUhlVNnAFf1R2+9xZ6IqjHTlRgQ+YPAa4GVYWxzOoJuZ/1elb5wSbCoN5T7Mb9vNcSiNNtXDliznyyCCJBRK784Y+T82pMc7x2k/MXBTUEskdxQGb7+oaWVNbakb/nN/kzrGGCfLj/Oa+vlK9PBMmbAuzALuvWSnA7Q30VQ5qdyPwaBAHiuaz/ZFS+HVzzhFDZTE6irw0LGCrKiarpWa+cEfdP9V5abf0aiq74AayGR9rhUerINOAI800g2wu9ryk3E6RLDwpU7jJoGlxSM0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"Yes, if you explicitly specify TaskScheduler.Default, then it will run on the threadpool.\r\n\r\nHowever, LongRunning does *not* guarantee that it is started on a separate thread - that's a common misconception. LongRunning is merely a suggestion that the task is long-running. The *current implementation* will start it on a separate thread, but there is no guarantee of this behavior - i.e., a future version of .NET may decide to have a separate \"long-running thread pool\" and just pull a thread from that pool instead. Or a future implementation of NetStandard (e.g., one designed for embedded systems) may decide to just ignore the LongRunning flag completely.\r\n\r\nIf you absolutely need a separate thread, then use Thread. However, based on my experience, the probability that you actually *need* a separate thread is extremely low. There's a ~95% chance that you should just use Task.Run.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"57978e81-d2b6-310c-826d-1af71d17f69e","date":"2017-05-21T12:19:52Z","timestamp":1495369192}