{"_id":"948970b5-9e6a-3d7f-add6-29d33352bba8","authorName":"Stephen Cleary","authorEmailEncrypted":"oN68AS/DjQSaYGdnzDwwsFaf5Mk7uzm5glZkY3qJkLiuAqqXeRFHnMWARHzhLkd0z6K/gQeahvulqX6JzmvSSNTqDo09GRG/FATYOBe9e2g1Q4eCEHR846T9WnKBn4Ul7VmHY/SPN8xxXjAW5FDg0VbxP3e77hQhxvhK1PApGnq6YKPXksPam2kF4qw9nQ8gXpzWyk+IPNv8wzSJkHW6pSTFRbCIMRSMg0VzUINk0JXOnNBqQqyBYoZ82GFeEe1FhRnTWTaGIKOEUbWr/vxMYm6RV2lZ/DQCJCaxA7aopAD0uU9CTLK8Ln9TgocNMb+DpjZ5R8Vmem+SJCRr4XtUvqJ1QDruRDMteaZXnAFOzWZ/bdMF7r7i0R0oEbJkBketBQ6U1PQg7VFgnb+aoVzuD2LUZTXQAFA+YyTBq9Rati+KeeiPeZZ5C2hZJN2k1xYTJrcirztmijBEPX6VyFgXcLMQexvHt1hE8humdjUDkggJ74oTJpR8jCXxrms9b2yT/d1kf32uQlU4905VWUGqvuCykRlS/ZmBEb/M+r9NXwItT/jH7iBWoS92NiyC9xDkmX/iUcQDZqcuL1M+J3/o0I5RKB1dEXbb1t94/QnSob/mSFqnq6rU8DCUx7Tvilp6TNmCyZDe8GDuBKIArE5HeaGRLKuE7f0Fl91Z10RyU4c=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Yes, if you explicitly specify TaskScheduler.Default, then it will run on the threadpool.\r\n\r\nHowever, LongRunning does *not* guarantee that it is started on a separate thread - that's a common misconception. LongRunning is merely a suggestion that the task is long-running. The *current implementation* will start it on a separate thread, but there is no guarantee of this behavior - i.e., a future version of .NET may decide to have a separate \"long-running thread pool\" and just pull a thread from that pool instead. Or a future implementation of NetStandard (e.g., one designed for embedded systems) may decide to just ignore the LongRunning flag completely.\r\n\r\nIf you absolutely need a separate thread, then use Thread. However, based on my experience, the probability that you actually *need* a separate thread is extremely low. There's a ~95% chance that you should just use Task.Run.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"57978e81-d2b6-310c-826d-1af71d17f69e","date":"2017-05-21T12:19:52Z","timestamp":1495369192,"authorUserId":"disqus:stephen_cleary"}