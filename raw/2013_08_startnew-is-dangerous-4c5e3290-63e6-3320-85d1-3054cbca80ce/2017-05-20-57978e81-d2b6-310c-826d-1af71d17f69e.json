{"_id":"57978e81-d2b6-310c-826d-1af71d17f69e","authorName":"David Wright","authorEmailEncrypted":"vHmAW6iWAT7+PLfE6n91B9LvPDkDEoHPNUtVNZ5xYUvZtHreCuksGRhiF6krOI+YAM4sirXlidgbZ5Kly/qTjkPRY4s9/OVrH6iQJz7YO+6S3HHbSPzit2AcnNCGjylwyJ9utXAyccClU9Wr2MRIwXD16k6pu/c7TZRqHlBok9i/ccoy3F34N+qoyXtfrw7PiFzjbDiOBJ2mLKG4Z+bn2AlC0TZ1mVPmN0yASqwe3MIN9Gb+thze338RXjp0l1JHCcvO9+hUSFxpAerXRFnEWYQg9w5FpMTrDjOOiocw8H5erIOvY/O718PSyvKX90T5jdqSQzpC3eHy1GsgA2i35qRKSMiakpLh16l1fN1E+6M/LtEyYnx7wxnLoXGTxKXzgp8JCJ92/A77GWr7hmqIAbFuyjhBbSsziI7IDc/KbyHdUe3aIAzAOY6KpGzxsnNFDjxwCcmZTIoJtcJnwsFrUizX6H4LEL8AT3PoN8ZfesSJ5tfnsbUeDPlUDplp/3KWt/6ToWcfYR9KPc8VQgLwopnw40Xb+gcDvZiR8euYCEWCTw2uIUCPlT0R591zdqEehXG/UVO84O27gPBqGssIZIseEPANSdvwI8YSZoFv6VTvrGyrSNW8qZChmqBnluz6qUTaNv3RjCKJ7aKymOZKIlbQxVFUT8u1FWF/PQtlW4M=","authorEmailMD5":"493e9873244c4ee952e775e7f5dd072b","message":"Does the use of TaskScheduler.Default below constitute adequately specifying a TaskScheduler? Also, in this scenario, I really really want to guarantee that the thing being started is on a separate thread, hence the LongRunning. I'm under the impression that this is the only way to satisfy that guarantee, i.e. I can't rely on the ThreadPool for my use case? Is that correct?\r\n\r\n this.cts = new CancellationTokenSource();  \r\n Task<bool> commandRunnerTask = Task.Factory.StartNew<bool>(  \r\n () => commandRunner.InitiateRunOnNewThread(),  \r\n cts.Token, TaskCreationOptions.LongRunning, TaskScheduler.Default  \r\n );","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"","date":"2017-05-20T19:33:54Z","timestamp":1495308834,"authorUserId":"disqus:disqus_gFHel0qnPC"}