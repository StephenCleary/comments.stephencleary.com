{"_id":"9c99d7ce-0469-3e3e-ace3-72356d9036a1","authorName":"Stephen Cleary","authorEmailEncrypted":"ni2LX1FxPfz7JeuQBfxoJwePWec/3ATVlQCDKpTUStSkw+1uj1FcTvEtqhBWj7NRObGuXCHWEx0tEKTjmRdbpPCvfXery1G7DP5w4aOzk1BdwMssqKTEphY8SAfncu9sujLCICMHjj6Uk1foZ+SLvbLoSinUT+TsV3WcSOlzOYfKannMt3+nNwxA5t4CTf2j/7O/cRYse92coEuBz8/VTt7FIeV5eKJGQDo9P8ybojANjEOSqbpfkInwuuwPIVSxJ8ZIOhl0eYftHOegT0gP43rSwYxIGwLYZbgdRu1zpxJZ8j51nOpWqr10DAiMywiBpxP6MacJqpJl5u2wujbbJ/CrAnSkhnqQbeYylD+uDwp9UjpaHwk3jxd52MS90faKBzhRLG1euwrDz3WML2FHh2KTGcFv0mxos2lfrFeVSwPPUeB+jsAFGYxcVRrpBLi5xeYybpYzKbEBRfvr6G5Tw8MAvt41vhO2bXBBvH8tQN9Kvz/ttIGYNhn78qAiVb/TLEkTgtv2i9tdHItHJ9SRUeaWHtZ8gyPOh2Ai8CrdsjCAH8opF2aLCCKgW6p4mMjRTVuTGQvmCLXgE3G2ESvHNPyeLhGkqOrvUzMk8ixMN95C7YtVv+tmFRb8iide6smqjD22UmEeBDrAkpTqLgtFP7IKQE5c4SSrebVE5xz1H5E=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The use case for StartNew is tiny, and I do address it in this article. In a callout, in fact: \"the context of this discussion is async code. If youâ€™re writing parallel code (e.g., dynamic task-based parallelism), then StartNew is the tool you want to use.\"\r\n\r\nHowever, this use case is incredibly diluted:  \r\n- The vast majority of concurrency is async, not parallel (and thus should use async).  \r\n- The vast, vast majority of parallel work is data parallelism (and thus should use Parallel / Parallel LINQ).  \r\n- Some of the remaining parallel work is static task-based parallelism (and thus should use Parallel.Invoke).  \r\n- The remaining use cases are dynamic task-based parallelism (and thus should use StartNew).\r\n\r\nSo, if you have a situation where it's amenable to parallelism (i.e., CPU-bound work that is capable of being broken into multiple CPU-bound pieces), and the number of those pieces is not known at the time the work starts, and each piece of work can start any number of other pieces of work, *then* you have dynamic task-based parallelism, and StartNew is an acceptable API. For *all* other situations better approaches exist.","postId":"2013_08_startnew-is-dangerous-4c5e3290-63e6-3320-85d1-3054cbca80ce","replyTo":"efd5d3ad-a9f8-3ea1-ac0d-d5bf54af2eaf","date":"2016-06-09T12:08:02Z","timestamp":1465474082,"authorUserId":"disqus:stephen_cleary"}