{"_id":"3070325c-a41c-3896-ad6e-4eb1858c6da5","authorName":"Stephen Cleary","authorEmailEncrypted":"Y2zrkUWvUmoPetwsJ6VmqWZtVhS+EAY2JAtEKYYgKjXxLMtvwxIVXJGX4RWKpU/NCd6Dt5+SCbRYx+kdHO3ZnmBQr/OVKohi2VxRWsTkuhqQ+TZZxejuTF3UcPTU1V6OEwlSD7Gg7NJ4Osk7RIgQipZsA+ptdGlo3ExkVkj6d2yxYHOIVDnjYHia1bo9amyfsfDsM+tGxwxRdzk5KyutgAuClyVe/VhBNGStjUZkSGOUHtzAuseZBe+BYapMPIJusH7bnAf3Bx6P1Sy3DHxtwK5NUhYxWOSC0DughJHey9gxBdpxCTs/HPiwJ62em/2dynOrtRFy8tyLpYrwfYVfZBRWUDqMgg37zMMeUxRJ4gQlhmEcjhN/oBZhr1r8W7Q3o23knNUAj0+phPgPJlNxzr1qv73Dmx7nYqpN8CdZMl78j8/+s2VbSVE7OI7Fj5s0mGEQiK8NrUXsoSLKx0BoQSEun1WZmAlyzd7rLm/FF6fA+7yhZPybpAvw7hvMa6iizQqb5ouKZMUSfYAWG2zhh/indehHFGvpmdqEwMxQMHxFPo8bNBDI7vzDuyTytEnr1OaBqoH4LyXqqN8fqL9zQ/pnR41QJnb30l5HZk4COLituWQbr6MS2K0/QbfdvldNzttiaolwrljGQG0CR/0lHMT/bmmzuF7UjcaLy20Kn2E=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"Technically, it's the same SynchronizationContext unless there isn't one, in which case it's the same TaskScheduler. The vast majority of the time, the TaskScheduler rule doesn't come into play, but it can catch you.\r\n\r\nIt's not necessarily the same thread - that's only true for UI threads.\r\n\r\nIn particular, ASP.NET (currently) has a SynchronizationContext that has all the \"current request\" data like HttpContext.Current, the currently-logged-in user, the requested page culture, etc. When an async method resumes, it will resume with all of that same \"current request\" data, but it can resume on a different thread.\r\n\r\nFor another more common example, the thread pool context comes into play when there isn't a SynchronizationContext *or* TaskScheduler. This is the normal case if you use async/await within a Task.Run (or any other code running on a thread pool thread). In this case, there is no context, so it works just as if you had specified ConfigureAwait(false) - that is, it will resume on any thread pool thread, which may or may not be the same one it was running on.","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"c283aa43-841f-3c84-89a9-6814d2eee83b","date":"2016-02-05T13:59:12Z","timestamp":1454680752}