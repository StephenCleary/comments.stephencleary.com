{"_id":"0144281d-3ba4-3373-8a46-57e6dfbe5db0","authorName":"UncleBeer","authorEmailEncrypted":"cf4JKV/o374fs8hOCL6rxG3/So1gqYq5KcLWareO5RiZ9AMWkKG80o5sRl0xmhBlTHHtJzGxo6U28GVq9AU3+o0gj9mgbAkJOj8KQA24j8xaWjLULnMT/TtS3DPKuGjE5u1aaauJekLzrYsHoPhZFzwmza5LIzpmgWdyK8kCKg6CyuNXfXXgchFDNTjoENXT4enr62KseWPzuWKDSI0njaB3Ff4XpKZL5FHrN8p7tnFKNThzwQn1FTrZR9Vu3zshX4CyHy7yIdXZwMWwAlBG9n5uWF2Vot9adiEIJ2wD9O6jGAQu1A/yHF+0WyhNrKxR0ZgIrGk2sc3dSecoOuzV8xwQ3sZCGtmTvIDQNC1mJsIQ69GPDHRpUa/64pV/aWXK+tGfGolnPAYTtZSmS0hUpsoI4t8F/md3S5/unIJwD8NwjCp7/9Eo3cfBY7Ns9TuAxTU5lOojuHAhtnJGn2X2BASKoQfiZmIxwGTxYqB819jxh/DYtYcwvgLw+IUa1gDJJ+op/QPXpeLhPxhbk3IzF2yDIoxrHKULts3Nk98txyReF3xj49bhy0gpuCDd9nZeWS648YuMzfr0NPs5J0kuTl7sex+oipvLtGTd0yujaEpc0SjEchddevQbXb6nZ8a2nf3eduUK2AMhWUA9Z0jT/bSHysxoQ8oH6CzgJgF90fk=","authorEmailMD5":"0b5fe433afdeb475554873eb12d3c983","message":"Hi Stephen,   \r\nthanks a lot for your useful article. However, I have some doubts about my implementation, which I copied below. I'm starting from an existing class MyController, which is handling HTTP requests. I tried to make the class asynchronous by wrapping the synchronous code with Task.Run.   \r\nWhat do you think, is the usage of Task.Run in this case correct and am I using it in a proper way at all?   \r\nThanks a lot in advance. :)  \r\nP.S.: Don't know why, the site is adding stuff: 'myresponsedto=\"\" ' should be simply myresponsedto\r\n\r\npublic class MyController  \r\n{  \r\n public virtual async Task<ihttpactionresult> PostAsync([FromBody] MyRequestDto objDto)  \r\n {  \r\n var response = await Task.Run(() =>_myHandler.Execute(objDto));  \r\n return Ok(response);  \r\n }  \r\n}\r\n\r\npublic class MyHandler : IHandler<myrequestdto, myresponsedto=\"\">  \r\n{  \r\n public MyResponseDto Execute(MyRequestDto requestDto)  \r\n {  \r\n MyResponseDto responseDto = Router.Call(requestDto);  \r\n return responseDto;  \r\n }  \r\n}\r\n\r\npublic class Router<myrequestdto, myresponsedto=\"\">  \r\n{  \r\n private System.Net.Http.HttpClient _httpClient;\r\n\r\n public void Initialize()  \r\n {  \r\n _httpClient = new System.Net.Http.HttpClient();  \r\n }\r\n\r\n public MyResponseDto Call(MyRequestDto requestDTO)  \r\n {  \r\n var myResponse = _httpClient.SendAsync(myRequest).Result;  \r\n return Map<myresponsedto>(myResponse);  \r\n }  \r\n}","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2016-11-08T11:28:22Z","timestamp":1478604502,"authorUserId":"disqus:disqus_oxBAuCWbiJ"}