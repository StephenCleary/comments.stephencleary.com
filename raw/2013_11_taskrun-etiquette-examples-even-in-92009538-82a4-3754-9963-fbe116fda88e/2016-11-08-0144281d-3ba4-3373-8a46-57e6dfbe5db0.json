{"_id":"0144281d-3ba4-3373-8a46-57e6dfbe5db0","authorName":"UncleBeer","authorEmailEncrypted":"nssfgCG4U+Lj8dNCn7G4qO+PhAdPzNWSx/yV/wYG9DPmCQIkmk0Zl0XFcMz4Xe7roB3dV7c0+hjZXLUyxbr5isV0b5JwkID2amJtmqGhyhQfFUynySaTICQQxyXcrUu/zB0I6YzxpbuRsfo54iEVsIGKZ4LQ56NfXGyrQDDbP2wppSswGNrTU1UAnKkH1zp1L9H18AN5lS8CPZ6yL/PsZCITSjij21eAg7yxcyClPoFQ5ZzMIzEwGbPNk9S++PeXCxe/VEY7x1kR+X6ZipjN2ABMR/kO2BK+ozVDzZS0RRrL4H6ek6I+qRFu0Kua7LubpoaYzkGawM1ogAl2dYqTZE41VuAzfa6IzybKX4t8Ryca8gVrBpsIyeiJYGv7N1uCevgoT7JNPp+kLmJVGabHE2kET8MY2jsbwbmbA7jH1RzRu+5x0m5zXjmF4sl1XovceRVOVscYSj5lPdARt7aVeKnZUeyEfPCmF2pBnnAhKswPUkCtHuYD22EGojc6RUKfMx12qqRbnIV6SbCYzXXnlcsCJHu3Xh+jN3y+viwukWOoX9yInTDF+akBTEo3rib/FeAZY1ayOZ+N45fw2C+Hfib8Uo5oosH3wsVxPhxFdm5c5YfgVK1fAdiUXILACsxkrQaraNJrCI4t5H02XQPnrhu/daOQKcHTruc4zJFCJHc=","authorEmailMD5":"0b5fe433afdeb475554873eb12d3c983","message":"Hi Stephen,   \r\nthanks a lot for your useful article. However, I have some doubts about my implementation, which I copied below. I'm starting from an existing class MyController, which is handling HTTP requests. I tried to make the class asynchronous by wrapping the synchronous code with Task.Run.   \r\nWhat do you think, is the usage of Task.Run in this case correct and am I using it in a proper way at all?   \r\nThanks a lot in advance. :)  \r\nP.S.: Don't know why, the site is adding stuff: 'myresponsedto=\"\" ' should be simply myresponsedto\r\n\r\npublic class MyController  \r\n{  \r\n public virtual async Task<ihttpactionresult> PostAsync([FromBody] MyRequestDto objDto)  \r\n {  \r\n var response = await Task.Run(() =>_myHandler.Execute(objDto));  \r\n return Ok(response);  \r\n }  \r\n}\r\n\r\npublic class MyHandler : IHandler<myrequestdto, myresponsedto=\"\">  \r\n{  \r\n public MyResponseDto Execute(MyRequestDto requestDto)  \r\n {  \r\n MyResponseDto responseDto = Router.Call(requestDto);  \r\n return responseDto;  \r\n }  \r\n}\r\n\r\npublic class Router<myrequestdto, myresponsedto=\"\">  \r\n{  \r\n private System.Net.Http.HttpClient _httpClient;\r\n\r\n public void Initialize()  \r\n {  \r\n _httpClient = new System.Net.Http.HttpClient();  \r\n }\r\n\r\n public MyResponseDto Call(MyRequestDto requestDTO)  \r\n {  \r\n var myResponse = _httpClient.SendAsync(myRequest).Result;  \r\n return Map<myresponsedto>(myResponse);  \r\n }  \r\n}","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2016-11-08T11:28:22Z","timestamp":1478604502,"authorUserId":"disqus:disqus_oxBAuCWbiJ"}