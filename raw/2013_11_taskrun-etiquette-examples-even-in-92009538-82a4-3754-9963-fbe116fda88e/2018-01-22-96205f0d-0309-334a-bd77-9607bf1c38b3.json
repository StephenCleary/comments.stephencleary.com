{"_id":"96205f0d-0309-334a-bd77-9607bf1c38b3","authorName":"Guest","authorEmailEncrypted":"GGQgeQwUcEMIqO8g9CMVxeYKcKChCp45w8cjXaOaVRAwl+D4wjCmyuMrdQLXc78kuAW0I+kHR2T/wlEfXWxTAiKCxCsuZSBOhXNmeFVcJlnv6SbM0ZtQ981gGMbUMHLKM71tMfGcoTQDJ4Q9pgH3Uq+z75G2ocn7P2mtYwesUsIlgU8WJq9HBON4Emsk9tLnCwTtmmlm07pSkFJKPAxZqPEFzhLyJqb1KK9XmyyG/C+yoSR20l+bsZoSC5m9bH8dAo8JbzmWk2oFM7IXSntwtmha6780a+i4DUhWkuO0nvjAadDbkoLanFTpiq9qcGNhdAHG4HV6xE8yHulQS7RRSAVhmfePh/pJydPi57YFCqjwWjrhSu4jchbo6Makn4nNypU4OT/6idFs3JwQMYGius2ENmWPxWJmHZMe3A966a+f+RczFNzhdGK7mMdf5RZmXcOw6OEM330deMc5ZTx+eY5eGQHbV+D7LS+D1ahV9Em4v7ILkDKYRkEHsvuVXwMutnHWsj82Bj3e4idZSlxwCK+7HuSs701lfKZeRw/tkfYjFDfjrOVpaFsIR1o2uUSaHiRnZUhNoqMf0OypV1l3JBOWwHMTfMOsSwhjvja/XuhN5VLAnL3t0iV9NEGORWbMO7CZpV/fznEP0LHX5amle60ScgI0js4kkWzt2ju4PNw=","authorEmailMD5":"ee3538940b56d40eee35ca99cb98847a","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"Hi Stephen, I have an issue with converting some code to work asynchronously. I am running into an async chain that is resulting in my API needing to return a Task<t> to another .NET 4.0 application which cannot implement await so it is forcing a task.Result which negates the performance improvement I am looking for.\r\n\r\nWithin my API,I have some calls to another API, that I do not wish to wait on before returning control back to the caller of the API. Using Task.Run to run these calls in parallelism shows a 15 second difference in UI responsiveness, but it seems this is not suggested at all.\r\n\r\nDo you have any suggestions?","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2018-01-22T21:36:16Z","timestamp":1516656976}