{"_id":"96205f0d-0309-334a-bd77-9607bf1c38b3","authorName":"Guest","authorEmailEncrypted":"mJZbwkAQQM0x7Lb7gwxOGgROfUADj1fhlKhHhl7NtvHAsFXt0ppt+w/6sGfFxC9v/3OflxE18SyXIJlC/l4yCYjvprKoOhO2jYIBjfo5ZYQvAlNSmUuWVfoYUpp4uPWWVeMjEnGLOvAQJM56gPDt+u4G9plHXjP0AbeVBGIheKzKjUqonA1UBudy0f8G9dIEiyGiiCRG/egAXSSoRYRpE4FrbjF5FIxOq6LLBPZ1zuK75D3QK3QxYxnHc7OgHDCGvG7knNQBCICRUjbJZFxTyHg6+p9P26wersos3hII73j5XxMlQ+CScL9YktYi5yoPLrRl7SWsU+iGgPYnZ9jkJU2blrFPx2nIdgQqMyX5UozLzwwACpOY/Vqm9T/GTXxpa/5XQY/CWg3KmCJq3VEDi1WVEu1lM47GI8hQS0BfWi5Utld169a/s6M+8y/hDsZHaEeJNIwK3GUcPbVNLsWJ0GmD8TklRUKlvYZKeemJlITPYBImCb/ATEDNrMio2xUQ7Eua8LyZlCEVt1lCAJG9l93hjVo7t5KKAaHX3P7a99KaQqwWKzuuU3t/rLP6EAA6RHLp1zRfIgIafaO1FRqvNyCDnlAn6wTndWSPgY/h8A5YzdPz8KfbwFaC/gICtYYJpUrEF/rTmV97rlFcSBYJZ5ZqHFA2T6UhdKIIOVUZZTI=","authorEmailMD5":"ee3538940b56d40eee35ca99cb98847a","message":"Hi Stephen, I have an issue with converting some code to work asynchronously. I am running into an async chain that is resulting in my API needing to return a Task<t> to another .NET 4.0 application which cannot implement await so it is forcing a task.Result which negates the performance improvement I am looking for.\r\n\r\nWithin my API,I have some calls to another API, that I do not wish to wait on before returning control back to the caller of the API. Using Task.Run to run these calls in parallelism shows a 15 second difference in UI responsiveness, but it seems this is not suggested at all.\r\n\r\nDo you have any suggestions?","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2018-01-22T21:36:16Z","timestamp":1516656976,"authorUserId":""}