{"_id":"96205f0d-0309-334a-bd77-9607bf1c38b3","authorName":"Guest","authorEmailEncrypted":"Ig2kV6IPxv4fsiC6KdFgMNKhYJveHVZ2M8SK5fYxVSyHu7ObZj0maTahSh9LsOUIShPzjKI4chd6DLnqpNPLXdgJEe8XsN3XlndU3IFs/M0JnEJxfmzERrJX68WLIPs5KoRvVJZjfh+MMtH2v7KDUvaeqxJDmmql0m0wF0Il8MhZoguf73q9Xb25q/mQbLKxmB9uLW/8CUcofDS7gAVG0rmTHBZw+IFw0Nwge1qr9sRJ/qBHlQ7B+93NPf+bjDmHyC6KVETUKmwwmTJiweWyyiygnQhWkoh3KwUCQLSNVlp58xEsFzZVBfEUE6gzZ7G3nTB6dSU4JwN/R2up4WOo9r4mEhALGhCDhpDeAlIa+ZicMnni1fHNLSQL3Cy2azhxtZLo+tC1iPRupC3QcXnywzXx23G02XSUZ+/zts0MZkg5tCfKtFwx5JpYy3j3ZLqWzR+y/iH4bMWpek2cklVxgb8yOJjzJQBwlbtYL2GwZVrusBVIhPCkOpBTpUP2TO4OO5j+wVQPIiLwVLJeEUECDmxlrMidxrqa3BExiFXqEQJfh+j3CwDCV6hd0eByg8sq2qLAb8cW2hqRkBujyyriFAlOzlXBeJzdl1c5DVP3N/ZBrX0jXDb062UIR8MMHMRSoFCpAlJRUTiQM8342vxBXOxo0b0NCqpafg9tmBE+CrQ=","authorEmailMD5":"ee3538940b56d40eee35ca99cb98847a","message":"Hi Stephen, I have an issue with converting some code to work asynchronously. I am running into an async chain that is resulting in my API needing to return a Task<t> to another .NET 4.0 application which cannot implement await so it is forcing a task.Result which negates the performance improvement I am looking for.\r\n\r\nWithin my API,I have some calls to another API, that I do not wish to wait on before returning control back to the caller of the API. Using Task.Run to run these calls in parallelism shows a 15 second difference in UI responsiveness, but it seems this is not suggested at all.\r\n\r\nDo you have any suggestions?","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2018-01-22T21:36:16Z","timestamp":1516656976,"authorUserId":""}