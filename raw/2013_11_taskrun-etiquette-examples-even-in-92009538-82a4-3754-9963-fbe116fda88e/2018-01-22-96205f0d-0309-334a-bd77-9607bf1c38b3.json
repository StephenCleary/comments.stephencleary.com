{"_id":"96205f0d-0309-334a-bd77-9607bf1c38b3","authorName":"Guest","authorEmailEncrypted":"D5I5OdtEvDWxgnYCXzPhkJ/57acKpLUgrZ6YvK5HL1IlK6ejTWgZTEZ8G+Ygqh2wFLnvG3J7iZVkcnAz2mBDWjlAK50LWyw1VK8iiLhqWck3W1RPALz6/ZuHSOp71TrnGOHaksE/g2JUV/sIntZLkZjCRH6yo3a0L0k0SW+fNBSE8Ic5jXm6JER9ryZNKRVF4EZGukuOMCYsbNp2VDew9/NHH8KwdG7r7Gf+rB6QibOPjmDlbI6mr7FzI8LxyR2BEUNanXP0Ic+oGnCq3xrEXNiH/6noLf55SfNMXqJEXPCFqJbHUkPo7c7yGPlK/wqum/JBnm1G1S/dsh7yKoJuPZulqHF+3pmdp3ei0LAGwPgbxinZdXQhBIkSiii/yZ4f59IQ0Xo+CiICUqNbOiPqnrErFilYnhYEt1rw73T3KPW/2YAnWckDYmN3dUqlNiu87fAdhu58TrA/5jOiWuT73pLldU3dmT/xgAqhpGEzR/fm6b+5gla0oY1FsWktGgVdeOeNFFdWd5NJs+FzapKYQSAWQn8bpUj71KGDsYM9qNEvaQdnLgVetDSl5xhsPLHCe4KxlRNJW1eWMb25PKr1AV27xTcwAEMsRnYhSkObVdRyesxOB+yzKE+QVwT0PBcBZQGueown7rJHne0566IciGlLjTSx3smKan0P223q/sk=","authorEmailMD5":"ee3538940b56d40eee35ca99cb98847a","message":"Hi Stephen, I have an issue with converting some code to work asynchronously. I am running into an async chain that is resulting in my API needing to return a Task<t> to another .NET 4.0 application which cannot implement await so it is forcing a task.Result which negates the performance improvement I am looking for.\r\n\r\nWithin my API,I have some calls to another API, that I do not wish to wait on before returning control back to the caller of the API. Using Task.Run to run these calls in parallelism shows a 15 second difference in UI responsiveness, but it seems this is not suggested at all.\r\n\r\nDo you have any suggestions?","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2018-01-22T21:36:16Z","timestamp":1516656976,"authorUserId":""}