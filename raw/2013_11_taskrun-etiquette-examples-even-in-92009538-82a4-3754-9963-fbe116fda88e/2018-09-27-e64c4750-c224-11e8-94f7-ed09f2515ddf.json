{"_id":"e64c4750-c224-11e8-94f7-ed09f2515ddf","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","postUri":"https://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-even-in.html","replyTo":"d727aef0-bde6-11e8-83e7-13297d639546","authorEmailEncrypted":"qVum1kgMC3A/cWle0qHBsTzeY6yUX0hZq7XhMUOZfwI06w7+IlpI3J+MaaGRrSsRUZ4/2NNcq8KnDbAEQAZNFEfCwUSI6aO77MbOL/LLKKwA+QFIvTyBNm1k0VkGsps0cCJJmMF44IPfTM/ejH734WRUxDcaElnJwEmfaowm3eqvA6coKxt4oXe1nNyIWPlJ/TJrQs+8rnM3xmTttJkrdXf6KVMxOD0SDgsZRMrL7DVEtfJv/+bTeFGiaa6x16ASlV4vFS9DK0odG5k70mVijJa+16d8Hluci+0CckH3a+w5x7wtLrjLflyBkVEic3d6d6tu1U4fwmmz0sC79GlaBGcrzIp0s71QdCNUZYX2MqFDQK9XHJNCPGIn7Ej1TemGeLVNx09/0aOpePahyksKSglm54kH0EOjyMTcnTVJNWqsTJvnHcic7nZWb+zwgpX9uYlq8X/ir5eVUVMUqxqJmJ1g3fE6wod7DLWfHWipQmJqWrvpSmOaOFmC3d7u6bzfr4rTzwBxYC/6wqXpOV7ICasuvHhOQpHkO+oSm/1h8PwTD53KPtCowPJkMR6HklUaLcq1ru0IQ0vylOld5qg1OOLn1xPeZ2efjvVohmsYKePYPKNiNMHW7bcqcd8sv5nOdBpT1z8iCpYdwNkq7WMrs7OZEXYNjhVA9waVSGkpwg4=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I don't believe this is a common situation. To be serious enough to require `Task.Run`, the method must do a _lot_ of CPU work, and this would be done in the same method as asynchronous work, instead of using something like a pipeline approach. So I would not say this is common.\r\n\r\nHowever, it does allow LSP violations. More specifically, `async` allows the same kind of LSP violations that `IDisposable` does. And the resolution is the same: the consuming code must be aware that some implementations require special handling. This is unfortunate and - in C# at least - unavoidable.","date":"2018-09-27T07:13:57.749Z"}