{"_id":"b6a545c7-9c6d-377c-ae85-aec4fb4c96bd","authorName":"Visakh Vspm","authorEmailEncrypted":"o4peyteRRpG7DCVLkn+DvXfPOLrJOKnWO3ZZFK2VXo5expSJaNth8Ok5t91QTipNdBnd/BVmO/wFUKs2IVupBiK/zZJAcscdmbMliSbPGPFoB0nFNbCWZJ/hGx1bbIRQoHVKgYSUP3Ev866nD15B7Bm5IY0oeIdJ6PiWdpL2Z8E6sKAAIWkOh3GhltIumCFrY8ywbZmoPodiMrZPWRKq/1GQ198MygsMoqchD8Ngrtppp7Ph4q8EO2+mAgRWJFi3p2WsiSam/doEY5A4KyDfHSjR5zq54GPmG7M+mfdlwxlYkaOQyteqHGG3/L2dpDv39lZc4aLdocBeuKvHO5jgpTY58Du72uS6PwZ91k/63Rci+fPblbhaixglvSPQXUd3Rc8sktFAB+Ym04Lw5R/LxOuqjvWrc0v2J7itVd1rJVIwPe43sE2KiDPCsE3IKhj38rCy9GlIDH7UQZgyOTXxZIHGUVQ6lDET363xLgvONwpwjR9DXqQD0x6dERuxip+5qo8gLeyZqOnoYoa7BwpFkjW+2gFNFDnBWzysNWGdw9dcORC7rSOLVyu2e84YGJELjFqqd47eVhu00kTBXYoORaF432Yf90smPd2/msKWpsMluKVH0E2jMvflxDXYY67f2H7dS4Q5oCHhMfKJI0Q1ELuf/sunEeBZO28VwLDEoyg=","authorEmailMD5":"073ea6444ef0db89d4926d8ed8dc0f9f","message":"when user clicks in one part of UI(first), another part of UI(second) needs to updated automatically. But second part update requires large time because it involves cpu-bound operation. am confused how to use async and await in order to achieve responsive UI.\r\n\r\nshort version of code  \r\n--------------------\r\n\r\nUI first part  \r\n-------------\r\n\r\n private void datagridviewMain_SelectionChanged(object sender, EventArgs e)  \r\n {  \r\n DataGridView dgv = sender as DataGridView;\r\n\r\n if (dgv.SelectedCells.Count == 0) return;\r\n\r\n currentRowIndex = dgv.SelectedRows[0].Index;  \r\n if (currentRowIndex != -1)  \r\n {  \r\n UpdateTexture(currentRowIndex);  \r\n }  \r\n }\r\n\r\n private void UpdateTexture(int selectedRow)  \r\n {  \r\n if (DockHelper.IsDockWindowState(ApplicationViewData.Instance.textureWindow.DockState))  \r\n {  \r\n var serialNumberList = frame.ReadableApis.Select(p => p.SerialNumber).Take(selectedRow + 1).ToList();  \r\n ApplicationViewData.Instance.textureWindow.SetTextureData(serialNumberList);  \r\n }  \r\n datagridviewMain.Focus();  \r\n }\r\n\r\nUI second part  \r\n--------------\r\n\r\n public void SetTextureData(IEnumerable<int> serialNumberList)  \r\n {  \r\n var client = Clients.Instance.GetClientById(ApplicationViewData.Instance.ActiveApplicationId);  \r\n int frameId = ApplicationViewData.Instance.traceExplorerWindow.Frame.Id;\r\n\r\n var textureElementsUptoThisRow = client.OpenGlesParameterObject.Textures.GetTextures(frameId, serialNumberList).ToList();\r\n\r\n //some UI code to set the retrived texture  \r\n }\r\n\r\nService code  \r\n------------\r\n\r\n public IEnumerable<texture> GetTextures(int frameId, IEnumerable<int> serialNumberList)  \r\n {  \r\n //cpu intensive code  \r\n return currentFrameTexture;  \r\n }  \r\n-----------------------","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2018-01-09T06:23:28Z","timestamp":1515479008,"authorUserId":"disqus:visakhvspm"}