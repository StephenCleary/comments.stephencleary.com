{"_id":"b6a545c7-9c6d-377c-ae85-aec4fb4c96bd","authorName":"Visakh Vspm","authorEmailEncrypted":"pY0apBTxAb6lORWMngOYuzcNbAJla0FIyWwkS7VwaOMeC86yOTaeJm8VpLg/WUu8rxb7vJ3Uw+kfI0MV81lYSJuj4FntVVnPzL0kpqoNNtLzZH8I2zRLkUN++yjp32yVN8WwXxAFWz9fdbUDdRUq6aHwQ9SCRpp9BNHuXAknbQ4kfSW8UzS0QAoBjYIfW1eSv2npdDGz7aZ7uljckVxG4SHV4LFgymJtg92VjVyayhTNl/0o4CveG+PAHzSWT9v40UY+oDWrcFNbBWCm94c3FTig1Si0+dPWxBL12IYFwMRrcDBGWsLH2v6M6Mpjalxbc0M2Jsx+L2SO+KacrFGcT0hB8b5GETsZSgNMzcCXbIILOJgWb0ZajXiuetSeTSQzmB6FlD0yXoy2UFbHgEMh11UkO9o2brAM0biri/5DIJr1lDVkQlEEHBp1T+jGaiv/2rQfUGVwpTrJ3JKwF/i+/0fTlyQqy1AWqeKPdOMok0Sj2+0CB2QPHOl3pDmT3D25112Mr28SI9ifLtnCM+FzksWJds8jv79mCgVgd5HyXu0G5tlSTUqhYS1kYShDbEk2SC3K1dhUDN7S5W3ebCZsVZv9l1Nt1Xy3Q+GsCk4WIHjVr5TMnLyXc8ErEJOfZNlUSeNo/4jEZQJEUgua/7NxL/wiZA9ho8GyIR9rXqZY4Vs=","authorEmailMD5":"073ea6444ef0db89d4926d8ed8dc0f9f","message":"when user clicks in one part of UI(first), another part of UI(second) needs to updated automatically. But second part update requires large time because it involves cpu-bound operation. am confused how to use async and await in order to achieve responsive UI.\r\n\r\nshort version of code  \r\n--------------------\r\n\r\nUI first part  \r\n-------------\r\n\r\n private void datagridviewMain_SelectionChanged(object sender, EventArgs e)  \r\n {  \r\n DataGridView dgv = sender as DataGridView;\r\n\r\n if (dgv.SelectedCells.Count == 0) return;\r\n\r\n currentRowIndex = dgv.SelectedRows[0].Index;  \r\n if (currentRowIndex != -1)  \r\n {  \r\n UpdateTexture(currentRowIndex);  \r\n }  \r\n }\r\n\r\n private void UpdateTexture(int selectedRow)  \r\n {  \r\n if (DockHelper.IsDockWindowState(ApplicationViewData.Instance.textureWindow.DockState))  \r\n {  \r\n var serialNumberList = frame.ReadableApis.Select(p => p.SerialNumber).Take(selectedRow + 1).ToList();  \r\n ApplicationViewData.Instance.textureWindow.SetTextureData(serialNumberList);  \r\n }  \r\n datagridviewMain.Focus();  \r\n }\r\n\r\nUI second part  \r\n--------------\r\n\r\n public void SetTextureData(IEnumerable<int> serialNumberList)  \r\n {  \r\n var client = Clients.Instance.GetClientById(ApplicationViewData.Instance.ActiveApplicationId);  \r\n int frameId = ApplicationViewData.Instance.traceExplorerWindow.Frame.Id;\r\n\r\n var textureElementsUptoThisRow = client.OpenGlesParameterObject.Textures.GetTextures(frameId, serialNumberList).ToList();\r\n\r\n //some UI code to set the retrived texture  \r\n }\r\n\r\nService code  \r\n------------\r\n\r\n public IEnumerable<texture> GetTextures(int frameId, IEnumerable<int> serialNumberList)  \r\n {  \r\n //cpu intensive code  \r\n return currentFrameTexture;  \r\n }  \r\n-----------------------","postId":"2013_11_taskrun-etiquette-examples-even-in-92009538-82a4-3754-9963-fbe116fda88e","replyTo":"","date":"2018-01-09T06:23:28Z","timestamp":1515479008,"authorUserId":"disqus:visakhvspm"}