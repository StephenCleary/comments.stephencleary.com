{"_id":"854b548c-7547-30a3-902a-7a994c520380","authorName":"Ian Griffiths","authorEmailEncrypted":"mkWAnoaSFzf2kPx/jDFo4Ssv74dNbdh515sIXygTsBvpWQQ0IQJuj0Qcn6PB6NawCE2FN95+4aUN29FtXYz2wpYjE3b+OfBNh1DLRV6Lj0ApRrRsI10eV7rte9Vf0GShbObRwcJU5PmtFc4M9YhqXRuKvbH9MGjuwlCM/K7GfVvgFFR+LII+d20QNEV7v6zcwEr0o9U/7zkEL9gL2mqbzlmBznX8ms9clsFi9/iGUUoihnWo5I3/QtYUhR9DuNN+Jq5wQNL2qpRoh5ijvi7S5nkis8RWb+rk69aHLTtt+GyGnDB2PFVeYfadIWFVLubY8Mvavl+lHqV55Zu8drbTv/BUeMxHovuet0KXu+U2O5pJJJ7VRThpyI7GF+384T7+gHUfGvuhQmWb8kQryibix0229S8IP3VWTP5jyeNWsX3u3oCABRzJ9yMYzI2u+omBqxVoX6yQoy2uzYOMRogrt+xZDxA4MKMEi3AdxoD0tabvJ2m1bkU8Q6JbDX8Ugfs3RjP5ZmGr/D9wYTlDJNRrcaLpDC3rG4rL202IgZLw/Egc+5t+3Gx3pX3yXQhvEpCcp8zDw+YgDyGDrk170XVgka/rPiNTUJqTVQON++ToK5iGOqvJOQt79NedwpLfeBFf2V+d5x+MM0kyWAeATMny/UA5edeSBEGdarSCWXz+MJk=","authorEmailMD5":"8c4da9b88e4f0c290c8441d06d37dfba","message":"You say \"The expected asynchronous semantics are that exceptions are placed on the returned task.\" This surprised me - I would expect it to depend on the nature of the exception. In particular, if the exceptions relate to input validation (e.g., ArgumentNullException) then to me it feels odd to put that in the task. If the input is self-evidently bogus, you're never even going to start work, so although, as you say, \"the returned task represents the execution of the method\" I'd say that if you're throwing what Eric Lippert describes as a \"boneheaded\" exception, the work represented by the task never gets underway, so I don't really expect the method to return me a task.  \r\nIs your description of the \"expected\" semantics based on a design guide that I should be reading?","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-02T06:50:00Z","timestamp":1480661400,"authorUserId":"disqus:ian_griffiths"}