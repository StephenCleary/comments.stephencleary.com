{"_id":"ac261a71-e24a-3102-af3a-1a6102249239","authorName":"Joseph Louis Lagrange","authorEmailEncrypted":"eEzYH7IkRiAfvDZNtL1MLA+MGt4cQkWGFyUVqlvaOsfjFMgNK9CvCqsaYRP0OJeXVoIf09usKyqvqLYZCEtGE3DEdILe80txm2IjTWFkFFJuyQ5P29WhfrTbDOF4AcfzEAqOpbBHHbYLJcT9AgoM9cVo6OdpHHcBCcwyktzGlwsUxamlLgPAWhVFxP+71RluqKwMuSp7ZBR2nG3HHnBr5kCJi/7d8fmn+Fhpb3W2la1FeZQKv5YXwOqbb4rQ6qKjKXiNmet6JMX6j7LeT9R+EfB9muhrnV6DU6w7llqb+M2v+9jXaQm81Ahtz1f4H2SvShIgD5IW0Ymlj/Cy1ktv9ypsOWTVNaxoWSYujFzQRzIl2df7ZKWjddtYce0ury85MHW4OKLEnn/sLX4g/NYV1Y/1kuiwhnsF5D9Lv2JZhffF1vvtJd1ODfjNfXeEGd+yirnE2xtq1vEJdGerm9f9sygXrEPRiNjx088deioLW01iJJoGAgTA7sODmFKDEQnEWiRw6H6xKAUzFW4YdFmDKFT+uJEQp5NvO8xK/4Bv8/FQ5ZNFLttToVBZoJPnEYb/2RRszsgKhLw81//ZpDBUiuN1hZfWej46w98/Pi4BYV4gRKI0t89G5B/xY7OxqWekYryjpF67RQjZ0V8yUlcq8SqbHYNgYtR6Gj/as28Pqy4=","authorEmailMD5":"7e6002f0e0c986706f0d834f7db3c134","message":"Assume there is a class library MyService with a static hybrid asynchronous method HybridWorkAsync. The \"hybrid\" means that the HybridWorkAsync contains both CpuBoundWork(); and await IoBoundWorkAsync(); statements.  \r\nNote that the etiquette you explained in another post, the CpuBoundWork() must be not wrapped with Task.Run as await Task.Run(()=>CpuBoundWork()) in the class library (implementation). Later, UI-based consumers have to invoke MyService.HybridWorkAsync with Task.Run as\r\n\r\nawait Task.Run(()=>MyService.HybridWorkAsync());\r\n\r\nto maintain their UI responsiveness.\r\n\r\nHowever in this post, you \"suggest\" us not to elide async.   \r\nIt is confusing to me because I have two choices when invoking MyService.HybridWorkAsync in a UI-based consumer.\r\n\r\nawait Task.Run(()=>MyService.HybridWorkAsync());\r\n\r\nor\r\n\r\nawait Task.Run(async ()=>await MyService.HybridWorkAsync());\r\n\r\nPlease kindly let me know which one I have to use. Thank you.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-11-21T09:39:07Z","timestamp":1511257147,"authorUserId":"disqus:joseph_louis_lagrange"}