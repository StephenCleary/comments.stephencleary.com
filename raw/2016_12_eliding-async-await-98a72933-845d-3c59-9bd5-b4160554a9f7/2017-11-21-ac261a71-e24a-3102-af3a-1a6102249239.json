{"_id":"ac261a71-e24a-3102-af3a-1a6102249239","authorName":"Joseph Louis Lagrange","authorEmailEncrypted":"l97sbMCWegDEffvMjxH6jF/eY4WtyX6tP3YwYB2zMaCU1aybRL8ZzsPi5+Q0nSC/ojrSzPQ1FZ4KUlNNV/zVZNsKYKdK/d1hdiaKeLB5PwEizgT5wuWVZ2/4/ynY702j0gADbU5iT/jtKNNDgakSQ1TjMAtrrhyQoEmjmqCMXpaxAT1o1tTXOCU7ujB2kiXLVWY8PfQ64ocVjkH+t/SMQn2GHSKxDrIic1/Hrj3MzC/9c/EFA9gXajQjEdl0d57jKpejhnGp7Ouau9Fmp/ClofaZ+SXACmckIIOEiFrZebMTuw+ziTRKLVSsNJdGqL5YxQfhjPYnXKp9/pwh93tpuBLdbTA47je/qMdKvygQ34UqrSmJzcuLlDxn5aaBoL/o6acCbEgzDRh+xemN7xQb+sf6ArCUcYJK8EOTQq/Au7/UUXJP5vpE0pnw2i9sd4dCwsQ0nbceRfGOLx5+Vjr75d624UFKD+xj5xVB2PHEd76FQZaJjqETh6KMG67wyNWhNaVapQ37W0KHM2soMnC1fSJk/DzNaLCrlLKpYjm22jle3ApkevyRT8By7AQyqrNB8a2nOsFl1+n/9Zm0RFry/qaQLr13tRIUJaqZnFv7uSzBadfIDaDL/fLMX03jkw/sM7DYxAdyBoxbxoODsXPtsn5JJlLeow2mtVnzy/rO7oo=","authorEmailMD5":"7e6002f0e0c986706f0d834f7db3c134","authorUri":"","authorUserId":"disqus:joseph_louis_lagrange","authorFallbackAvatar":"https://disqus.com/api/users/avatars/joseph_louis_lagrange.jpg","message":"Assume there is a class library MyService with a static hybrid asynchronous method HybridWorkAsync. The \"hybrid\" means that the HybridWorkAsync contains both CpuBoundWork(); and await IoBoundWorkAsync(); statements.  \r\nNote that the etiquette you explained in another post, the CpuBoundWork() must be not wrapped with Task.Run as await Task.Run(()=>CpuBoundWork()) in the class library (implementation). Later, UI-based consumers have to invoke MyService.HybridWorkAsync with Task.Run as\r\n\r\nawait Task.Run(()=>MyService.HybridWorkAsync());\r\n\r\nto maintain their UI responsiveness.\r\n\r\nHowever in this post, you \"suggest\" us not to elide async.   \r\nIt is confusing to me because I have two choices when invoking MyService.HybridWorkAsync in a UI-based consumer.\r\n\r\nawait Task.Run(()=>MyService.HybridWorkAsync());\r\n\r\nor\r\n\r\nawait Task.Run(async ()=>await MyService.HybridWorkAsync());\r\n\r\nPlease kindly let me know which one I have to use. Thank you.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2017-11-21T09:39:07Z","timestamp":1511257147}