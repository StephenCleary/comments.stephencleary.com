{"_id":"ea70a543-96f8-30f7-aa39-0ea46d6fc3ed","authorName":"Thomas Levesque","authorEmailEncrypted":"Qyv+rLgsHnwV1afPHZWPAv5/1PApzYh3VIjsGHpPbTuWARF/auGRuFZlavGlO0I2vBt/msPwepXlXNxeMizeV919BjqAzEG0pINhiWP05gM0E5jbF9Alt6MxVbqSdBBjfxc+PAE+qfjL9HDyYnmTSmCgU4Ksv/r+5viauEqLYJS+FcC9SW6nm2VtKzF+drft3uDz4liVKnmidM1FC7Buv3WFUqZ/2sz9QK6W/3FDPEnmg37l+aTk1v+2IcXCldn/PLK9NfhCe+rJD0bheh2OBqvyx36ZDcK5HOGTNvx0/EAzF229OtTrX7MOUrfh8ejoK6k922MtwROF/oVoKThRrqAZDpwU9OFfcWnGBxfmvo46ZRlO/lUGnenlHUDqSAr5zBViOydBYNpWG+n4rpHVDaNReXzMEyiYu3591gMoFvccdS/KKg7GASac5kMRc9b92qLyf9b5fuRfGcMGP3n4/CGLSl9bstCy5gp1eyjsMuFL37MSqEJ95tI1LzhsOMT5XsPU3kzvWbh7f9Y02cl8ogVyprER9Ewc4jHa7Wj7TG1LZZvycbcSMOowN+mWIpuVq9fJH7nTmr8J/aGpIotUHKCsLpNXDcMq7vBsi5AiT+TCQgvpateugsv/9RqXcco6KOvXBRt5OXdjSRLudJZaHv08Wq5acn9sgN30qn5sO6w=","authorEmailMD5":"f4acdb91aba11ddf8f03d4b12453f3d5","message":"I realized just yesterday another reason to not elide the keywords: the exception stack trace. Async stack traces are already pretty difficult to read as it is, with a lot of noise from \"System.Runtime.CompilerServices.TaskAwaiter\" and generated names from rewritten async methods, but when you elide async/await in an intermediate method, this method doesn't appear in the stack at all! This makes it pretty hard to make sense of logged exceptions.","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","replyTo":"","date":"2016-12-02T13:26:06Z","timestamp":1480685166,"authorUserId":"disqus:thomaslevesque"}