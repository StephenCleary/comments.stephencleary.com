{"_id":"d7c6c5d0-3f94-11eb-b404-698636a58c4c","postId":"2016_12_eliding-async-await-98a72933-845d-3c59-9bd5-b4160554a9f7","postUri":"https://blog.stephencleary.com/2016/12/eliding-async-await.html","replyTo":"","authorEmailEncrypted":"fmkHWaQKIUL1H3JOezwERNuJs9ZRRETB8CxNlezjb4kiaTdfmgjBCXBSFU8SLKKGIH4Rnb34SOv9x/gSsCGjeSiBMk7GvFgQnwC2JkcwpwelQhNwVZS57tuOo+YlwOHLd5gkc6fTkjxR8LsgffcgjoLLdyAeD4bmOUa4R3m0Pg4QAfgcBFmqnCVpMAYw1UcVzGraNGf9kg6ryPj71gkEP8m5T7jVawwjT1vHejuUsUA32aCUC1FanADIFpWxPD6VRn7dXguFdFT2B5Oy53bFmY9qKz6dQEqO+mjtyOqLYHtMNf50fw5FyRKzyrgFFVsUsa6xY/mm6NkDeMN87euI1XeDbtPLfFk8sq3dxNUhm6ADvwE9TFZAk9X1krUskCOOv+tWtChRwqSuLOaZGR9QYymaQ8L0RJ4f8WI1F5oJbbWYCWtvvESLl6tm5ju04tAndoCU86PJA68bALlIotlQ6Y1VnsHCsrgNzfOkzjBtKxjFjuQlqz8vpEvoaNydusue50F6wqybeLKq+cYFluQpkp+mJgPkmLnrjCHLWFPUxfDKQIeqzNVLIYU5SzQEIBJto9+PaqO3N1NeaaZs2qrweFrNqOFkL84KLc4IuNPuVMWZLRjoFT4iz5tlbUFPt8Q8kBTq0z+oYNTbwTXo4subR/Tb7HTLtwQQ5X7wASm4KIc=","authorEmailMD5":"5e83a940d98ae1e65bdc4aed72a26f04","authorName":"Michael W.","authorUri":"","message":"Hi, first thank you for your articles - I did read a lot of them and they are very useful!\r\n\r\nWhen I tried to understand your samples regarding the exceptions I did think: that can not be true! So I created a small sample project. Assuming that 'DownloadStringAsync' will always throw an exception, the exception will occur in the calling code when awaiting the task - in all of your samples! So the first two samples with \"await Get...Async()\" throw an exception instead of \"working fine\". In the second two samples the exceptions occur during await too. Not when calling var task = GetElidingKeywordsAsync();\r\n\r\nSo I suppose I did a mistake defining the DownloadStringAsync method:\r\n\r\n        private async Task<string> DownloadStringAsync(string url)\r\n        {\r\n            if (string.IsNullOrEmpty(url))\r\n                throw new ArgumentException(nameof(url));\r\n\r\n            await Task.Delay(100).ConfigureAwait(false);\r\n            return url;\r\n        }\r\n\r\nThe \"url\" is an empty string in all samples so DownloadStringAsync throws an ArgumentException.\r\n\r\nBest regards,\r\nMichael","date":"2020-12-16T11:50:07.731Z"}