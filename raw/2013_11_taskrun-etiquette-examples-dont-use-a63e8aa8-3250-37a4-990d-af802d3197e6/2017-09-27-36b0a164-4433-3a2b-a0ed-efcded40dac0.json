{"_id":"36b0a164-4433-3a2b-a0ed-efcded40dac0","authorName":"Stephen Cleary","authorEmailEncrypted":"ThBrrypDqvXCeZ35V7Xk52uTPEhW/Vt8t8MTYCBfhYbiXbCuPVUCKQ+sSimldqF7mUW/qGLlMMji1Dw8qf4KIsQ3Y1nIu2GTmDyT6xUHzCO3UfGoXTW7h2BMzmrmRuxtAdlt3Saq7hdb5+btlfqUu1CMYt2BygXHBGcz1KL6ZVRZEvgBV1nEPkDYjdSGAaKycymrVmDYmaniThNbiyDd7QBJGinRgYZyky/Uayej2UWo1scxPKU2s6PGpm6klKdkKhr5JaztAcIL5qSGNlguMkMat6S6ymJ2jeYkqw4WuFOtVE2Zll0/evv6JfdmwwN9qBvgHP+b3pavYlM4kfbFvo885R6050MZlfz2tadxzL2unKTDoSo3vSWZipzb/BrW0bxCpBwSYGurH3pvEy5HPcZ4pMwpTyWKGnSD5XL6y1ewhV7SlolJie2C3BowOvjtI5v2Fg9YkPvPDxIojGWUxfmxGKf1we/2dJHhpHyWXLvroETRab51kKDpz6FbAIoKSVFtZGnIv1PzZmJZCFx6/RokylCSik4hMuQTJJ8cOwVksJpnK5OUY5vit/cF8CqfOvEWxJL6ntHyG16w1mH3/JzMWPao7uSUL7+ugPyaaPIVHVcb99fe4lO9yr6uO2ma8SyFL+xCiRgRbty3YcMqn+gOMQq0qpIUBG452MwKH0M=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"This article isn't about performance. It's about a developer who wants to write asynchronous code, and attempts to do so using Task.Run, when the correct solution is to leave it synchronous.\r\n\r\nThreads can increase performance. Even in ASP.NET, you can often use parallel processing (multiple threads) to return a single result faster - but at the expense of the scalability of your web server (so I always strongly caution against it).\r\n\r\nAvoiding Task.Run on ASP.NET isn't a micro optimization. Devs have to go out of their way to use Task.Run and make things asynchronous when they should be synchronous. So avoiding Task.Run here isn't an optimization - rather, it's *not* doing a pessimization.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"d24b4127-2baf-33bf-a461-566d1a85ce47","date":"2017-09-27T13:29:47Z","timestamp":1506518987,"authorUserId":"disqus:stephen_cleary"}