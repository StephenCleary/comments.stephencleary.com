{"_id":"37d1df41-5d2c-3d4b-91ad-4cee83d6e4f2","authorName":"Avi","authorEmailEncrypted":"U5eD2tIC60gpE9AOfveHan1mcKVePCFAzHV7EmGgu5AyBwPNe0B9ylay3Dg6R1jrMkDSWhBIKfFErWj6zEbB6+sduaDZlLrHQXsXmnRn9ls3BTnq1N+Ge24XlMpF+umduiDhLZr4cHlQQ6MOg5ki/MsKwNilCZJ3vpNIr2YCLvDg2nh7Gx0m+hZ937Wz4uwFoP1x5k2Hvk51ykiUh/lQsqfQ6aVSkdNLh4Daoat+rfpMfx6+LTbaEVSAvc+XLx7pyNcEOONk24+4ApzpBOFS/XR5niPSFVdVu0i2BWYgEeJT8MPaoFCY53eWaRYp3/mcIc/YnabWGDnPBOxcgo3csmvotG81H+01SPUOKQIojR/BG8DcmSeYqVcwtNbvwLkw4lZqKZOAjxUGEguDnH1N7xqD3dv1J2GV3v7aVgCqIdG6mcPNewQ3EIC3LCsfaFpjwG5TsjOfdiRnR2eLREY8AGtsSpt+aUYrqW0p43nWLsSuGao1Z5yqyI6+u+Xz/6cvwvaJIEpbtMENk/ELPdymYZR+zGWvwiZbW7XsrMXv0c1Zo14AKp3W22BMNDpYy3KY63QffbuUHd58eKDPTDH2NLJdZo/PHU6Ap1Vi28us4fzbAK/FVOIyDJH9+GmWdyK9RQt5FZHIUufCDPhHsCJM4LY4hzhsvnfYj/5qCjYOdSc=","authorEmailMD5":"98f19d70948a72ca4a5a99b7afb49494","message":"\"Thatâ€™s why one of the principles of ASP.NET is to avoid using thread pool threads (except for the request thread that ASP.NET gives you, of course). More to the point, this means that ASP.NET applications should avoid Task.Run.\r\n\r\nWhew! OK, so now we know what the problem is with that implementation. The plain fact is that ASP.NET prefers synchronous methods if the operation is CPU-bound\". What I understand from this is that by using Task.Run() for CPU bound on ASP.Net code we might mess the Thread pool heuristics, so it is best to run CPU bound code synchronously. However, what about creating actual threads which and run the CPU bound code on those threads. I'm guessing those explicitly created threads are not borrowed from the ASP.Net thread pool","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"","date":"2016-05-23T23:57:10Z","timestamp":1464047830,"authorUserId":""}