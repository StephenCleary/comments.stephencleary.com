{"_id":"9e1a15d0-1e99-11e9-8f10-ff831b1295d0","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","postUri":"https://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html","replyTo":"","authorEmailEncrypted":"AEbA47dUnnN6RX2lxx2qV64qRsFlkQG68sLoE9/RBivkgf+4SUwq40CmKlmfv3Q2snFbAafJWbrvQlT8+kVtrmS97WbzkMpOZC1A3FlfIqg3QeofABfcoyyiydWsRwqflTFMYiEvbWSL9srzOR7w/449iFEQUci51M7B5uXto4UthYx5KRLWeug6g/za9tuP5JhLmZYyhVhNvwQv7uNvUhffNpu6nlSNtmUNrDRk95JuzN1Phtfp/e1G0Uh1Lb05pNva2diqmuOvfR4S7e+MK1Zd+JsJv8Y33ryam3r1ZAPNXCxMqPYsa5GuUix49w7P5I0n+5T7FuyEQKri6f4ku3gfn1a4UiapZE1QMj/SJcnSDhU7Al/KT1NCB3eViKMp7iN2qAJRVF4EyFD1zptN32U6rIl2G3FS1FURqugvKXzINpqyKIslS8JrRTlcbAlHpvtcFC9/6F8G7uVF5fgv2hAyDNfqUjDVcRDVYvphPkjnSUPTZhpCdknKr4gYbYfobWXmTtJphHOKd3XykfYL57FaiDKN2Rkw0rVIof+iVvLgEcdAB3Mj+xVJpS3ygT2Kw3Wdy2SsimmmXT/7LfYmR3V4Z2dVgVv1WMXoZwmIEB+or4iZaW1cYet1oeB2v8rRjZq4VGeXjXYzlFXsUnLixjWXOLIrtlYU1y4waZQnCEQ=","authorEmailMD5":"cec44364184cea627a54df9e56083913","authorName":"Henning","authorUri":"","message":"Hello Stephen! Using Asynchrony is said to raise the responsiveness of an UI application. (Besides enabling scalability on servers)\r\n\r\nIf responsiveness only means not blocking the UI Thread, then this can be also achieved by using Task.Run with synchronous work in every UI Command/Eventhandler. (Dispite this may block another thread instead)\r\n\r\nSo responsiveness must be raised by more then just offloading work to non UI threads.\r\n\r\nIs it because of the decreased number of context switches when programming asynchronously, so there is \"more time\" for the UI thread on the CPU instead of wasting CPU for expensive context switches? If yes, do other application's/processes responsiveness running on the same computer also benefit from the asynchrony of the first app?\r\n\r\nThank you very much!","date":"2019-01-22T23:01:14.753Z"}