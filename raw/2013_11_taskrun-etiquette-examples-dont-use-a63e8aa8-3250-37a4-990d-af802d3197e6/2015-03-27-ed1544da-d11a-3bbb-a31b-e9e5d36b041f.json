{"_id":"ed1544da-d11a-3bbb-a31b-e9e5d36b041f","authorName":"Stephen Cleary","authorEmailEncrypted":"EZRpAnS/gqfruU7hAr/srb+5Za7S88LV1eQx3mFJRZwsxqFlQHoMWSyd1eN87g+m7Lj9x7fUicSHz9cRBFTgt80RQhSu73v97n7od5zJW/VN96UUtUZhiMrNnYV6wQ1vf2EH7chkXooI0s4KlBiBzG1ZL+FrU2pBAXQByWseu8WxcHis1V3vOXkuNlo63skW7I1wMAK5rsTp9Yb3OeF7huhzgPjd9zdr+NCIFrEBSXhN5EgmAcaNNcMw+wEpnZw5vFrH5zyF9PWlgm2kO15EPuQI+7ukolf/IDIgqhBJm2auwIJOH+iSfkR6hNl/vjh7dD1MAopMEoqlWq3RGmWLrh4zjdVjd0qMziK/N/QYciCgcuu1lqUq/jyFCyuq2oFvStHcM5IPKP1LHERu8DupKckIGT3AI7C2p+7EGxs602+IvYbKq9w4/Q1Nf8OzAlZ+5ByCAy+jzbRCCi3nVAoYiDUtENohRvuU1IMLHnpOIX7upnTVRO0HcxHC3FjjLUrIvxRI4WSc0d3eK0ewpokLSR7SJ97wcjS9Vkr44jlbEZsEySSNDELck6lXSGS+Zig7ZdWi9WeiwROCtnf3EczSCk57gE62eJVdaHocDQJNoMJZwJlGdebjrN8Btb3F3KcFZWDdbu7NtmhbYBjRLwuL/VVF1fmQVIPZ6zKnAljBzjY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Either of your examples are essentially the same. And yes, that's the way I would do it - synchronously get the widget from the XDoc, and then wrap it in a Task.FromResult to return a task. The only other thing you may want to consider is to catch any exceptions from your synchronous code and return a task with that exception (you can use TaskCompletionSource<t>.SetException for that). So a complete implementation would look more like:\r\n\r\npublic Task<widget> GetWidgetAsync(string id)  \r\n{  \r\n try  \r\n {  \r\n Widget widget = null;  \r\n //...some code that queries an pre-loaded XDocument, populating widget  \r\n return Task.FromResult(widget);  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n // In .NET 4.6, you could use Task.FromException instead of this code.  \r\n var tcs = new TaskCompletionSource<widget>();  \r\n tcs.SetException(ex);  \r\n return tcs.Task;  \r\n }  \r\n}\r\n\r\nI would not recommend Task.Run, since it does use a thread from the threadpool. You could also use the async keyword (without await), which simplifies the code but then you'd have to deal with the compiler warning.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"3401c15d-d0d5-332c-b804-48723e4d3c8b","date":"2015-03-27T16:24:38Z","timestamp":1427473478,"authorUserId":"disqus:stephen_cleary"}