{"_id":"ed1544da-d11a-3bbb-a31b-e9e5d36b041f","authorName":"Stephen Cleary","authorEmailEncrypted":"SC9Lh9xzh8PSaec2KX4IaDglFt4mgMH5w4sAFM/8oe4wEByjcvtMPGR/ULzMtWElXWETlfyJ6aed7lOTFPAlPEfgXuy41tktpRpzlB0k8yeiSwgiOCfuNDWqtM/d8+xkgpbIf8CIp8fC6Z7EtSLlogewpO2K7UMKmwnKgtVbm1bP4Cb6J86gXGyWmPqAwAPO4WryHrME9cJqEloNnyIfLRLjIzn66vn5zbVS3c1GZU/omGSPYhCWem07h0zZdueJxPGwNuTBi4jSn8CtpCFW4+BTcgQonnDHVf2YzBLk30QsdGUpI1dfQkVAHlb0d+daVBv2vu+J5aB5LotulKEHO8mJfsmnghtoFpystX44Mu/sdLm4mdSYvOhA817lqpm9akpUqPmkcoXONalot+Vp7RfSgWGF20zo47tvv/K7srgCaW0Lk8Cw9zAiOFWB0vqm6XiVo6W2OAeHASg9W1OQ8abDJ+mSPabzuasSQHGaz/IqbpEtvToeLutorgv08aA3QMgl9A24Yuh/qQfPfVmhFvDNjtQaaLHgIT2iMuSaI5OlXZsiTYSZTmlFyEcmuAeiXXtzlggxZ+vwKKRWyp6b5QpSfuXvwhJ6JUVywHIFifjZoAbqLXD9KN8Yb+rkxvc9cRc9JcC673HVk0rdfY5fgtoGg7XgjB3zuBFcxBnTscU=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Either of your examples are essentially the same. And yes, that's the way I would do it - synchronously get the widget from the XDoc, and then wrap it in a Task.FromResult to return a task. The only other thing you may want to consider is to catch any exceptions from your synchronous code and return a task with that exception (you can use TaskCompletionSource<t>.SetException for that). So a complete implementation would look more like:\r\n\r\npublic Task<widget> GetWidgetAsync(string id)  \r\n{  \r\n try  \r\n {  \r\n Widget widget = null;  \r\n //...some code that queries an pre-loaded XDocument, populating widget  \r\n return Task.FromResult(widget);  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n // In .NET 4.6, you could use Task.FromException instead of this code.  \r\n var tcs = new TaskCompletionSource<widget>();  \r\n tcs.SetException(ex);  \r\n return tcs.Task;  \r\n }  \r\n}\r\n\r\nI would not recommend Task.Run, since it does use a thread from the threadpool. You could also use the async keyword (without await), which simplifies the code but then you'd have to deal with the compiler warning.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"3401c15d-d0d5-332c-b804-48723e4d3c8b","date":"2015-03-27T16:24:38Z","timestamp":1427473478,"authorUserId":"disqus:stephen_cleary"}