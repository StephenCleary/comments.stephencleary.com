{"_id":"ed1544da-d11a-3bbb-a31b-e9e5d36b041f","authorName":"Stephen Cleary","authorEmailEncrypted":"nshoDood3TaOHsWDuk8w8+oEAbPCeN1kFbei+R+KQMNPPn/B03HKQTyHfMyeDlNbvEYbqIgOboYZ0mGgK/CQaK1QgOPTa9PTwCku9xLcAh4iiGlhZ1bcI30FQ91ozLo4ckx9I3xaG0hxn6oXlZBpTveAYgFwpUVoYTSef6ukJk1XcdUCaKfe2W6Du4XiPisn0tXFibEKHzbhPk3YrvQPPi9S6oGMDf837aQJ+bokVsKat+1lFFQUyB1tBuhP5NCc+xKbe1wnzKbGBQKTyDaXJXLiw9ldfBoWqe++IYK7ZNRtZNdhaLvKzA41SsHrU5xg5Or77Iv7KwhIumbPqCoRMTpD/dafFK3Q28vseQ+Yd1yNg+4dIa5Z3DWwTMrTuLz0jnRdS5oG0TDmX75LClJP+l4TyBkLsCNbDuJUooIdkgfRMK/JOqYO/BK7pH0mphKP9bpvEUTtzFcgjvsBAdsUNV8MPrSw4vjQBwihqcDwLYc+u/0tqabAUdEKMYEk+LNY1cvAyEoZkMYH8wGwGaEVMFCW4yPPtb1MHPuHgWSUQm6pYbi+iLA9tFXNmWw3Ky1iBkqR28FsgZFjC+Hcv6c3m5vgAhTgTgFJuvU9G7sYDEdtkoxvCZW0b5z+kow27+wXpAbmdPX3eUA9B1CygXu/RRCsd3MUAxW/FlYIdDqxU0w=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Either of your examples are essentially the same. And yes, that's the way I would do it - synchronously get the widget from the XDoc, and then wrap it in a Task.FromResult to return a task. The only other thing you may want to consider is to catch any exceptions from your synchronous code and return a task with that exception (you can use TaskCompletionSource<t>.SetException for that). So a complete implementation would look more like:\r\n\r\npublic Task<widget> GetWidgetAsync(string id)  \r\n{  \r\n try  \r\n {  \r\n Widget widget = null;  \r\n //...some code that queries an pre-loaded XDocument, populating widget  \r\n return Task.FromResult(widget);  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n // In .NET 4.6, you could use Task.FromException instead of this code.  \r\n var tcs = new TaskCompletionSource<widget>();  \r\n tcs.SetException(ex);  \r\n return tcs.Task;  \r\n }  \r\n}\r\n\r\nI would not recommend Task.Run, since it does use a thread from the threadpool. You could also use the async keyword (without await), which simplifies the code but then you'd have to deal with the compiler warning.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"3401c15d-d0d5-332c-b804-48723e4d3c8b","date":"2015-03-27T16:24:38Z","timestamp":1427473478,"authorUserId":"disqus:stephen_cleary"}