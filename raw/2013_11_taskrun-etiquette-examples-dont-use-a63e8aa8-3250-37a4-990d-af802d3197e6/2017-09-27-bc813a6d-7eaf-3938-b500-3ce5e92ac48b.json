{"_id":"bc813a6d-7eaf-3938-b500-3ce5e92ac48b","authorName":"Filip Cordas","authorEmailEncrypted":"YIXqjM0kfHkuGDmKFS+xjwBQxJZbr2jUgCdfd3e7tI7NYOSn74/MHEM1ELCqurCvlNVYaW8acIlXBMW3BKVHZc7GTVS7GkUIPGzJ4xEnjF8bVryAbuBR7NajcB/OBKBP7ojbc8MbPoHHp9yov9ZWRoAUc1mE5xvXnUxEy4dysyhQAmo4vOt7PldncEtYLG43J1hxf3qGPckiDQOF34HrCCbAjJEj5S00QBcfKr28Sbo7LGIhwdZkATi5FaURBX0fRNPwFcRJdnjbYw3cIrjnHh8/uzHRiKlLw/WjXjfeN41QSBzzTsoTShbagVe04RdZ1EoerMpzwPce1KQpfagM23pg49ghBZN+GI0kCj4rf6DxXg7/qLZzqpk0wwPm6/kbnvjcOc8F5rdLnd1tzSVVP86bNxmPYtkB5cHU7OnL9TrTLKH9yWN6ImH6+aSFihV0kPkkHPqbuDfD0uPtsBa6i30F68I/xT5CwNouBzBRM6gTrH34C2X/aJGt1ktuo8dJ6VrdmTN3YGmYDnYbaMH4E2zo8rQ+ujEvlmUZneBgGV1JvQd1sP1XylE3RGAz0xppWzg/dvCfgWEfObIhmux23iI310PGIRSVOr3nUIVklCuuSL0brYwl+mtl00cYXSei+CgrGC1kdOBTcS93DF167rTDXUyB6quHYla4YoS7CDE=","authorEmailMD5":"5a0f72bd57a0cd7441313cf75d048196","message":"No I do get what this post was about I am just not sure if this is all that of a perf issue and should be avoided because of that. I mean linq is slower that doing things in for loops but I won't stop using it . Do you know of some tests that show how much of a drop will you get under high or low load? From all the tests I run the perf drop was minor few milliseconds per 1000 requests I didn't do anything to fancy just simple calls with http get on the same machine so I might be way off. Creating a thread will have a big impact even in the UI example it will in fact run slower then a sync call, but if you have a multi core processor it will run in parallel so your UI won't be blocked and it gives user the appearance it runs faster. But when it comes to ASP.NET the new threads will all use the same thread pool so in most cases this will just reuse an existing thread and not create a new one. This dose have a perf impact but it's not as big as real thread creation. And I was just wondering is this a real issue. For example in a single thread javascript timer function was used to split an execution loop in other to let other operations use the processor. Even in c# parallel != thread for really intensive math operations that can be run in parallel you have Cuda and other graphic engines that will run much faster and they don't use threads.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"36b0a164-4433-3a2b-a0ed-efcded40dac0","date":"2017-09-27T16:31:57Z","timestamp":1506529917,"authorUserId":"disqus:filipcordas"}