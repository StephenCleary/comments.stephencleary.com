{"_id":"3ca897b5-12ca-3eb2-ac0b-82b5234657d2","authorName":"Eric Rey","authorEmailEncrypted":"Y4LbuXBUrnuJ8KOnA5YWgvSLkIQOyLXhYk/R2pd0DZ833kFxFtkxvF4SeloQ02Ny7tI8znclrE33BH5bxPOBBvBrzeQmGU6nSYL+vF9DKp9a59dbJvQyX0QRFS7ESCEMfz8TpcPHvaVW7Z1YlrdC4lt28TAVbcd6i0HWj9XMrDv5h14ay76K2d2v8PWweap301SJ7E5q/X8GiE94gDppTHb1zVHp/S3jXB8V++g08cx/69abaRSBWAzzd4qH22hQ07n3N4LVVn+A0gcSN4koqnUs0itO4vaX4w9FBblTx8eRCZdsanBPzFoqgimTuNAjfMH9gVt4z8RgsHWtmMQ/tY1pquxGlOXPgJuyJhqtd2wevDicyoG1LanLOWstUdmyUEa0U3CrmRP1+XQaxfg5C1GVP3Uv0KC9uIM2qkbc/rwIhLHrt+ephlKiE81ewe4BPfuHyReib9BrM1CrOQ7T0WGkpecG/ir3BlnnXh4ylEJQhZAttc+bScPGlhZZQTYSwIO0KNwjoGutUiKL9UfA6O9XH4dW5X9GE8Y5SZuzpU591OBwlRTeVlJ3e06i6JjvbmZptrZNfd2UGlO/F7gCrB0Q6irX9oe10aD4dQjo340a64uUTIeyyIWXxp2+IAtxk7mXXMTTiVZFa3Nv9C+Z9CRY0dL99EdOBkshIEbiONo=","authorEmailMD5":"792f0ba41abefea3485d6caefc678c90","message":"Does this apply to awaiting async methods that are not implemented with Task.Run as well?, let's say I have a Web API service that uses a repository in the data layer that makes calls like this one: await cmd.ExecuteQueryAsync(), I know the current thread will be released to the Thread Pool and a new one will be assigned to finish the request when the results are available, I have read that this helps to scale up the service, but how is this async I/O operation different from the CPU Bound one in terms of drawbacks ?","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"","date":"2016-10-25T20:33:36Z","timestamp":1477427616,"authorUserId":""}