{"_id":"3ca897b5-12ca-3eb2-ac0b-82b5234657d2","authorName":"Eric Rey","authorEmailEncrypted":"p7VY1jWjeuDDiQpc/NhCWB6q2pAKqUNz3ZGt8bE1g1ZYQZEvuPG0g44yrPDZlgtT6lKYGVzxuuDV8TPKwUwd6h7dsdxEp5FVB5QWC4KbXATh50NZ8J9H707QCLuL53TbSKpOQ9I/dnPLo+TZqljFvpgq49GzlMs3DdsQZ131TDFnN9MnI1bxbMWzczM2KLyPFawAYZlYtE9siwUlU1fyd7ZikkWsjG/GDOHTHd5M5XpeCHzRgYSRh46Dz4r7s1rj2C98Xm2MrF7V/Fqa60Tk4IJnJJ0mZif/W1ntfGWkO/CeBcTpEcsr4BniMxYry0G6niBwXqFVZnCOVO2GzmlvylpHXlCpUPHVvs+zDdvxbzdKtodMzXlvqLcmMUiMqv7tRryZbUrW7Q/d/QdlxsJZT6gp7K6/sGI5LHPtiguU1IVHc/0K+27SAwxbfFQw68qR6mUMPl0NQZAqqBzlHDzfp3fAjfS5P3XOrdo5gis3QziSfXaGNZAI0AdXsnr1dYdG1lSfC2/IF2A8SMzXlsVGUOe7/YHqhUarg2IoRge2lHiIxmbri3J+9CzHK6L0KmSYUiTyHFVIyLcCo/ssd0UPF7HPnvqVt+YKuy4yBcers/nSdh2iKuq7gZOzyXZ0EBMbDQ+LdE4aIUTfFSWRStB3sBdbgV/rPbXbjhRllLaNVVs=","authorEmailMD5":"792f0ba41abefea3485d6caefc678c90","message":"Does this apply to awaiting async methods that are not implemented with Task.Run as well?, let's say I have a Web API service that uses a repository in the data layer that makes calls like this one: await cmd.ExecuteQueryAsync(), I know the current thread will be released to the Thread Pool and a new one will be assigned to finish the request when the results are available, I have read that this helps to scale up the service, but how is this async I/O operation different from the CPU Bound one in terms of drawbacks ?","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"","date":"2016-10-25T20:33:36Z","timestamp":1477427616,"authorUserId":""}