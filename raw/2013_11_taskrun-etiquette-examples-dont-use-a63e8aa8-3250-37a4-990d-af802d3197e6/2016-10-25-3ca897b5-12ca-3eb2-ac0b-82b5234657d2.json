{"_id":"3ca897b5-12ca-3eb2-ac0b-82b5234657d2","authorName":"Eric Rey","authorEmailEncrypted":"gGYPFg9GFbzs4ZYLskBPva1AcJONnEcb68ZOfUGMK9TrUv32AmafTUwgNc0V33ARhDNFNNrRz/9R8RfqR2lPxcDtGoKUvWINQ7qMHuGpK4IejgKj0YecB5yJa6lTTxjxGd5hPOP6UJY6DGVo9U7QRmBQeyzExayJEbpa2AKyC9g06PKm5gpruxT/CHlg15E4HFUDF8PtRHLRcngjDKFyTcO7H7mcsC/mAC5kezFdZUPU1UZ1MOWqg1m9YtJoe7bmaYG63goWsA5ejFHPSToRMtgOOu/5GWF4cMfQ32Dc+CjPHOpGLISXudpa4BR9giZn95J2tOmODm9djZA6HPRZMkXBz/1aYSN7J3vA1+BuHbsSxyOFBU/xwEODBtjIArR/4rAVjGqqMy11SbRf+thfGGNCu3pijxNhQ3uS4c6fafULdZ9azxG2WwXI/i0JcABABPRU9lkzEutIpGWRVALlv0Lf1hklgPDRe0TBStT5/fJ2ToTt1J0MnyMn/NpktjFkaftaWLhnYnFHVamKxrRMXISdnic+ldKMKTIzYj4LSz0xAgpVDHlAvT4cWt9jUtajJtsGfP/tyFaX4uVZwn16+TpJTAf/2MH2nBpJM1sRGBVj9dd0yL/O8v2UHOYZyUGq+6y1R2RnlY/QUi6+hhQkq2+wxBnPC3gtEcgRsZ76lBg=","authorEmailMD5":"792f0ba41abefea3485d6caefc678c90","message":"Does this apply to awaiting async methods that are not implemented with Task.Run as well?, let's say I have a Web API service that uses a repository in the data layer that makes calls like this one: await cmd.ExecuteQueryAsync(), I know the current thread will be released to the Thread Pool and a new one will be assigned to finish the request when the results are available, I have read that this helps to scale up the service, but how is this async I/O operation different from the CPU Bound one in terms of drawbacks ?","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"","date":"2016-10-25T20:33:36Z","timestamp":1477427616,"authorUserId":""}