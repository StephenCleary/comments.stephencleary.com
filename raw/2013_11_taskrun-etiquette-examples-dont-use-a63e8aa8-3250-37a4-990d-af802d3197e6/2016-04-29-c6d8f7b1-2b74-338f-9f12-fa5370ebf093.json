{"_id":"c6d8f7b1-2b74-338f-9f12-fa5370ebf093","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"The final solution uses async/await *with* Task.Run. Task.Run pushes the CPU-bound work off the UI thread, and async/await causes the UI to retrieve results of the background work. These \"results\" can be an actual returned result, or an exception. Just using Task.Run without async/await will act like a \"fire and forget\" operation, which means any exceptions will be silently ignored.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"5006ab6f-24d9-300a-9be3-c09d1c399dbc","date":"2016-04-29T12:07:30Z","timestamp":1461931650}