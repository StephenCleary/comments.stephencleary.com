{"_id":"86c6f770-2295-11eb-a090-3b27858fcd8f","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","postUri":"https://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html","replyTo":"c1ef9eb0-1b42-11eb-9cc3-a3727d578558","authorEmailEncrypted":"mjWhk6/OxmMqRDC4+x0QUjDcpWvaXWiMWigywiAaK+zUPf0CgVUE35DGyYEfqbdr5omJhirzk84QcRvW0F+WicVszl+gqk53JqnhImHgNzf92KGUDIqx/gV1x07sGMZzYO9X3Fk/bEsv+bzKzkjOETXWM9FDbUT+d64DhvPWS3pSMvJAx1F6SjIY2gZnZbi0/BERIAAkRw5UZ0FH4W3p8/LY1RLfULmLb8WfUOWxVWnBS7oKtBtyqfPmOtrL2BQYYPv/awlGhZa00IqrHzK/mVS+g+nLSBc1fIvP1+x65ZnY0aw6AB9tU+eYoANPwQKv8gzRz9+eTor+ebi7dJ3h2bdRC/J68nUP1XK4MBECwSOqS9MWsvJGzeAj1aVEgw5jDhmcUC1RIZv3GYTlIuqR4jSYBAacn665I3TSyrv1+g7kxSma2qWdzT42oh0rIoCbdbwyJAojen/93uOy0Ol5PtLDw/iG2ew2InMaeD/Z8IlnV2USkUx7T7jhgB9OefKZ6zfaXDemgIppu5R/1AR8MEnBFD5mmLLrfnKKuLpOtpYV+FtzXCUwwbpX6nyL1mcAptJvZqXu63exrcnvbIpslLZyI34bLV/KJYMktYLQUDE6W96iKWuNPDwpokMpX3irXyV+ZmsQBTImMU8CoZO9/viH/bq2snLRoJJX2di+gv8=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Well, yes and no. The thing is, I don't really see `CancellationToken` as being an asynchronous concept. `CancellationToken` from the beginning was designed for both synchronous (polling `ThrowIfCancellationRequested`) and asynchronous (`Register`) usage. `CancellationToken` was introduced with the Task Parallel Library, which was primarily for parallel (synchronous) programming, though it did have a some support for asynchronous programming.\r\n\r\nI do think that cancellation is *more common* in asynchronous code, and for that reason `CancellationToken` is commonly associated with asynchronous code because it's become more common during the `async` era. But it's not actually an asynchronous concept: it predated `async` and has been used for both synchronous code and asynchronous code before `async` existed. So I do think `CancellationToken` is the natural approach for canceling both asynchronous and synchronous code.","date":"2020-11-09T14:11:57.416Z"}