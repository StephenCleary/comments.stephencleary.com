{"_id":"caed6be0-1366-11e9-bddf-5fc5f93eb3d7","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","postUri":"https://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"RD","authorUri":"","message":"Hi Stephen,\r\nThanks for the Artcile. it is really one of the fewest well written article about how or when not use task.run. I have one question here. </br>\r\nI have a method where i am making async http call to post a json but i can not mark this method Async due to the fact that all i will have propagate async changes everywhere but I want to free asp thread as soon as it makes a call to external api. <br> I was planning to use Task.Run() but after reading your article it seems i should not use it.\r\nWhat should i do in this case. How i can free Asp thread without making my method async here? \r\n\r\n// can not mark this method Async <br>\r\npublic JsonModel PostData()\r\n{ <br>\r\n// is it right? <br>\r\nvar result = await Task.Run (()=> HttpClient.PostAsync(jsonContent) ); <br>\r\n}","date":"2019-01-08T16:59:42.981Z"}