{"_id":"e6926ee4-ee81-3a1b-9759-61f247e00d02","authorName":"Avi","authorEmailEncrypted":"W0/MX2FKlBPD/z/bYU87pYNhePH9xSABn2THvQZ2DrNqCnop0q7mMvsSGmTN5/EkaykQBJej47r51pEQwWcnI9xp63scI25PhFcxlBYugYFDUfgZoft9TpPPLt5bhMMs5Z3WCWFboTrZmoi4/lDYGLnZqrXitKiL/2zQICy+l3Hi5TMkLZDAEuymKjnLNjCwlK6nkMUKwVto73JQp3U0QgkUXgNbIgBFAeG8KqG5qzXJ3uTZ8HAKT45j6H42Sm3xQg2WpulM/xSeFskuT4aGcxRqUnGQJtuhRjfoVeK90KwYXkPamFOdouXLY9KedCyQU+aFwIcpepD2LHTjM/dtDHUgDVyRpi5OvMGv6fBt3sMlxsi8sAaDZvV+8pOnnseXB4fs/1z2Ho65Oe7N2yxKQbrgtCcimcmaaY6u0TG9h0r/i0R7xRFCuXZqIX1yHD+xlB+e87mgUoBXBywcBcUaDBgAohfuDW21v9VDa7sEHorXtEO0S7AkeDJeuyEsYblxXEvH6mi9OrniVEhx1x0EwYOyo1qoyC820EznP8UgNYeTZFJnuFstBSGR/8B6rFlu9eBDwtB63vU82BMKPhACTHy803Y78qowEBfnRoVsU+6pnHUQDD63eEr4lWxgzQlgduV8ZSwB8G7MKAAYYuGOtkvddQDl7etc2GC23mpOjMQ=","authorEmailMD5":"98f19d70948a72ca4a5a99b7afb49494","message":"Yes, but by pushing the CPU bound work off to another thread, the request thread is free to do other stuff,at least that is my understanding. That to me seems beneficial? However by doing the await Task.Run, you explained that we might ruin the [asp.net](http://asp.net \"asp.net\") threadpool heuristics and therefore better to avoid. I get that. So , my question is instead of running the cpu bound code on [asp.net](http://asp.net \"asp.net\") request thread and keeping it occupied in the cpu bound code, can I not push the cpu bound operation on to another thread(which is not a [asp.net](http://asp.net \"asp.net\") thread). So, we get a win-win, we pushed off the computation to another thread(and the request thread can do other stuff) and we did not screw up the [asp.net](http://asp.net \"asp.net\") heuristics because we didn't push it off to a [aps.net](http://aps.net \"aps.net\") threadpool thread. In a nutshell, can we push off this cpu bound thread to a non [asp.net](http://asp.net \"asp.net\") threadpool thread and free up the request thread?","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"77cda795-102d-3345-af82-5aac09b6a4f3","date":"2016-05-24T20:21:26Z","timestamp":1464121286,"authorUserId":""}