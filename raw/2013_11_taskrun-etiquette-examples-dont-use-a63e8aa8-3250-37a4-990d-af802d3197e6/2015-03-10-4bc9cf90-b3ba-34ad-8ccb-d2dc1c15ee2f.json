{"_id":"4bc9cf90-b3ba-34ad-8ccb-d2dc1c15ee2f","authorName":"Thomas Tharp","authorEmailEncrypted":"jAy35iYdfXfIc+AfMvS55CJ79SyjuAH4IPsrmbPygHk5/iuYUO2Z7s46z8sYbPgj2tAu+cZW75aUf0XSNCV0HBnFmB2msdaW348Emq5+bdJCKsZA+p2dzxHQ/ItsUNiMgXNzc0xOrhErPJbmSQ0pquA/w5Hpsa8WY5O3HHolPCU+rSWGr15DA7SGEP7U1duScFKprQfuVk5hmY0d6gbRFUsqh+Dd99913/ZFa7iQex1+MUMWqksl9MPIndDouI+JkudXczQ4W0+2jcbTM3QGk9uwgSs2qLkOr18Uodr6ZgXRK6LBT2eFx1SWASKsg+o6D4R3NrP9sr80HzkFjQzh+yUlHv++dZ5AjWrwJo21ctg+kwQ9t1UMGED6AVlG7C1OagVyEEuu0pYfw3oBuu4yEl6aKGpHNZsw9dWPlQlgqJ9Roh4Qynjblx9B1ZzyvVdWGF6diYhAjlBDoMprFPi1/DMAuo/EmcoTjzNfpJ89K21v0JQGX5VMNc4x5CVzRMSwRjsut4An8wXRukOZ2B0CQWmaXnp4xnECaFyX1xalWvA2xRN/do3cShK1umbTie/EextPT27ozqeShr4WQI/Tr7wfsxPeW7t1+a4+WBBUnmszv/8hyjq/UEUNlT8e2mjhArbg1BH9eBgfjCVOINjaZrBgkIG0WtRBNRY/+RUBom4=","authorEmailMD5":"3190c7cb5200e38ef7d74502562371ba","message":"Hi Stephen,\r\n\r\nI have a case where there is a database query that is naturally asynchronous, and potentially long running. However, there is also non-trivial CPU work in the processing of the query results (~200-500ms per query). On a load of my ASP.NET page, I may have to do a few dozen of these queries, all of which are independent.\r\n\r\nMy question is, what is the right way to make these queries parallel? I control the API, so I can change it as much as I want. Originally, I had everything (including the database call) wrapped in Task.Runs, which guaranteed the parallelism that I wanted, but obviously killed scalability (the site could scale up to a few hundred or a thousand concurrent users).  \r\nI then changed the API to make everything naturally asynchronous, which helped reduce thread-count, but ultimately negatively impacted performance for the low usgae scenario (as the CPU bound work was no longer done in parallel).\r\n\r\nIs this a case where it would make sense to use Parallel or Task.Run at the top level, to make sure the CPU bound work is actually done in parallel?\r\n\r\nThanks,\r\n\r\nTom","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"2ed7433c-8e66-38cb-a92a-275995b10f32","date":"2015-03-10T17:33:11Z","timestamp":1426008791,"authorUserId":"disqus:thomastharp"}