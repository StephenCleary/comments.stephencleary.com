{"_id":"4bc9cf90-b3ba-34ad-8ccb-d2dc1c15ee2f","authorName":"Thomas Tharp","authorEmailEncrypted":"NVwIJ379SoS1xudtuNfZQzpDGtc3njVhm/Oow8nixG5vbAo9fSyNv2ya7VBU6mZLrKDWng5eI7BFK6po6+fKzQ0YKPvNXCsJsNeI7KPx1xd22MjlS9kI0sAaUbcGOT2WO/87bc+VeP6f8xyUt8RTFAiY6x3AU3jd7pyB7BBe13djZl1mqM86lbOMkaK/lGB5uA+PKgnwvtxilRbGUKD01ZvNkakVRGSPAHJMKlalH+K4pcVJjLBsbugMaANQ7n7h3E6nLODhASSLfGpd2oyYSu49AqoHS7/hd4ZSTp8FgdMErFYNEdk/Y8Zxm8JvQFXQtP69JKlkFXSflIzrQ2YHlXjJbeq1yZ3tROo0L5KkcJ/ezMez71Y7aXaYStfojznFLOBJt0D5dijeAv4CtZ4p+JWdBo+mdNUzAazpFEw/XzRpTvGUsoIoNFNTMz/N8u1eJTUaMDpX/yeZsct/u/zCNnknum0TJXSNjQ9RticjmSblqpDT7bB1AuS3PvjBsBIJxMPWteW3BQBVXe7xaabITt3cdy8HiIOffwoBe+vJQVPgT7mxzg8Z28G9UruZqytxWqsZzLrnjE0nugHVKVq5NCwM5LtARIIt7DSYh9sVHoWfMkT0DC+0VoxZ/2nPKhoKBGxDhoi6Ls5Y6eRtlyVOM9Y9DvzaMfMfQc6/ETyPHDo=","authorEmailMD5":"3190c7cb5200e38ef7d74502562371ba","message":"Hi Stephen,\r\n\r\nI have a case where there is a database query that is naturally asynchronous, and potentially long running. However, there is also non-trivial CPU work in the processing of the query results (~200-500ms per query). On a load of my ASP.NET page, I may have to do a few dozen of these queries, all of which are independent.\r\n\r\nMy question is, what is the right way to make these queries parallel? I control the API, so I can change it as much as I want. Originally, I had everything (including the database call) wrapped in Task.Runs, which guaranteed the parallelism that I wanted, but obviously killed scalability (the site could scale up to a few hundred or a thousand concurrent users).  \r\nI then changed the API to make everything naturally asynchronous, which helped reduce thread-count, but ultimately negatively impacted performance for the low usgae scenario (as the CPU bound work was no longer done in parallel).\r\n\r\nIs this a case where it would make sense to use Parallel or Task.Run at the top level, to make sure the CPU bound work is actually done in parallel?\r\n\r\nThanks,\r\n\r\nTom","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"2ed7433c-8e66-38cb-a92a-275995b10f32","date":"2015-03-10T17:33:11Z","timestamp":1426008791,"authorUserId":"disqus:thomastharp"}