{"_id":"4bc9cf90-b3ba-34ad-8ccb-d2dc1c15ee2f","authorName":"Thomas Tharp","authorEmailEncrypted":"AJHIcqA6T8/pUyqLNpOlYH8/05XjfW8vAPBMAOmKudmXxa6qkXj9yMLZxMfcPPMkefYA0HHmfI/WgCVkR00VYUMxDxkfZT20BIQH9kIdn34VweZXo9mbX9bhz3VlsfSyOf+SgTysKX9GG4pQbNYxFJhhrgbHvpI0UGmfKDxoB9E2NsWVb4gc01GeMVmwUwGXrdY2JpCH1uyikAkQpl5FzG1md0B8pcqMaqV6Gq3Vw/ErrJMcFp4HYIZwywZVGf5CS5eSq71tmGlyAjb7AXNe6d+Im0iU/QtaKWcAop8ZGbpaxQnQy2E4r5DhxfWBCe1L4oSFHePPGPBGTW2wNLF0ie0oeDrAziJaCgIupnNEwbYNwcDfwmxXw9jViuSIJoWX9NLgojSGMlal6IKpX+/yNpRKuagVO2qhGmIDkeZ10ICa3d3Ww0CmsJUe7tR8WA1Pv8yBiGVFkuOEBhpB0s2JaTKl6bQcdoOq1XIG86/w/fiJQcdcHBnK4pWZQiFsTrnR/ri9WyjEodFoRn3uppmgWmDCXLrMSl/t+r6DqXvoNm7Kncj1KjhHeANdW/7u3LTiOr3jAJRYvKyj/yiNhkxrdJg2zS+gVVsd/hc0IbgUztqJJpbqjSr6qdEL+4Bvy9+d+lLKKYJno1xnwakMZ/Y281InnJiM9l86D1MTTtUzNGY=","authorEmailMD5":"3190c7cb5200e38ef7d74502562371ba","message":"Hi Stephen,\r\n\r\nI have a case where there is a database query that is naturally asynchronous, and potentially long running. However, there is also non-trivial CPU work in the processing of the query results (~200-500ms per query). On a load of my ASP.NET page, I may have to do a few dozen of these queries, all of which are independent.\r\n\r\nMy question is, what is the right way to make these queries parallel? I control the API, so I can change it as much as I want. Originally, I had everything (including the database call) wrapped in Task.Runs, which guaranteed the parallelism that I wanted, but obviously killed scalability (the site could scale up to a few hundred or a thousand concurrent users).  \r\nI then changed the API to make everything naturally asynchronous, which helped reduce thread-count, but ultimately negatively impacted performance for the low usgae scenario (as the CPU bound work was no longer done in parallel).\r\n\r\nIs this a case where it would make sense to use Parallel or Task.Run at the top level, to make sure the CPU bound work is actually done in parallel?\r\n\r\nThanks,\r\n\r\nTom","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"2ed7433c-8e66-38cb-a92a-275995b10f32","date":"2015-03-10T17:33:11Z","timestamp":1426008791,"authorUserId":"disqus:thomastharp"}