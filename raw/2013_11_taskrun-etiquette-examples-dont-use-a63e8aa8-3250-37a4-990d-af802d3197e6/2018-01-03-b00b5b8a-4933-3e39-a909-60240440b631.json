{"_id":"b00b5b8a-4933-3e39-a909-60240440b631","authorName":"FCin","authorEmailEncrypted":"hjURXs3o9KdukJpDJEWIaVI+UQ3Sb47z2+nIgWK601gmTmz9o0h6CY+bCDDqZ9CUzcHhKacIP6xX6H8WG5OUA/7zRQoRUMSNkROwSM4N5JwfrWGv4LKF0lcRY2Yd4IYQbdU9J4FbNyTUEfhFJWZUS+tjangmT45NbI5KSx+fBcExtqEugJGSWDHZ3NQCtBE67em2ssojH0oNEWYb7VlAtHxRSSUQ7JxrNbH7yzbdqUk2YVNnNQxC8e4xEgI/fwGHn43XmVbgaRNe7KqFee3UoTMbPpnQ+5rz8d+Pr/YibjZsjDEHbLqr/laedIVnN0e5VX3eqwwMZpiNnlRJdm63DZN4Ua1cQck9rk1+e2ZGiA6ZWd4DCYcAswXzrZRcYFc4QU8nYo0/Flja+nJ2r44lfoZ2hLtm4vOqVSfwoBcn5ibjrVEKzmJ7C5jJW/QXpYzFFvxX+6/q8n7x6IcWqhgVbsurGNmgmc2JqDPhX4vXYFLXrAsLR7Xg0zfcJGwy5rH3TntcHIYgKAWw2N45PrY8OUoTKgl2oQD4RYwqbQqMDMHz3UiHwLlsHx6GHcu6/6xsW8rAXhivwiBlvUlPPam0d8bAnn2Ejdaj3mBNIjNa/YKbSiA2w9z1Rom0ZsZvS1ZKkCCPCXCGoKhSEqUnFci13TBeRZPzD78VA+amu3e0JU0=","authorEmailMD5":"e56519a197bbc3bdcdc2a72523dcfe60","message":"Hi, I'm a little bit confused by the second and the last piece of code. They are almost identical, except in the last example the caller is responsible for running the task asynchronous. So how come that with the first approach you lose a thread and in the last one you dont?  \r\n In the 4th piece of code you wrote \"Task.Run starts a task on the thread pool to do the calculations. The ASP.NET thread pool has to deal with (unexpectedly) losing one of its threads for the duration of this request.\". But the last example also uses Task.Run so how come it doesn't unexpectedly take a thread from the thread pool?","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"","date":"2018-01-03T20:24:06Z","timestamp":1515011046,"authorUserId":"disqus:disqus_Tb8tUtqeBY"}