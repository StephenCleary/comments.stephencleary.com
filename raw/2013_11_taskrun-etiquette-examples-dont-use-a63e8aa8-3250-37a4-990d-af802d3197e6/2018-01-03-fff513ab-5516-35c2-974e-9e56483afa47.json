{"_id":"fff513ab-5516-35c2-974e-9e56483afa47","authorName":"Stephen Cleary","authorEmailEncrypted":"vvz0k2ku4Qd123BRNKl2puI/5oW1n9LgQGfUp28s7+6ASmXwLZ/odQlb1Ibq1vD3+j7ywojl2rIVh5q/0iJ77xZKm56287cyo0jUihkeD6DVk7/TlOvJlK44cDDZVbaxkz0bbsUz0qv6xkjza1Gpsx2uliV4S2YAVr0Pl/5BfmNFivJiAkXzZs9O69CtdXvnzS1agkVNp2wVfrkxOQVb6sdZ6H63Vrdajtwmdww1MUfDbKrzrPi/RQIHymzrZ+Czv3P0/UEWAPD+06LuPl3cbn4VDz/G2IQCVfsgXwVATL4oIoYdOWpf4D1lPVJzZhS+6a5QL096zMVe/Y+40bpGc0kNfy1Mt1j5jMcJR4wS3Znga9QOYD1ru519OOXoPNHFQQjmZLwknxCrFFDA2kh5UWl1339aUrzzqOLoNMEZLA7u3EKftO5TpgrNp2shlM58D8LoVR2Y0PVCzaBSUEeteEu7vHA2vpCPOzWDxG1HUCAbPwys8c+X5dvSemQmuNIQ6FqUXRJ5USFwlyuKIRZRbwxIpl9v7wQ1yKUQLZsWHYjAEodVT/u7tbUjG/CtFq1jNz6Q+ynwpWnsrnOs6m2eHPOO4Tfo8p6HdIPro70y22DG4SwVVyR1yXLgFMWuvT/MWqw5JoCGJycuyP1LWzialAUcwFu4fai0Yj5xuwiZk0U=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The problem with using multiple threads - even for a few seconds - is that those threads aren't available to serve other requests. Since your operation is I/O bound (reading Azure blobs), it should be straightforward to start each download (getting a task instance for each download from the Azure client API), and then await Task.WhenAll on those tasks. This will give you a fully asynchronous approach.\r\n\r\nThe asynchronous approach will reduce your latency for that request, while also not reducing the responsiveness and scalability of your server as a whole.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"0893ef3b-1f51-38ca-9213-11e9c3dc4f9e","date":"2018-01-03T18:47:00Z","timestamp":1515005220,"authorUserId":"disqus:stephen_cleary"}