{"_id":"fff513ab-5516-35c2-974e-9e56483afa47","authorName":"Stephen Cleary","authorEmailEncrypted":"t2mZ/TLSsCWfhm6dc6ioba0LYayYsuSL+ZNbyeGCE3TKryAMPWLfGchT1lU/aiK1Bd2mRzDtxgfHUBApNo/iDQnlLEcVncerZrLSdbjRg5TNGnOjtqYzlXiSLzVVJh9uajEEwY3a5iaHOU9/Jn01QP/gJSNtG4yjZXhkYeYtVwFGEgllQsITEUcXogKEbuwxtkkqVrHxvLPMPDwdaQGGLE5a+t9+DOSX1gnVvVMzBN+RZSLo2MUYVuhhjgSTyW27lhq0F+zCl0Y3bgR2HLTPZSu6HNQ1UWydMjPud253n6XGzTtZ3vrAhSRu5NZb7S/1mWK1cvAWaB6ntygTIofwvSS5XT7z8jMR/IQGSscNs73u9a5W0F42WK4i/VHQjTRxPsVY7bfYfzap8oMIO4chnb4YMSk6YpllyyyWZCbERmlriZDyXhSDshkP/75bpXcxttNtQ2BqUL85GNZm7STPOs1AbeZxuCQl6S+sKekIoR3K08Pcf8ue+CMgkdxRMI4JfnpMTpaXOEhT3T1ZCZ8XN+6uUlhnsVEPjahAfAgk27r731HBrcjayJZ5lG761BhKnXIIB5qP5B7aU0wf6ZpysSqR54JkfBIw4uUkGhOE1hXEc3INU/koe/SC68mBmMM1RGXzF1BgHvAzgvAUrk2e1FVdL2MurDw+VRS6xiXbOr4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The problem with using multiple threads - even for a few seconds - is that those threads aren't available to serve other requests. Since your operation is I/O bound (reading Azure blobs), it should be straightforward to start each download (getting a task instance for each download from the Azure client API), and then await Task.WhenAll on those tasks. This will give you a fully asynchronous approach.\r\n\r\nThe asynchronous approach will reduce your latency for that request, while also not reducing the responsiveness and scalability of your server as a whole.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"0893ef3b-1f51-38ca-9213-11e9c3dc4f9e","date":"2018-01-03T18:47:00Z","timestamp":1515005220,"authorUserId":"disqus:stephen_cleary"}