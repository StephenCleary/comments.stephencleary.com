{"_id":"fff513ab-5516-35c2-974e-9e56483afa47","authorName":"Stephen Cleary","authorEmailEncrypted":"nVoOJusOAembiW8XlRgL9RvWsl4tN74YLb1B8g12JhWNbZUifVL3eNdtKgyhX126lL2/qnyqyL9KlWpBkm5aS3vYb1wWuACnyjMSvBafZ2CvM7dE1+6P3xKjugMclJqPfwMNDZFYxorH+B227br2aCt/WfcAKw1TKbWGfYDz0auc2VgRmfRnETp1++kWcSrm49EHFUVD4HD4LmG+8DRTL9U3qX3ZMrqtuo5hmbY4kRGlaU6BNsAgpE4Jscbu1X/KITWiBFx/bjdE5l6XedGrgy6fd5MCo/GuQO8EZFr/iKj3mOgLAzr7oXn8RZnBnXEmX2wusTjdSFpeQ2xg9nP/TlBnoNpbxCK3urEi7hXi1sgNWOzgK68xTUHYWKcjLdCN1/l6oLi9iLbbpH6UHhGjHeWqMqQqdChMiveAG9V8wAwGNJFmaIA3G1C8bY5s/Vx8TcPqe8ixcHHmMR4XbFk/Pe61zY7TenAvZ6nTxWOIdjHVOpiP0M/IqwQsLJbn79N3iy2SDwbyfkuDEO+DNjCflnwdlNmZPq4/rqGe9PneD/zujro6QOmr+cDz7RYuf8y7H2ufGWsTL8Auw6VrM5P+MOz4Sx7GYgK2d5xem/gUHT4Gt71bDFh8TE4M89qqLRH96343KUnJt8CXK7x2lvRLntVVT6eeK6PfX9erhFXkvp8=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"The problem with using multiple threads - even for a few seconds - is that those threads aren't available to serve other requests. Since your operation is I/O bound (reading Azure blobs), it should be straightforward to start each download (getting a task instance for each download from the Azure client API), and then await Task.WhenAll on those tasks. This will give you a fully asynchronous approach.\r\n\r\nThe asynchronous approach will reduce your latency for that request, while also not reducing the responsiveness and scalability of your server as a whole.","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"0893ef3b-1f51-38ca-9213-11e9c3dc4f9e","date":"2018-01-03T18:47:00Z","timestamp":1515005220,"authorUserId":"disqus:stephen_cleary"}