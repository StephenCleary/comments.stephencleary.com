{"_id":"a1d61cc3-6e89-3855-9d37-b06c6f2045c4","authorName":"Stephen Cleary","authorEmailEncrypted":"CVOV8hjcfcx7aAkD3wnujgVnZN/DWb9SkIEIY6W7WRMNy07DFeJb+GKwlP8nPBljhAD/3dLfMtvm8M8KwKx6mVFQ2I+0DwdpM7vpqUzou0zv9pAJY3i5b1mkHVjOtEnmkOER2CHTIO9FTc0ZmH2PSYzCGSIPTuuXxTXeO60Bz3OK4giZ1TIQEb7OdWJs59k08ZpaDtn2rSOEm3yej6GuG6fKs/hdiCHBSXzxNZbPttlwD8hWlG/OxfydGa2U4w1/L7xyOQTQVqWkhaXFW1o0gXn3ED/tdEGOhHeEzuMdlk6MOAlCTwFW3j0649rFdbxmD7ogYxkeEdSeuYxD/w1rRQ7QGOvXJ4qCzpelIMWUR0mR84mAdgrhMtnl8vgjGrFfFrUjyqHDl9YPWv9ZCrpsSGDdQ6eDF/nEh3TJClyPn+Lx3OmDzDV9k5Nmdhrp3jVDtzTjP9c7H7aVKud14BaF2y74e+uf2xVP7iMchzcWaI0WQFGb6D64yvuW665ZIGA/exXd4Gi4j2I0NrnZFKkBHyyff2vgyc55IMYhsdZMONxdL6xD0BjkxnKLwcK+Gg/iPNdJCSpeVpgoLd26WcNq2uz7wlA52EKjg6iSiqXoMACi3JPjzE2ckrJw1Is+8X1C5yqU4ALiQNRQlFPB3g+TTvs6vN1Bao8+YR4gPfh8LuM=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The problem with Task.Run on ASP.NET is that it is dangerous. ASP.NET is centered around the request lifecycle, and it simply wasn't designed to do work outside of that lifecycle.  \r\nI go into more depth here: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/12/returning-early-from-aspnet-requests.html \"http://blog.stephencleary.com/2012/12/returning-early-from-aspnet-requests.html\")  \r\n\r\nThe proper solution is to have the long-running process be independent from ASP.NET. E.g., an Azure webjob / worker role or Win32 service. If you insist on living dangerously (i.e., using Task.Run on ASP.NET), at the very least register your background work so that the ASP.NET runtime is aware of it; I have a NuGet package that does this for you: [https://github.com/StephenC...](https://github.com/StephenCleary/AspNetBackgroundTasks \"https://github.com/StephenCleary/AspNetBackgroundTasks\")","postId":"2013_11_taskrun-etiquette-examples-dont-use-a63e8aa8-3250-37a4-990d-af802d3197e6","replyTo":"","date":"2014-04-12T19:22:11Z","timestamp":1397330531,"authorUserId":""}