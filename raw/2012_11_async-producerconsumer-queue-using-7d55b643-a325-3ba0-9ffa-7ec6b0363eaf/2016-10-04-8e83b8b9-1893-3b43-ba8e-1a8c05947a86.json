{"_id":"8e83b8b9-1893-3b43-ba8e-1a8c05947a86","authorName":"Nicholas","authorEmailEncrypted":"pIy7bDos954DRaYzRkcey2dSCqvChjIKxmtw4Xfuek4d4yPiU10eBD6XnP2uUoPv7SB3IhetLdpzTzF1uOztT502TkkfFaxSZ5J3YV2a5TUmnJzDg0iA18Hc+enbstaDTpSldj3ZHQxn5oYOQh9ngbsjYHuyiKEBvooQ2NRUXHfATTImuYjO6ZUMd62u4nkz4lgqSCEcTiIM6MD8+A6m9s85x25Mvi3cFYBMOAif7unK2I9rWB2idBYm6m3uz3JA5GgyvMifLPaHIb9/jcH0yPLjJkyY9gIVtPd0M1eUB61yU5IBUlrOZcjSxN/xMeY2uSIHCt2Ljq9yCOH3ytz18NkXA39NNdyH3lAQluv4uOohsx9aoGsVCNJIfllRLzPGgz4G+b1Y6ywwMFTSslzPT6ZxOORV6BSO9qS/MZcqQdCl+1U+4DEsJN3JuCJl9s+n2QAGjBg7pfZov1YRjJZdhsng3//CncmKGKQPdxmL12F9/TMH4H30TtSGDvLCDspdOHDwcT6Ulq1EeBO7hr0fXWzc7/+NKQ4FJ93pr/ewSnH5yFPTV6dR3b6k0GtigV7ED1uc4FPbkiRy6Ss+Cj49RQpsz4XuFL7cYsh0oY8SUWt0b5RjGd+dEEbV1igVUiTIlk6ay8iOvee0r2w3hc5TaI8cTpMCLYHAZJ/0cIyB/K0=","authorEmailMD5":"a495a370830f1691666642f1e0fd5ee0","authorUri":"","authorUserId":"disqus:disqus_7SSc9LmSyX","authorFallbackAvatar":"","message":"Hi Stephen, thanks for taking the time to explain TPL, I think it will be suitable for creating a pipeline for processing throttled tasks, e.g. only consume xx per duration. I guess either in a specialised producer or a DataTranslation block to release tasks as soon as the duration has elapsed. Putting it in a consumer action block would loose the parallel execution. Do you have any suggestions?\r\n\r\nOh, the last example is more helpful if you used the following consumer definitions\r\n\r\n var consumer1 = new ActionBlock<int>(val => {  \r\n results1.Add(val);  \r\n Console.WriteLine($\"1 consumed: {val}\");  \r\n }, consumerOptions);  \r\n var consumer2 = new ActionBlock<int>(val => {  \r\n results2.Add(val);  \r\n Console.WriteLine($\"2 consumed: {val}\");  \r\n }, consumerOptions);  \r\n var consumer3 = new ActionBlock<int>(val => {  \r\n results3.Add(val);  \r\n Console.WriteLine($\"3 consumed: {val}\");  \r\n }, consumerOptions);","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2016-10-04T13:25:24Z","timestamp":1475587524}