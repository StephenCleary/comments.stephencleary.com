{"_id":"4c6cc0c0-07db-11eb-aaad-c961aabeefb7","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","postUri":"https://blog.stephencleary.com/2012/11/async-producerconsumer-queue-using.html","replyTo":"4915c930-07bd-11eb-8a48-afe674a4f1f6","authorEmailEncrypted":"ObUk2RdMZA0X//FH0OiInAREZgYTlxt0toK/jERnk1JD1tF3DRRMqS0zR/2bbl2fHygxrkxNSpYkWSRv6lfFOpQYBUK+Xu1Y7MfiMf9qlu7vVA73eWe7U9ajuVO4X2T4Jkm54MoDCX/KyK0wBMK5cn31uoU5C7W/yXruG4+WYgFlIl8cRO7TOImOBYm5lZph2BOkJw7KqUGcL/LHKj6ujdO98Mog8Wbm0b8eKsP+mS2n7JLpoF2no/kmobcqA1RU9VpNiEH6cIaZt6xxaHHvasE6OUWtiZ4hgkjcDCjvp4dRnO9wSY/eoFV25ldHaGsY8XG5VcmdYpkTNCPpeMnsGMEe4TK0dwUj3Z1kHIbUtKAANFQI5Su4ULRdOd7RccW8PxnVV8vXDEMcziTQjiA54b52xQWvz347gZe9TX020+EZUC2s1lYkOAnNIjze8p573uQCBLGJC5DelNjranzx8ESFUaBO8s8nB7O/+heYob9NgVcNh/djHdrDZGHuzGg4EdceKloLpU+Ln5Ae8MGqnT8ekFDw1i0NHmltm1SvwszoKjxns7hBcRhx3Q5I3ZOf0Wsa3kPH7mj71rG8P7EmrTnQVtyMFIP6ZgScoyDu+jJRbarDtsxAsn0V2YMydbV4LoWurFEAjGWPNj9oClmBHJnnsKeWLYLPeCLvly0Yyac=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"OK, I see the problem. Yes, my post has an incorrect statement, because `Post` doesn't block. I'll fix this shortly.\r\n\r\nTo clarify:\r\n- There isn't a difference in behavior between `ActionBlock` and `BufferBlock`. All Dataflow blocks do work with similar semantics.\r\n- `Post` will return `false` if the block would *like* to postpone the message, but it isn't able to. This can happen when a `BoundedCapacity` block is full. See [this SO question](https://stackoverflow.com/questions/13599305/tpl-dataflow-whats-the-functional-difference-between-post-and-sendasync).\r\n- Setting `SingleProducerConstrained` is incorrect in the sample code because it has concurrent producers; that setting just happens to be ignored for this sample code (with the current Dataflow implementation, at least).","date":"2020-10-06T13:53:22.971Z"}