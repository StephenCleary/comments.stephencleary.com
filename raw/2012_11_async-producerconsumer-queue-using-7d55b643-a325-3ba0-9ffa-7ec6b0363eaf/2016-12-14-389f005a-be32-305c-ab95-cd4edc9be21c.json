{"_id":"389f005a-be32-305c-ab95-cd4edc9be21c","authorName":"Peter","authorEmailEncrypted":"CPkdZNfjciDLYS/VChsbQ+zQgQC73XKCoXc8QJEv9ikTUB+T8L6t7qMTZuqIEzrRZwipGeUQ+AJbCZJsyaxC8uJp2lgBd2n/NDoLu028OiIcZmLuy8RUwE1ByGFkZEs6xEW6XUOHOX4OycFCf2/SanrpFQWNY8+MbsiL0/UTGA5nTvy5N83bmo5QEfLKnFFv+PstoZ/HcS7LMCqD26FxEnFSejXFiNA1cuIpImaUeE+AF2a+GlA5B0yT05hF11P6ztXaJBnli6YqkQk6TWXZuMkv8EEhIKdWEXWEVsOiIZxkHYC8Wk6p36q7Pnb+mcRFcrsOsTA7frZowWx0+6aHC6jyA6Mqfvk5oRlolBdrqoHCYYqsEbEswjGOpznoYrRRLxX8mHaNsZVSgmg7dX37TlGdZH+OlzbKJmFjl6V1iEw65oe6E1gQQghpd3zYty5jEHuA+ZVtVZM/n6r9mWLmqig7GX9BlArsGglhZ2qv5nZzyUL+n2ZxPcJYFIWekCTjiXkMDeFN/9YtZECAoL+8r9/nusHQsOyjye7xYnWs7AP71SPEW1BAHkMr5SGtZnCg6/iDqJzdRnY0WeH07Ipc70o3RyfLxXRApRc/t0l4G+EOUp2rat7/5fn/tZMuzmszdTclobq1Jl+zlsSw0I8nrjOyEZqA5OOiciE63aaO2lY=","authorEmailMD5":"c4cfe03de383452ad0c9c586cf12a4d9","message":"Hey Stephen, not sure if you still respond here but i will give it a try :-)\r\n\r\nI started working on a program and thus exploring new things .NET has to offer, so i came across TPL Dataflow. Thanks for explaining it first of all, but im kinda at a point, where i probably don't see the possibilites i have quite yet and so i can't come up with an own solution.\r\n\r\nThis is what the program should do:\r\n\r\nI want to import XML files to the database. The incoming XML needs to be parsed and validated according to the XML schema. After that business objects need to be created and it needs to be checked if the item referenced in the XML is currently locked by a different user/process. If this is not the case, the business objects need to undergo a few plausibility checks and if those are passed, the data only needs to be saved to the database. If somebody is currently locking the item, it needs to wait until the item is released, so it can be processed.\r\n\r\n- It is required that each incoming file gets processed at some point; it should never be canceled or require that the same XML needs to be sent again to my import.  \r\n- The order of each XML is vital and should always be kept.\r\n\r\nAfter some research and many tutorials like yours i came up with the idea to use the .NET FileSystemWatcher in order to get notified when new XML files are available. This process (the producer) should create a joblike object for this xml file and and place it in a BufferBlock<job>.\r\n\r\nAn async consumer would be already waiting (blocking thread; async/await; while(await Source.OutputAvailableAsync()) for new jobs and start processing once the first job comes in. This part would parse the XML file, check if the syntax is fine and validate it against it's schema, create business objects out of the contents and add those business objects to the job and place this job in a different BufferBlock, where all jobs gonna be that need to be imported.\r\n\r\nA second consumer would work just like the first and await the first Job already and start by checking if this item is currently locked. If this is not the case some plausibility checks need to happen and the import into the database can start. Job done. However, if there is a lock on this item right now, i would have added the Job to a third BufferBlock/Consumer, that only has the task to poll and check if the item is available again and place it back in the second BufferBlock, so the import can be started (the lock will be checked again to make sure the item is available right before the import starts, in case we had to work on more jobs before this job came back from the polling-consumer and somebody locked it again).\r\n\r\nThis in theory should work quite nice already. However, i have one more problem, which is the order of the incoming XML files. In a case where two files come in referencing the same item, whereas the first will be placed into the third BufferBlock (lockcheck) the second XML could be imported just because of bad timing where the item gets released after the first XML was placed in the lockcheck-BufferBlock. The idea was to check if there is already a job for the same item and also place the second XML in the third BufferBlock so i can keep the order. As far as i am aware, i have no possibility to check the content of the third BufferBlock when processing the Job in the second Consumer.\r\n\r\nHope thats kinda understandable. Im a bit overwhelmed with the TPL Dataflow and kinda can't the see whole thing to understand what i need to do :-)\r\n\r\nThanks in advance!","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2016-12-14T14:00:30Z","timestamp":1481724030,"authorUserId":"disqus:disqus_hLG8Vpfw7A"}