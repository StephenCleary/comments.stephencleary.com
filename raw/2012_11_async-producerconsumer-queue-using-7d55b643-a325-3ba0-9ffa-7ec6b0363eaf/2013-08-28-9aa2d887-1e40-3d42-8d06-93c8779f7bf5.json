{"_id":"9aa2d887-1e40-3d42-8d06-93c8779f7bf5","authorName":"Robert","authorEmailEncrypted":"eM/1DiIq+4tqwJYy+4ekscrfSK2ie9FFe96cI6Cl/SaX8vcCL3WBa7seOrtBX5BgHfH9kmToWa7ua1AIGtKVsfzpH4xoaXPwZQppSIUzATzzYTGVQNQu4bQKDsgcLxKnHyW1gIEM3b/zrQ/KrVO1R36Hl4VsbqKqETaqvEIb1jrKwgd63Q11WVUzeUuSae6IdPbE3YGHsmUcbwXjK0Ve4xlFpDFZ4BbmZERedHvIZ4UKO1OiosdiVjVyoYHp0nBRtqmSkkT+BLBcPsIP+t1sQy+zwDg5LCexGR6aSRdTUd+I4Nya/yJPPUwwtHBAeB9MKklrTnAq2XDupG1FviMLWD0DbfaHVJKVmYJZXTmMbCntb6s3dAjQPtGxZdcZUdQWkSjAYYJiwzlVL/x+cApTnLjuZM6aH2Raeb9ursHzatce4NXHMdclzwKFuirodkNg1+B9wp41ybDjtBk0Cfvf5sJhy3T5IV9UhQX+WTDpsI4e88M6km6NLFfPQ944yBbYNVI+/d9SoQzEIov/O18YzweOS+bTjlnoigwYj0er17VVWKzT3RHS8dJPhEb4j9dccoDcCNZS2Qqa+450BrQzsacHIeibZseWdg4GlouwWSZj32Tcte/44iUF4gWKvikoPHCmzaVkT6vH15FxMlog9Voazprc91cNzCaTG/x743M=","authorEmailMD5":"74c88302e912b1e29b232bd205eeaf72","message":"I would appreciate a suggestion on how to implement efficiently the following scenario.  \r\n\r\n- One producer prepares request messages which are submitted to a \"component\" which consumes them and replies back with another message (a future)  \r\n- each message can be processed by a consumer in maximum 30 seconds   \r\n- the \"component\" which consumes messages cannot process more than x request messages at a time  \r\n- if the \"component\" is completely busy, a producer should wait for an amount of time to be accepted for issuing another request message. If the timeout expires, the request message is dropped (as cancelled) and another request message can be processed.  \r\n- the producer should be able to await the result for each individual message if he wishes. Practically, for each request message a \"future\" response should be generated which can be awaited if the producer wants.  \r\n\r\nIt seems like a good fit for the subject of your post but I am not sure about which async/await constructs I need.  ","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"","date":"2013-08-28T02:10:16Z","timestamp":1377655816,"authorUserId":""}