{"_id":"4b64b7ce-ea80-36d3-b127-f11fd0b99134","authorName":"Buggy Squashy","authorEmailEncrypted":"vcdyautck1qmIQ23pbv+KDo7Eiwi41OCTTlUIdt0uIDGPb0WdYiMOUrA2ZJVYiZKQn5/FjdaCMEKMmcMtr8QwuI1iPWpB9kkCnxCEbFiWseeFgmDMACFvZuQj4W3AF3KXZ9ZTyaB2riL0V9ikdvVBeKqnxkrUDiGE3PCVMydcLEQUn04MsfO9IHTcGaeZhZ5ROOHgbHHk5AhPR+Civ0bR2VjaFKhp+HnYvcEweIcvXGgqNJwKa3zaR2DffproUUw628MYDPJtug8oJERkIRHsoHitEWmftnsOYukLt2tII6Ornqx5pSkn4xSYRfH0SwSdVBkXX3wTMJMT4ZT31rl/O4PUf3Ld0tXw5YhXldVlp9EZew7NQGoTU1qRU8n2lH9OZaS7RVBtrAA4abmHv16txl3+NqWsro5R1zFbPW2pM0K7ycX1wtLazVgt6aNNbydd0HgusPmPZF5SkyZYpZMIRCT+wVMo2FK5UGj9NyZ+Btd6Jg9M69cy/QZFAZQ6wXjZKFLfAAXZcsJL1AAd+ogzZ5/K8OJluI6vVkwsPvZBnAnpCCpJ9gnXS7VgxuDjy0TScEVHAN9jMiVh1zL2ZMYvojj/a+UVt9rP42sTqBqPCrAw4zVjAr6etEG9gO7tqZJq76uezavUISTa+c4dw9JesXsdfvCWC2uiw3jOj6iQTs=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"OK, got it. Thanks again. I decided to go with the CancellationTokenSource approach. In my \"Run\" method (which is based on your unit test), I loop over all the cases selected by user to be run, and initialize a CancellationTokenSource for each of them to a new CancellationTokenSource(), before proceeding with the Produce/Consume sequence. Next, in my \"Kill\" method I loop over all cases selected by user to be killed, and if I found a CancellationTokenSource corresponding to that case, then I call the Cancel() method on it, otherwise I simply skip over it...with the idea being that if the user selects a few cases to \"Kill\" and then selects the same to \"Run\" immediately after (or vice-versa), the latest effect would take precedence. Hope this is clear and a reasonable approach.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"88d0f722-98e2-35ad-b659-40ac779f2273","date":"2016-08-17T18:39:13Z","timestamp":1471459153,"authorUserId":"disqus:buggysquashy"}