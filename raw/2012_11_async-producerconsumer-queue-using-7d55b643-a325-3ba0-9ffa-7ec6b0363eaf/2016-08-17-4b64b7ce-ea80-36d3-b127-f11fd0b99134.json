{"_id":"4b64b7ce-ea80-36d3-b127-f11fd0b99134","authorName":"Buggy Squashy","authorEmailEncrypted":"doI7DhJBbxoqeKnkC7fRym7OozeZ7ZKCRkvMOztcYP20u6+BPt1wo5jpRYBbQLOk6Rf76qkF1EXn7Z1UrNFbSHDVizRuZXw5USA3mfGNmlLOj+FALpyU/zyeD7PIpZ4Xky7vwkt0EWM3j3q1T16rhJy2SrGjziyYOOSxzM6j2y1UXQbyiDs9nayFQbUgDnMlprdsPOVULDZdg742aXNVJwccaINcVWVHZfsuynTt9Mf2XTyFMKksxwB6ZHBjj/znfe4pa+7nwsAfcFNOYv628Ie8HMG6g5aF3F/gBMGOPVq9uihdI+fAfGQpQbXk1bxTfgK+iM2MyA6JnJbt9VPBf3Wd3klDaISFnZzZEO7zsKaGktM82MiusGP+d9oVdaih7tBIkijvVusWqopd0Pia9PjfaniBik2imZfs3kAxMvt2dcfACe3cqSHDDO9FC+MFw5eQOnIiCMH8XATLGCCEOUo8vreFcJuc+Z7r+R5p9MvO3l6rASIqVGNZT9+COa4gKQwCiAScyygJnvJ5yy5jgio9VAhf1WMukOH6x4Plz6eWvKpvZfCZhwALSvgJ3a6bf3cIImpKyTYh4IU4eRg/aF1YPwsoqcqa07i1aogrPqb53Y3sNnCXtmUKQxacv0uFcGu70Jn1KswXYT0hDmegBp/fGl7e3nbDJMoKXXET3gc=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"OK, got it. Thanks again. I decided to go with the CancellationTokenSource approach. In my \"Run\" method (which is based on your unit test), I loop over all the cases selected by user to be run, and initialize a CancellationTokenSource for each of them to a new CancellationTokenSource(), before proceeding with the Produce/Consume sequence. Next, in my \"Kill\" method I loop over all cases selected by user to be killed, and if I found a CancellationTokenSource corresponding to that case, then I call the Cancel() method on it, otherwise I simply skip over it...with the idea being that if the user selects a few cases to \"Kill\" and then selects the same to \"Run\" immediately after (or vice-versa), the latest effect would take precedence. Hope this is clear and a reasonable approach.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"88d0f722-98e2-35ad-b659-40ac779f2273","date":"2016-08-17T18:39:13Z","timestamp":1471459153,"authorUserId":"disqus:buggysquashy"}