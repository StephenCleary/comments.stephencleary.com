{"_id":"4b64b7ce-ea80-36d3-b127-f11fd0b99134","authorName":"Buggy Squashy","authorEmailEncrypted":"i/N3Iuaf3ZBsvooN8+X8d6g1w7olI5xRhN6L60mvf5ocTeNUrZkEyh8SanllfKCPug0QikTGDXe7ESTu8ztEAXeepUMmbJUjMyRS0RFvKC92qF9eZwvTdh6l5rTGeHA/pJ5+r66i9BOVGELlHxXRdV6m4s15sIpRGQPshnV13o9x2y3ktKenI8gx/v7ij8xYv47adGbwcqk3xf8BQR2/rZOqGIHJs9/vy69+EqS0yxNcu0snBXwDNjdCl3UHlBoyNOy1ACqk2u0gpWWeKT/oH/RmoQl91CQ8hOW+1EqH4YC7+aFcLioegGorpi4BlcScC8z0CnsPIbp1Js5wafUfAXwlnzzp+kQZ9wKDDOUK833Gf7Y1vmt9IHPxnK/X8Xw/Kn3LkY4/CV+kBV3GC3KoRK5tB5syMcOPLDI82CHk9IzczSEbGAfo8Ja8NQJqUfpjxk4F45l8UErhs6P5xGGaCA03yYNbWclU0UB12/lk9RC4eKsE38irIZwsK2vjvkShIsXwCajsN9Z8MO3xdjJZa7lIVaQmtQwz0DUXG2HiYjjeoARneUTIpykqt0ulQdpMcxKW3xtco/iRlinX81UAX8PIm4nv1nM5jGuA/Ruey8FRZAfawJo1r8/+5EPk7dXkkYXe51uOFF1z/NvLMpEjR3+OannyqQO3NODcSaAliMs=","authorEmailMD5":"b13725d59b683df333736b9a404801df","authorUri":"","authorUserId":"disqus:buggysquashy","authorFallbackAvatar":"","message":"OK, got it. Thanks again. I decided to go with the CancellationTokenSource approach. In my \"Run\" method (which is based on your unit test), I loop over all the cases selected by user to be run, and initialize a CancellationTokenSource for each of them to a new CancellationTokenSource(), before proceeding with the Produce/Consume sequence. Next, in my \"Kill\" method I loop over all cases selected by user to be killed, and if I found a CancellationTokenSource corresponding to that case, then I call the Cancel() method on it, otherwise I simply skip over it...with the idea being that if the user selects a few cases to \"Kill\" and then selects the same to \"Run\" immediately after (or vice-versa), the latest effect would take precedence. Hope this is clear and a reasonable approach.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"88d0f722-98e2-35ad-b659-40ac779f2273","date":"2016-08-17T18:39:13Z","timestamp":1471459153}