{"_id":"4b64b7ce-ea80-36d3-b127-f11fd0b99134","authorName":"Buggy Squashy","authorEmailEncrypted":"ZBDcLOBbimw7ObJr2o5/o5J7R1rTb81EOgLbHKxSygBUEEfeVXSzZKUTvOnTUDUEjs/ar5itBBqhxOjRvWVX13nMbAYHnPaXC3NQl2OL5q9vaZgOn49/283izKu07k+QYf5LEfpuUvFcTJC/NG0W7pw+wDl8yR4Jo7WZI3zK2XefnO8eyjXcTuwDvWI7yj01+LS2ceWURGgwGtC31MCPkMKTFSpLluS4bQ/uYkFxF4wikVvvXu1Bin2uxF0HDNR4Z9yIqcwq3rp9nU9y+Db7sUC6uZ2SVAQBsDW0CqDylLCEFmzSOaU9whhqVbXXabYPF/kzrc3A6F00shedZUbP/l6CRYGWDcTFdtYmiz+PImEjVHCmwPADdHamVeeIyw112VBOpIt4evyUXzF7BA9tP22CC4Ux1BWxNw1gpMM8L17EYSXnrWKq6vQW/ufExHzLlUulEm1n/Ng7RQtUl1xjFZol7pgdAM5ftNWkudmRdIdDi/u0MHYY1zqD/uQXy0lGkLNnN947phypStz0iDN6pdLjNLQ25YfVPVqfzt/xPpM6SyOGuDQwfBjBy5kvDRhH/fhgKnQV5uI3LE3/QoG/vPhG06rv4Srjf3F320XsY/lCqfs6R2OZgU1ojX2Huz/bgOUA4oljzsFo9M4ChkCggSnNysaqtmRfa5uaMDJrthU=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"OK, got it. Thanks again. I decided to go with the CancellationTokenSource approach. In my \"Run\" method (which is based on your unit test), I loop over all the cases selected by user to be run, and initialize a CancellationTokenSource for each of them to a new CancellationTokenSource(), before proceeding with the Produce/Consume sequence. Next, in my \"Kill\" method I loop over all cases selected by user to be killed, and if I found a CancellationTokenSource corresponding to that case, then I call the Cancel() method on it, otherwise I simply skip over it...with the idea being that if the user selects a few cases to \"Kill\" and then selects the same to \"Run\" immediately after (or vice-versa), the latest effect would take precedence. Hope this is clear and a reasonable approach.","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"88d0f722-98e2-35ad-b659-40ac779f2273","date":"2016-08-17T18:39:13Z","timestamp":1471459153,"authorUserId":"disqus:buggysquashy"}