{"_id":"da442b6c-3580-3513-ac90-5be383fdb609","authorName":"Buggy Squashy","authorEmailEncrypted":"aBeeXU6EjcFKI1sFUXKlrWz2T2+R9I/TFNWOtP6kbxoYERmPiJHSAsRYR3PMO8D46+2ep56BjYhv3RahNF9V/2VrxVf7AylmVUZFUg1pdSq4zWWQAzk0SaqAMvJIISlt6RvhN5sCvZW7k1ZLaKUMrrnAVXKqkPyj2XPAM/R83h8V20uHpXJYuopAp2wpuFScP4GLl0jCXnmtMgu+XjJ6dSz4bDcbd5CYB3HfvAKMfVl87WqovddqZcD8p8YqcXh7j+Qhw/UcB7pYQ17bAytuUM/qwBgMR1l4tkiPZ3fPDJRaWdQNX5evUoYa25WdS2LNEn0D+ChgZYTpyKzL6sK+a8YxjoWV40BvSmcc2oygQdePmpUgVA2yceybsPsiqBYLKzp/fAyZ6ZT8xR7o34wG7Csj+UhKRL/TVier1eliVg5c+vPjxMxfFk7L9XTU57XubvFKaH8VduM8cGgQAJpXk0zXn+Y7xwyvCRSjQrDcCUKXLLFU9VnVDnbcvae8iL7xltzwwRXmXleGcoARbcrc1rUoFcOftZEtPUZpLBNvSCXBMKBTcxhuQK6OGuEcpaxvkjJkIvMshCELN5aMVMvOIn31dbkG8PEBPvwnr6PeXCiFkZiS7ttEYcI/EWaR4DmNRX77Re2fTX+H7qy/O3qN3+eYYCd6MMDMvQkpQBSKjnM=","authorEmailMD5":"b13725d59b683df333736b9a404801df","message":"Thanks Stephen. I tried with BufferBlock initializing it as:   \r\nnew BufferBlock<item>(new ExecutionDataflowBlockOptions { BoundedCapacity = maxCapacity, maxDegreeOfParallelism = maxDegreeOfParallelism,}) with both parameters set to 8 with the rest of the code as I had it before; but I still see the same behavior, i.e. sequential processing of the items in the block. From doing further research on this it looks like BufferBlock is just not designed for this. I tried to re-write my code using ActionBlock which apparently supports concurrent processing and throttling but no luck there as well. I posted it on SO here: [http://stackoverflow.com/questions/39150903/concurrent-parallel-job-processing-with-throttling-using-actionblock-in-tpl-data](http://stackoverflow.com/questions/39150903/concurrent-parallel-job-processing-with-throttling-using-actionblock-in-tpl-data) ","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"8c49be6b-7e51-36cc-9095-e5ed0fc6529a","date":"2016-08-25T15:00:51Z","timestamp":1472137251,"authorUserId":"disqus:buggysquashy"}