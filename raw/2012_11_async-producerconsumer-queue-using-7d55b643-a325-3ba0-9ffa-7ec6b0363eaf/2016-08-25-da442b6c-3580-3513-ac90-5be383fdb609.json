{"_id":"da442b6c-3580-3513-ac90-5be383fdb609","authorName":"Buggy Squashy","authorEmailEncrypted":"XizfbLzs5mX0zkasV1AAr7TO8iJmexzng7J+/XqGBkq4qNq9Isw/gDfl7wHiQD9SarShnRFoH/cNSXYNUEdCMprtwa0fnvi2iEY4ZDke3mOwEjiOC+p7oxUJbN0BQuVMvDJJT0H1uu9VbbF+qk8Tj2wK6igtciJPruqkPTtyltMKaBV7CvRkVIZebaM8Zyf9zUHEBmWVvRiNDf3srfmF/sezxw9UbwL0p+1EbG7wOXjGkcCoh9xzvBU2pCBrHkdczgB1uKZ98T05dDg2Z3JQVYTp6BIYmXEPaWPPY8iLuRGAd+iDPkZqShtM2BhohaNWXmd65Sa4VbelQX494/FqaL+f1Q6NRB5NFiWsD7ovA0wvqD/6RAivk2icpS1ic51fdbd1WdBgO8kzS6ii4Z6+TZjNdLq6co0WW0X1Quzwj6WcTGjUFxEfHMkOQDo8YuY5wZz+in6QfVonIVqB3o1GqvnMNd90yVwszp/i54M5IsgqHh3XNqlfcwyhsRR+uhqLlC76yXg03oBzRrj2jkOcBEsvIZcgf91yFxu3TTWIXoDM6hHYfgXutBmbMkCKuTk5pmyqDMx7SsgJDLbcU+luyv88Nzk7hfQxpX7MspvDkPYfrJMXsO2VrCnzQOKi+X3RPvq4+hHuYQgGuPgLYFHOQaqtQItpLv8Ip+HvY3fUOP8=","authorEmailMD5":"b13725d59b683df333736b9a404801df","authorUri":"","authorUserId":"disqus:buggysquashy","message":"Thanks Stephen. I tried with BufferBlock initializing it as:   \r\nnew BufferBlock<item>(new ExecutionDataflowBlockOptions { BoundedCapacity = maxCapacity, maxDegreeOfParallelism = maxDegreeOfParallelism,}) with both parameters set to 8 with the rest of the code as I had it before; but I still see the same behavior, i.e. sequential processing of the items in the block. From doing further research on this it looks like BufferBlock is just not designed for this. I tried to re-write my code using ActionBlock which apparently supports concurrent processing and throttling but no luck there as well. I posted it on SO here: [http://stackoverflow.com/questions/39150903/concurrent-parallel-job-processing-with-throttling-using-actionblock-in-tpl-data](http://stackoverflow.com/questions/39150903/concurrent-parallel-job-processing-with-throttling-using-actionblock-in-tpl-data) ","postId":"2012_11_async-producerconsumer-queue-using-7d55b643-a325-3ba0-9ffa-7ec6b0363eaf","replyTo":"8c49be6b-7e51-36cc-9095-e5ed0fc6529a","date":"2016-08-25T15:00:51Z","timestamp":1472137251}