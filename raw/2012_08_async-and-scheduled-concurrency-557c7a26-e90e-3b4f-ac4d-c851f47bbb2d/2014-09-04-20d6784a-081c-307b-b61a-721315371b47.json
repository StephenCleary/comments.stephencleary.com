{"_id":"20d6784a-081c-307b-b61a-721315371b47","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"The resumption of *that* async method does always use the thread pool. When that async method finishes, its task completes. If another async method is awaiting on that task, then *that* async method has its own context captured (or not).\r\n\r\nSo, the resuming context decision is made only for that await. If a higher-level method does not use ConfigureAwait(false) - i.e., it wants to resume in its context - then it doesn't matter whether a lower-level method uses ConfigureAwait(false) or not.","postId":"2012_08_async-and-scheduled-concurrency-557c7a26-e90e-3b4f-ac4d-c851f47bbb2d","replyTo":"c7acec81-bd9a-3d42-9094-80e9978a62f1","date":"2014-09-04T19:20:27Z","timestamp":1409858427}