{"_id":"26bb3051-408f-301b-a00e-9ccebd04d10e","authorName":"Stephen Cleary","authorEmailEncrypted":"iGLvbnBUJgjJCND7z+Rb+QGitHc0czPrE11NJWIlJ5Rei6h/kAivKm7g3zsSq4m4boxbHIZPo5vvR7QzErS7Gky7kOIPZqUJy/bQBxBiCXiqkDIocwb+gNQsjcai5wHAJYKMN/lbmTbKpzBTNqUKaC0dof62NJtXgx8Qzob5X27i3o/HLo07AGTOJCS1EOcsT9T8n6QR6Gf+vmDJ5xjYV/c9Lu3ICz2N9GDJapvpbIqGE1IkrcNtRmWpFGpBA+J53V9g3rVmJLQTN7DwpGEG3CnuuzSenB9FhgacqfI1AqfYzsY7gV14cb1eyewq5Il5GMPwWEGmu5v5VlH0kGMyILaPm5TVjpYgAZKsn81PgJIniiQpEIY/cELvNhBApZ5Nr8+2tAmCX9nzs1DbOiXvQ6ARf/kWD09PT9PIIsTTTk7ZNyDuK+pmB6gcUUJK4/od6janC75FUe5zC2t4wmLD05A921J2zFIf/LPQyfKuConh5FvzOKz3KFKQ5bFxZjX4WJmxaWq07gSIKT4WSEon1i2sz3slPU77dS55C9Uo8FvT0JiI8ClX+aJfUZAeHJJFjzCysY6OBVWGN+zhlqejHZeEkmP3D6gFW1SaOfK5cV6e76WHx9Q3fi+TcOs0qrsEbQdf7wAP7InrsAuzEwHfKi1VZwJOKQjTk5UPy8BxDlI=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"In the code you posted, `ProgressBar.Value` is not being run on a different thread. Assuming this code is called from the UI thread, `ProgressBar.Value` is only being set from the UI thread. I have an async/await intro that explains how this works: [http://blog.stephencleary.com/2012/02/async-and-await.html](http://blog.stephencleary.com/2012/02/async-and-await.html)\r\n\r\nUnless you mean that `SomeCpuIntensiveWorkAsync` is also updating `ProgressBar.Value`. In that case, *some* frameworks will allow setting UI control properties from background threads. WinForms usually does not, but I'm not 100% sure about their ProgressBar. WPF does allow setting simple values, but other MVVM frameworks do not.\r\n\r\nWith the range of support for this, I recommend not to do it, ever. If you use `IProgress<int>` / `Progress<int>`, then your code will always work for all platforms.","postId":"2010_08_various-implementations-of-asynchronous-a4e088a3-0b76-3708-ae71-e29e4bbdd132","replyTo":"c4fb70cb-d224-3ae3-8be3-fbed40906a24","date":"2016-02-26T20:01:30Z","timestamp":1456516890,"authorUserId":"disqus:stephen_cleary"}