{"_id":"26bb3051-408f-301b-a00e-9ccebd04d10e","authorName":"Stephen Cleary","authorEmailEncrypted":"jdrsXunmgO9DoA5GBRaKRbinFc3xvfPYo0J3/ALDVgfhwZtqkknixilX7G9w98pRWKsPTUMKNW35XRU44x0zlnlqVYmAcVLBIA9Qi1DAyoHN/OTNl6w2q5rdNfbxX+MT4c6I84x4aX04dq1kOW4ZWepRbOJ3Xyp4kV0G9CkCH17Tts2UUDnuqrwLgJYrqwXo9j0JIr06UpLOcnCGI53Apdbsw5eUm4oqrKP2UfzfOyFzV9+aQjmqhMQ1dpWVP7bwBdJzN0jbDe1lKn/k6WtNdWODmML86aN1DEQ5vI/KDLF4DCsOSbb2Y8IES2hqM/1SjILbEZ9wNtn0N6q+dVdmNbPt6Zpxz/NGLu/WU4VF02SZa+wI0UV4fujgmw4gCEzmpz0mKXPzpeiJYqdlL86Xgf4ZCdjCSiD+f7bdEgq5yusQwu0ZHElmNTEx6B+PMiJTaplSKHnDDLmOqdv1EPjhToYO+uglYMV/2YJYpzdQRv4/fE2gBo/sNAqiRzB2tKsCcAZxEzg9b5RWDsrZTUBjHa72xFS/UrwlQo1kZT11+dR5+RGybScrm44G6LXQPkodLcSGqOqcCIqF6KewqitkmTkx4bRYb4voI7OAZzR2puuxKj4nT0qdPqHej0g8n4P9SzPYrazZ3Sr9sr2BEH8F627oZ4AF2G08IjU/MSo+AF0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"In the code you posted, `ProgressBar.Value` is not being run on a different thread. Assuming this code is called from the UI thread, `ProgressBar.Value` is only being set from the UI thread. I have an async/await intro that explains how this works: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2012/02/async-and-await.html \"http://blog.stephencleary.com/2012/02/async-and-await.html\")\r\n\r\nUnless you mean that `SomeCpuIntensiveWorkAsync` is also updating `ProgressBar.Value`. In that case, *some* frameworks will allow setting UI control properties from background threads. WinForms usually does not, but I'm not 100% sure about their ProgressBar. WPF does allow setting simple values, but other MVVM frameworks do not.\r\n\r\nWith the range of support for this, I recommend not to do it, ever. If you use `IProgress<int>` / `Progress<int>`, then your code will always work for all platforms.","postId":"2010_08_various-implementations-of-asynchronous-a4e088a3-0b76-3708-ae71-e29e4bbdd132","replyTo":"c4fb70cb-d224-3ae3-8be3-fbed40906a24","date":"2016-02-26T20:01:30Z","timestamp":1456516890,"authorUserId":"disqus:stephen_cleary"}