{"_id":"1a2b43f7-c42d-37da-9a5e-3e4da2af94a6","authorName":"Scott McKay","authorEmailEncrypted":"JTeGLCt4qvDBHqNIDYILzsaD/LJ3/zP9YSXaEqa8affSueHr/AE0VEE9PRIDRzs1Og4Iy84oJ8zLX0kv+6mPcu20e9l2RBp76Foi8GTwiDsAcD12bjIbtHgVFfK2ptKuHyPSMwq5+We4QPt86E1naoMtK1ivnlpbyn9c0lLgqkwjiWftWP465TLo4Dn9OV9VHySLtjdfuQSZgumJpwAnAySq6V/kRL6PI6gJWdtd03oWpcWxUzCMA2hg0a8k9Z7Do4wadLwLB10zZHJEsuHiw6naZNH9LnJzyKLA7tmCLEw+MtmAu8imQVEbB2xggGg4FjealrDQmA7mWngY91ooaQFP8hzIZkrugYAkOO7F9do+Xbzr5Gb3Gh8uWEMF97VEbRssHHsZYMmzeuJZsGqIt8itU4dlhyuIRRY1b0l1D81KnXDhKHinf3/Sdhzc5GBwo+rWY8RGZ8NEWLRdlOY/KOZvkwGPfa8NT30+0OLZbKtwMqpKhJer/JkEdkhLID9DTXKnM+ZYHpDJcIX4Rh5Bel5Evi3Kq/OCvqtEEF5+S5Qo3U/UTzEMCguYJimauAgh1f9bujbAV1bokgWXCzZbpFGdr3gvMJvw2mgjgQ0sHFocumd8FOa66dJWyW0/5ChakSNWt+e44gEsAQIqqakYOdxPCfe80qhFNDRCoUqMQmU=","authorEmailMD5":"384d2327b00c037623207507e3a14cc7","authorUri":"","authorUserId":"disqus:disqus_U6noZg42Is","message":"I have a special case in that I want the subrequests in the batch to be processed in parallel, but to re-join them all (using your AsyncBarrier class) before calling an external system. Due to that there's no async I/O in the initial subrequest handling so they each run sequentially until they hit the barrier. To force that initial stage to run in parallel I'm now using HostingEnvironment.QueueBackgroundWorkItem with a TaskCompetionSource in the Task.WhenAll.","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"d5438ebc-ffca-3e3d-a98c-eca36319ea20","date":"2017-11-28T21:20:10Z","timestamp":1511904010}