{"_id":"1dd2fe02-02ac-3a22-bcb5-3d8ad3a86f5e","authorName":"Scott McKay","authorEmailEncrypted":"jUdJOjwT7xr3u5kA7AhAk0AvzQUgabh8D1TvXbdcScuJXk9M08yQ2mr6RA+rQfU4kMaG8Eq3OuVsmrjfKsmbqdEH4GZjD20+Idq5HnJfjBCpolRgGyppGHRhqbLY5/ltHUdbaGWnLHBuGcHCI9tCXmn2WQpWg0wTjRFKCWN6t2i/haRtOQKQt+4nMAxEXLVBPFDY8LWlyYYbffLeDJRYCVRyq6DunjH28FofnWYfyHIlcUwUD4OBOZmYtcqz8T0Jb4qC374SkBdpnHhSZJ9+vsJlwnlMgm5MuoKB92hMqhFTjdWkOmNl9PTW9ExLPHVvMKz98dWtltBKr7EgRKBP/IkUOWK/SV81jahraToQKBoy8Pbmh5SwBTb4SsZUR2hZK8vna+RoRq+Q54fQKEQ9a8OXhfDPQYXNsE7QOZPPrElEkRtCccl6degqiCZ6LmiddROtlF7VTYsLwWLFuqeP3Aw95UA5tGkUjzc5zVtI4Z5SL+f5P/CJVWmlW/RLgbzXvCUrSea6qdod0pgrElnZjKxdMX8LCpmDkyisZkBf3k4YXrX+0wOiQ5Bio8DY0HH4zcbapwYNV7v8b8n0xSO8Tu9ux7L1od7QwOoehVru3G5jAGbiOoEgUDzWT8aS3h8QDXa07eVtBGSDVj/CSmQ4/lJjlRX9XTg7tYloz/eHGsc=","authorEmailMD5":"384d2327b00c037623207507e3a14cc7","message":"Is it valid to use Task.Run when processing a batch request (WebApi OData in this case) in an [asp.net](http://asp.net \"asp.net\") web service? There's one thread processing the original batch request, but each item in the batch is really a separate request that is executed using HttpServer.SendAsync locally. If I just use Task.WhenAll with the SendAsync calls the subrequests execute largely synchronously on the thread from the batch request. If I run the sub requests using Task.Run they execute in parallel on separate threads, which is the behavior I'm after. I haven't found a way to get that parallel execution more nicely, but perhaps I'm missing an way to do that in [asp.net](http://asp.net \"asp.net\").","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"","date":"2017-11-22T09:53:24Z","timestamp":1511344404,"authorUserId":"disqus:disqus_U6noZg42Is"}