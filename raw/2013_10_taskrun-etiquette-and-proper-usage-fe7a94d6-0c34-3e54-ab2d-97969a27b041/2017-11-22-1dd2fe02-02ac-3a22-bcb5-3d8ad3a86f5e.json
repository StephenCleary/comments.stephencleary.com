{"_id":"1dd2fe02-02ac-3a22-bcb5-3d8ad3a86f5e","authorName":"Scott McKay","authorEmailEncrypted":"te0zxn3DXA8hnKpuNIjjKNElSdTuW0vf6rJzfvgC2rVyBOKDxCzIfc9zaxIs9Lg1I77hteXbsIRuwz5bCSYGornANBslr6j6AVakv/yfiYhwEGi4XL5PbRdrhJxZYtP59FK6ZoL6nnaEzcGlWtwiUhvGSF4K4TqJXLroOLW0yUy0FpxElHuVMx2I9YDHAuYZq0pUVeM2IuomgNEGJoTp2TWo3NhsHL2JoDdfCZI9yBZtUQi2lguIFJn378lOd50VBtugdNUKWRz+tqe2SgeKv2RblX+ZPR1ffP4rmSeDRoMdUXhF30S+scBAGLX9HEXikjt32aQ3TUIp2SaQSpdGgSbQ9AqUdcLTZxptISpNNShsN9/fzOKhthSx1U4NBFYUNQvcy9kGONdRnZoLCPb4qzc10w+XeR9VptopqZrdXRYmKXOuSf3x3Lv6NV3sHqQt/XVcXlwTE3lD0U4FvMrqryIYAfo3Pvp/uvaTra0LRuocsWFiBawB0jjou6EISGFgcQRIx18dLoSPVjRzzhmy37rz6ogl/sHG7g4ttULvaJdgk/EWMHTx1KgOD/ToxMxZtYhSO5MXcayYC0ggJT24DNffSiCi9VFD4xXa62WIXN6zVuAaxWvBbzEXdXN0r3lI8kq3AbJsNmrcCKW6NqtZGC7AteHdM4czG/VgYFfLrPY=","authorEmailMD5":"384d2327b00c037623207507e3a14cc7","message":"Is it valid to use Task.Run when processing a batch request (WebApi OData in this case) in an [asp.net](http://asp.net \"asp.net\") web service? There's one thread processing the original batch request, but each item in the batch is really a separate request that is executed using HttpServer.SendAsync locally. If I just use Task.WhenAll with the SendAsync calls the subrequests execute largely synchronously on the thread from the batch request. If I run the sub requests using Task.Run they execute in parallel on separate threads, which is the behavior I'm after. I haven't found a way to get that parallel execution more nicely, but perhaps I'm missing an way to do that in [asp.net](http://asp.net \"asp.net\").","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"","date":"2017-11-22T09:53:24Z","timestamp":1511344404,"authorUserId":"disqus:disqus_U6noZg42Is"}