{"_id":"1dd2fe02-02ac-3a22-bcb5-3d8ad3a86f5e","authorName":"Scott McKay","authorEmailEncrypted":"a5oYA7Hx1zgmy4RrudaIqLYXzwYpvRlyKadbokS/3zpOslYTOA0ySuz/r6aTgrNQWhRz/QowOjCpN4l/1lyYGOQyhhwYYAlCHQEa4uLow0KIwhuQxTzE5zH34DwEn716KDuF5v+69AYv06lIRt/6THTm4h+wpzkRGTCJeIbWKctdpnHin08ja1W/YUGl+pKqWdhTMAp6M1GsX7dAlv5efqAqUZK4e0nueHAal38XLltc3OdHgi7iDrM4WZjNkMDhnLjXfRXW/XTLpOndtJCV2rbqiZRfyVS3fxY7vBsG22Exq9aXDRDfp4URdOc9sxquJXHr5XKmXx82bG+KcjxXU39iBYjqp75DzsH5upWZPV2rO2uG3w3QQkyJ2EbDg2YjMYvKyzqSLut2U8da+D7Y2Ja4Kso2zUdiQ6mYwUpt4zRnTRhngk64N8WtI/mMBE9E3/B175ky2bGBkJkhmOG/XNRRTAYVAzJ7zNUqnEW2G0HzdilRIc4ZCqq/OFK2aIzANEaR3jHueEy+pEIyLjGXjJ93aAuppZuiS2PMiBtGGWPsjpqPlaVQ/f33s4E+ySwUJ1VRAN2gBsrayuH2Jvrr3CNpGsR1UaKNwOF3OqHFjwHt/rcSJl3GQB47Kryphcs3QMqWj+lyjyuA+GMqA1JmnmVK3H9eOdjClylt8Is3Ulc=","authorEmailMD5":"384d2327b00c037623207507e3a14cc7","authorUri":"","authorUserId":"disqus:disqus_U6noZg42Is","message":"Is it valid to use Task.Run when processing a batch request (WebApi OData in this case) in an [asp.net](http://asp.net) web service? There's one thread processing the original batch request, but each item in the batch is really a separate request that is executed using HttpServer.SendAsync locally. If I just use Task.WhenAll with the SendAsync calls the subrequests execute largely synchronously on the thread from the batch request. If I run the sub requests using Task.Run they execute in parallel on separate threads, which is the behavior I'm after. I haven't found a way to get that parallel execution more nicely, but perhaps I'm missing an way to do that in [asp.net](http://asp.net).","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"","date":"2017-11-22T09:53:24Z","timestamp":1511344404}