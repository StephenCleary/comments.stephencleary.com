{"_id":"676958df-1f31-3c5c-90d4-01b52ef21619","authorName":"Dimitar Ginev","authorEmailEncrypted":"MVDKZoKz79vpOCTWcuDb7IQS42FX95+RMTBD3RV65hYfvKSBHbbRnWfcytyGqGNqwO2tYOl+TFmczjhrWqfjwJfALJkGTtvXO51nFRfv9I99cExYEsnmWrNhwlpJFxCBEpV6YQGn8ZunHaDv2W0LYBas6G1QApIWzwMwQNEW/3CNk+oKduLksmuhgvJZJ6ZmRPTrcrztT83nz+NumsVNKJRTXOSjmtOeLZqwqNloQmNsxXfd1TGDfqyd4GDBRlOEA42wFAwdDcRfKGjKigCp2VcD9z7b3meKXRz9S3p2LqsaeKPbeaGIqz9fUHRpqkKX/q8L5XIfwTOfSA2j2VdqjoEcRd4c/P/u2EfYpv0NvQ8MGaHrOJcUlPNgrcH8Fgmpa38KCopIUQ7s878Xa1ZHubcZL/DaE7gZoMwU3OuetJdj0UKV9dv5hEeu0++uuw3BINOqWk0URsZXRhYN6DelZl+e1ZIu3ALq+qZXch2J6bFU9uUKrePCegTBvmsyGi+w5Elr9UEv1AFDlgJ4H1dV+82CYICePE/kKqJ5BgTfBra5eN4Wyxx/ZcvVhVngdpcY0gx9J58cPDXLS26ZLD6i12yJWz6ln/OhkIaDdefLu0St9d/jfT2481vS39qHUB0HxDnQbNaUGp65kq+T2kUXnv8xpNvmbIuY37aWJCM0D2w=","authorEmailMD5":"886756f0c06f96fa34273ab469fbb99d","message":"Thanks Stephen. I was not expecting such a fast response :). I will use the opportunity to fire another question: So my flow goes something like this :  \r\npublic class SomeController{  \r\n__public IHttpAction SomeAction{  \r\n_____business_service.DoWork()   \r\n__}  \r\n}  \r\nclass Busness_Service{  \r\n__public DoWork(){  \r\n____var result = third_Party_Library_Wrapper.CallTheThirdParty()  \r\n____useTheResult.........  \r\n__}  \r\n}\r\n\r\nclass Third_Party_Library_Wrapper(){  \r\n__public string CallTheThirdParty(){  \r\n____var result = third_party_library.SomeSynchronousMethod()  \r\n____return result  \r\n__}  \r\n}\r\n\r\nSo the question is which method gets to become the async method. From what I read in this series of blogs we should use Task.Run to CALL the synchronous methods, which means that busnessSrevice.DoWork() in the controller should become Task.Run(()=>busnessService.DoWork()). Am I getting it right? ","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"c06ce764-5223-39af-945b-4043aa302ce9","date":"2016-02-03T21:42:29Z","timestamp":1454535749,"authorUserId":"disqus:dimitarginev"}