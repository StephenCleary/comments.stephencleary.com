{"_id":"676958df-1f31-3c5c-90d4-01b52ef21619","authorName":"Dimitar Ginev","authorEmailEncrypted":"XeC4ELLnR7kA2eXw4SubjUJjSJj/32uWuA1pZoeBEAtX8M+r639kBL0KN4GKvofA8tojTlIcnhbbvTrq7VME3LUs1Ec8gBAhYbj+uQF244R8xe0LWWpRn5xRBpTh9qnHRu35KLq371TtEakQXVdEc01kZ6QYA8hgBxMB7j5G/RBtLvr4EvdD8/f2SI+If+2ilwr4ggoRvl8FtAGiWpc5gBRd7/Cdw5HpyxXIcmeQK75Ycp1RLLKo05H585I/hGsXkbKSh32YJVzoqD4hf+JshKsb65o9BsK/7sr27INw/utDGrs8FnCEIYT0YXaBA+5VhBt3kYUlu7D4quVgOuSrDxtuvC3hr1Rlc42Twi+kKrtA2uUU27ORELB6pl+Stlyb/pElh2syqN9mU1dnjkjZDSLnORBnGx1+KYiUA1LR8MkXrg0NSxCtfyy+9lj/JzjLIH7oqIFiVzNknsETKU+0q3HtCuWV52KPSyLimmMVd3lwf9TbZAoK4L2RG6ti4bFIpmZ4AV0VyAvPV1Q7/mnQVGWBEuvA5uudnjTBX+Es1hwtSdBlc4gbgAdUvnFI+mWfWg+IrCi9CUvNyD6k/moWWnvLOwu+mo/ezeLMKSbmjmz8YnKgZCAsHFN6kvkpQbNEEd4nbkctd2jFwQLKa9xkTt0D7tCZVvtEiGf3P4Wq9gA=","authorEmailMD5":"886756f0c06f96fa34273ab469fbb99d","message":"Thanks Stephen. I was not expecting such a fast response :). I will use the opportunity to fire another question: So my flow goes something like this :  \r\npublic class SomeController{  \r\n__public IHttpAction SomeAction{  \r\n_____business_service.DoWork()   \r\n__}  \r\n}  \r\nclass Busness_Service{  \r\n__public DoWork(){  \r\n____var result = third_Party_Library_Wrapper.CallTheThirdParty()  \r\n____useTheResult.........  \r\n__}  \r\n}\r\n\r\nclass Third_Party_Library_Wrapper(){  \r\n__public string CallTheThirdParty(){  \r\n____var result = third_party_library.SomeSynchronousMethod()  \r\n____return result  \r\n__}  \r\n}\r\n\r\nSo the question is which method gets to become the async method. From what I read in this series of blogs we should use Task.Run to CALL the synchronous methods, which means that busnessSrevice.DoWork() in the controller should become Task.Run(()=>busnessService.DoWork()). Am I getting it right? ","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"c06ce764-5223-39af-945b-4043aa302ce9","date":"2016-02-03T21:42:29Z","timestamp":1454535749,"authorUserId":"disqus:dimitarginev"}