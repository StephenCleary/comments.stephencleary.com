{"_id":"bd378628-9846-36c3-b7da-a21a43f56f81","authorName":"Vitalii Vasylenko","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/01096061210204944757","authorUserId":"","authorFallbackAvatar":"","message":"Hi,  \r\n\r\nThanks for a lightspeed answer, i didnt expect that :)  \r\n\r\nWell.. i dont have too much of json - say, 20 items with 10 fields each (approximately). During waiting for the server answer (i'm still using native ProgressBar, which performance is quite low, but it is good for diagnostic), i see that bar is running smoothly. However, when data recieved, it slows ui down for about 0.5 second.   \r\n\r\nHmm.. so, you mean, i should remove waiting for CPU-bound from implementation, and then call from UI  \r\n\r\n var answer = await Task.Run(() => service.RequestServerAsync());  \r\n if (answer.Status == Ok)  \r\n ItemsList = answer.List;  ","postId":"2013_10_taskrun-etiquette-and-proper-usage-fe7a94d6-0c34-3e54-ab2d-97969a27b041","replyTo":"","date":"2013-11-12T23:41:30Z","timestamp":1384299690}