{"_id":"797e77d9-423c-3582-917e-6fbf3a4a4177","authorName":"sjb","authorEmailEncrypted":"hWvqiq2DQI5eeb7j9M//3515WQfk4wRp0GJw6vHfovckR8R7Y2DaGzQJV6D/WyvDH9wWR2kviOl9CMZNMSnYtx8n+vvyfZfKQ1p4Da+sAWbNDck7Dam89q0muzQyx28xMOEO9tY0vCE7SFvu7Au0h4XCZsDgzEY00+rnNi5272FzbrsONfaUrVBT2IqO9vTvx5DzMm5nqagb9I+PzgeOlKbIRkgm6tTDs93Mi1LHDV92iy28uRoFx7CXIC2sBo9VgSj9ylS8Xbtve+vixsYljeEqADhuRT3s13z5C1n/dHKb0t7AJWRyQye1GNEi4JJvtOqmNBvJwQ5YHwhYWyjQyrGXGZvc+Dpmxlr0d90LZ0Xv11NpRUwqAP5LejoJ2V97AC8jjVPAfLm8REZouRsJxDd0pMt/Kbe3bpWyzDA16+EjIeFty2XVu0v3Lgl6b2sZ65A363pa+3qBvW+bneLFzYxzO24+0AFevrlYNXDNaPT53CC8l8M7iz7Pb6By4CP+dEO5py2RrqpEv5KjYupFN0HsGHX4gVnGS8iBD8xuKxliBOtdJQkgtFyLCXS+Zzmlzr1IvVqw90umfKfRmrXSDQZj0pCvl9obGg70uGYOP5h6pPk0uMsP77BKnVAb9ot5DkRbmP0sGVc4qeBh6CfEZXxrkBTquo9TP355g2Uiabs=","authorEmailMD5":"961ac36915b8a21e7cba9d2c54b5d1d9","message":"Thanks for a great blog posting, and just as interesting today as in 2009.\r\n\r\nI think the first group of failures (A raising, B simultaneously unsubscribing and releasing resources, but the delegate in B is called anyway) represents more a race condition within B than an event-specific problem. One piece of code in B is releasing a resource, while a different piece of B is using that resource and the two parts of B are not communicating with each other on that. I'm not sure that it is A's responsibility to coordinate this for B. Eric Lippert commented on this in his posting, [https://blogs.msdn.microsoft.com/ericlippert/2009/04/29/events-and-races](https://blogs.msdn.microsoft.com/ericlippert/2009/04/29/events-and-races)\r\n\r\nSee also [https://codeblog.jonskeet.uk/2015/01/30/clean-event-handlers-invocation-with-c-6/](https://codeblog.jonskeet.uk/2015/01/30/clean-event-handlers-invocation-with-c-6/)","postId":"2009_06_threadsafe-events-adea283f-9468-3dfc-9ce5-4aa316624958","replyTo":"","date":"2017-10-09T16:11:23Z","timestamp":1507565483,"authorUserId":"disqus:disqus_yaGF2uMnNq"}