{"_id":"b5f73ce9-60c8-3a1b-8bd3-aaff944a45ce","authorName":"Dunets Nickolay","authorEmailEncrypted":"hXeXFBB1pJIvemMnd7zh21DYCS613+DQHtQ9K0dn0RQssXSLgnGk4ZfbYk94B4EOZYRBVtk2AwhpysG8zDx9X6KX7RlnMkXp9+k6uelwHA5+8G9qiJGgiSG3PiM4ycE52LwKtVPtjFDM/AX4TL2oCT1gt2jIqLxozeZprNIi2MOZ5NpwEmAvmWBXVSWn/RhNX2ws3MFArTfj+Vqlzmy+eki52EJ2gA/LHnHXIbNVidr+2ZQizIq9OcsVg/TEa4ZoPrN+EmwXAFbJUkZU+EeVOKDOObh53jC8TEg+Z8PXHMMBdcJmiETp5yt0cA8cwIVzUiyHwo3nRMiy+D8M/hrXX91zEpLOjVhIusyRjFTkq5yaqh3pxNwu1kkCTYCHak63RX2xPb6HHhQESdPYUIkPzlsvvFuZ5GdJYNTVixryoz/MNBCrdsxlTzWcVmBIJZ9vJwHSYrE5cze5JKj7yfqHDLe0DQari8UVmvIZJtKu/e6okV60aneEGIyczZKy2LcGq1b4ps/LKqzzKLf5FcerBaoVairx7OuYSbeJKJTBn1wgrYIYKRcqOIEOE6U9OWyQnUJ+xdcku4L9EspTEXRpefBDxAyyTsHWSqASMuFpJoN9iL2mKswJ67y8WC7dfhj/oBxQB82X1gJO+NVrFmApFUe+c8pDQBrUhCdySOJhmOE=","authorEmailMD5":"21434f26c39dd6fb71a18f13b8636f05","message":"I used CalculatedProperties in a medium size UWP project and highly recommend it as production-ready library. Library wasn't updated since creation - but apparently because it's simple, free of bugs and doesn't need extra functionality.\r\n\r\nI've been thinking a lot about what makes Calculated Properties so good (besides its simplicity) and seems like I found it. Advantages are strikingly similar to ideas and recommendations described in rather famous \"Out of Tar Pit\" paper ([http://shaffner.us/cs/papers/tarpit.pdf)](http://shaffner.us/cs/papers/tarpit.pdf)). Library does a great job reducing accidental complexity and state, in particular:\r\n\r\n* Control Flow - a major source of complexity - is entirely eliminated (no more explicit RaisePropertyChanged and plumbing between observable objects). No matter how many levels of abstractions are between dependent properties, changes just flow to UI naturally.  \r\n* It's encouraged to keep only essential mutable state  \r\n* It's encouraged to organize view model data in relational manner (ObservableCollection support)\r\n\r\nAs for accidental complexity:\r\n\r\n* In theory you may run into performance bottleneck if extremely large ObservalbeCollection used in many calculated properties. In practice it never happened to us.  \r\n* With Rx, you may need to use SubscribeOn or ObserveOn in UI thread context to avoid cross-thread issues sometimes. Very easy to do in practice.","postId":"2014_04_announcement-calculated-properties-b8f51692-2921-3ede-b5ce-0c193c49a06b","replyTo":"","date":"2017-02-21T00:24:39Z","timestamp":1487636679,"authorUserId":"disqus:DunetsNM"}