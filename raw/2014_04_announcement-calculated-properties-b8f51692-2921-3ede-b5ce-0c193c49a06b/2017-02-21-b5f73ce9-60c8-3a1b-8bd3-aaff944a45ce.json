{"_id":"b5f73ce9-60c8-3a1b-8bd3-aaff944a45ce","authorName":"Dunets Nickolay","authorEmailEncrypted":"Wpz4oft4E2uhcs4AViYI6QbAyAgB8+hnNACdiIuevwrXM8X/ZtxN1q0xpcioqc8J+AlESE8clRktxguLeLCKu4X+ppJpB/dAvw23VldG7+adek3p5vNQkfpDDV2jp6cqtkjaZIT7A5niL8aJXWJWg3zrOKZfKr2v4tPJHHvGfM5vy22vQg6yE//vidhXBlGk55RV0FaljbHKi1A8V01wjFHHKXuhi6s255K7aFYTLR7p1C5AiRqoOJq0kPlYtMV+vT8cH2/WhgJ7rMuvjb1Y+dbARh9q/r++zvq510ki7d//sgeHOJVc4QB++4kUepYqs6MbehDXQclduHPXhZEeYUFk1jqspHChjvdstiLW1gsLastfLP0Fv+Ba0u943IYn78LLSF5XQYydD9ye7EI3pSjwQL8F2dBeI+L0g8OrntokhuKXzxkasklRQ1Y8EMFaa1x+whN8nAJs1g//yc5YbSa27Yo7WdafJzi7LlELAMqq0HpT7AQ5obkpdIOmeRcQXhIBMhwRmfFUiJWklxpYP+colVV5+4AgvEX7HbKfHJPQDrkxHpfI7lSR6jZbNOE+haqZu4L7z6Ja2FZ9+KHNmrFz/P8RRRc70oPFYXXNexTpjEkr14E+jE55vfxLHq8Amu4P9NhR9L6gZx4ypHhMcAnSDXduNMkMQEsz64l7E/c=","authorEmailMD5":"21434f26c39dd6fb71a18f13b8636f05","message":"I used CalculatedProperties in a medium size UWP project and highly recommend it as production-ready library. Library wasn't updated since creation - but apparently because it's simple, free of bugs and doesn't need extra functionality.\r\n\r\nI've been thinking a lot about what makes Calculated Properties so good (besides its simplicity) and seems like I found it. Advantages are strikingly similar to ideas and recommendations described in rather famous \"Out of Tar Pit\" paper ([http://shaffner.us/cs/paper...](http://shaffner.us/cs/papers/tarpit.pdf) \"http://shaffner.us/cs/papers/tarpit.pdf)\"). Library does a great job reducing accidental complexity and state, in particular:\r\n\r\n* Control Flow - a major source of complexity - is entirely eliminated (no more explicit RaisePropertyChanged and plumbing between observable objects). No matter how many levels of abstractions are between dependent properties, changes just flow to UI naturally.  \r\n* It's encouraged to keep only essential mutable state  \r\n* It's encouraged to organize view model data in relational manner (ObservableCollection support)\r\n\r\nAs for accidental complexity:\r\n\r\n* In theory you may run into performance bottleneck if extremely large ObservalbeCollection used in many calculated properties. In practice it never happened to us.  \r\n* With Rx, you may need to use SubscribeOn or ObserveOn in UI thread context to avoid cross-thread issues sometimes. Very easy to do in practice.","postId":"2014_04_announcement-calculated-properties-b8f51692-2921-3ede-b5ce-0c193c49a06b","replyTo":"","date":"2017-02-21T00:24:39Z","timestamp":1487636679,"authorUserId":"disqus:DunetsNM"}