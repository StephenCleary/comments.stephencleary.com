{"_id":"b5f73ce9-60c8-3a1b-8bd3-aaff944a45ce","authorName":"Dunets Nickolay","authorEmailEncrypted":"jdOIdijxBLHaUoXMACEsjQaEKwKECVXS6Vont5h9vsQvbtTRDDKWrhMpMB2sPtXpubdwTeVK3A6/MDolNNFxBO8cqZ1aeWPLxuJc8gX7Z9z1pjZo467jCBdhJldhgWGx8a6TsAC0uS/7I8j83kR7IO7HUwbRfXWOcJ276Ih3zW536gi6VsaDhYQvu5FznFK6t4o9JFXRx6Qq6j/+ThMEbRcZwYw7p/qFQ/gtQSD2H9ebZtKnaq6S+vw4Mj7sT0GbxehGZ2ZdL7cpiX7uGLKZY9rL18DqWrJTTFTD05lijgx/jaVPQygrGLiD99DIMZRtdiThJRhAtamEiH8w4X6gSQKPjRou7o+gztoOyc4/YIDBxt8naMggdEF2MEeV3YgFwHtgax6wm/DRydbzG3JDmwWo2RXPN4r+ItycRcDVQHhiCtE3HUx8pHqFxDFS9jmgYUHUPgwClp9CLxGgcS5vdGjRi1le0wSbd61NBPetfXt8f/RLEDfhzI69Z1owpAJw8T3NprRzjjjGUoSFMdSen119PionPxXn2HaKOh68m2vtYLpHr1aFQ0Ckz19NCJXUi/8XFk2h7ksYwzKS+n0qziO1bG0SEO4Aq4NqXzW9EnpzgwTXL+Q1BVyO3kcB3gX4BMuKuzmoeXlvoFBtNsV0vqVFDEwtko9cGwu+BywsmyY=","authorEmailMD5":"21434f26c39dd6fb71a18f13b8636f05","message":"I used CalculatedProperties in a medium size UWP project and highly recommend it as production-ready library. Library wasn't updated since creation - but apparently because it's simple, free of bugs and doesn't need extra functionality.\r\n\r\nI've been thinking a lot about what makes Calculated Properties so good (besides its simplicity) and seems like I found it. Advantages are strikingly similar to ideas and recommendations described in rather famous \"Out of Tar Pit\" paper ([http://shaffner.us/cs/paper...](http://shaffner.us/cs/papers/tarpit.pdf) \"http://shaffner.us/cs/papers/tarpit.pdf)\"). Library does a great job reducing accidental complexity and state, in particular:\r\n\r\n* Control Flow - a major source of complexity - is entirely eliminated (no more explicit RaisePropertyChanged and plumbing between observable objects). No matter how many levels of abstractions are between dependent properties, changes just flow to UI naturally.  \r\n* It's encouraged to keep only essential mutable state  \r\n* It's encouraged to organize view model data in relational manner (ObservableCollection support)\r\n\r\nAs for accidental complexity:\r\n\r\n* In theory you may run into performance bottleneck if extremely large ObservalbeCollection used in many calculated properties. In practice it never happened to us.  \r\n* With Rx, you may need to use SubscribeOn or ObserveOn in UI thread context to avoid cross-thread issues sometimes. Very easy to do in practice.","postId":"2014_04_announcement-calculated-properties-b8f51692-2921-3ede-b5ce-0c193c49a06b","replyTo":"","date":"2017-02-21T00:24:39Z","timestamp":1487636679,"authorUserId":"disqus:DunetsNM"}