{"_id":"b5f73ce9-60c8-3a1b-8bd3-aaff944a45ce","authorName":"Dunets Nickolay","authorEmailEncrypted":"RkThegnXeiGJJ2Aqf74Iiq9Z/v9SYMsW2Z/8IygpJQJL/IVVf5LoaWsIy03BZP0Jzjs+8paj/bbHbPKTxWMDB2+cDgfOr/GTR09MNAuRCmJNXvNiXFIRcrRNNXtBjGp5w0QycfDy983VI8CAjJMnAmQytGk2wBVl5B4Ru9bdTGhIGkdqu4BRUdrRkrLKCo1l/6x84yuK54GiL5RiaJhyEkuAxPKOUHhBtzLKfglcBmiEA83ghLXAT+d8lhc5wjpkLwF6cgkZp+p9kz2zU6LwPaCbYnpb2xbtwdPMBtOXJmKLW2FnKVtALxSFmSXNVhz75CGKdRU0Kbwa6Tk0KcHVQ98ysOAxJdpg3+AkQih3xI+gipsIfWvvWIu2PKigoLeqsB7BcZUmUKMCVXgy6pkDEw4yuu1/q7NjNVj6XtvH4eFLtfmAvZyVEloCt7Rz2clymYB7pGzC/e0wbeXX5BNQMtYv3KDViF9o21Id1wibKlxsZ/ZMxFwZLAZV9XCXungMt8si8hAsDVxp0xPYuQRC6GZ5eYqTf9nT3NtCqWb7egM03NhFvp05x/LtZ9XnpR7UGXSpRckOcrpmWPakFjCC+SSJMyaghyo0N6T1FOmgEpiskygwiAhem662HepBeZlzPN6aKAhBolYNbL6BPo0kaTuTgj/4kUiYAoEDXKxw7R4=","authorEmailMD5":"21434f26c39dd6fb71a18f13b8636f05","authorUri":"","authorUserId":"disqus:DunetsNM","message":"I used CalculatedProperties in a medium size UWP project and highly recommend it as production-ready library. Library wasn't updated since creation - but apparently because it's simple, free of bugs and doesn't need extra functionality.\r\n\r\nI've been thinking a lot about what makes Calculated Properties so good (besides its simplicity) and seems like I found it. Advantages are strikingly similar to ideas and recommendations described in rather famous \"Out of Tar Pit\" paper ([http://shaffner.us/cs/papers/tarpit.pdf](http://shaffner.us/cs/papers/tarpit.pdf)). Library does a great job reducing accidental complexity and state, in particular:\r\n\r\n* Control Flow - a major source of complexity - is entirely eliminated (no more explicit RaisePropertyChanged and plumbing between observable objects). No matter how many levels of abstractions are between dependent properties, changes just flow to UI naturally.  \r\n* It's encouraged to keep only essential mutable state  \r\n* It's encouraged to organize view model data in relational manner (ObservableCollection support)\r\n\r\nAs for accidental complexity:\r\n\r\n* In theory you may run into performance bottleneck if extremely large ObservalbeCollection used in many calculated properties. In practice it never happened to us.  \r\n* With Rx, you may need to use SubscribeOn or ObserveOn in UI thread context to avoid cross-thread issues sometimes. Very easy to do in practice.","postId":"2014_04_announcement-calculated-properties-b8f51692-2921-3ede-b5ce-0c193c49a06b","replyTo":"","date":"2017-02-21T00:24:39Z","timestamp":1487636679}