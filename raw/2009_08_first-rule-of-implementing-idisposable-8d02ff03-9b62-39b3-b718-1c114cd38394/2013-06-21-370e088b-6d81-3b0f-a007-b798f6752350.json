{"_id":"370e088b-6d81-3b0f-a007-b798f6752350","authorName":"Stephen Cleary","authorEmailEncrypted":"bZp103LeN1SUoi30OML+vUuySZymdMlUuLa53h6dknodxCuwI7/M9ekKEfyuZ026g0dKWz4TvM0pDNirB/z1hIY2rg+sQOO0fwfnJFRfW0G+okpHkf+UaLb4VbqUZhvW5kTgMaUFERi5c7AuXbv1Y2WLaFIsLJEKsPfm4QeDTh+xx/+jOTg2YBGmzP6H8OYbni5Bh90Pvqw4ZKuPOzyv2PMmn1SA+wR8J0ICFepNTxtqFiUD0A0xVQOPxA2PGiPon5Xi/ww0QKxNzR6ka38/lBAzD+xh3F2xG2sC+Og0BR+sEiIs26mxI7hFTRUBDtPa3DLzPSUpLjpYxQbmaJfafumSQ2fqzkAFO2CQuktcI+jBoQC4/RmQjwKUk2Kt5guN4yFDp+RxfHE3OVEWf/o3A+/Yesj0EApxHHauPyPG+ZOFg/nBp1nNLNaQCPRfHBR6ojtYmRwvCBnSjK39y2PuuOtu3ffW3SnxfN7jakcr0tsIRCmhbJvtAr8ZWND7082PGZQi1setDnqtZpSl9uJsxxwvpmFC7Q7uBl+9yG0vMZszQbznCef+VBu21sLmei/lJa1C30oZA684YRSzdfo5EhX5KYFB6HDJ/kcgv7M4p+GBt8xfUqsL5WhZ6ba7r4DasrzsXQ2moNypZ0s+3V/hULz/WvM+Sef7nCmwSZ7xfns=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"When I use the term \"managed resources\", I mean \"managed types that implement IDisposable\". So String/List/Dictionary are not managed resources. \"Unmanaged resources\" are types that represent resources outside of the .NET runtime; usually, this is just a single IntPtr, but it could be more complex (e.g., a pair of IntPtrs, or an IntPtr with an int).  \r\n\r\nTo support the literal meaning of \"RAII\" (resource acquisition is initialization), you just have to follow the IDisposable rules on this blog. If you want to use the RAII pattern to do something *else* (e.g., take some action during Dispose other than actually freeing resources), then you can use IDisposable. These blog posts only cover using IDisposable for resource disposal; you can use IDisposable for something else if you want, too.","postId":"2009_08_first-rule-of-implementing-idisposable-8d02ff03-9b62-39b3-b718-1c114cd38394","replyTo":"","date":"2013-06-21T18:22:18Z","timestamp":1371838938,"authorUserId":""}