{"_id":"435017d3-5032-3d06-81be-25c45c738b16","authorName":"Stephen Cleary","authorEmailEncrypted":"JdusAApChY5pGEVPLGc282cBd4FeX79RIhmAaSF6zLHLDs749mTm8su1O+WkKNWfXdE78PGDlrLbJbCf4lPygfmwK0DP47SuhZTZcHLNidWycGPkGwIY4fNF6spMYe+NxeyVM4F8vs+/Hw9qgwZ2NlQVZPkKfYF4pDv40U9mk/KPvf253oTRVmRQCo1GYYffH0jg8LQF25ab3aK8Fcdn7it5cCFx1tPK5khtQk+toTjuszv5unE/uFFpFTKIovvqkSacUMc2KCZwgivhcVeKZLHUeTwbgazURjZmZkVDGh+2t9Yf25csOayhEvajwuTnxLdJHqv/KbnsUuwbkADASGchEXsU8oDR2M8xur7fTkKreZ1mF/LsfCfkoG5YqQg6OI6WL6/7Ozgk8mNNF8/Ry3y/evVkHieELcvOTnk0Qx/fVfUpBKscqgg7W/oMQEgmXuXIyCLplTGC/bxOK9pOLVecS+4kniGN0DZFn+x3yLjF3qUty+Sk/a8DgIXBbnma9df/McdKAyMtqbPF0hA0UV3E6WrWnpp6jpQu26NgelerxjFCvC39YMFjdOhyVpVmtpHASk3GnETR6SsXMhz9BIert8Bcy2rCrfE1xHRSRJxPleCWo7N0M8zLzcp646Q56uAanUYY/ScLSwhg6DpcYBGx8diXWKcLCKs421Rh9AY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"If unmanaged resources are properly wrapped in a class with a finalizer ([http://blog.stephencleary.c...](http://blog.stephencleary.com/2009/08/third-rule-of-implementing-idisposable.html) \"http://blog.stephencleary.com/2009/08/third-rule-of-implementing-idisposable.html)\"), then all resources will be eventually released, even if you never use \"using\". (However, I do recommend using \"using\" for every type that implements IDisposable, unless you know that it won't have an effect).  \r\n\r\nIf you don't have any resources (e.g., just String/List/Dictionary), then you don't need to implement IDisposable at all. That's the whole point of this blog post.  \r\n\r\nRegarding DbConnection, it is true that this class (somewhat) violates the IDisposable contract. However, it shouldn't affect you at all. So the best way to \"handle\" that scenario is to ignore it.  \r\n\r\nNote that when a program crashes or is aborted, it does not need to do any cleanup at all. The OS will take care of that.","postId":"2009_08_first-rule-of-implementing-idisposable-8d02ff03-9b62-39b3-b718-1c114cd38394","replyTo":"","date":"2013-06-21T21:36:31Z","timestamp":1371850591,"authorUserId":""}