{"_id":"5fe64ce3-b81e-350b-8d76-70f3da874932","authorName":"Stephen Cleary","authorEmailEncrypted":"GMARLTXbYTlPPC/vrvdkKuVEgsBpMJ10x7DNhM79F70aEkHVJkrwFfLLDwuwpk4YfPyEPQTF7V17umZ/dTdvSyYOh1+04Qd3yjzaYoiISwwW67JL+7Zoh2OUVAon7iKwbXIeILAwZDHhxCkfGyU8l+MphNFVWQ8KzC5izbSA9b5EWzpyCSmP02V4P3QDK8A5+B3pL2gFzH4B2wI+/L0hNrO+C99otKN2HVUAMLRHLkV+zg43bR0Vo8daljXWR5G65N6Q4tFG7gcLGoranLd7m6pNubOWMZZAtxU9ut5ta7uPpv3z2P71Y2xHWopocX3WjSN9RE+Dn7LZW5X+qpyvKrCnDjwPP/75mqwN5YLkwUIPqIjefisBIcLtGc7i57iFFjNkQjNl+TWVHBitZtlpFs+Dp4SxUyO1lgSMr3h7p3o5OafRvBLJyx2fux3pbY4uG6hNxnjDmlKK1OUGiWmTQj+dOpg1mUOKibX+dCxeXpC0vnCplfQtY6Brzqbsfd1sAAWIGweqQADxD9DjOzRyP9SQFzQ+6RDX7K6SbkZC4daObLnN6kQczw7BtCRDUTkRRES81pwMH+E1pwt+BSVIHCvmkEafTxKOE3Pc5OoRqBxfX2Omsl7sn1lcuKCHWpLxekdQlXi0MCFbFKm1/w3G3gp2PQTqs2drvwrob+G54+Q=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"There isn't a clear consensus at this point regarding event subscriptions. There are three different approaches that I've seen:  \r\n1) The class providing the event treats its event subscriptions as managed resources, unsubscribing all of its subscribers when it is disposed. [This is William's recommendation above].  \r\n2) The class receiving the event treats its event subscriptions as managed resources, unsubscribing from its providers when it is disposed. This pattern is commonly found in MVVM projects, and is a little trickier to implement.  \r\n3) The event subscription itself is considered a managed resource, initially owned by whatever component created the event subscription. This more closely follows the pattern used by the Rx framework.","postId":"2009_08_first-rule-of-implementing-idisposable-8d02ff03-9b62-39b3-b718-1c114cd38394","replyTo":"","date":"2010-03-02T21:03:45Z","timestamp":1267563825,"authorUserId":""}