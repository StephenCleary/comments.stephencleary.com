{"_id":"5fe64ce3-b81e-350b-8d76-70f3da874932","authorName":"Stephen Cleary","authorEmailEncrypted":"mcjt1CZKBQJmUILk6Idkw5VxcoHlMBn+EBR1UA+vQEaXXVa688yaTzGbn8LAJYPZGNVPvilKM/kRXVpQ/nxYs0Masx5d+lMAx3STQy/QvzJcMzfBTM9+gTAVstMbADZjAnwiU5sBk5dpc4usZDtIhmnRtCEZS5r1QrIzWoD1mEesosTZaBdak+P59i0qRfEWwwT203yqm698TvIygkUW7imaMZt34POD2ZWzcVmf05kXcOAAeyCq5+gnstmRaiOqedutBiGSg4sNMcGTe36f5owPPztkzFBQ6YA0LjUzDFP6NxAzDa+1GEu8OchunN9dFPBth8nfTsGsDRplqg7B6M5du7r9+L3Cro1w66ZuLA4WqYrLyfa6NKHgblCUK2530dLjYfCh2Q7kLImPBYD1bjQZk/EXEjAUZ48guKffD5YEzNQVdvE//gtDqDYC7FhZw02LD8ZYgIxJ5Y94TyocC21xvKWXpqDcrkD9Hj7bVfW0eywkH/h2w4aK0qW4kJIvx4gThUiupmT2WxLnzO/dOXPUi083ZaCsfRafFxOTufRu7g9n508qCHZmFEy6XBHm657TZL5Oj9IOifyaw1tPE0Z08ERKqAes7UKp+YeFqGKFVUCu3UKQoamaclQfARR8DmdwcyRvOM74XUEEeL7LP8oBoZgU5iTuNp7kpkjXcmo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"There isn't a clear consensus at this point regarding event subscriptions. There are three different approaches that I've seen:  \r\n1) The class providing the event treats its event subscriptions as managed resources, unsubscribing all of its subscribers when it is disposed. [This is William's recommendation above].  \r\n2) The class receiving the event treats its event subscriptions as managed resources, unsubscribing from its providers when it is disposed. This pattern is commonly found in MVVM projects, and is a little trickier to implement.  \r\n3) The event subscription itself is considered a managed resource, initially owned by whatever component created the event subscription. This more closely follows the pattern used by the Rx framework.","postId":"2009_08_first-rule-of-implementing-idisposable-8d02ff03-9b62-39b3-b718-1c114cd38394","replyTo":"","date":"2010-03-02T21:03:45Z","timestamp":1267563825,"authorUserId":""}