{"_id":"5fe64ce3-b81e-350b-8d76-70f3da874932","authorName":"Stephen Cleary, Nito Programs","authorEmailEncrypted":"NMiH03NlLeymaRtErtLLFEWQ0XL8YNrUa2lsmEoZUgduo1ckrBpCyjY1U3UJhHpiPVwVsIQA07slLTk3Cexn/pLRp9A5WowwKTUTlXxnak5cZHI9Fw9vT0w7VoZe2j83iUBIR8OVGjm2DH7WoNvcH57v0Dkaza9iOaIslqr7bKARawCxHVkC7KjOYaD9NNT+Mh4hbF9FOj0ZOx2NJSE68qBChbAcW4Mi2LvzaDFdYKmK0arrzdotIZ2J6EfpDvBfaV7GRdnfoVHMwkxacUYP3aXDlwwW/trhXP8Ip2ExIB7XUCOC/jSXoo8Oz34+NlGuUBHx7CYVNx1yKv03XjYxZwBvMTGbMAwOEKiEImsB0u+6Hw166au3tUgdJKtKQaMmf63GtvHfsJdjde8EZD2KYFrAOweqsPtRtQXyMjkobiXc/qLw0GwKFO0FN93WORpDwJVYjoNqR0BI5kObvwmW7OJveTMpCDI8MS1HUewl6GxCrjwFzJE4VquOgZ//ysu31bJwLRo6it3f31lZgw1qWiAoavBdLDUyD4wkGNG9/tnmvV+gF2VRLFNaZ3LGM3S32lbJa1j8nKpX7Rdb4OjuguA0gIUzroHljeTgEzEFyu0H5w7XJq+LTQLHjpr9enXIrasWJk0dz5Yy9kgg+eak4+Af+3EoJWEnukZANM7s+Qo=","authorEmailMD5":"6d10b20722189b4c5928e1e9fb2363ac","message":"There isn't a clear consensus at this point regarding event subscriptions. There are three different approaches that I've seen:  \r\n1) The class providing the event treats its event subscriptions as managed resources, unsubscribing all of its subscribers when it is disposed. [This is William's recommendation above].  \r\n2) The class receiving the event treats its event subscriptions as managed resources, unsubscribing from its providers when it is disposed. This pattern is commonly found in MVVM projects, and is a little trickier to implement.  \r\n3) The event subscription itself is considered a managed resource, initially owned by whatever component created the event subscription. This more closely follows the pattern used by the Rx framework.","postId":"2009_08_first-rule-of-implementing-idisposable-8d02ff03-9b62-39b3-b718-1c114cd38394","replyTo":"","date":"2010-03-02T21:03:45Z","timestamp":1267563825,"authorUserId":""}