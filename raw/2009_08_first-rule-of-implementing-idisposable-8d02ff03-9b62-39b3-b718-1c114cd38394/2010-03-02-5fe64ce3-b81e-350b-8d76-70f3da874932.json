{"_id":"5fe64ce3-b81e-350b-8d76-70f3da874932","authorName":"Stephen Cleary, Nito Programs","authorEmailEncrypted":"iCXS/Mv41N/0kmdmFooIDaugFeW1XOYe/aQXPseXGZusquBAydrqq9gP9q/lbjhaEGxbODhudkhSAzvPeYTtWlYE65UqdOBVrO1QUqCkcxhkIVidN0b8aI3wNjBeyBbcq2T/slacwb/NfldSCpi8xkne57jeKwRaIYBa35fEjQw+fh4YdWvwRyYC9xkiqZn+xaIda/7zypkCTzPhAQA4Qv9DUDKpM627KAt03RXAft5Z/U2zIcoWiLIBaFjBXackpTVVDxz26r2ha4la7WO1DXDYx7S4d8z+Pzk/8LsTOQp4gIIL9JGcJPG+SIni1lKYFryxXm5hEAlQ+7qsoh8bHWDZeXIQpsLDKLCNMqrPCtNv1jsyu4YrXbfbwK7DX8pa/74U066GBszgxJTMDDw2t2Q3RlEkkXeN92ub8iPORF5dktD1RjfmhMjrFkS+qQFp4ww8+RC+FRMp9l2JvRYPELMqmCokQES/tC+c/vDTIiMz+nZ3Hz3YymqcyM3sqb7kleamkZDAAd5rEZJF676lwFyR1Qd+LZLL/6qeZ6Kbq3Aa4fsQgO2L27ht0mYIcqBuoJKvskQbwQYGH5LFOOX5LT6cy6Ak6nyzYv/NL9qWtuAn5pA7mZmHWNOElTLHFzulIBiw1FqB5nN7Rk1FeFHV66SET/gVLc4U/bra9hERcyo=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"There isn't a clear consensus at this point regarding event subscriptions. There are three different approaches that I've seen:  \r\n1) The class providing the event treats its event subscriptions as managed resources, unsubscribing all of its subscribers when it is disposed. [This is William's recommendation above].  \r\n2) The class receiving the event treats its event subscriptions as managed resources, unsubscribing from its providers when it is disposed. This pattern is commonly found in MVVM projects, and is a little trickier to implement.  \r\n3) The event subscription itself is considered a managed resource, initially owned by whatever component created the event subscription. This more closely follows the pattern used by the Rx framework.","postId":"2009_08_first-rule-of-implementing-idisposable-8d02ff03-9b62-39b3-b718-1c114cd38394","replyTo":"","date":"2010-03-02T21:03:45Z","timestamp":1267563825,"authorUserId":""}