{"_id":"aeb8bdc4-fe97-3356-9d73-eee63239d826","authorName":"Stephen Cleary","authorEmailEncrypted":"BEK0sWRCiMf3tLo1/FFhe+j2DTcAGC6uFHcjP1c4IK0LJAy0IFaIQzmd+ZcnTBliRW+3MNKgr7E1L1Gm2NjmY5UtQL/hKigis2Bb68Fwg2yaKxbgbf8CMjoknEFukM5nSaYlTAcpUO4ikjuwGTxPU9zkARl43qVJpLMZen0Q+htCqz2Qqyen0eGzo7vSicEEDqeW6AGTGjXI8n/LwB+PKhkqG9kSTn1U1YUzx8kWWAEBoqUg3M+s9vZpZsJNAhLArXTBB6Tgy4pMZsDWEuMZzk6N377AA4J628wCcaYsCleBkHLz8YUCVp6xc1yRvKpjupLpcLoxS95TsvDBQ5AYBkE9WW3rVnw/KC9SwSyKB22KMReMx0sXqYCB7fk+XGrSI5B1EeT8WXcbEQayIi9H6FCOIeWBya8HmjPUGQRixtEDonypViL1uTCJKfltsK9j92pYlCuLEGfipPCbXmHQPWHX++wXEkSBPwYLOuQgR1JHEmaY/luPGqtKzsgQa002J6GMy5CwyV2IwIYHvGCGhf1QvVysRTv4/FLuCl/DGLiOWFVouf2iRp+4xGpV0kMzk2R28LMj1ZoPo/Ytfqr/aruK3C34LUJtyLaU+KmkptojEAEmd1nrPBkTa3nIVJpqQYviE40IhP3vEyQoeqoWP+IkehtE23luIl9LfVBfRXI=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Essentially, you create an `AsyncContextThread`:  \r\n var thread = new AsyncContextThread();  \r\nThis creates a new thread with its own AsyncContext and starts it running.  \r\nThen, you can queue work to it using its context's TaskFactory:  \r\n thread.Context.Factory.Run(...);  \r\nWhen you are done, use `Join` or `Dispose` to cause the thread to exit.\r\n\r\nIt looks like `Factory` won't show up in IntelliSense, but it is there. Sorry about that - I should have added `Run` methods to `AsyncContextThread` directly when I hid `Factory`. I've opened an issue for this here: [https://github.com/StephenC...](https://github.com/StephenCleary/AsyncEx.Context/issues/3 \"https://github.com/StephenCleary/AsyncEx.Context/issues/3\")","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"cda06c30-3bf3-3106-bdf9-ed434a35b57d","date":"2016-10-04T17:08:27Z","timestamp":1475600907,"authorUserId":"disqus:stephen_cleary"}