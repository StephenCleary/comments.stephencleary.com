{"_id":"aeb8bdc4-fe97-3356-9d73-eee63239d826","authorName":"Stephen Cleary","authorEmailEncrypted":"Dw3gt/xentYUPwX7qpSMX4syedz/Cm9s8Xre6fkyN6XmAuMI75JQaOUQWU1NuYjykTpMBE4dMnS4QzRqQ6EsJL0WKqse6Oi175kKZxQuXQoWOeQsWXYkDGnMF2wmWEO7LmYW60w6I8h5KXpzvweFISyukr2SJ2DqFTJsWAXoYBJOIG5ftfIUfq+fLGCKDgqgSBL8jayAYGH+/zE8RmQvN7At7T2mj6S4R5gTJcaez6PVQay69pTqa0crWsvp15LVhpF6uE+bupNTPimO07HrZ/raLWyZpzQ1RwejAaCW9moJ1zSfyu7gVvtYU0hdy75cj7S7ftyq7KsWNQzvSHVR77C6SoqSRJgwnkxrD/JuXWuyJa8fhw9hY91Y7LJWokkEZDPZ20nbtDLTdqiWEeeso10yeNGhWitzIkIksREEOwCOezE1yumhwFvNSB47XQoE1TAykfZUWa+ne/TE6SDsc1lT/9/m/lVvOyJVw7ugIHZb9J/wvt2m5Np71tolHipXNsiHxxgtX7/DPoA7B/bVhreP2S3tXpd4nMOEEjlxBP8Ne0nX645vpjcgefBYlnW/jSxt6MtIOkU98dcaj6TPXqt+NE4HFkdXEdGvWHv/P9AXjBaf+wPeEkQyYydkY0ulvZZ+s8AY/PuWWxtQqkwkNk0wvVIfowZ3qq2FUl+ux1U=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Essentially, you create an `AsyncContextThread`:  \r\n var thread = new AsyncContextThread();  \r\nThis creates a new thread with its own AsyncContext and starts it running.  \r\nThen, you can queue work to it using its context's TaskFactory:  \r\n thread.Context.Factory.Run(...);  \r\nWhen you are done, use `Join` or `Dispose` to cause the thread to exit.\r\n\r\nIt looks like `Factory` won't show up in IntelliSense, but it is there. Sorry about that - I should have added `Run` methods to `AsyncContextThread` directly when I hid `Factory`. I've opened an issue for this here: [https://github.com/StephenCleary/AsyncEx.Context/issues/3](https://github.com/StephenCleary/AsyncEx.Context/issues/3)","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"cda06c30-3bf3-3106-bdf9-ed434a35b57d","date":"2016-10-04T17:08:27Z","timestamp":1475600907,"authorUserId":"disqus:stephen_cleary"}