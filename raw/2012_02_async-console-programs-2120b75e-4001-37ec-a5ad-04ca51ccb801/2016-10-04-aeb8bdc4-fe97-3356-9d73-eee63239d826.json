{"_id":"aeb8bdc4-fe97-3356-9d73-eee63239d826","authorName":"Stephen Cleary","authorEmailEncrypted":"PZXYOyx2pfIK97QeHXkZm74f4fXLFBmax7D+zFBMm7jdibVjEnoX+wun+NGRbVSRBGWg5hNCEwfSJjdt7l7mnUjjzM2677uLVn8iW6SgdfajP1ITsqU6UPvNpkzET00EWxRFYiDhOHIu6TmaZZYmB+98e5gaYSnYd0J4BhqBBcbj6NcooOSmEvimsDoXJIvRcJRaekGzP7AI1LTEgdinjnD7eY971z7NWsn97DEpjSGXs/5MF29fHQ4zJ8LPexVy+YzIPGClaOqYzWb7l5N3BLpuu6cwR0pKhuRLZTT6NTxGTKDnxSKKVVGe4F9BQU/tEL8K9o9LqW4+F+pgQKmx8xhEjkMsXE5jJe/LDBjuxpygda0tl76qtoosVdDOrj2IJ0x+59MkU6gPAw98bOlsPzIzrNfxz2Mctr7dVL0mPPsTZ3h8+/IYUX3HnXlb2uLnJi2uRiJs/+Sfns71EMsm75b4TdivVGAX6GcxWr81wlwRJm0/yK3TWCIdYkCwGjZ0tqgxe0+fbyeF6w3i3+jyD7wLuak0zCmQKTECwAuzagxA4C+MnOBnq/0yqKxuKOvlARLji8m6I5Tz+W6W10d6dxfl7rFncsgIbUuRPLdgScBUEoK7kEsC0kIgUx6wrVhCwFj2oVRvuFWlYZkeBE3aDQ1te7vpMH2D7RLo6SIy2PQ=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Essentially, you create an `AsyncContextThread`:  \r\n var thread = new AsyncContextThread();  \r\nThis creates a new thread with its own AsyncContext and starts it running.  \r\nThen, you can queue work to it using its context's TaskFactory:  \r\n thread.Context.Factory.Run(...);  \r\nWhen you are done, use `Join` or `Dispose` to cause the thread to exit.\r\n\r\nIt looks like `Factory` won't show up in IntelliSense, but it is there. Sorry about that - I should have added `Run` methods to `AsyncContextThread` directly when I hid `Factory`. I've opened an issue for this here: [https://github.com/StephenCleary/AsyncEx.Context/issues/3](https://github.com/StephenCleary/AsyncEx.Context/issues/3)","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"cda06c30-3bf3-3106-bdf9-ed434a35b57d","date":"2016-10-04T17:08:27Z","timestamp":1475600907,"authorUserId":"disqus:stephen_cleary"}