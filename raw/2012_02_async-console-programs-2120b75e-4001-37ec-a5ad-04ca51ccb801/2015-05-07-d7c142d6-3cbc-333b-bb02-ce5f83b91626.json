{"_id":"d7c142d6-3cbc-333b-bb02-ce5f83b91626","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"I use either AsyncContext or GetAwaiter().GetResult() in my Main methods. (GetAwaiter().GetResult() is essentially the same as Wait() but doesn't wrap exceptions in an AggregateException). It just depends on what I need.\r\n\r\nAsyncContext installs a true single-threaded context on the main Console thread. GetAwaiter().GetResult() keeps the free-threaded context that is default in a Console app. If I'm writing proof-of-concept code that will eventually end up in an ASP.NET or UI app (with a single-threaded context), I'll usually use AsyncContext; if I'm writing a real Console app, I can go either way.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"7cb57766-4688-3d38-844d-4cd709a248d4","date":"2015-05-07T10:51:51Z","timestamp":1430995911}