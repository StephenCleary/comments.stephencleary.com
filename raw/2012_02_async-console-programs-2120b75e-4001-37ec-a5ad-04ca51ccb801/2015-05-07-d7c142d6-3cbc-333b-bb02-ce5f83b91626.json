{"_id":"d7c142d6-3cbc-333b-bb02-ce5f83b91626","authorName":"Stephen Cleary","authorEmailEncrypted":"wqZno9z0lly4MSBgN5v1/sgYhsC/Qmngmm/j9qeRI5sENUDNWol6Bu7l0MDO8WFLKSE3wnTqQC72ugpTCz6Cblrv9vmumpmeGxAfpswklRo6yEWlL01br4wwwJLYYeyC8UM5wQFLt7QkBX8MSjgDyFw2mELc1ZiTrZsfGvG8agYzXDp1pDbDdsTlahveGQU31TXwRUtSZDVUPZPThSQ+rriV5Qou/kJjdn5Hi3l4vSkb72COwlO4gRhosxePY6mnOvC/Oe/6w+i+PiiMpeuJqineFH7Fekz2Yqg0zWs2okzC3QK1ZBDQlP11syhVI8OqJhBfamSbnE89q5FQ3dFWtxrQuESo8160DMIX8dwE/deMFH21CDfLY5FiY4SLcVklu6EY4J3WAzhA5YhMLTpYlGTGCKsfW6M7M7TIvf4COHfq3L+a5J7w0jubM+nPhX3v6lZhuGor1vl3zC5sT+p8GHZWzM4Wdj32atTiBbYuMzzQ396FCO/SlNme+U5KtWR9uH153AgRn5djIYVE9sgB4DJX7gH6Pry7xLuk5vrRvjWuE1V7KX9+xL5W0o5s+SynioaGihIldLhHxmECEqH1WYmtBetI8+yJDr3OA/vGjTvlTV7vSgrN7x5SugqoeCpyaOiz+pjbeLJ/nQTSyWHYQ2AD9K98Y0GkyIzEd7IiOvY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"I use either AsyncContext or GetAwaiter().GetResult() in my Main methods. (GetAwaiter().GetResult() is essentially the same as Wait() but doesn't wrap exceptions in an AggregateException). It just depends on what I need.\r\n\r\nAsyncContext installs a true single-threaded context on the main Console thread. GetAwaiter().GetResult() keeps the free-threaded context that is default in a Console app. If I'm writing proof-of-concept code that will eventually end up in an ASP.NET or UI app (with a single-threaded context), I'll usually use AsyncContext; if I'm writing a real Console app, I can go either way.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"7cb57766-4688-3d38-844d-4cd709a248d4","date":"2015-05-07T10:51:51Z","timestamp":1430995911}