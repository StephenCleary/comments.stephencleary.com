{"_id":"d7c142d6-3cbc-333b-bb02-ce5f83b91626","authorName":"Stephen Cleary","authorEmailEncrypted":"l+6or47agpObb0Wi+uFDTzmJJRnXcuwAWw8MHdYXwTOLVfoCaO2rk5kKwfsi75lQxH7pY+5sTtcDXI2bQsw2ngeQla9DlY/pp8BBZEwf7x1NvaE/wylPZVC8CP3J/gQYAyyUDBY5QziUNBN7vI/I4bcNAWTbc7EhxRo50F6hlcVA9NbnsHWnHfkYm3Y7p5Ng6Yq1P0dwDb8P7euZIlEVp3yK/Ayd5FKsaYs3HltfA63rrVqdbbr56x1n0O3uMnx83f5C8BrHZfcKW4l2fhLxZmsr7FFo9RrKp78nfuUA99r4fBnZXLehYy6kbhtC9i9eVNY3i/BpwANguDi8+BJMod3o/OzAeL+UZC6tdG8JiQUKrl4JZl6Cy0syik7a+hVdL7zl521KaIyWvrto/tds6r3fT+sJxFcYvRYk4P/JFtFkph1jvrCX55bv7C73OFsH25w0o+g/8NOfzclTPtYh2R+jMPESzcup+zFJrrXXaZoSlUrsgO8KFmidbYGdwk8JIw4N6VUHQwtXoCTud6beJDDjYlj4e4UGdp5CWaT14eqltfdq75NB8A594wpmA6P562Tb02QiVb9ZpDPmTJIgkx3Mb6Lo5/3nkC0vdVNn6jxc08Klbk68HpR+p13l5PcKMmNYRReKQ6jawuZuJNCN7vEH0fAezbpEO5AIti3VJ7k=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I use either AsyncContext or GetAwaiter().GetResult() in my Main methods. (GetAwaiter().GetResult() is essentially the same as Wait() but doesn't wrap exceptions in an AggregateException). It just depends on what I need.\r\n\r\nAsyncContext installs a true single-threaded context on the main Console thread. GetAwaiter().GetResult() keeps the free-threaded context that is default in a Console app. If I'm writing proof-of-concept code that will eventually end up in an ASP.NET or UI app (with a single-threaded context), I'll usually use AsyncContext; if I'm writing a real Console app, I can go either way.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"7cb57766-4688-3d38-844d-4cd709a248d4","date":"2015-05-07T10:51:51Z","timestamp":1430995911,"authorUserId":"disqus:stephen_cleary"}