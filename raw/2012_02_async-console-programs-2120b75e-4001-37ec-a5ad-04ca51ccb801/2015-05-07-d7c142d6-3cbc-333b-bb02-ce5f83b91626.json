{"_id":"d7c142d6-3cbc-333b-bb02-ce5f83b91626","authorName":"Stephen Cleary","authorEmailEncrypted":"gwj0+4+4NFqilp/7UBjYX2RgISOGOinFVN/4LKR7TTriq2LplY+EiMQsMil205MKYOqqkkYE6s76sxmupreZ6wg1uyThm5NqaaaAFE2zmTU01tUlmIIq7Agbq42KBiQ8F5A1xMYNVSYX2llQbVyMudROES6ZJKUt1KDIlWHpWUpyWUEsEuf3+TQdiUtS0ru+X47JHVP+gZAp+wurRcbF+mWjmt7w9ZAt4elR+hZZUfXpGinulISV9L/BKwaBOqDtvQuk7Ujfl/MQ2Cqf/6oeeN+JoxrIP0Ue12FROpIM2JxtwM9M9kwFL8X+Ry5DymuJ3McrLFDMPKvTLVjvqT7MXTMWLrHswcBu3YHqkya1qRvXzCpPaei0rcAPITU69C6qTn+7KrMYd3a88KET3gplbEC6GaxXz3bvdPXFQ3SJAPDA+fNYr+DhLE0CeKsA9Bnja8lX8AKuljTOZ5+4j58mkpvjz4DXY7SrlHX2R1xIvnISQhC02uovK79lZntew2SnxjA8B5sDJ2yupZJNA+TTZB7bEo+McCiF8icca0uOLnenVCstIySnjU8G1reOjaEioBsqmw9YcP4tDsVomT1VV8NxpoapMGe+tH/6+pWxR9fYdRDv33ByVdAOQ00I7Yw6v7d5tyTTiyon3wxeECREHWZ2EIeyhVJs0mi+YgMqKNk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I use either AsyncContext or GetAwaiter().GetResult() in my Main methods. (GetAwaiter().GetResult() is essentially the same as Wait() but doesn't wrap exceptions in an AggregateException). It just depends on what I need.\r\n\r\nAsyncContext installs a true single-threaded context on the main Console thread. GetAwaiter().GetResult() keeps the free-threaded context that is default in a Console app. If I'm writing proof-of-concept code that will eventually end up in an ASP.NET or UI app (with a single-threaded context), I'll usually use AsyncContext; if I'm writing a real Console app, I can go either way.","postId":"2012_02_async-console-programs-2120b75e-4001-37ec-a5ad-04ca51ccb801","replyTo":"7cb57766-4688-3d38-844d-4cd709a248d4","date":"2015-05-07T10:51:51Z","timestamp":1430995911,"authorUserId":"disqus:stephen_cleary"}