{"_id":"8702cb01-6ec3-38bb-a6b0-d4c43d7a6b41","authorName":"Stephen Cleary","authorEmailEncrypted":"GhGhXt566GW5M4PBdB74czh9530ILLTgwUnp+AWzFMn0IwlqGkD19oKo0BXpuM0uGqHOJekT1u4eXohy1bB1kv8jQ8PxMqHppjulvned2G02HW2gflC+WYzeikjlhJfxgl4zwvnkpdxUxZZOYdGyLPR66Wm6Fa9eWMOw5E34n5d+V8nI/t+qfVCzkLBpu8wnmKEORwfdyMQzHKBEA+v05RG6MbJXCPpiGpRZRNc+fXEkrm8p++1B4hg60ktgA+DeoHtzUwICxhcbTa6sQpdpyeWDX1dbnHXnFvFR4kK7pS07Z2S9zvgtbh+E8gtuC8a++/FhGd1vABU+YIKfNjFkwJTo5xUlsugdTaKV4IORXezv7xJL8vYDNRhqo6ZsSiRNQiwyfmQCQ65bZ8PvribumcgsJilUDLEZLLZqvZc19U6Rk9yMpaic4eu4o2ass5bmvtqE7QiWf2Bckc/gv0qgXhm+fcck+b01sptn7/CSmt/FfIsBcuTUeg4N6ZDiQU8VNFl0LlxEgtNrdlaX3/eiZRFHWwrn0Qn3z+JFethRN+Oy/ykVHqskl83L0E8mxwHPXXnZTHTLaWCI16RiP8hoSCZn0FB5oWgGN1avsotE+UOir21ekCnWjcnHsaUjD7HXtLJka6G8EQahnQc9LCaolE+OzP0coPHbuILoRFxteXs=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"I can't say for sure, but I *believe* that a lot of Linux I/O is actually fake-asynchronous. That is, the underlying APIs are synchronous, and applications have to burn a thread to treat them asynchronously, thus creating a higher possibility of thread pool exhaustion. The core cause of this situation is the Linux driver stack, where drivers must support both synchronous and asynchronous operations (in contrast, on Windows, any I/O data transfer *must* be asynchronous; all synchronous APIs exist in the Win32 layer well above the device drivers). And asynchronous drivers are some of the hardest things in the world to write, so Linux is trailing Windows in that area.\r\n\r\nMy experience is from over a decade ago, though, so that belief may be out of date.","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","replyTo":"d24b6398-d50d-3099-98d2-2da41b5e1bf7","date":"2017-04-04T12:48:08Z","timestamp":1491310088}