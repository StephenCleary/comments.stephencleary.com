{"_id":"eb33fc70-ffbc-11ec-8278-c132177ae00a","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","postUri":"https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html","replyTo":"cfeb1fe0-c98c-11ec-a0d9-93ef9019f827","authorEmailEncrypted":"LD4SckB7CmDSTG8tW+qCfoPR6t+IvTMxYXZ46d+Tcv1PBRdc600JERgnHL6+fvhQW4C3hDHIlI7l+nz67MECt4b6GTSCaiD73gCJjL1SVpH/lngA6ynpp+QSgTUGIpI4YvQuYBQmIdxiNxXCK12b6cdwnJDG4L7TJ+iWe7vmGaiIBHZ8As79kqFuQUQYu38+quCTwGCZINSOFx6CMfgNPqo0RBvo/ohSJLgHHx3P1RQfU85AXvGF12HBYtKiMU1+5F6s7Twth9POSmWpoJ3n13bwJnGf02X9fYNqz6NDGCa0Y8RBOaczaxKPMCWJkuqXysINeWxunb90nJ5O6y5fPxzNab/mj5K3xdVxpVUX+pHhgKAzVaD3HEKa+cLqBbIEEDtxevUQsN61zD+xCn8MKqsl6b4mKTokmzvTwEXa/kRxlJIRUOJ34gPPB0seScj0U844ECObjXOXEvJmLf3YSpzYDX8et83fd2LH6b4JwLhOHEnsY5i2S5QY5dS3dlQbiVBNylAxWzvb2JOppRZgXaD8JYyaJgeBeVZDLoTTNBylYQO/5FkZXsQLn5JmeYbDcTymjnRa51+cSOFdKB/wOShKUF+zT1IpvpzXola+D14z65DvTyAz35NupQWwfLavXvnUA/mDB0jJnEmho/rKDojEXJazdWku7KRwWyeQgMw=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The culture is flowed by the runtime in .NET Core (and .NET 4.6) - see [these docs](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo?view=net-6.0&WT.mc_id=DT-MVP-5000058#culture-and-task-based-asynchronous-operations). In older versions of .NET (full framework), ASP.NET had to flow the culture explicitly. I'm not sure if identity is now flowed by the runtime in a similar way, or if it just wasn't considered important enough to handle in ASP.NET Core.\r\n\r\nI'd say the request context is different than the synchronization context, though they are related. The synchronization context is used to execute code within the request context.","date":"2022-07-09T19:25:40.870Z"}