{"_id":"96345c90-d410-11e9-985e-d7733b393af6","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","postUri":"https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html","replyTo":"42e82fa0-d3cd-11e9-985e-d7733b393af6","authorEmailEncrypted":"Q0HH7HcSnN1J6JIaWrCtS8MgasapxHfhY7Vvj9EnXqxO38M5A2HvEVA++fFIbvuNCG2px6PBlVvDKv5nRudn1+KGGA6bH1qZ7OuMh6v4t4stbILfuGi4oR7CA0x2/Y4/0nLLdJociPvUzwgp0lNn0MSWquwIw7cKfhEtAKfrD498GGu3IQfmSRA2aKP6QqX6XDJcdHR1iLu1KGAKlCSf8NnBRjookykM7NNdnI6KigOl8kdjmcZcUjgDSXSj3egFozrukj7BeOGf+1xYe+hMGZ1EYOYtSHCP1rPJk5piM2YUcD9G+Yytby/xXKRxQ+S3nTDVBcXQPpddKR936CzJ7/p5BuoLqkljUMFwFLIxJwH/9nUySz5j0BIjjtZChkd+i4Hrw9l33sEVzDa4+1kz/a0ai+DEFEdQ5Up2RSq8+SA3SkYKvAh9l7ifCN9wEtozmXEwKL2EpS6eY04+C1CFVy9Mgyddg3LILaFPrdtJfMqyHL5kIYH8XVXVTRF5g4g42ViA5xlJc3J1lJlJnKwS9ZnYjO0/Fv5OwaRT37BDERV+kn5VvkSbTAwXyXLwcoNwHXah0HargJpq4GasWKP31iV3L6GwTFT06arrvf8KIWRxQzeu96K908i5hW+I+2hExG+UnucCgqB9DP4N1roYwLDlAhr9mRgRImfsYZ537aY=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The base `SynchronizationContext` type in the `corefx` repo is a context that represents the thread pool context. By convention, a `SynchronizationContext.Current` of `null` is semantically equivalent to a `new SynchronizationContext()`. More info: https://msdn.microsoft.com/en-us/magazine/gg598924.aspx\r\n\r\nAs Dave mentioned, the `RendererSynchronizationContext` in the `AspNetCore` repo appears to be a synchronization context used by Blazor. I am not very familiar with Blazor, but I assume this context is used when running rendering code on the server side, and possibly may exist on the client side (in the browser) as well.","date":"2019-09-10T21:18:52.083Z"}