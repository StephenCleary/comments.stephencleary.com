{"_id":"ed8f3aea-db32-43bc-becd-b9cfed55e00b","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","postUri":"https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html","replyTo":"51f25f6c-1205-44e0-a4df-ff58b4df9cda","authorEmailEncrypted":"Y9OYakKIidkfAQDyUpX00KRcrJV0Azi\u002BD78GkrLycCsDsnLkTfS0XtyWWIEp1vt2\u002B6XANUMXflsSw9EcWlAi0nOpvehD/IV7xPg/iNKNVqIMKMAN5GJOnebZ8kBrEb0qGfnqfDH4AqZ9h/Q3/dxNdhCP3FEWIw4zzPY8t513AQipaAkzti9ibDODEytt25gi3rvGfLuy1NrPftqHuGLyyqLaOsEdDndcA8k3HUR4/Q/5oyvaMGXkgTHlagw/GaY/\u002BCF672z2pBRAAJua6SmkKmz5REK\u002BR\u002BN\u002BPk0Ki5vhyNMozPluYYx0d4FHK6SNQekVFfWlo1iTzoiJw\u002Bfn5DZlgY3c6mri/VzZbxSApuc9RWGJcCmDwKV9twZCtqVYBWXTZyiCNHFFBYD4qH/xSpVz4OvO7jzXR4OTKmA2pTk/noeSGv34ctl\u002BbBgM\u002B7LuYW9Kk/OlHhEFx46Rom6AKoRjCOKLG6X/3x/fjvqQ8PXzWAQBdLZ2oVqlso\u002BC9BJVNDTfnptXgJ19EusMnSlVIJI8Pf/n68//MELuolp75uJOM42EeN7grlKmEifxBpF2FcGDwVtbbz5qERI3x0rgnlcED433xIbKovdaQXd8o/c4aVs\u002BG6BtKXRea2JVM2EsvL7NH3LaIQXD5oDckjPX7baN13cS2gfqqHrEjDcFUggCilo=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"\u0060IHttpContextAccessor\u0060 works on a completely different system. Instead of using a \u0060SynchronizationContext\u0060, it uses an \u0060AsyncLocal\u003CT\u003E\u0060.\n\nSo, in the old system, when a thread entered the \u0060SynchronizationContext\u0060, part of restoring that context was actually setting the \u0060HttpContext.Current\u0060 property for that thread. In the new system, there is no context, but there is an async local value which is \u0022inherited\u0022 by downstream \u0060async\u0060 code. The new system also has proper middleware instead of lifecycle methods, which ensures async local value(s) behave as expected.\n\nOne consequence of this is that if you have code in a \u0060Task.Run\u0060 (which you shouldn\u0027t, but if you *did*...), then that code would not see \u0060HttpContext.Current\u0060 but would be able to retrieve it from \u0060IHttpContextAccessor\u0060.","date":"2023-04-27T12:58:14.5099834Z"}