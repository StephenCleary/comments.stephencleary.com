{"_id":"25d2b340-c3af-11ea-b770-65c0c48f276e","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","postUri":"https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html","replyTo":"4d33c600-c129-11ea-a7b2-374ac32bdc6f","authorEmailEncrypted":"Bkw7xfNM3DbF1bW91x1O1YD33IlgQv3al6nF1d7IJD0yy8HiMJPO5ujOoMQONjsah1ofIhuyerg+fBVj30seR5ht5nRc1JOELWTFnUMFlQb0/PsLZTjGjLZEcOvEzU203oVZvbltMmXggYMGmuCPownRw3a+PBefqgRiphkTBYM/nM8XYFyq3gC87151mdEsaX1pqxBAwiD67ji025aczE4+wEm8HLVOdzhvZ1SJXMWBgfOaTVd25Gfk9/3faxajEwgWw/uxIxjXMO04O0xfrxYMXUJ8gH5mfuhzOfFuABbcNxrcAyTOZjyu6OqtePIoeJyAMJYM9z3JUIDgRQZ3hEy8/LV5Glnppy2QI9639nPELX2x5c/NWnxSatXQaIwyHQxkrK3E898D0csONEN+rNYwx50A4ldge0RDDzHR723OBXn4nHvikYXTHVhbYYHnLfNdF4y6r7fnSSvwZOSlqt1wzz5UwsF9fTqJjzrSJ5NJHAlxebFb/VF8lv7iwRdsM0+4Hrj6eeroM40YbCjq2Woz3vMeVVp3GVQF50c1BO2DrlSkV0UrlWPkIJHGDi4UQpt2RPlzxEZb8rqDjo6wUHIACmSvKHm5P1NqUVC6jBjn6Rivca/5fJg0P8Ba35d+7rxdZ3MvQn/o/WCsualWkVHfuAqChRF4erCotjq2gj4=","authorEmailMD5":"1c5bf8b8fbb4f2eafc32ab1449bbbd35","authorName":"Pierre Gadea","authorUri":"","message":"Thank you for the response.  After reading your response I read both articles a second and third time and realized where I misunderstood the FAQ blog, in a few places.  The others were minor misunderstandings on my part, but this was the one that threw me off first (I missed the distinction between .NET Core and ASP.NET Core).\r\n  \r\nYour blog - In fact, the ASP.NET Core team themselves have dropped the use of ConfigureAwait(false).\r\nFAQ blog - This is why, for example, you’ll see every (or almost every) await in the .NET Core runtime libraries using ConfigureAwait(false) on every await; with a few exceptions, in cases where it doesn’t it’s very likely a bug to be fixed. For example, this PR fixed a missing ConfigureAwait(false) call in HttpClient.\r\n\r\nDo you cover this topic further in any of your books?","date":"2020-07-11T19:46:01.225Z"}