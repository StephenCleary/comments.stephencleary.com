{"_id":"d24b6398-d50d-3099-98d2-2da41b5e1bf7","authorName":"Krlm","authorEmailEncrypted":"mEQpwZSppWz6QuMnzcZ5ybum8mG5SuFhoQJSVO47SY2rgArlrHwqJQB1V0dUdwQy8uY0gYnId2khc4Dapa0DTjxLgex8qSzk3qn0H7WlRBrrOItdlRwWdmnkx1LqLHb/ktDvnXxEFJJydDr7iWi7SGek43zQ1IRvCLbdQN0gwUuvNqfmmzDKVG85tZ0dkMpLJagcr+Esrh2nXihR82xADrqSxUbt2fInkbj67PcOt54HVQKW9NaJahFa/HpJurXoUcHj/kBIj2NpYYgg1mI+DZyPzT/bJz2Am596ZNF87n1rwTm/IIPP1SjK63iJ0UeeVtAps5WGpcoxj9oOjE8vvlD/Mbx5XKyyoN/INlw0f9O54Wr3sukZKcjs+Z129vZNBDeyzIpPC1aqH9Yeg6oVRJLrfz+/tv1uctO40gnzdjcSJ3fC3DeBwQkWnnTSdO1L7bOaLRvoyfKrbRjMWy/sLOu+aa3Lr5LFmfzb63nDZz3tVHdBPG7kpRVMmrPge7N1YkNe40JdzT6g33LG4fJI9TT3bOHWYXbU88V2yt6fCAsP3hIBpQcMUV2bIRoxMia2AbsC3Kgy46Q5y0jzBwsScj/pp1Tkxxjd5aR73SsgA/juLxfW680FMZ9HF5JNL9wwRPkdpWcfTLp78tQ1p8IVevRvEWW5lQpheQDR9onxPIk=","authorEmailMD5":"84c0065aeaa77718b0783f36e927d4b7","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"I'd like to share some observation and ask you to clarify this kind of behaviour. I was performing load tests on ASP.NET Core with some 3rd party lib. handling StatsD metrics. That library was using Task.WhenAll ([https://goo.gl/kj5MvR](https://goo.gl/kj5MvR)) in a one place and due to high contention (load tests) that occurred to be a bottleneck for the whole application. What's most interesting was the difference in behaviour between Windows and Linux (both with the same .net core SDK v1.0.1). On Windows the performance was degraded but the application was responsive all the time, on Linux I've experienced a thread pool exhausting(?) which made the application unresponsive (req. timeouts) for exactly 60min. after that period application returns to serving requests. Would be thankful if you could put a little bit more light on that difference in behaviour.","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","replyTo":"","date":"2017-04-04T10:24:39Z","timestamp":1491301479}