{"_id":"4bbd3000-d894-11e9-ad4c-b516289148dc","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","postUri":"https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html","replyTo":"c0e7fce0-d644-11e9-95ba-c123820aeaaa","authorEmailEncrypted":"BD9pDGZCWNLYd4oRCdbwjwwMXB+IRbLR6U6ScBvYn/rU1nSakPrdDlg3XjqwwhMQHU0PXY+N60xitRmWT6vhpar2zult7y0ontDjnWh6ILfEIJLActeE8WLFqf74n4rk5qtmYeIUR0cCwAOiHp7r2jJ9qnwhKto0sgBLpe36izeyQQY9uRzCrWDY/xcwJDjhNUrbko00NHT4wsV6JkuUwph20CrIEit2IJ/CHf8dJdgtTRkVDbVUCttcgvHQeDsw8MZvOmTmXU1dpgDLuTkafjxncJy+msEwEYlanIID503JpXW68AMzXybVzxpzClVHs0bQSSivTRc8UeZ+AktWrQ74ilM6CQLJ/81t1c5sYkqdWdoFvZYpabSD3sgoKK5SQTZr2ox8TvA4InvQBl/TLT/154jbYP3RKnDbNM5CoJ5JbR50ape9FP7sQM/vBcLDTvFdTmVSGqQLnOMZrnOj8FLA6jKa6N0xAC0SrAT07UxCNBSN4tn4ZiNkS9C5ril9pNoC7cImFjtrRnVyhvkWIuRw1dPx3uE9HZ6njiuNRCI3sEpDNLO4d2bdSlyZnPXs4/17YfjgQP0N7BmnNgjouDAVto2eovGNMUBN2EHB4Re+5RkN95uCbNBQL3W2e05shvloMBN5BleM5XwhGbC9pB4W1V7CQfROY/izZkAGQEk=","authorEmailMD5":"f7c3c184c7ead042a6c00906d87542e8","authorName":"Steve Green","authorUri":"","message":"Thanks Stephen, that's helpful.\r\n\r\nOne other question I have - is this situation specific to where the same async method is called twice in succession, or does it apply for successive calls to 2 different methods?\r\n\r\nE.g. If the example was changed as shown below, would the respective ```result.Add(data);``` sections of GetOneAsync GetAnotherAsync run in parallel or sequentially?\r\n\r\n```\r\nprivate HttpClient _client = new HttpClient();\r\n\r\nasync Task<List<string>> GetBothAsync(string url1, string url2)\r\n{\r\n    var result = new List<string>();\r\n    var task1 = GetOneAsync(result, url1);\r\n    var task2 = GetAnotherAsync(result, url2);\r\n    await Task.WhenAll(task1, task2);\r\n    return result;\r\n}\r\n\r\nasync Task GetOneAsync(List<string> result, string url)\r\n{\r\n    var data = await _client.GetStringAsync(url);\r\n    result.Add(data);\r\n}\r\n\r\nasync Task GetAnotherAsync(List<string> result, string url)\r\n{\r\n    var data = await _client.GetStringAsync(url);\r\n    result.Add(data);\r\n}\r\n```","date":"2019-09-16T15:11:45.431Z"}