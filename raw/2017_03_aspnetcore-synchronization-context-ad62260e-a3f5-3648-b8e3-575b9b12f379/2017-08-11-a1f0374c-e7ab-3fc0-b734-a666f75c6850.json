{"_id":"a1f0374c-e7ab-3fc0-b734-a666f75c6850","authorName":"Van Thoai Nguyen","authorEmailEncrypted":"wd2UJQ9bN9OuUqCRq11Ok5dPit2Chcc+zTlgk/9UdO3bjA4p0te4KxjqT5WcrHuWL8GTG+VqvLTDBketNtwa/gPdhwe5ZnM8aFxj3valR9C60IjoSA+aGrQ10EhzEYjnxS6HedwNclMl4b+mQCtkCqgGhdkIEFKK6swzDow6v6IEc6/bH7sAN5Wadltnw8gsxH9hn6jcLWgznbgWN89jGJCu/N+jMJZ/F4iZVhHihJA6or96PwyO5IcfUAv5ElYEJdcExVBl+SfJsw1xtY0iNWzIsxZV+BMDtRoWuHgkEIPW80bJXiJUpyIkynUK9AEuOgudZjT1Lm1bjvamKeDi3IQ4AwQnjTE+h3rok+L1G29Jmwx38gXJYJxxVJFdaCR6hYbuhgxsJ65Vl6VIvjqiOb26XYHvDzlbPpWG+64ZGRL3dC07uMlxHMsVGYjTcnf2ZeHhr5n0h4ty31VGmE4pYLnXpU3YEXIojl//r1ru513rSBfhaRb6IILMXXrADf3uHrL7OjaaEo0l8fIDpmdQDiChFNCADbnjChNNUkV4tSI+pPOE+DdxuQd02KFg2IRW0e9HgyEgXPGmeyQREGMsb20XekOR/4RJeHnhfhHW0mCfiAv74SSA/lJG4OGCJH+5ERGKXlHi79+FlrV+30vT20OJLlcdPgi9H0z+Xl/Z+Zg=","authorEmailMD5":"0a2d4b6ed85d0b1578ab33effb7aad21","authorUri":"","authorUserId":"disqus:vanthoainguyen","authorFallbackAvatar":"https://disqus.com/api/users/avatars/vanthoainguyen.jpg","message":"Thank Stephen and hope you don't mind my questions.\r\n\r\nWhenAll allows us to return request thread to pool, but would other thread from pool be used to sequentially executing 1 of those tasks as you wrote that there is only one thread can actually execute code at a time?\r\n\r\nIn other words, I'd like to know if i concurrent composition (Task.WhenAll) in legacy ASP.NET requests would make better performance compare to await on separated tasks?","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","replyTo":"761d417b-e928-31d5-9717-d9350476c57f","date":"2017-08-11T01:28:16Z","timestamp":1502414896}