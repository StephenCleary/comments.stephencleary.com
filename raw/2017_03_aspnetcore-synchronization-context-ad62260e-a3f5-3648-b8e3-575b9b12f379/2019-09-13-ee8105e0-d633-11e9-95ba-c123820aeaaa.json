{"_id":"ee8105e0-d633-11e9-95ba-c123820aeaaa","postId":"2017_03_aspnetcore-synchronization-context-ad62260e-a3f5-3648-b8e3-575b9b12f379","postUri":"https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html","replyTo":"","authorEmailEncrypted":"cZQHt7S4MxHNfD//K6U/F8CTIbVjObcexvV1iIc9bYbH9H0Fqo2Dy+fGNdJi45uY4TktjePfn61+wl3hAxwgEkvIPyF0DMRJ5u0wymxhcF4x4ZsZYv8iFpvxUzhCSvb5nu5X8GxaYoZV9GVszXS+TZmWXazq6p630eJOgNVGumUCIsu6tNnwBo/ZNaiEeT8dIulvJEhFbeEU1H6qe24cC//pXbngUlHab855mujyb6Z0PBekBLUhd1kru0+Y/URQCfTjkB9j6JBOLxrl4rhsPju53q8IdUEgz1HY7bSqkRWJ9hhtZrsBU6n35VQsXgYQ3kXPUgQIKKPxQ2PayagnaXNM3tLyLmCpi23rqJnWMMOTH43Js0DV7K3/URA+GtuVjTw2MlhiPqw/SS840Y17ghHYT3jsvLGbuVZWh3+17kOWWswhBHTDVPhulhqDVTSI2CmQd0RTW4zYBM1idoHOoQowx9eZaV17JQgrBSagIRtQ6kPG//XKmpuXbq7m2aHTJnxwQqxdKq+xsmLDo55TxmuZgq2xis1wSiyKZdx08kQTH+zvfQV24uDkRUaOMzerclemF33CCzpqqEeGPcLRiz2YQCyuibkgdqyXDTuxMQpoyfyZjYPmQhLj/O2VPB5azcw2I1/KaQgED8AlK62NBzJIB3q25b3ooiOL6kaAndQ=","authorEmailMD5":"f7c3c184c7ead042a6c00906d87542e8","authorName":"Steve Green","authorUri":"","message":"Hi Stephen, many thanks for this post. I have a question on the last section Beware Implicit Parallelism. Here you say:\r\n\r\nHowever, this same code is unsafe on ASP.NET Core; specifically, the result.Add(data) line may be executed by two threads at the same time, without protecting the shared List<string>.\r\n\r\nIn this case, is there a recommended way of avoiding this problem in .Net Core? E.g. preventing the threads from running in parallel?","date":"2019-09-13T14:36:54.858Z"}