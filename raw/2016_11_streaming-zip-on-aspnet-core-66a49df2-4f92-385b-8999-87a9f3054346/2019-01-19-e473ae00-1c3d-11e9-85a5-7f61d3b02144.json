{"_id":"e473ae00-1c3d-11e9-85a5-7f61d3b02144","postId":"2016_11_streaming-zip-on-aspnet-core-66a49df2-4f92-385b-8999-87a9f3054346","postUri":"https://blog.stephencleary.com/2016/11/streaming-zip-on-aspnet-core.html","replyTo":"","authorEmailEncrypted":"SGGiy41dzyBoGGY2EMlcY2Ewr6cp66sV53D/7G67YSjIHhqj5KFq3IISfJtcZC4wijZO+NKY0TDU5wupxu6RSJvm0lrbG38wQL2ji78L2PCHGNtgilCiTFS/flYwQ+YZdEjcYGzOEQnBhT7t1lctfAVvT78rzNco5Z44X5/XxEdgs2B5jQtNoD2nx7+NyCyMEGAQwsla3UatDj74OvmNNnlJeXw90kXWQL6NTbjQ5zoXc/c6EYSsIzxSODaDr9r8hveqv55JVVnkldfl2Vn47rDIUiRGctBix2s91YJSxSnNiird9AkOcKIPq3Zc0NEmbVNXp2/MrnbNrpJbGDx7y/Jy7/ynbqj9L6Gfml7RBVXwGgLHlZg9UTr6zK+XJqBm1e6djDbHx3wMRy2EUrQXuQTzySopC9IW+ubw58tj1/KF9OtxSG7zic9Xm7F61s1m4fwVJv1wgAPf1hZnxUVQslUPp8WHc5dUuJqWAtFoKbLAeVEeKZsmG4hRcNjd03gZXSwsuFZHVH13B5io6mWtq7WbdT0FcxA5ERMetfKiKMOP0EtEP7J0Dj+VpJTGl0Zjhd2drPw+ionzEGvtg3HWjF5KWvPvojr7CjbbhZG2Sv1easbXJRUI2flLr2ug5893nU6NqcDwS2VaXDLZCwyB2XX0WerDPbzbSBSFEDgWE9E=","authorEmailMD5":"3aafff39df4c5d8c05880e181ee5e3a6","authorName":"Felix","authorUri":"https://test.de","message":"This code works nice. In my use case a single request is rather slow; I need to send batches of requests in parallel and stream them into the zip in order to gain more speed. Here it gets nasty.\r\n\r\nWhen I just do it using a semaphore, I get `Entries cannot be created while previously created entries are still open`, which kind of make sense. When I use your `LockAsync`, it turns out the same as running the requests in sequence.\r\n\r\nI was thinking about a queue with event handlers, but I did not find much about it. And I don't know how to get the zipping code into an Enqueue event handler.\r\n\r\nDo you have an idea how to achieve this in a simple way?","date":"2019-01-19T22:59:36.837Z"}