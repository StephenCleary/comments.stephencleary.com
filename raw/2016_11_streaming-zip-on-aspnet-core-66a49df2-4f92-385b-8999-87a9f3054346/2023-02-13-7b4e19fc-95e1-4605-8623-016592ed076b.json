{"_id":"7b4e19fc-95e1-4605-8623-016592ed076b","postId":"2016_11_streaming-zip-on-aspnet-core-66a49df2-4f92-385b-8999-87a9f3054346","postUri":"https://blog.stephencleary.com/2016/11/streaming-zip-on-aspnet-core.html","replyTo":"","authorEmailEncrypted":"i6l0YMSer2PQ9ifc\u002BlZntcaA9CZVlgXV/ndYcFjnH\u002BTtoN94jzqpTYGvHc4S8JRT2DQRzlD\u002BTKQqecuAlRC0QHi4gvPTCf4x2X9RlUTvAi2o16NIa6k8fYaLBW4W1Mjd\u002BkNg7/\u002BMVynCyfFOzKnAVQeG5VykLApBTyxwsBMOv2yKTaI26R/ibYxKKVzfxBPAc\u002BPhHav6n9TzlbjwMQd3YJalqXkiDuXmeE0We8QJY7f\u002BaIgWPfBdw8GSo5IYtlNmmeAlQwYqY13YISJmnA3evmUq85ND4jMmmDKbvmm0Qp0WZCsxOEl0Wa9tV/VTbCnYYq5YayaQCNM9ARYHnndlFpQuh69VHAZpaT/RV3CKOj\u002ByWq4AAe7cfXrnOIk1a\u002Bq8jXk3q6xgSDLFR4Tte1EFPuoAEcGlAfuOQD5xjV/NimI8RDC9rkuH\u002BcMfculX5nuKMQvoz7AT1lG6tPnAqofDGL06GDi1XKH3hSqJzQAoihwD7BKSQRMaBdmf/IuzCgeV/2DDDPUGqkXFc1dNFEF0d6b6UBP\u002BBKur\u002BzIg53bXFM2hdb1Vv8HpAk0Wu6gKSWKruEGRZwV91E3HWfbZaCx7LwS03vfceg\u002BebkP5UJpVC0VU0YDsfHG5gh0lJxlLdWcYamhjjbOEAQdYYJpTur0QgYgSrxYAg2FL1e37euruL\u002Bw=","authorEmailMD5":"5824db34d31c02dee1e67494c817d276","authorName":"Yves","authorUri":"","message":"Very helpful, I think I just found this the second or third time already. ;-) Still works in ASP.NET Core 7 with a few minor tweaks (different namespace, additional parameters).\n\nWouldn\u0027t it also be possible to derive a Stream class that reads data from a callback method? That stream could then be used anywhere and make streams truly dynamic, not just in ASP.NET. Probably a bit more complex to implement because a small buffer may be needed for the generated data that wasn\u0027t read yet. That stream could even integrate the Position hack for the ZipArchive, if that\u0027s still needed today.","date":"2023-02-13T22:22:12.2909249Z"}