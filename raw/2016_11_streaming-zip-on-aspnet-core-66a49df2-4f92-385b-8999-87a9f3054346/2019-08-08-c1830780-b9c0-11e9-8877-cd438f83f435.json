{"_id":"c1830780-b9c0-11e9-8877-cd438f83f435","postId":"2016_11_streaming-zip-on-aspnet-core-66a49df2-4f92-385b-8999-87a9f3054346","postUri":"https://blog.stephencleary.com/2016/11/streaming-zip-on-aspnet-core.html","replyTo":"16198380-1c6b-11e9-85a5-7f61d3b02144","authorEmailEncrypted":"mRtxXp1o+e33uNCOF2VfiKuP5Q7+5CtVt6D/TmzN25Ddp/rpC1l4Sl8ICyVnKDdmZobDIhRStl3VZ6Pq2zy8ISpm7NTxrapCUh7YlLZSETUj2AtNCKuyF3npjlKHRC/E2M9DziSxHSm4ciVaW2yR5S/dlc5d6O8nB/QRR+G7MDoG7mH273FBf8AQu9+/qJycUMEJQT7K08zeTV1bTDBt5MxonoqTcuRcMFpqWkSuaO82AmUqPHMUS4MXPuFzHbUCm/5Wg+/fZUHvI3nD1uUW2mYUwNkwrLBnn6dyHYiy5qfXZNQmtEPPivRPP9A0NAhlthDgnyjPI+gO4bD32skxo/qYShqPSeXUTVIDqvybXfDcJPSzDahnLKVRzgQTmz+4noiXomzL+64DB8leQTV7apYtava1i00xUntYYJl37RgdwbT8CzUp3p0Hs8Dm6Gmx2zhm8ZFf7VqG4QHV2NdGT2W4gZccEFrVug/F6My3+ma11rcEyxSJyzRcVkmaQ8a51aWWIPVhg+2MoWfu9ln+R+90kLeF+eNTWmiT1FOwYl0HQ1ZuE+S2ykM8E0B5tl9hkEq7/uNqRAwnoqJ+XMMf66yp3evxzdwromwIwf6T7nsaj4PsP4q3224YxqhUJyQvJKwX/G7EARWo2myPnEmkVYge+JOxEJWNDMhXyLnV+sY=","authorEmailMD5":"d11a023af0f17554d9d44cfe55297bf2","authorName":"Derek Broughton","authorUri":"","message":"I'm so glad I read all the comments! I was wanting to do what Felix did, but after reading Stephen's comment, I think I'll implement it his way first, and only if there's an issue try Felix's. In my case, I'm zipping up the output from a number of GeoServer requests, and I _suspect_ the main bottleneck is going to be at GeoServer, so I was planning to run the requests concurrently. But I think having all the results in memory might also be a problem...","date":"2019-08-08T09:41:54.642Z"}