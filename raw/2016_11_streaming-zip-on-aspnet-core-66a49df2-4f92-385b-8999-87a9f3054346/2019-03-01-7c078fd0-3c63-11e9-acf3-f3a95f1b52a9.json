{"_id":"7c078fd0-3c63-11e9-acf3-f3a95f1b52a9","postId":"2016_11_streaming-zip-on-aspnet-core-66a49df2-4f92-385b-8999-87a9f3054346","postUri":"https://blog.stephencleary.com/2016/11/streaming-zip-on-aspnet-core.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Francis","authorUri":"","message":"So actually for anyone interested i found the error i had. After looking into the doc for the ZipArchive CreateEntry method\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.io.compression.ziparchive.createentry?view=netframework-4.7.2\r\nit said *However, if it is not formatted as a relative path, the entry is created, but you may get an exception when you extract the contents of the zip archive.* The problem in my code was that i was doing a replace of the existing directory fullname for string.empty to get the relative path and in doing so i forgot to add a \\ at the end of the path, so the relative path began with \\folder1\\file1 and i guess ZipArchive did not like that, so when i remove the first \\ it worked.\r\n\r\n```c#\r\n            FileCallbackResult result = new FileCallbackResult(new MediaTypeHeaderValue(\"application/octet-stream\"), async (outputStream, _) =>\r\n            {\r\n                using (ZipArchive zip = new ZipArchive(outputStream, ZipArchiveMode.Create, false))\r\n                {\r\n                    foreach (string filepath in Directory.EnumerateFiles(existingDirectory.FullName, \"*.*\", SearchOption.AllDirectories))\r\n                    {\r\n                        string relativepath = filepath.Replace(existingDirectory.FullName + \"\\\\\", string.Empty);\r\n\r\n                        ZipArchiveEntry zipEntry = zip.CreateEntry(relativepath);\r\n                        using (Stream zipstream = zipEntry.Open())\r\n                        {\r\n                            using (Stream stream = new FileStream(filepath, FileMode.Open))\r\n                            {\r\n                                await stream.CopyToAsync(zipstream);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            {\r\n                FileDownloadName = $\"{package.FileName}.zip\"\r\n            };\r\n```","date":"2019-03-01T20:49:19.800Z"}