{"_id":"e526fae3-fd81-46ba-bde8-f5963dee6e56","postId":"2014_06_fire-and-forget-on-asp-net-006b7bdf-c89c-3ee5-bcd5-a85f62b3a22c","postUri":"https://blog.stephencleary.com/2014/06/fire-and-forget-on-asp-net.html","replyTo":"542994bd-2bc2-4a6d-afba-841c1ff5b9c6","authorEmailEncrypted":"OrNQx6Pivs/04NwwPXwDgqc86xN2408s8i/9Fn\u002B4HcZQuwFGq5gMswfao4hn3UunKVaAP0VQfhaMTy3E6WVmI3Ejzp9HcI4OwE/DkKuED\u002ByGg/fJP1QOcev7GVLl8q3vuDuE0E2808GzssL9bY8DNDbPL2c1K3LnXL73K2urKvD/bxy\u002Beonjo/fFX93K39UsE8gzAH3IAGF8iirkSzHYTTg\u002B9ZaI4jofx7G3JgGeEDhkgDzzK9uIKOlHPQZpat63rZ9POYjZHaH4m0XwA\u002Bz6mrDVc4IqSEVR64WvRVDCL3ShGFMRWHhA8C\u002Bt\u002BpaSNDJE3TU7PuDNqp8tyVP3qiFyQvVssLbaU7VLz8\u002Bmes78lyoLUh0ZLrnmyWiDybNlCpeXyfx6eJNKvleZGZmGQg9G/kFMaJRQtRA0ywEgl92vpaOBuZDrAGWupfxzCsx7bw5MeT0DUc\u002But4FlfXDmju4J521PElmxdKnKMdwP2oYxjwNibXKla6Mn2hf6x6TPeaij9e6Sdy5koaBjrnspiwKykC9E/RWPZxJf3l8u/Op2k0soKbxYXc8wW\u002B9XXAzoD7O3HDopIMQxgPweYHejOUB3vQu9rElSrDOKb1nN6lpNy2EdhfWKOQx1p/0xifOz4rbmJhFsivjnGduNxdUDjS9W/PUsEFSuXGJr1lyzU6RziXo=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"My highest recommendation has always been a [basic distributed architecture](https://blog.stephencleary.com/2021/01/asynchronous-messaging-1-basic-distributed-architecture.html), with a preference for cloud solutions like Azure Queues linked to Azure Functions. Hangfire is OK if you are looking for something simpler. But it sounds like you want something even simpler than that.\n\nThe important thing to note, though, is that as soon as you remove the durable queue from the architecture, there\u0027s a fundamental change in behavior: work may be lost. *Simpler solutions are only acceptable if you are OK with losing work.* This includes \u0060QueueBackgroundWorkItem\u0060 and \u0060Task.Run\u0060, or in the ASP.NET Core world, something like [this code example](https://learn.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-7.0\u0026tabs=visual-studio\u0026WT.mc_id=DT-MVP-5000058#queued-background-tasks). Again, due to the in-memory nature of the queue, *work may be lost*. See my post on [durable queues](https://blog.stephencleary.com/2021/01/asynchronous-messaging-2-durable-queues.html) for more details.","date":"2023-01-21T13:49:21.3208791Z"}