{"_id":"977dba87-4cbf-3c86-a939-e3ba5d2c2ce3","authorName":"Jeff","authorEmailEncrypted":"MgJrDg4tDKx1602IevfoEvg3ZjBijNuHmBb9RtFxJSL2WvaeVGc9qBaLb/TcFsGtP85Ki9usGJu6mwCiVQ8upTdfZkK/E16PSY8BZVOXkwsd3tXdkJry6pXtB1xzPOwbdmvSUjGkWmfothKZatOoxQEYkAqG8ymXAqxkzdJKJpHJ9mIf7XsJvyGcqW5W1FULWAm3ERbxOwF4YDLidE5ozj7Ki5m6zlD29B1AGkWvRIkCkwVFPVNPfm+CHKg6ty+0r0F6R2dt4uteCcfgmodlAY07cX7/1S/NQg4LDaiGmbSGmpESNIPNE3V7+t6NtdHIhsn+T3cntL1BhpoZn1FXcmLywExoj0j6gmQBDrksnQ8dlWkrXMttywzqOq7Z2KvB+mjTQHMxgh7Sp4k9rLnxraejkLqzGsQwM4zP4PWzTapeV80V9I7j3q8Aw0luZLMkR4T8FBDDggqONfPzKg4qWPU+zNo2Qus1ucNGbOLkheP84WtmblE7rZsL/b/LjEUuT420FnxGhrvvqe9ZGnwiplNJ4KfH+xIIMs7QxRJbH+B94Wrk4/q4ydl0N5Ghp1fIVQJnUbwYTaJBLUTNVq9huogPyt13zAOgASZx3C/dmCMNltzdQbRVGtG+7pWijdhQJks3YJRcVIIMDbZw4FVbg87JVt8G6QjcJscs0qcjzHk=","authorEmailMD5":"dde3bf631a325497e9e1d211ae80dbcd","message":"@stephen_cleary:disqus   \r\nThanks for your awesome blogs. I have a question, I am building a library and all callers may not be ASP .NET applications. Do you have a recommendation on fire and forget mechanism to do some task asynchonously and not block current thread?\r\n\r\nHere are some options:  \r\n1) ThreadPool.QueueUserWorkItem: Simplest approach but doesn't let me control how many threads/work items will be created and there is a risk of adding too many work items to pool (I am assuming number of threads will be controlled by CLR/OS). Also, the API I am calling inside the work item is a sync API and there are chances it can potentially hang and QueueUserWorkItem doesn't provide a timeout to kill/cancel the task if it is hung.  \r\n2) Task.Run: Provides a way to put a timeout on the operation but not sure if it puts a limit on number of threads that would be created in parallel with every Task.Run - can we create too many threads due to tons of Task.Run?  \r\n3) ActionBlock: Allows limiting number of concurrent requests through MaxDegreeOfParallelism if same ActionBlock is used for fire and forget but doesn't have a way to put a timeout and that puts the risk that task I'm running can get hung - same problem as outlined in #1.","postId":"2014_06_fire-and-forget-on-asp-net-006b7bdf-c89c-3ee5-bcd5-a85f62b3a22c","replyTo":"","date":"2018-03-02T04:02:06Z","timestamp":1519963326,"authorUserId":""}