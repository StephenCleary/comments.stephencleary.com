{"_id":"977dba87-4cbf-3c86-a939-e3ba5d2c2ce3","authorName":"Jeff","authorEmailEncrypted":"BABDo5pmGbr+KIVFn/OFW4wcdoWwVNJHQZ42/0gaO01wYGtz7ogSzXMIDz2hL2qqUbvBofEBOV3X8yiMlqnBDsUxWl9v93PZInznY8eRKQAX937oEt1oXXX4c9vYpc+9nX+ACb6mNPS9vCO1Dz/PulWIDXgKIDZDaSy2xaJOvTngCJ0HqebvUjPkBxEbL3h2E30umt8YRAWAWAxD2XMLFIuPbPULwgWzmrGiJcM9ZbZ/KjqSyuYP5bk4RyZI9e//xapb5k8Tci8xw3TF0Rej/iMWrll3hHQiVNPA1YaVh5qTN+Ppu2KWD+rOd3Ee2YHPCim6OcglXB0tUfk9VEfjaNCVWRbKqsmzFGnm0tueoKlZZY038d3Tsxr9AY26AFXc2qcLRPGCU6lIMUhtLpU0ZMJgW4uSZHWZ42aeShFn5Z5oDz79erwi2+WDRcnnwBpaRcbSnc04l+P2xmCKSlFBowN8IJLunngCHIm2LaPeg6ssGE6Gj8XycI8yXhmIEIb6BkfbyK6nqE5lAvyABoBjdIdNh2IN/D8TEe+tfokIWgqGjN5h5U2HFuNfVZ4dp8+9jE0bP0/qWGs5Cmm6tUFJVAFiTd1YH5pl0TGeJrp4m1mIyAQmkZnra97ZNTap4slzcchOXv4l2OVfNQpEBzY9s7ea2SiRqMyKedubHgi64ww=","authorEmailMD5":"dde3bf631a325497e9e1d211ae80dbcd","authorUri":"","authorUserId":"","authorFallbackAvatar":"","message":"@stephen_cleary:disqus   \r\nThanks for your awesome blogs. I have a question, I am building a library and all callers may not be ASP .NET applications. Do you have a recommendation on fire and forget mechanism to do some task asynchonously and not block current thread?\r\n\r\nHere are some options:  \r\n1) ThreadPool.QueueUserWorkItem: Simplest approach but doesn't let me control how many threads/work items will be created and there is a risk of adding too many work items to pool (I am assuming number of threads will be controlled by CLR/OS). Also, the API I am calling inside the work item is a sync API and there are chances it can potentially hang and QueueUserWorkItem doesn't provide a timeout to kill/cancel the task if it is hung.  \r\n2) Task.Run: Provides a way to put a timeout on the operation but not sure if it puts a limit on number of threads that would be created in parallel with every Task.Run - can we create too many threads due to tons of Task.Run?  \r\n3) ActionBlock: Allows limiting number of concurrent requests through MaxDegreeOfParallelism if same ActionBlock is used for fire and forget but doesn't have a way to put a timeout and that puts the risk that task I'm running can get hung - same problem as outlined in #1.","postId":"2014_06_fire-and-forget-on-asp-net-006b7bdf-c89c-3ee5-bcd5-a85f62b3a22c","replyTo":"","date":"2018-03-02T04:02:06Z","timestamp":1519963326}