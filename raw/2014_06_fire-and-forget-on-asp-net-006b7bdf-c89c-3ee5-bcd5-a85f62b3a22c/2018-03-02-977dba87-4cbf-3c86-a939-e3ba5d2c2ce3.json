{"_id":"977dba87-4cbf-3c86-a939-e3ba5d2c2ce3","authorName":"Jeff","authorEmailEncrypted":"Ua7+ASY1iXJZvY7ku99My9AcSO5MC+6hU3HJtMUOC7CpncLNujF7VZ0T/AaOQGeCsAb5jD6vF3cLc/ZoHc6WadVfPg2lu9EtPepdgF0SupFhLNcGTh0d5UcMo7mmy8uCM/gPTwMEAaZLU8v8Uh727UYLTsh98kW9yqkYhdBWt9q/b/Bo7UAODH+7t6O2z8U3OsacNU8OHS1X48Zq5LM4W1YyVBidhByMxXfL7h24+AqYCq4cMc6B7lLheThcfQMsodTK00GxiLoqx3m7DbBDz45uM1WN2jBdTRDVOp3xMtw7pgN2lndOOtq42r9zZ5rvbKNOazodIPdnTiyDp2GEzynWmmY/IZyhVaqBIQhyX/SpgdNhb2iAa4WI60nlZComWs2EbYmfin7y7ZDosgtpKdLzaNPvrFKZCOrLrezLcSQekT/oq508V9qDExJ0aQ8Etq1jkIwt4mnwNqURmPs9zq1Iws5t8mOVYTOZXzKeoi9e72KY2Yzmh6PqyQdCPgmpar3kKkxddng5pL8xI2OemdLukR9q2Mlxi8bMNs8PLkIcJe0Q/FnDDBhMI0eJMg93WI3cO0QiQOJ11vOn5JlB3Fq8BFF5rIhRCQjCJ3+3EIQQRrxr6FPFQWQAwvyPji6aCYGeWRhikhly6YBNDqAYsZZf+E+6U6XMjLvtH+XdDGY=","authorEmailMD5":"dde3bf631a325497e9e1d211ae80dbcd","message":"@stephen_cleary:disqus   \r\nThanks for your awesome blogs. I have a question, I am building a library and all callers may not be ASP .NET applications. Do you have a recommendation on fire and forget mechanism to do some task asynchonously and not block current thread?\r\n\r\nHere are some options:  \r\n1) ThreadPool.QueueUserWorkItem: Simplest approach but doesn't let me control how many threads/work items will be created and there is a risk of adding too many work items to pool (I am assuming number of threads will be controlled by CLR/OS). Also, the API I am calling inside the work item is a sync API and there are chances it can potentially hang and QueueUserWorkItem doesn't provide a timeout to kill/cancel the task if it is hung.  \r\n2) Task.Run: Provides a way to put a timeout on the operation but not sure if it puts a limit on number of threads that would be created in parallel with every Task.Run - can we create too many threads due to tons of Task.Run?  \r\n3) ActionBlock: Allows limiting number of concurrent requests through MaxDegreeOfParallelism if same ActionBlock is used for fire and forget but doesn't have a way to put a timeout and that puts the risk that task I'm running can get hung - same problem as outlined in #1.","postId":"2014_06_fire-and-forget-on-asp-net-006b7bdf-c89c-3ee5-bcd5-a85f62b3a22c","replyTo":"","date":"2018-03-02T04:02:06Z","timestamp":1519963326,"authorUserId":""}