{"_id":"1df10440-5e43-3ae3-914c-d4694f4093b7","authorName":"Jeff","authorEmailEncrypted":"aOfciOuERbXfrdE0NSKrB2MNt0THuJkl91B2OXgld63RKg7pWZShO1XqJsnsDDdX2GU/WdpyFHel49lcjKL90UWD4Eiy6KwYHV6VKs8Q0S4qujq84RgvB60fPMuk8cSBuLLRfC/ZHZc0Y9oHOsPN8QKOMJzRKrrQtt6jHT+K2R82n4o/eIohqJy2u26NgWJs2hwcsDU/Mu95FU5aOTuKtvoBs/IE3B7MrnCCB3Io45Mh1IQFRrHwYqClhRVqAN8vHwAZdSScz2ftryGRCU5zVBed06CvxxRq1e0QVdHzpBE4gnjvVjMP84gKe155VXm6fGY8JApUqmIsPoLTH978MFQUNFk1tIpogeEKIuEFodqyrx5SG9WvyqjTsO+cgh8n++MNCV+hKhSJeCvanjw+alMlxMpNnuuPB1gmXeRaPyEIezkCOVVQ7n8gAA7mZiBnnP5Sh3Nkj1AQTdWTKFMWDCfXfYXSBpTLE4lLTehtud5mE5ePUdDjGKccj075fKkBW4SabVWOmYQM+XedDxWbu4boKc5YS+zTk+RQj2Z2CZdod9L+X83hU6zk5DMzwO673LwkTHojdmdUJoJjPiOamZrLm5q4wcTXSoxcOs9BGytgReHJWotsxTnxdGrnUZF096l4XhiXVaMVYRHP+YpAYcWwUa6qr5+2cwv77UOyt1M=","authorEmailMD5":"bedfbecae9ad412ac942b195af154544","message":"Thanks, I'm doing the refactoring and the actual background work can be encapsulated/done in a different process.\r\n\r\nBut, I still need to call the API to initiate async work from my low-level data abstraction library in such a way that the call is not blocking for my callers - this is avoid my library users deal with this complexity. How do I initiate the call from my library?\r\n\r\nDo you think ActionBlock is a good solution? It sounds like ActionBlock and QueueUserWorkItem provide similar functionality but ActionBlock provides the capability to limit the number of threads we will create and hence not impact the whole system if something wrong.\r\n\r\nAny advantages of using Task.Run over ActionBlock?","postId":"2014_06_fire-and-forget-on-asp-net-006b7bdf-c89c-3ee5-bcd5-a85f62b3a22c","replyTo":"8b798499-b628-3d08-95e5-e2104bc10d66","date":"2018-03-05T07:46:21Z","timestamp":1520235981,"authorUserId":""}