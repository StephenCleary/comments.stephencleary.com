{"_id":"858e3ed5-3751-3d39-bb67-4704294466d8","authorName":"Joro S","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"http://www.blogger.com/profile/09342130902585558504","authorUserId":"","authorFallbackAvatar":"","message":"Being somebody who is currently trying to \"formally educate\" himself on the subject, I feel that mentioning explicitly the synchronous blocking behavior of Task.Result property would have clarified a lot. I read most of the referred answered questions and most all of the people having the problem were expecting a magic to happen and return the result from the task - a magic similar to what async and await give us, hiding the complexities of CPS programming from us.  \r\n\r\nHere's what MSDN has to say about Task.Result property:  \r\n(from here [http://msdn.microsoft.com/en-us/library/dd321468.aspx](http://msdn.microsoft.com/en-us/library/dd321468.aspx))  \r\nRemarks  \r\nThe get accessor for this property ensures that the asynchronous operation is complete before returning. ","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2013-03-04T09:01:30Z","timestamp":1362387690}