{"_id":"5c167340-d165-11ec-a689-c3ba71b18844","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","postUri":"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html","replyTo":"8730635a-4c89-37e8-a5b8-665784384033","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Andy California","authorUri":"","message":"Totally agreed. A console application, for example, has no reason to be async. Async helps with thread exhaustion in web applications, I'll give it that -- does Console application have this problem? No. A console application doesn't need to be async, EVER. And now just because some 3rd party library has an async-only method, the recommendation is to rework my whole console application? And lose the ability to use Spans and \"out\" params and other goodies that don't play with async?\r\nSynchronous code is easy to understand and doesn't have any hidden problems unlike this async nonsense. I've been using this whole async/await for a few years now doing occasional reading on it, and honest to God, I have no certainty because of hidden UNDOCUMENTED problems like these that stem from things being done implicitly. At this point, the only way to be sure about how things work, is to know the whole implementation (which I don't think would be a walk in the park, would it?).","date":"2022-05-11T20:03:01.051Z"}