{"_id":"4e027b4c-adb8-35ac-bf23-62d27d68a0ce","authorName":"paolo ponzano","authorEmailEncrypted":"TFDbcR2LvylD8YbvjxRLi6H1vqMb+wvZElAku7XXYvN5ykP9zX91urTqLm6Klwa62gSq4IK9xMMI1b3gvpjQPzHVIvIrzVu2zVQBa/bgiRMdYF2y+v6GxDyjynnH1+ei9dHPzDfH6L5KNJofkdLsd42gwht8YDuumba87s+rlRHE1ubtEbD4Ux/rEAEGQk2fbAJusGu/yO+/nP8Z2FH5UK4jQCnXVSgKKF7dwamKSF9NRyK/SbvHwmIycg3/6j0iglJKH64PelvAngpWwJUJCzSohfSwX/PsnNbxWm1D9aF4KWBHWcdNar2jBqLk/pve4PTUrSdnPVHjaaLS032+25F+D5vYYTcKiBQNuIA8ke6F+X839TF2HRoz4ijJsvqsCcy2k0jvyhDHShmPJphr9XKbArcngdb/mqFpyM/U0CerswUpAlmDwG+t7OpWquqfgUd+z3lVX1QCvsLAZJFgz4NQufrB2ZQ3FaEl498bdIquNaZWY1D1U53TGhJYZxzbn7pyS7Rn0ztSjnwK9nUoR6rcpWzIpoms8Xc0SJ58gWbl1ZXTxttMiaq8mVkrziFF1zAZf1o7ASBI6jMYAB4etRXqo3SDUcZ4XvlbY7fogPzYjK4tMBGHZbFitptamhCnO6nlA5VJYIlcOiirr23dobR+v/kpDz5YbXHlro4AaNc=","authorEmailMD5":"6a7ab997c42f99015f3cb779987ab080","message":"Excuse me, I've read your post and find it really intresting, but a Thing is not clear to me...I've got a WPF application that uses Catel as MVVM Framework.  \r\nI've some services as\r\n\r\n public sealed class CurrenciesService : ContainerServiceBase<currency>, ICurrenciesService  \r\n {  \r\n public override Task<currency> GetItem(int id)  \r\n {  \r\n return GetItem(x => x.Id == id);  \r\n }\r\n\r\n protected override Task Init()  \r\n {  \r\n return PerformInitInternal(InitCacheMessages.STR_GET_COUNTERPARTS,  \r\n InitCacheMessages.STR_GET_COUNTERPARTS_FAILED,()=> CommonRepository.GetCurrenciesAsync());  \r\n }\r\n\r\nprotected IEnumerable<t> Items { get; private set; }\r\n\r\n public async Task<ienumerable<currency>> GetItems()  \r\n {  \r\n using (await asyncLock.LockAsync())  \r\n {  \r\n if (IsInitialized && !IsFaulted)  \r\n {  \r\n return Items;  \r\n }\r\n\r\n try  \r\n {  \r\n await Init();  \r\n IsInitialized = true;  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n IsFaulted = true;  \r\n ServiceLocator.Default.ResolveType<iexceptionservice>().Process(() => { throw new DefaultException(ex); });  \r\n }\r\n\r\n return Items;  \r\n }  \r\n }  \r\n }\r\n\r\nWhere I can I use an async/await pattern to wait for the result, but in some pleces I used this\r\n\r\n public string Description  \r\n {  \r\n get  \r\n {  \r\n if (Currency.HasValue)  \r\n {  \r\n var item = currenciesService.GetItem(Currency.Value).Result;  \r\n return item?.Description;  \r\n }  \r\n return \"\";  \r\n }  \r\n }\r\n\r\nIs this ok? or can it leads to deadlock?\r\n\r\nThanks","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2016-09-02T15:17:00Z","timestamp":1472829420,"authorUserId":"disqus:paoloponzano"}