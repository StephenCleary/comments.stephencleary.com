{"_id":"4e027b4c-adb8-35ac-bf23-62d27d68a0ce","authorName":"paolo ponzano","authorEmailEncrypted":"CSVriJjwpNL1ccm+dC2qZchSrp7Vs/c4HQwKR/MhMuLgS0xiItUEQWDndKS6Cv6jh9KN/zPND8YAwstri15qigDGG7l5GHqG1AcuDQtzzqw+Pj1wP5g4S5OeJL8h1Zs8oNv1GDoL90gan+lubBL8d/IMI8R374YLi/xde5LnZaMEXXscBsfRoRDcjKBTmh2wu1C0a/h+kw8yijyBbdLRhNFKM2GnMqPdTsnznQinTlwh4uJZmPirCPeP4hQH0d99Y/uBpUZO68e3SWlsBS+djU/uty6OnM4OtuEFH/s7io11EF+BDbVk6fHHE2U3l+peR7o50RoMxfdS4GT6ML35mXnIHEVKUgmujGKzYzRRJKlCBnv0FpOhhIFd0zAggNM89ZD6Y6EMeBrGnEmzIz+alYHNe9xQULfUBGgixTs/dUnROptiBwnWqE4WhDUHCqvAshDic6rQXs63JdKYtSMUoTyf15VkIWH7St8UzivDnCHhMNYUso6umX9z0ljHB5Xn96F6dYG+xJXRrBRGZtlf3mOWJP3YNTu8s+xrf10DE5zsJ6V/wp0f2lsVBrS8MDvFnOHEMUuY96Z6tQFs5gGituKyU1s0DXLvKK/ueyLnT+t4PzhqJz94rrD8n8PmBibn09OcU+w3sE0jSoQj97pLwUqhFLm3wrrGYbVKumKqwX4=","authorEmailMD5":"6a7ab997c42f99015f3cb779987ab080","message":"Excuse me, I've read your post and find it really intresting, but a Thing is not clear to me...I've got a WPF application that uses Catel as MVVM Framework.  \r\nI've some services as\r\n\r\n public sealed class CurrenciesService : ContainerServiceBase<currency>, ICurrenciesService  \r\n {  \r\n public override Task<currency> GetItem(int id)  \r\n {  \r\n return GetItem(x => x.Id == id);  \r\n }\r\n\r\n protected override Task Init()  \r\n {  \r\n return PerformInitInternal(InitCacheMessages.STR_GET_COUNTERPARTS,  \r\n InitCacheMessages.STR_GET_COUNTERPARTS_FAILED,()=> CommonRepository.GetCurrenciesAsync());  \r\n }\r\n\r\nprotected IEnumerable<t> Items { get; private set; }\r\n\r\n public async Task<ienumerable<currency>> GetItems()  \r\n {  \r\n using (await asyncLock.LockAsync())  \r\n {  \r\n if (IsInitialized && !IsFaulted)  \r\n {  \r\n return Items;  \r\n }\r\n\r\n try  \r\n {  \r\n await Init();  \r\n IsInitialized = true;  \r\n }  \r\n catch (Exception ex)  \r\n {  \r\n IsFaulted = true;  \r\n ServiceLocator.Default.ResolveType<iexceptionservice>().Process(() => { throw new DefaultException(ex); });  \r\n }\r\n\r\n return Items;  \r\n }  \r\n }  \r\n }\r\n\r\nWhere I can I use an async/await pattern to wait for the result, but in some pleces I used this\r\n\r\n public string Description  \r\n {  \r\n get  \r\n {  \r\n if (Currency.HasValue)  \r\n {  \r\n var item = currenciesService.GetItem(Currency.Value).Result;  \r\n return item?.Description;  \r\n }  \r\n return \"\";  \r\n }  \r\n }\r\n\r\nIs this ok? or can it leads to deadlock?\r\n\r\nThanks","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2016-09-02T15:17:00Z","timestamp":1472829420,"authorUserId":"disqus:paoloponzano"}