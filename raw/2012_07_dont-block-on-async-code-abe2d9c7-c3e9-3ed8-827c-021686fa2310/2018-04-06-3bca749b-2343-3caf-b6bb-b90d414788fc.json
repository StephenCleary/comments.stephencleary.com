{"_id":"3bca749b-2343-3caf-b6bb-b90d414788fc","authorName":"Nikos Sideris","authorEmailEncrypted":"Yey+i6X0P0eDnwVigmKXJcfs7IH3jkmJFszHzW3GVgIg/i577ovxSnzHmRtO8VwoQ/kOYrOawv1IWLWjw5w6HcVTONdmarsoyNacCHAayM8/mTZX+vWJuFx08HmCIMd9EX6RNJAQEwH+LmTu5Jm0o7OzJccqxb6paXQUJua+UZl4drQvzq5LhpnFj7CQtrQ9Y+e4s0j1FbSknsnHWvAaVVHhoF3kiuPFul3mhk3oangmrTa/kVG3IL+d61upDOhko7z1k1jZhn1YlSoxzzlgis3VCKfWzu8FNV9GJHJYtMbF7eK9Gyr2W7FVIommDBa9VNF5Y985QmT6K+cuFrCVB8BHWG+eda7GT5CTZAGmJn6ha7GbEPaRQwpPuGmuEMptysoaJH4tGtv5VWacHycnUqJwfxU2PjJodg5BFgvtMq/TP5d8aFgLY/GRlMEJWRoo1R58UanA07iYJBZaqVl9e4Goam77kuUUdvdoSIxcWpYpygNtoYlyUIBNp3dvwNWJEeTFWUuSsxnhg4t6v6SNTNWhAI9n1GGN0dZHCVUvMcFhLCHJd0ongJ8oBBPdGS2C2kjzNL/r07d2FXkWQxG285Lf5wrFhkSwHMTaNTyLg3901t9Knu+rRe5G7tLTxPtnKDUE8x7czbYF+S2Rwr6vsDB6J3pNwa0ZQ/ZLYNIMFa8=","authorEmailMD5":"2cb0e53f5c57d64f749a46884c8ef829","message":"Hello Stephen,\r\n\r\nI would like to ask you why you mention that statement :\r\n\r\n \"Using ConfigureAwait(false) to avoid deadlocks is a dangerous practice. You would have to use ConfigureAwait(false) for every await in the transitive closure of all methods called by the blocking code, including all third- and second-party code. Using ConfigureAwait(false) to avoid deadlock is at best just a hack).\"\r\n\r\nOn your msdn article ([https://msdn.microsoft.com/en-us/magazine/jj991977.aspx)](https://msdn.microsoft.com/en-us/magazine/jj991977.aspx)) you strongly suggest using ConfigureAwait(false) whenever possible. Its good for performance and prevents deadlocks.\r\n\r\nMoreover from Stephan Taub ([https://blogs.msdn.microsoft.com/pfxteam/2012/04/13/should-i-expose-synchronous-wrappers-for-asynchronous-methods/)](https://blogs.msdn.microsoft.com/pfxteam/2012/04/13/should-i-expose-synchronous-wrappers-for-asynchronous-methods/)) is always suggested to use ConfigureAwait(false).\r\n\r\n\"As a library implementer, itâ€™s a best practice to always use ConfigureAwait(false) on all of your awaits, unless you have a specific reason not to; this is good not only to help avoid these kinds of deadlock problems, but also for performance, as it avoids unnecessary marshaling costs.\"\r\n\r\nAlso its quite difficult to ensure that all third- and second-party code will go async all the way. So using ConfigureAwait(false) on the caller might prevent from deadlocks.\r\n\r\nRegards  \r\nSideris Nikos","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2018-04-06T09:51:48Z","timestamp":1523008308,"authorUserId":"disqus:disqus_FlUbdZq63t"}