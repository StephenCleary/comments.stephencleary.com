{"_id":"34739fc7-bd82-37e6-a412-86dac1077d1b","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"> Is this code okay for a console or ASP.NET app?\r\n\r\nIt looks fine to me.\r\n\r\n> Is it helpful, or should I just use synchronous HTTP access?\r\n\r\nI think it would be helpful to keep the HTTP asynchronous. Making database access async is more debatable - it's only really helpful if the database can scale. But you can generally assume HTTP servers can scale.\r\n\r\n> Is it bad to have any blocking io in an async method?\r\n\r\nIt's not too bad; I cover this in a blog post here: [http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-even-in.html](http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-even-in.html)\r\n\r\nI would say just add a comment to your method stating that it has some blocking in it as well as async code. That way, if it's ever called from a UI app, the dev knows to use Task.Run. It should be called directly (just like you already are doing) when in a Console / ASP.NET / background thread context.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"07135cab-780c-3f04-a634-790fce7c5031","date":"2016-08-24T20:19:06Z","timestamp":1472069946}