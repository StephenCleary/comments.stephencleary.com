{"_id":"86a3f530-d89c-11e8-9ea4-a996cd0c12ea","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","postUri":"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html","replyTo":"12fefcf0-cd62-11e8-9467-8537e44b2659","authorEmailEncrypted":"GsJGYZg7pvVy3mtTUe84RKm0luUuXEXy3qtP95GeOmDdH9O0JouD7OnLUc4OdNcWYXy+ks/n9gQ6/EsD53D+LPtkGW6I5x6MlZ++wG77hdaksVNfB67vP5C8io13VmqpD22+RcuUf0ZLwqHuGdkl0/i6ociX5T32C5+cugRDOayJuykI89FNndnjTrBaVCIr9EONIgXeraXvM9XoA51OJL4EAQ1cQnUlrjy0w0/3HF+RZcPrxBmWdmdflatGvrywoQ3wBTx/eOqaDOIB1Q2AR7uNydTSUEc40d0xG6yBYa3wThxfmD9b2ZcSQ+KTAlRYKHuD2f324oSYU5izaHRkaJq3UMtwio8oFEQRSTizWOyP2w90PkHf+1GTcGejaqQU4zzGAqe4xj4xLhLiB6JgQWHoyLJYJr3S3XPDG6hV17Bw45jdcVmEKJQ/rUkwr6UnKwKrgC1u+kxAKRR5ZaKhPpYcRZipvSh6K142JaL7GLqej8aoKGp5sZxmKrLhAyz7eViFCBIYgb+fw4/ZOHRd1+L2PcAwxlS6y6jHCm/jyfj60aDQElDWMNqWmNtNbe4LdQ7Qk7KRPa9GhcsUdrgAa/ID5LNCtOab5/oloBzJFCivksWXFpGh21kAZTYgkagm35Bxkx/9TgZg+h1y9NYhcZ84EvKHZYUuz9/1jEUo2ws=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Your scenario isn't clear to me. WebApi action filters can be asynchronous; legacy MVC action filters cannot. `FilterAttribute` is a legacy MVC action filter.\r\n\r\nIf you meant to say `System.Web.Http.Filters.ActionFilterAttribute`, then you can use `OnActionExecutingAsync` instead of `OnActionExecuting`.\r\n\r\nIf you mean to say you're using legacy MVC (not WebApi) action filters, then you'll have to use synchronous methods or block in some fashion: https://msdn.microsoft.com/en-us/magazine/mt238404.aspx - note that this is not an ideal situation and you're forced to use a blocking hack due to the limitations of legacy ASP.NET. I recommend upgrading ASAP to ASP.NET Core, which allows all action filters to be asynchronous.","date":"2018-10-25T21:25:42.442Z"}