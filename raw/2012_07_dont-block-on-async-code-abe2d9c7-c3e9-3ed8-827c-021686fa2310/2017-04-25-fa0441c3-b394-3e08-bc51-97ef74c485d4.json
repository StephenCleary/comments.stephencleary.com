{"_id":"fa0441c3-b394-3e08-bc51-97ef74c485d4","authorName":"Christopher Carrer","authorEmailEncrypted":"Ju3Q3HNp2x44/Un/YNtmUBnLFNtoO88NDX+A6Q0oPHNHfdLkD4RaRKfU4EWZxkjuksuZx7t7X4t2jbCau0uGtvzZxBeVu6hPq2sfiDs06C98FFlSwzCk0kODKWF8DBu474vM2yreP0hA54H9/WXysvSwL+Uj5JF5HGjisA5tXPrv1hoh3oYTJ7FylFIDKVbIyapNZ0QVwf5oUXkAm4TdRUTM9NNU9e88Cs9neBshk9aQe9VmV8ZKpREEW0kpzAyWo07LWqccXPskJyJK5WJHBCx246RuL8d1imWp7VeHoibKsMy/iR5vCOqBn2HqLETIXEar7JnX1ltF3pM7hsBgUhilMRObOyxOpx/584Y60fF0LfCA4CdYvUG2LSsAU+HQx4hQsNozGH0OGATCLTVlbs3t3wFmNFtpN4OeQgmWQ8CcVGN3bgfYCBkikIJ/whOBvtk3SA1JeW4w4WSkt0LZMtGw+8WFokjBllGlCEJuLrlQ0Zf4fwu+GPwg18IHybzKSoxUJUCTZNJ95gxSrC5Q+URpXSQkBye8WaBcSwIxDu0GkCCQ6VSoFVTNSdRMPCVmeFn/c2R8M6p2g3GwKPlGJ8Y8x1UTekzWvmdhcH//jGZ36pJaFUWwRv7pdJ5LSSpbmF4mRE/AyJFzbV7EQa2YQivzw2/2gYBOQ1ybrlJX8oA=","authorEmailMD5":"8f879e3f8c211a45166d50f0b72fe363","message":"Great post, Stephen, thanks!\r\n\r\nI'm running into an interesting problem with Transactions/TransactionScope (side note: I'm using the async flow enabled option) that I'm not sure how to solve. I'm trying to implement IEnlistmentNotification for a custom Azure provider but I'm a bit stumped on how to properly handle async calls. In essence, I want to make calls to azure storage using the async library calls but that means I have to 'await' somewhere and that is the issue.\r\n\r\nThe IEnlistmentNotification interface defines 'void' methods so I can't 'await' any of the calls I need to make to azure. Sure, I can switch everything to be synchronous, but boy that really stinks that I will lose the power of async in this scenario.\r\n\r\nI have tried googling/SO'ing, but save a few articles I saw that didn't really help, there is shockingly little information on IEnlistmentNotification with async/await.\r\n\r\nGot any ideas for me to research?","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2017-04-25T15:29:06Z","timestamp":1493134146,"authorUserId":""}