{"_id":"fa0441c3-b394-3e08-bc51-97ef74c485d4","authorName":"Christopher Carrer","authorEmailEncrypted":"RZu1Zc1DSHcIlGHN7Oh+T7I2pucnpMneyLAsbpcOMXNYt4aEmkKhgCq/Q9bsN7XThoBqRPXgK3xGULfkdjJ6ExXSkiALMqbmuAGIOBBkAS8bO/9AyQan1wHGQtyfjUG/rn2pCeazXDon6KiWCy9xsuwJRn+5rh2h7u3VCVKbhyuuv6UQdzJ7/YYgE0wTaQ+Wi4uOP3UGhoteeQ3d5pwqMhXz3+/UkCUakX5nPtEhaHkfzWN9Ew26ohv9vY8xdfIN37lwEoIpD9mDvHdL6yQ7LyVwF4Mcq6D3cN1NmwFjtZjsZcAZHlkmj+Knz20n75GeX+6IDaOK4D/8S5ipzZlZtjKYSeNiFwOXNyAL23zkwhGoEy6d0traVZ+5qvVtL8CCExG1+66LVk02+Abx7tOKWfQxYt2ExoeHP2UIsEqBNd6hMfO/Nlj2uyd40AU94wTdImYTasITNkN2IfkGiE+0/p/88/sP4RDv9gkOuW4JqGkDl3A5zh5O+Us+QgoNxIXKxfaiBxTjw1zdgtl7TfNzOaxQrXIzWKobxhiSrRIo+jvaf2DlQN4zCEO3J63IjaH5KSrsstkU8f6NHWbhP8NX3/GYYIIoOQuiYOkUz1YS9EK4OtE7ksma2+y05eNHIUUl9+1jBKzFzlXOPn0HbDqR/iNaVfQ32NKSTO7RBtQYP7Y=","authorEmailMD5":"8f879e3f8c211a45166d50f0b72fe363","message":"Great post, Stephen, thanks!\r\n\r\nI'm running into an interesting problem with Transactions/TransactionScope (side note: I'm using the async flow enabled option) that I'm not sure how to solve. I'm trying to implement IEnlistmentNotification for a custom Azure provider but I'm a bit stumped on how to properly handle async calls. In essence, I want to make calls to azure storage using the async library calls but that means I have to 'await' somewhere and that is the issue.\r\n\r\nThe IEnlistmentNotification interface defines 'void' methods so I can't 'await' any of the calls I need to make to azure. Sure, I can switch everything to be synchronous, but boy that really stinks that I will lose the power of async in this scenario.\r\n\r\nI have tried googling/SO'ing, but save a few articles I saw that didn't really help, there is shockingly little information on IEnlistmentNotification with async/await.\r\n\r\nGot any ideas for me to research?","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2017-04-25T15:29:06Z","timestamp":1493134146,"authorUserId":""}