{"_id":"fad05870-bf92-11ea-8248-75e050bf65d9","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","postUri":"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html","replyTo":"e90512b0-bf89-11ea-956b-7560b1773dcd","authorEmailEncrypted":"PK/9WMkM8FhHV9RMZTDKJeQSpEjzfui5OLnMX1ZGaOhLwpCUTyhfPx5Uq3x+zojOXzTE/kaF6JQQSD9aC9fPFKo45ZQSwWN0bA7QjWXdJdqzrVESUDftnDhO/A8NWHe9gNGgzPznhEFXK3ltP6PfJGZkStimhlGrHRJX5xldvIeweRlC5u//t7gk4aOrL2kszxHzN02wdYCM3D4its9cmQURVIbpzLwzcjNusTbvgb2fLUTngFZGfimPPiHR71iuh3TD0hWyHeb6K4sb3DU/01egMlNt+jLXtZwxxjwtHWH/ePQy425GlVHABI0FzuSJdrvoWRwqY8DO2lwdB3eYwx3KHXfufWWh1djmwrwnTBzLRmgddSUPx1C5g1Xl2drtP/VOJwd/kAgRv0jWdMWi2zI3yFrzuP4Bl6ulKxC8mpzQzy9ldIDadFuJg59bA52CDD1UxA8YPaQj7ge4dUbJElaNb9AP/p+SHvbZpps46irv1vDWvGH5MbbnUvNqQIZMQ44oIJvUDYEErvOMOmIku7VWVcVzcu0drmKHVW0TvjXRhPmOWrNP1/XmqNs7lZMRD+S6LSy+AZaQNPOa51D/Q6QblMluiisGMxJofqQlnnXr8TyscGhgNZ2LtzDBxT98etGX3+r6V/vSZjC1mVCMNy/WlADMuT0qhQIzg7MbV0g=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The most natural way to convert a synchronous I/O-based method to an asynchronous method is to start at the lowest level I/O API that you are calling - in this case, `DownloadString`. So convert that call to asynchronous first; in this case, I'd consider changing from `WebClient` to `HttpClient` since `HttpClient` was designed with asynchrony in mind. Then let the `async`/`await` grow from there.\r\n\r\nIf you want a more detailed answer, post this question on Stack Overflow, and you'll get some good answers.","date":"2020-07-06T14:14:18.476Z"}