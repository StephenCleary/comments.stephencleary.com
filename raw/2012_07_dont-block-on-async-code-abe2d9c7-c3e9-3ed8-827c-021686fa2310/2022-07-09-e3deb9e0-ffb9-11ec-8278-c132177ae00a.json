{"_id":"e3deb9e0-ffb9-11ec-8278-c132177ae00a","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","postUri":"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html","replyTo":"09d752f0-e63e-11ec-9bbd-93dbe8ab833c","authorEmailEncrypted":"QBy42L7oAkqNbUjoElwyNTPN9PkIDD3xf6Ec/5xEZm4+aRzMwKbhI9ip13wQSyEfM3DtMAPNF3iheMoqX1Oe2tja9rHpiai4jH+kgsQRq/NkUE0wrgXAnB1GVvhnJCJqxnC0OIiDceJkLezp596aduZvDK7htLYLNfD9a7+5kZ0ZUB2yGNl8Qf7mn7vI5rb3W8pk3XB+nPg0a0cvfxOE9BEam1iQW74cordl/1LWODZTqc9Xw5wqgdZ/K5h7Hr9fgOWKcYkvXxob4sZ6L9DGfZ7awKc2iwswCe7OuUnOTdLbB5StqeLEWmwkh2STRUI3NB9VijQjWVDKOmeLS/GErx/Tc4g0wLK9zQAHsQRYoUsDzBSGvqTle5c2ti2tLaVQlzRpnUQf2A0sH4r4ndlijLKgzZE9nizOzQv0qtXfd2VtznKEXgdgk0IhYO8HMHU0+irX18Jg4P745sxfBAJN1v/qFv6Ari+rZF9/r2N7gfG0dP4CHd88rptihxf2whwa7T9KhJejXjMFnzRkKIlAgziFrkdb6ezQgEOUcAid7IAy+z1a9qz2r3pGp24FbfdU9pyEHy/WQexgEuwNSbW8mZTR9Vp6Rujd3pHY3weT78P5ZkhKPNnwERehST2pHBZh8UQcmVwi+/k7O8FyEGjKmcimHACsx+qtNyYAswsbDkk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Well, technically there's no deadlock there. But it's not code you would want to implement. Instead of having each request handled by one thread (synchronous) or zero-one threads (asynchronous), you now have each request handled by two threads. Using `Task.Run` (or even worse `StartNew`) on ASP.NET is almost never a good idea.","date":"2022-07-09T19:03:59.994Z"}