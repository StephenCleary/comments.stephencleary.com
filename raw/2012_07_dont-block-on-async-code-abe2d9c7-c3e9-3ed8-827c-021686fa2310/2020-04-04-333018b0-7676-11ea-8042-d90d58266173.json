{"_id":"333018b0-7676-11ea-8042-d90d58266173","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","postUri":"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html","replyTo":"","authorEmailEncrypted":"r0w41TqS6ZdOHq4FSPdxRuGRF/8l/HxQoSseZp+Buqvz0nITuqJETAcRdG0sMzqEwXWlFMK8lx7ct1P6uH96ji9ccblQ57JlkzWJy1mqU+vsKE20QnHew0RlLBbTu993LOw/Wx+QGPk5Oh52rGguDAW1m86mB+ouGDL9FrH2I3pWY6ZrGnF1vkVog2Mxm8G9FxwPtV1lGxcVnpf4j/wESPga50D0eGEYeyDAy7VnAM81xB24W+9UUzpf/IghHywmIBsQqUr8rCtUsr4ovo5XB2/ST4BN7gtIxqcWzSWidWfHcLV+HILfTm8RDjgcGh7pPzpGYWC2yMFMTRPgnxbqWG4ZzFroGH7uoC5Ln0p4ZqvaUd3485KG+V86azDZa0M3sV2+GoKqNkvq44yY03WKAL7fzApHlp2/ubVT9T9O3qWs7ytroZas5ZvIBilnwT1e4JMShSnivk1MY7K76OX/UCCjXRiJAYcSgJMxczrgMgqt8fVBeWlmqzlHlwhHgizKfT8HPIYY2ZiPF5B5ef1LZhILz4mhP6XhTTAsDGnxLl/OOfV48OBB8newLrKAv/J+pZgXtnMmqZCHjVvNneJYyfU0F0HW+jh2VeHFf1FXCRxglYFfeAv2L4NYIwI+MgPj4+8qJ+qvLD7ggIZt4dJgR+bF8sKo2qdBkabQDKccGcE=","authorEmailMD5":"051a4fa50f43de11c1e9b83782434db2","authorName":"Amjad","authorUri":"","message":"Hi Stephen,\r\nThank you very much for your post. After investing a lot of time finally I am here on something that helped me to understand why ConfigureAwait(false). Thanks again for this post. But I am having some issues with the above web API code you provided above. I am using .net core 3.1. After running your code I am unable to detect any deadlock. the code just works fine.\r\n\r\n        [HttpGet]\r\n        public string Get()\r\n        {\r\n            var jsonTask = GetJsonAsync(new Uri(\"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html\"));\r\n            return jsonTask.Result.ToString();\r\n        }\r\n\r\n        public static async Task<string> GetJsonAsync(Uri uri)\r\n        {\r\n            // (real-world code shouldn't use HttpClient in a using block; this is just example code)\r\n            using (var client = new HttpClient())\r\n            {\r\n                var jsonString = await client.GetStringAsync(uri);\r\n                return \"xyz\" + jsonString;\r\n            }\r\n        }\r\n\r\nin WPF and Win32 forms, I successfully produced the deadlock. Any help, pls???","date":"2020-04-04T13:14:22.813Z"}