{"_id":"57228dd4-afb3-35e0-8c21-61a8354e5cfa","authorName":"Nathan Bedford","authorEmailEncrypted":"B+J1YYgM/FRt8T+wAeYgcwXR/wy21yhaIkg0qWRkXb7pk1GraJm2gd67SivriEJZLVKtcHsT9gfRJaVbhODLkwAz680bYD4JWhrarb3bDK4QdkCYpjos514M4Ad96rQr77beiW6TFOQS5dfeD4e34zp1g8hFaf+J+4iT8LXnLnkprFcmfJTvwUT4UU3bogkQxJIrMHc2a4WarBbRJ1m9dDFn8VfgI6w3EF1mM2DAVig6CnxUvquIfgo4+rFLqVN4y3rL1UFmgA/4IvgHdcF5p4FPPfe1sqdxRoFk2xxi0Ibn+f7om1itpMhwFbncS6ZmRcDojrb4ZWTdsw3A7y0PWeH9ORVu6TQ9UzI9AYxMysEZkasmjhokVbbFpV+lE2X+ErGbNurw7VTzbe4bhojNC0sQmyuLPK8iAzE8iGo0UfIbJTQ19RU/HoA4Z6lyci7O0tz2DM+LswB3DqevolprPHuZoWiiqboeUJ5LBsbrPse3MRS4cEC805gkonEm2DbV3HFb9BEt+D0CchOwGQywoVvY5tDpcc+JSzHZQkZeAGB07rpfs5OvuzFEnkv2p55nZuT/fsTuyqAS+RfDWoA7XygPrhEAts4tL8JzonD8nOf0j3OXUddb1mwoIpEj3On2TGBLv+UEdUy+qVXkni+bh8Fr8NzZWkPoL17z78U7BNE=","authorEmailMD5":"27e1556933806ee470038c87b825605a","message":"@stephen_cleary:disqus first, thank you for your continued effort in this space. I saw you at the MIGANG meeting and it's great to see you are still an authority in this async/await :)\r\n\r\nMy question: you recommend ConfigureAwait(false) as best practice, and using it whenever we can. I'm looking into solutions for httprequest-level caching in our Web.API project, and HttpContext.Items seems like a decent place for per-request caching. I believe this will only work if any code hitting that cache has access to the original HttpContext for that request, so ConfigureAwait(false) will not work with my caching strategy.\r\n\r\nI considered using my IoC container's lifecycle management for caching key services during a request lifecycle, but the HttpContext solution has some advantages due to it's simplicity.\r\n\r\nThoughts?","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2017-01-22T18:55:11Z","timestamp":1485111311,"authorUserId":"disqus:disqus_XjHcMS1ztG"}