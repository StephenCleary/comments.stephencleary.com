{"_id":"3977220d-0733-3870-be56-dafb767ffdc0","authorName":"Edouard Paumier","authorEmailEncrypted":"I7o/hoSlmIrXKi/zvw/r+o9Ut2So3elmWkC4sYb/7cpxcHNVpZXMlFI6bqu7kkXFrfUD1bo7ox0v1rimzpNN/NHAEJgqNfz3ZG+TV334p/RUQmaADM08z+eLAs8zTS8iCE6U9asA79GrBBKU2WoiYg8z1XN7FviOJlVb9U8kMoRzxl6raDz70qZ2fB7wzrhfj7bmMoBpHp3TC7KfXoxiXO6msWh49nS6QwsT36l4DkL8RgK+tdTwfnxnQKGpCKYqnvWJ9ao183QLIDj2OGKtw6w5Cj2PnscCxT/450FwoyHrc+ItHAczDRC0rnH6pEkCLkbktsFZXn2FEzBO+7LmXoK+UlEQ5+FaWNhulyiXMrSFwzlYC9bBBjEqkSbYj0YVodGs3X1INdhd6I6wWRgOzr76+wSNGntxLlE2GzQ8f5h5MVmvh69r5E4IXljmibDH59mucWzeXc66FVkGEFQV/o5vBRpNwCn+8K1p5dnL5npVk5rYtEzjtTziRmpval7LYhyb3jGKrtu70kDAMHsIzGsFaJv+D+kv3ui+j+3p7QHNf3huB0o9Ku5kIQrvp79uxUmk+UYt0RY+tr6Xo9M/gYWDL+97jwZ1lL4eEbenzCkPlAeD04S5VULJxWe1+tLVowqhEy6il7cbzQpa8ZM5E468nRJ81lrdQAC8Q1lhd3Y=","authorEmailMD5":"f325651bb3020c2704fbcd07a0a38e89","message":"Hello,   \r\n\r\nFirst of all, thank you very much for your post. It saved me a very long investigation, I believe.  \r\n\r\nI just have on small question. What does it mean, for the asynchronous call, to not collect the synchronization context?   \r\n\r\nIn my case, I'm in the opposite situation. I got an In-Memory WebAPI server, which I call from a long stack of non-async methods, which in turns is called by MVC (don't ask me why a MVC server would send a request to an In-Memory WebAPI server, I feel we would drift away ;) ). The non-async method waits for the response of the call to the SendRequestAsync of the in-memory server, and in a MVC context, it's the deadlock.  \r\n\r\nTherefore, I either have to change all that stack to make it async (and I don't even know if that's possible), or to simply drop the synchronization context capture from the In-Memory WebAPI server, using Configure Await.  \r\n\r\nI assume there are some data that would not be available anymore? What's the con, what would I loose?  \r\n\r\nThanks a lot.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2013-08-22T11:46:01Z","timestamp":1377171961,"authorUserId":""}