{"_id":"9c770301-f0e0-3a6e-9502-ec17df91e0d9","authorName":"Stephen Cleary","authorEmailEncrypted":"rU8l+gx8to+Wc4i+B2BXU82VHMCll1T9ihkCh2BAj3s2YFKf+oVW4/ZFdCuGRD8jwKryFYMDqSqjFL+LrGQ6WAusb8xh7AKAoWMS659Bno63DkzkswA4DNgnlW++4LVWo66vNuere1ku9txC3tix7Ol29PhdbUXY6BnYugNiMew+CooclvcmIrdlPy11ttp52w2dsjAD3O+SL3C7JUYpyYQpt16l8ZfylI+l45cvbZEr+prFMsV9RjJLC2Q11DK57Vz/t/8dP4Q9xdhYMGLTAQWZbVP9Eyn9UYiwsB823VEo2+sXm+AFOejkRX3my1knW2KaaAkV5lP3v4Qmg6rC5X/nWa8cIQBtuXwIEhYM1hDvXoHLDCA05mSecvRmZbOVp2ieU8oIZsCQw6iQzJtNl+Je+pq5E+LGSNaG3GZKT8+pVsslIV89IAY0lZM1OtTiIxyskFChxwiJyGzgtP91rbf7aTctBJdYrvdmPWeb+6kcw6SZ9qnffiOVAkPK3Th0BFyznCqYme5qi8fssks1g6IC0kGMFhWnSWD1KSSk4itPCff+Uw3noJ32JzrkzwVX+0z/O669RXp6SzslyW6tZhc/gnLuz+XgarJ1CyZI9ac3HEOB6mXcjQKLMyQM06axgwBsquDsSvQo1ukS1QHEOL7FvXj5uhPYmWVlhSt8cIY=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"It's best to apply ConfigureAwait(false) everywhere from that point downward, in every await in every async method. At the *very least*, it *must* be applied at the first await *that yields* in every async method. The problem is that it's difficult to know whether the first await will always yield or not. E.g., if the first await in your async method is a call to SignalR, you'd think that would always yield, but it may not - there are exceptions that can be thrown *synchronously*, which means that first await wouldn't yield, which means you'd end up with a deadlock unless you have ConfigureAwait(false) on the *next* await in that method. So this is why it's best to put ConfigureAwait(false) *everywhere*. And require all your third-party libraries to do this, too (AFAIK, SignalR always does, but HttpClient sometimes does and sometimes doesn't).\r\n\r\nAnd yes, this is not maintainable code. It's definitely better to use async all the way.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"8ccae577-719b-363c-9028-2f97b18d00a9","date":"2015-04-08T17:49:51Z","timestamp":1428515391,"authorUserId":"disqus:stephen_cleary"}