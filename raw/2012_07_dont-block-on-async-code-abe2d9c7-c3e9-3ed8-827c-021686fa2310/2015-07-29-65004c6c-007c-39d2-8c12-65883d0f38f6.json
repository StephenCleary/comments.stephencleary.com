{"_id":"65004c6c-007c-39d2-8c12-65883d0f38f6","authorName":"Stephen Cleary","authorEmailEncrypted":"FfZmGJv4SLoSdetqXTiTNUCA/++kQJ5WJAdG4okls6T7KwncfY2Zm1TBBoclMunvA6Wua4/sYm11ST2um9edAsHNPuu2ZK86d3/Gj403IUpV2Oqq0ugc4NHxk3jcxcm8FID8HaIgNWHmKwJSXX9VqGbb3sLJNcSBguJYhUxnJXDReeUlBP9ZEgAbE1HQJh0tJYR4qjCPC4RlJjEfHikDY75zEmaaeo+5VWWwD+wKkPRTHra0fhFdkoQSdGktzjiKhn4sc316CwhXZdh0eif0xqxhvkOebNqrwpSVBZhnC9AvwUsmOmOrQoXbQhbCb2K0uWDVTtkN9xeQWO83iBtKGjY961ar37zEt+MOKS4rukLPWAEKxb9dVnlJe1idWaM1jPJV4hUC2TbcUYH+SABCIW54NmirFC9sUZKyy8pwjJ1hcXdZuN3BBB+aKib8o5PkciJtFHuRhlfiuKh6sc2HSI1+3JkWx6eVV0TkTW4Od/GYrEBcgp/vuIkCmRrp8c4he52f2nEYwHHEeSix48X5dSN2T0KfjLxkyAQaFhEWWko1vv6tayVK55FVhyFh83kM7s6o6nIZWM1/U8eScchOEpPTIAlw5JXX7Sw/kWQASQJ5dNxzfpepnD7J66d6jSMef0X4TzYVM28SabLg+HmsuToj1XNCg+IJ6SQHU7JqDcc=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"That's the whole problem with the future monad: you can't just jump out of it; instead, you've got to wrap everything else inside it.\r\n\r\nAnother example is IDisposable. Having unmanaged resources is really just an implementation detail, and callers *shouldn't* have to care, or use special constructs like \"using\". But we got used to IDisposable/using, and we'll get used to async/await.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"acde32c3-9dd5-38dd-8695-36c7f60cc8c1","date":"2015-07-29T15:31:24Z","timestamp":1438183884,"authorUserId":"disqus:stephen_cleary"}