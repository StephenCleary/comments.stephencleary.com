{"_id":"65004c6c-007c-39d2-8c12-65883d0f38f6","authorName":"Stephen Cleary","authorEmailEncrypted":"SSzNGD6qV/SQT0IvFnUGz4mtlfojsdghaiidZzaS8oVH08DMx53oFO+TZZDK4waQL80ZXi2HzmuL9K8m/SfL5W0izjb8almcTaA7MEvNzhfbzxKF/Xx/8pCqIZwmeGrpXWfnAWH/ri1+tzFypadzHZshVoiu4T7GeX9f/c2F1B5+WdcJboCNwB8U5CAV6XmaRSmlHJsiT4YMq9QtS2HWNB2gTI2zLdBOqKzG+nrZKfq31gWjr8EUU51RiC+YE2PFih5fDkiabUQn1e1wJnhBhrU8zd3nJFFtmPvzKkTH51HeoDsV00IXlFUZiGzQOcnUYX9SIjgymY0QKkwNwPU4dXrd9JP3Ip0NGrDV+x/bNlVkLmfL3CekRuztVFP6plxiRJ+U5qufvbo0ntwAvLTl1JQEySL934sgFt1fweYwbUemuJ7U9e+mXjaL6ycmcp0z9UWzj+UXmGoTGHiY5Cr0YqJrs/IFAPnJA7ioY4D/5zLDQfTY9CoOK+h80idIUJb6Q38PzziJeOv7qYL3+sse/USx5wRfzyVGfWp04U8d4nulb4kycgnieHT6iSDneDtv3nimuaFbN+PLyaumQ9djaZ+dDD2IevhFtO+oBRrrvzfH9NfGpRwjq1zqKLksavjTcoDUlSDpkOcNMGyzwfoB+GazPzESiZx7dSeWLl7vTYg=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"That's the whole problem with the future monad: you can't just jump out of it; instead, you've got to wrap everything else inside it.\r\n\r\nAnother example is IDisposable. Having unmanaged resources is really just an implementation detail, and callers *shouldn't* have to care, or use special constructs like \"using\". But we got used to IDisposable/using, and we'll get used to async/await.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"acde32c3-9dd5-38dd-8695-36c7f60cc8c1","date":"2015-07-29T15:31:24Z","timestamp":1438183884,"authorUserId":"disqus:stephen_cleary"}