{"_id":"65004c6c-007c-39d2-8c12-65883d0f38f6","authorName":"Stephen Cleary","authorEmailEncrypted":"OLHfRXAZdLtZozbpX7uG8LEJj31H46W7ATIBfX5S5sgu1WrhiicIiyA32TA3FzG1i0m7n0Etfby7Z6wYcW3Wp9X6ik74XfWD6QGklI4S4rBRrhV/HUfGgLBeHTZGjsKcLXsLGSh1tktBMYX2fZJ3zA/qnYkAI6bYEtxXK3MW4Fp79O2eb3fCgj9LU40Cl2WeZg+nARR+5OiZycQ70W2vp1fqplpiOK5E/F3GryQCTiSEXniexo4TY4DdRxlXZSulIulc+hrqZm/YsZqrJNiqkkPkMWobKT6yi2dc7yWEFFquXB8uFIuixRMasBpHmUPRjzIJaOM1C21O8nKCiOzeR+d6UdgDk9eqIlhqeIn5b5+gSOMnRdTYahGV99XAzh7BJ2CBa+CThyAXyhSNTSKz3FqwOd68/Zmqva1DT8Y6F8bxjFgpIqfoIb6ElPd1fMdRpJVMHsNabdvb1U4UfEBiQMgbxcAsK0GWq9L0JcRJBCzjcQkFaiqF18Jcwz3m7Oyo7Xl2pNj69G0vepqPfMRvcDWMFZL8+WhYeC6ikPylkWoEzuOpiwSfPH6ugOlT1S8KyxCE77L5mjqRdBgOiwIcbuw4GZhWZ8vtAospYtR6uZgMDqnXgnXtlvyblYNPTpatfWQ7NAtk0/pSL7eJrSSZD+k1LJWjuoFF6FrLZP9ndWs=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"That's the whole problem with the future monad: you can't just jump out of it; instead, you've got to wrap everything else inside it.\r\n\r\nAnother example is IDisposable. Having unmanaged resources is really just an implementation detail, and callers *shouldn't* have to care, or use special constructs like \"using\". But we got used to IDisposable/using, and we'll get used to async/await.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"acde32c3-9dd5-38dd-8695-36c7f60cc8c1","date":"2015-07-29T15:31:24Z","timestamp":1438183884,"authorUserId":"disqus:stephen_cleary"}