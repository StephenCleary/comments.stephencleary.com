{"_id":"a7833950-da4e-11e9-9aee-c13410c6607c","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","postUri":"https://blog.stephencleary.com/2012/07/dont-block-on-async-code.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Roman","authorUri":"","message":"Hi Stephen,\r\nWhat do you think about this article: https://blogs.msdn.microsoft.com/jpsanders/2017/08/28/asp-net-do-not-use-task-result-in-main-context/\r\nDoes it really fix the deadlocks?\r\nHere's the code from the article:\r\n\r\n    public string Get(int id) {\r\n           string ret = \"\";\r\n\r\n           // Start a task - calling an async function in this example\r\n           Task<string> callTask = Task.Run(() => Utilities.CallHttp());\r\n           // Wait for it to finish\r\n           callTask.Wait();\r\n           // Get the result\r\n           ret = callTask.Result;\r\n\r\n           return ret;\r\n       }\r\n\r\nIn my case, I'm calling external API with client.PostAsync() from sync controller method.\r\nThanks","date":"2019-09-18T19:58:16.715Z"}