{"_id":"51981bca-f694-31f0-be59-a4e6a94c229d","authorName":"Stephen Cleary","authorEmailEncrypted":"XT5lGow/69tW11riw6j2gCh9PYgFUaY1IjT2URgDA9sNQ/am5259UBw/lcHg88f2eDt+I+VwVJWZ9dit5IEdchIiKx6wpJa8IEn7uXkPqlMzug3ZOcYoxM1+tyEx/lcQ3ws+bxVafq0XbvDf0qLi8v/9M/v35WRlKE4kSZ3S2BToh0GPjK/iWD0e10A4T5kUUaOY8MbLtBle0bT/qKdd9ZfJ1eJgvZ0Rk+zgals5D/4GKmRDSFdrCWAhKUHM20Ef0/OEvGntDWqtjey+yI/AGUekBHvFwgUDcFldM9vEhVipCO6IM8MfeuR1lqWzkFjnz8iWZmrlaadWUG4P/FWkllqrCF8ylRU6LhSOsT46hBC/e5bjTc2QSGHZTcXc5ueLtrVeFQTFvnIXMdpcMwlHMK/IHDkCInzQIPcqvbL0/hwoQJHCbyJbea7/2AsTUjfG4s6uO7/+sgq2+FpdpdUVdzqeJH7qltMs/fO5mmkqFiA5h6ahzgEZo/02cmpyR0n+Pah9rqm2ebRhWw8PinYFo5AG3dCktCDf9WwDuPUrEm6UISoP8ux0hF3fNCMa2YGSz6aMBaG4UGh92iv2dLdHlGpQuu/iMqUE959kQKlwPjFo9fe7G6icw94oRaQO054qN7pbXz+fvipALCYvOLXfDaam+z6mZr79QP+pYk/8uZ0=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://www.blogger.com/profile/13192873941258824056","authorUserId":"","authorFallbackAvatar":"","message":"The problem with deadlock detection is that you have to hook the Wait or Result calls; this should be possible with the profiling API. Alternatively, Joe Duffy has a blog post on deadlock detection but you need to provide your own SynchronizationContext (in this case, it would need to be a wrapper for the WinFormsSynchronizationContext): [http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/](http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/)  \r\n\r\nEither way, it would be quite a lot of effort. I think it's not worth it; in most cases, if a deadlock happens, it *always* happens. So we're not dealing with a deadlock caused by a race condition; this is usually just a one-time learning experience, not a dormant bug kind of problem.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2013-12-03T06:50:45Z","timestamp":1386053445}