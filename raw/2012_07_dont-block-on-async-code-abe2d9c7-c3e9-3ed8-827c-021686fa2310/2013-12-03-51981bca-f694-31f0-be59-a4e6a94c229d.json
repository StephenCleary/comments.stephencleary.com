{"_id":"51981bca-f694-31f0-be59-a4e6a94c229d","authorName":"Stephen Cleary","authorEmailEncrypted":"Tegg6d/wranHWY9gkJjdmMUmrKy2BYeSo3tNdrB4wepPwyhTWie+8GfPuJ8V5vK+61h/yhu5LzQjQHK6HCGizRkamHvguMo8UPN9D9nUU8F//9S2oMwK2RSL+jMfVtcAKW1UfRX6pwNjGKO6Snl+Un6i7OB9s1kGfDYqh+7OPXPMR4BZM7MKJKmNf1yyulYlkzimIWBpQjH6a5IYRVqTwaeOXLL+GwohFnhAiqjEfBoL4Z7faY+C/wgBKwq+OdSdND7N3haBt2u3d5RaJAGX0jxYrTY1xdslwWvZkaNl+jS7+6I+SWBN58zKQoMxW56kVHBSIp+HP8Z6dH+KBNB85UfN8ePzjUSGOmoG/ay58OIfe91P+bS4F05AqCfJ7cFHdQPHu1rk1Acw197QMrBINtCy70p+z2yHAhpZTNp3PpyrGv7cNMRvna6NaBHmtNkjb1zAF5BLZnbKpUb2Em1ecErZv61HeAlZWBpfrI+R7gjlrOOPuQ2lY57XHtFCqJ+Geb8SZCcbtFuEn38i8hgHGzN9dFOhv3Zu7B5BGUAw33Aed8+qPx5jQKqTRde6dCBjC6rG3QWozWRj7WSGgAf/kE53zL+uGEyLCYXQeW1tlMlNTi98EUdkWCAGN7MBNZLe7blRhC4ArXu5LimsTNDzELIqJG3/dLPLHGueOXlv0ts=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The problem with deadlock detection is that you have to hook the Wait or Result calls; this should be possible with the profiling API. Alternatively, Joe Duffy has a blog post on deadlock detection but you need to provide your own SynchronizationContext (in this case, it would need to be a wrapper for the WinFormsSynchronizationContext): [http://joeduffyblog.com/200...](http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/ \"http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/\")  \r\n\r\nEither way, it would be quite a lot of effort. I think it's not worth it; in most cases, if a deadlock happens, it *always* happens. So we're not dealing with a deadlock caused by a race condition; this is usually just a one-time learning experience, not a dormant bug kind of problem.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2013-12-03T06:50:45Z","timestamp":1386053445,"authorUserId":""}