{"_id":"51981bca-f694-31f0-be59-a4e6a94c229d","authorName":"Stephen Cleary","authorEmailEncrypted":"LZCSjE2tcujodsIhtQHwAguvW9GXmT6BR3L5p2sD8gyxuLZdyRIGs/FNuynH6ryWOV10zj/+OPg7lDpVZvuR3DrwuUGM4ArsB3JTMiBMP7Wg2a8D3N/AzxOuyUgH5kw0x3bvUGG6UapCiIGYaZGoad1iONjhX4/9liBk2lSn3VdcYsA3goQFjV8zKVRwucs2W8JoRkIFfUvOhScwiSx0KD0cc7ZkQoQcQgI8j7AO/G1EwhhhlHxr5StO2tB0/i/ZpeHhKS5rnCIk8f+KRgkMpsiVj9r0pEfqEQnbXGwooSPZtrTBiaXkbzxmdFOAIlA1ZewpD84iVtKPkfA4kHgqawSg5Y2Cej0hkg+d3Qis40MSC+XfPx1LO3YdMmFzkAnGH0P6s1nFP8dNKy3i6iJQkzs2+BkzKcwZUCKHn0UhAF6kwHjn9D1F7pJrh2dcIPZEVWW5oF8TEHkjDwKBnQGfZGfC8O1oCTJvBpcIM+EHH4q5tj3FSdQfJBuK8etlgeKFzyTThQSDByjsZZ9PoEq6Vnf5d7RedWxlo9VVXA2fi7iafPPZcXYDyOAGpU5mxLIAjakv/B+eUP3M1Tu8LH1HCIF03CPdhz7sUawhOZK6rZq+t7jzGl1ezXDIjFj7eV4aobYkvbAj60QuEj1R6J5ny+7EKr7L7LeuEA6rUz0tjPs=","authorEmailMD5":"36e44ea0274d8207eb632c566e60ecc7","message":"The problem with deadlock detection is that you have to hook the Wait or Result calls; this should be possible with the profiling API. Alternatively, Joe Duffy has a blog post on deadlock detection but you need to provide your own SynchronizationContext (in this case, it would need to be a wrapper for the WinFormsSynchronizationContext): [http://joeduffyblog.com/200...](http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/ \"http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/\")  \r\n\r\nEither way, it would be quite a lot of effort. I think it's not worth it; in most cases, if a deadlock happens, it *always* happens. So we're not dealing with a deadlock caused by a race condition; this is usually just a one-time learning experience, not a dormant bug kind of problem.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2013-12-03T06:50:45Z","timestamp":1386053445,"authorUserId":""}