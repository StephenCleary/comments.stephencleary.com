{"_id":"51981bca-f694-31f0-be59-a4e6a94c229d","authorName":"Stephen Cleary","authorEmailEncrypted":"rKDwhQZ60MWdVK6NvXXsKdHDdL/qbqhQJ6SLpQjjq2YswFD5jh4ydyZiCydLOAUht0NrWd6VLEWLEuc0D/7hl4rOI1uWHPDMmWAWcPfknj4yEkHdavx1a6BiDYlkbZI7aBqIgt3FvE7p/oMyou7i+1vmpktk8Yb5osf7iBrHG62dpo+yogHWTJQPvdnuxb43s9hsPTHdrWa6tyXHYpxlmkff320Zfki/0xcI5jDYJY/u0Z6LocK32f7Hr7d8qZVOQdBsi3Y5VioBCwDrn1xRul9OG4zSQuCjrVsD6oZSu5LkATgo3CUGKiHDVN+h+WaC1akSbh2CQvqiaNoqwgSSAlyZBL6Zf5J1C4yDfp6/I6FciTHvYDV2eZp5uF60i1tc5Gk5vQLd6Ag3Rn5Vub0BccsNfsiwoKEgudlXRTOisN9NbXmt3Ik91FKRQPOKvBS1O2JTTv3zV2wGL0mHJrxCbYWZ7NmteTHNFAlQoMrjSHiI2KAcCHlTIYuo87aZroAaF+OiEM2lYydPVMD9NVUQEx/ZAYcKKIqReEtWJm6fYVCRYVbWyScizwwRnR7O/vckN3NWZwY966luqDjhaOhoQz934SCtiD09O397Xaz6XnUfIQo/DoBtM51GnnT/4SAizznNE5XjBc9RCkMpfkrgaY7O4mAblFCdS0M4rbW6fd8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"The problem with deadlock detection is that you have to hook the Wait or Result calls; this should be possible with the profiling API. Alternatively, Joe Duffy has a blog post on deadlock detection but you need to provide your own SynchronizationContext (in this case, it would need to be a wrapper for the WinFormsSynchronizationContext): [http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/](http://joeduffyblog.com/2008/02/27/hooking-clr-blocking-calls-with-synchronizationcontext/)  \r\n\r\nEither way, it would be quite a lot of effort. I think it's not worth it; in most cases, if a deadlock happens, it *always* happens. So we're not dealing with a deadlock caused by a race condition; this is usually just a one-time learning experience, not a dormant bug kind of problem.","postId":"2012_07_dont-block-on-async-code-abe2d9c7-c3e9-3ed8-827c-021686fa2310","replyTo":"","date":"2013-12-03T06:50:45Z","timestamp":1386053445,"authorUserId":""}