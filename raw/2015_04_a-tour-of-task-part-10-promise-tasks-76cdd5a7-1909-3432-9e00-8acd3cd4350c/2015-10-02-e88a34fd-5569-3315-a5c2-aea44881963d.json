{"_id":"e88a34fd-5569-3315-a5c2-aea44881963d","authorName":"modernsl4ve","authorEmailEncrypted":"e2vwdw4rTU81+lR3KBEp/ep/dZug+ylFh/LbBmTD3NJpS7EEihiCqPurbniaP0EeLWzMDcQKsqdC/EI4eqIVmMC69vSPn0dXRWfpxjTD4APHNh3tV+vKzDQnuL+2hA/olP4aB/Ft2F3QF/zNzNOM5SenpeWipoA0alE7QmOOUBDRyWiOcdUgxnr6g0xRPYr+r6OmQc9JHewOvMKUB4Z0ICK66oV0nUtAsgp8ujnZK5CPfJnYqG8kbkQMVQ/NoYCDiPiRQnw17nkdZ2gRJvc1/mfw0avqmQd0l5wzuBcPMm2HZd7L/j7FoIXqWzyZ4MggV4uoEXG94HfkkwD13ct8WmSbmFrfny2yjyKb8fozz6AGJniZaLnjUWm2cjHQNjzzgi4BaB+kZT/XMj69wo9hK3C8HVOU0aklSjCHr2/+PlGpIyR3Qx7iT75I/Ufg/xJdpZb+9BoKbfLfpbecu5EYgnF5O9QC7SlPhAQZdxPKhbJGEx11cw24G92ClSfrkhoy7gCd1RU8zIoucBDOpbZWuoXJuLLfmXwgH/qocum+RNxQQ/vsWfOLdwDOBoIuJeXW/C38mO6ZA0lQvrS1NGVUEyoGdPOQysNYChn3RXEKKtbx0dkYd2NLwdLGmjAhssLSFJCjjKrT8t86fhGMtLbszKnFXGakX/E76uNgMmj/aGc=","authorEmailMD5":"10f9bd50e442b17ae72c098e7d3a1486","message":"Super interesting, as always!\r\n\r\nDoing a quick test today to show a coworker how await does NOT spawn a new thread, I run into a small detail that seems intriguing: Task.Delay DOES spawn a new thread, as shown by this snippet:\r\n\r\n public static async void AsyncTest()  \r\n{  \r\nConsole.WriteLine( \"BEFORE AWAIT: \" + Thread.CurrentThread.ManagedThreadId );\r\n\r\n await Task.Delay( 100 );\r\n\r\n Console.WriteLine( \"AFTER AWAIT: \" + Thread.CurrentThread.ManagedThreadId );  \r\n}\r\n\r\nThe thread ID after the delay will always be different, so clearly there's something that forces a new thread to be spawned..  \r\nIsn't the calling thread just sitting there waiting for the Task to finish? Why can't the delay be waited there then?\r\n\r\nThanks a lot, and keep up the amazing work!","postId":"2015_04_a-tour-of-task-part-10-promise-tasks-76cdd5a7-1909-3432-9e00-8acd3cd4350c","replyTo":"","date":"2015-10-02T15:20:28Z","timestamp":1443799228,"authorUserId":"disqus:modernsl4ve"}