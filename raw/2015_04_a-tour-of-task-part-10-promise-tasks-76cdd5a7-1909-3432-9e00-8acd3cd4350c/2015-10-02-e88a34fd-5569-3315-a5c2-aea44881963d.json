{"_id":"e88a34fd-5569-3315-a5c2-aea44881963d","authorName":"modernsl4ve","authorEmailEncrypted":"TVEzpjWBL51xIojnQxvsXHTINSHVR+1cvCjLvrkNDcyfexp91NM9pncaZ3nnlL0aiyN5E0mKmYyDeqfEbEJf4MdqtibYh7T7pq5NN3f0eZAhpI2KKfJjiOFKhKVSIrSvYKehefZLpv4mkc899J0S2xsRHz1Dr8jQG/6BIjQP8pfa1mpL+nMD78z4/doJiM7dnV+k7Bst3s/WXt0ySoCL6LTaYDR27N5FV5i1Sx6l2QtSe2xQMyx1hG9LH+G3xx7TcF36Z715vzSFYysrOiRCjB2w8sp6HzVZmD1fEGKRC/Q+aOzIQviHg5pixHPI6RAY/CUmpVfW4Fluhdhr5sLJQ9ZRTMCsF8RqFsDPeWLyUMEL6K9N7pE8Bpo7MhDAMOh5KMD3cVdJ+6iFf1oxifIX1zD47dQbjw66+IJoT+5qw03DhWn+uczZhMnaRbd7MFIslXWRieSN6y4/122UO7AY2tte2xIA4pUq3V14/wqnvyu5K/FI+c5UneaU637TeUlQZpN17y7k1f8HibACW5JzhO2pi4ECzV6AeswdbAjL8D0v/5SomRvvCnxlxzTa/MVqz3V9bUpeJeDw6IE9LmSpMDSGyMj7x2WW/H7Z5XX1zJAPJu765QpSn6f8llLhJp/yqGYNs2AD4xcqF92lUXQXD/RiPeV0dIbW0U/0rvVrUdQ=","authorEmailMD5":"10f9bd50e442b17ae72c098e7d3a1486","message":"Super interesting, as always!\r\n\r\nDoing a quick test today to show a coworker how await does NOT spawn a new thread, I run into a small detail that seems intriguing: Task.Delay DOES spawn a new thread, as shown by this snippet:\r\n\r\n public static async void AsyncTest()  \r\n{  \r\nConsole.WriteLine( \"BEFORE AWAIT: \" + Thread.CurrentThread.ManagedThreadId );\r\n\r\n await Task.Delay( 100 );\r\n\r\n Console.WriteLine( \"AFTER AWAIT: \" + Thread.CurrentThread.ManagedThreadId );  \r\n}\r\n\r\nThe thread ID after the delay will always be different, so clearly there's something that forces a new thread to be spawned..  \r\nIsn't the calling thread just sitting there waiting for the Task to finish? Why can't the delay be waited there then?\r\n\r\nThanks a lot, and keep up the amazing work!","postId":"2015_04_a-tour-of-task-part-10-promise-tasks-76cdd5a7-1909-3432-9e00-8acd3cd4350c","replyTo":"","date":"2015-10-02T15:20:28Z","timestamp":1443799228,"authorUserId":"disqus:modernsl4ve"}