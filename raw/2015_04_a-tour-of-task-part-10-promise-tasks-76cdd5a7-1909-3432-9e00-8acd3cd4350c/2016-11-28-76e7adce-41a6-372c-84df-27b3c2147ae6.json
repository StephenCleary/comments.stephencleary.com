{"_id":"76e7adce-41a6-372c-84df-27b3c2147ae6","authorName":"JullioSanntos","authorEmailEncrypted":"pChTjYbY4o/jbNs0Eokf5mYMxjDijgsBJQdlXP8JNPkTYy1mUaPHu0kvz4e+JRj1hByjblG0H+hx6guv0py9PvToCroBGcvAtDuxXANKD0BXZiB/K9v+aJAIePJJONeQ0S5FILxfWLiuKKMu/pF0bHMnmplZLKbvq16G3D/I62SHZikVcRECYfnJ9Fh+RJMRUAwSP9wPADcQ4s5xclTUSwCt+1TbIc7h58mCk66Gv69SzaQSGi3Wayy4MwpkLTZq+xYfCLM+f8FTLgmPO+dCU7Q4fNttbKVAYvVnCeuwjfQ691OUyew9Ha+EtFhKVwFzqR93jhKvQffkXaa6wEwf+XrAjAnQFbg1yNDk0Lze+NQHCmrFyBgjtNaP1bniq5Lzj+mKtEiXvR1y3Cdw7jx1asP5KPmjrHhpTAP8yoXvUcEu0jc9SPt1d63SYJJUra4mpqXZUVC5YEGGfd8MZ2CC/IvsXnAFJfIxbHMAxa/UDDx2yR1nIWMmSjETvgK4uvej4MVzXkj3JvjVC+m4tPJJvOhZnOoEz5TLmOL/BDvztmxUuxMCRqtDyULDHbFETLSEt7TEjLnrK2FGp4i/fL7yXV/WwRd93z78mdngm21izUsQFzhwL2d+GM73X/RUb9Ub4jed68yf2idVbWvWBniwoSgN/NN0WL8WuwwSJOz6UgU=","authorEmailMD5":"bfbe92bb4f239103a9c038bf4d0572bc","message":"Hi Stephen, I was wondering what are your recommendations to create a Class type that switches the mouse's cursor to a busy/waiting image when waiting an array of Promise Tasks. For instance, an async button click handler starts a Promise Task that will take an undetermined time to complete, therefore multiple clicks will create multiple concurrent Tasks, potentially.   \r\nI'd like to have a generic Cursor singleton that indicates when there is one or more Tasks running and switch back to the original image when none are running. My initial thoughts are Task.WhenAll and a Queue collection to cancel/adjust the WhenAll if a new task is summoned or an existing one cancelled but I don't know how to get the Task object of a Promise Task for searching the Queue.   \r\nI can provide a proof-of-concept C# project, if necessary. Your thoughts, please.\r\n\r\nI neglected to mention that, naturally, the async code that is awaiting the Task could add/remove whatever object into a collection to indicate concurrency (or just a counter of concurrent Tasks) but that throws the responsibility of resetting the cursor Wait status to the developer, a dangerous thing and the first step on creating a cursor that never changes its status back, specially when an exception is thrown.  \r\nI guess I miss the elegance of a Cursor object that relied entirely on one single component, the dispatcher thread. ","postId":"2015_04_a-tour-of-task-part-10-promise-tasks-76cdd5a7-1909-3432-9e00-8acd3cd4350c","replyTo":"","date":"2016-11-28T20:04:49Z","timestamp":1480363489,"authorUserId":"disqus:JullioSanntos"}