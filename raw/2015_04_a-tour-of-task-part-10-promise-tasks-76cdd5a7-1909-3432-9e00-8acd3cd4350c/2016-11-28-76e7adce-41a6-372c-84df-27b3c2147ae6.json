{"_id":"76e7adce-41a6-372c-84df-27b3c2147ae6","authorName":"JullioSanntos","authorEmailEncrypted":"nqIkxpLDlENPCi6vgTlPtDoYamt6LTbtbku3N9Yb9Fxfz4LuHJGCduIYn0y/LCr3x+QECRxQ6cBQUkRgZ9bcrYKRjZRGkRD4VRC+n3giZn0akcacssKSj+mee30RHfgORMeeQp69PJZ0Rr+qNryWUmiwK56wG/6mf1b48b8kU2Jhsa1Dm4B+10h9sVirKOLasW0CbHV9QAyP7KuD7tjUs/uGgefns5uVLnauFREvA2SjRI8Xqz/HP1FRIDPXRP/FWovx4OHyH/eiHy3XM4r3eryCueuA4dVU6O8OhmVZrNqOkCAPtbCpeQ+tl0iIcnNRcL0uloL3e5cVtwqaYINrBkqQC+DntjEss5fTz+QKgve3LNolayLa1pAotbQ6cuFTarrq5qblxa/Edm/S1w9vVeR4u+gFSYh5kiIZjQsFXMzegQrFSSkINqN/Ydp3heTcsqc5I7o0dk1BTYs7pD5p8ehiYxrttJ3cS7rXS8UcYQfixK6r5xq8B/Cs/qP/ojOk1lLGWa7O9NVk9IaQ5MZ4tbSIMPSsK7vIW2XOTxT8hlPws4DrzJRJHdGhIZVEHoc/HSgfpJ8pZGU5zTKo8J8LzbRrNjpr7ciqVkTAGhV5J7b91Fp7yY/170/pwLB/hinIugvMHiXYop9wwKjDJOnPcGZRLftOrNMtaV3MSAww0d0=","authorEmailMD5":"bfbe92bb4f239103a9c038bf4d0572bc","message":"Hi Stephen, I was wondering what are your recommendations to create a Class type that switches the mouse's cursor to a busy/waiting image when waiting an array of Promise Tasks. For instance, an async button click handler starts a Promise Task that will take an undetermined time to complete, therefore multiple clicks will create multiple concurrent Tasks, potentially.   \r\nI'd like to have a generic Cursor singleton that indicates when there is one or more Tasks running and switch back to the original image when none are running. My initial thoughts are Task.WhenAll and a Queue collection to cancel/adjust the WhenAll if a new task is summoned or an existing one cancelled but I don't know how to get the Task object of a Promise Task for searching the Queue.   \r\nI can provide a proof-of-concept C# project, if necessary. Your thoughts, please.\r\n\r\nI neglected to mention that, naturally, the async code that is awaiting the Task could add/remove whatever object into a collection to indicate concurrency (or just a counter of concurrent Tasks) but that throws the responsibility of resetting the cursor Wait status to the developer, a dangerous thing and the first step on creating a cursor that never changes its status back, specially when an exception is thrown.  \r\nI guess I miss the elegance of a Cursor object that relied entirely on one single component, the dispatcher thread. ","postId":"2015_04_a-tour-of-task-part-10-promise-tasks-76cdd5a7-1909-3432-9e00-8acd3cd4350c","replyTo":"","date":"2016-11-28T20:04:49Z","timestamp":1480363489,"authorUserId":"disqus:JullioSanntos"}