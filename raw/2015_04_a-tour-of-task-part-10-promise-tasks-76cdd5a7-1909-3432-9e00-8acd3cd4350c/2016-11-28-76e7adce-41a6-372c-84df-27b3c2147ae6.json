{"_id":"76e7adce-41a6-372c-84df-27b3c2147ae6","authorName":"JullioSanntos","authorEmailEncrypted":"CMfCSbwcaxuuNBxYW8uGil6WEQr976XSI6ROVINnWX/HuIV/HQvabISvqTwMldcikOUScXMZgeKGgD3zsURAD1kFUKzle67I+Q9dJxuC0uJ6knXllMTCSxduaPnSC/KuwOFqhkbZH564Ldbf03aPivGwt6Tnp7X8j7YX5mOulHA+VIvdPzARzZ5CjkPhQkrCpT65ThEPn9jncXa2VZfXvlQ/CgLWc22V5d8rt+A3DhN29ls2F+jvcacKUc60cmVZ7UbrOSwF4FoivNok0ZcPpu/4U1YzWIUEOGSc9RnQ4KPmyaAjmzFOcoauQiTQwOlNEXzLJl6fc0Ygsdw3VX0n45j3wQj2WzICGP+GKp/vUrUAg5qZHL6nF6eZGujGm59qnQwkVTy1Bc+KlFnM9P5SqEkPkIISkerDo77IpqtFJHA02LMhTuyj8yA5DKKjAF0/jD0S2v3m5UoUQWaHid0YxSvPWB0wZz/jlbtTsnafYkl7zP6mTp7M5VuwcuZype6SupyQZEjZGF8kyYpMGz7lVGBnNjXJXpyoknNpWOb8uJwMYTEAIXx+Bf2hFsFZ8/+kH+T8xwibze2V81LaeK11e3asma42zioL6w4OXHBpUgtaSsWiWqdtN6lG0ePsqxmrqHm66vG3kPFZT6a0hXF02jbQ/GKBozqho3Zu+7YQuvY=","authorEmailMD5":"bfbe92bb4f239103a9c038bf4d0572bc","message":"Hi Stephen, I was wondering what are your recommendations to create a Class type that switches the mouse's cursor to a busy/waiting image when waiting an array of Promise Tasks. For instance, an async button click handler starts a Promise Task that will take an undetermined time to complete, therefore multiple clicks will create multiple concurrent Tasks, potentially.   \r\nI'd like to have a generic Cursor singleton that indicates when there is one or more Tasks running and switch back to the original image when none are running. My initial thoughts are Task.WhenAll and a Queue collection to cancel/adjust the WhenAll if a new task is summoned or an existing one cancelled but I don't know how to get the Task object of a Promise Task for searching the Queue.   \r\nI can provide a proof-of-concept C# project, if necessary. Your thoughts, please.\r\n\r\nI neglected to mention that, naturally, the async code that is awaiting the Task could add/remove whatever object into a collection to indicate concurrency (or just a counter of concurrent Tasks) but that throws the responsibility of resetting the cursor Wait status to the developer, a dangerous thing and the first step on creating a cursor that never changes its status back, specially when an exception is thrown.  \r\nI guess I miss the elegance of a Cursor object that relied entirely on one single component, the dispatcher thread. ","postId":"2015_04_a-tour-of-task-part-10-promise-tasks-76cdd5a7-1909-3432-9e00-8acd3cd4350c","replyTo":"","date":"2016-11-28T20:04:49Z","timestamp":1480363489,"authorUserId":"disqus:JullioSanntos"}