{"_id":"76e7adce-41a6-372c-84df-27b3c2147ae6","authorName":"JullioSanntos","authorEmailEncrypted":"EUzcqQsUGjJXxitH2mqhlb+bMnboe9ztemPaSNrR3YmCMwLpCyEDzU6uCeRrTs/yAlsBTz6fQnnr4CuKmH0Gs71UUAieT+2JFojPmIZvBgTd5sfw2KqLr22NFWtOTPcdjxNkRVlbx0iiACIYLHN0Z0Vb3ufvrVc1TP6gF6sHmtqWrlsb8BdI31dxooxxqWBVAo1c6NPvjN6FHiSrwrxR3s2VuNy8p4D0PBirNTcczo3ndpMhr3mLj29aZyiracvm32EJzNTMdpSyNstuvktbBSMmyjYt8K0l52L9hQ76318ffvig1TdYC9x5GVLFQCy7DzBcJ9nb5m4q9Cm60+AHIlaBn2podNkRb3cBQR1cz8LxWjPdm6D8keiR4Gqq3tw9MTxcMOJ4B2XY/YojB6u6tORO4jWa9nPJwMyH6cd5NoqNpLJF4rtutdD2vwXvqzgvnYTdR2hyutpnxRUUkv1zUyO8SVvDlp8FbmPl9e7LvV6s1nprP6MMByZkt71mpN7sLRVMyFaGkyK5UUWJEkHwXmHyThKsP56FH1vLnQF65WlYSo8ZX0k0ay0Mlxzk80C/HHB+sXsKALoEJzFhXiS41FrRlC0xLWOLmnPTmb9VTd36STqxwWtJdA8iQSLYr1c4Z3o0rJqyadrFriu0j0Ai2gqn5Ba4O6RkmXOJ69LBIZU=","authorEmailMD5":"bfbe92bb4f239103a9c038bf4d0572bc","message":"Hi Stephen, I was wondering what are your recommendations to create a Class type that switches the mouse's cursor to a busy/waiting image when waiting an array of Promise Tasks. For instance, an async button click handler starts a Promise Task that will take an undetermined time to complete, therefore multiple clicks will create multiple concurrent Tasks, potentially.   \r\nI'd like to have a generic Cursor singleton that indicates when there is one or more Tasks running and switch back to the original image when none are running. My initial thoughts are Task.WhenAll and a Queue collection to cancel/adjust the WhenAll if a new task is summoned or an existing one cancelled but I don't know how to get the Task object of a Promise Task for searching the Queue.   \r\nI can provide a proof-of-concept C# project, if necessary. Your thoughts, please.\r\n\r\nI neglected to mention that, naturally, the async code that is awaiting the Task could add/remove whatever object into a collection to indicate concurrency (or just a counter of concurrent Tasks) but that throws the responsibility of resetting the cursor Wait status to the developer, a dangerous thing and the first step on creating a cursor that never changes its status back, specially when an exception is thrown.  \r\nI guess I miss the elegance of a Cursor object that relied entirely on one single component, the dispatcher thread. ","postId":"2015_04_a-tour-of-task-part-10-promise-tasks-76cdd5a7-1909-3432-9e00-8acd3cd4350c","replyTo":"","date":"2016-11-28T20:04:49Z","timestamp":1480363489,"authorUserId":"disqus:JullioSanntos"}