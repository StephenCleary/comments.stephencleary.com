{"_id":"0f5dcb86-f8a2-3fcb-9673-3cef27edd19e","authorName":"Stephen Cleary","authorEmailEncrypted":"pS9CZ1mP+cUWEeQQiC7L+nsFJdn28uq9voqsFbs9WkggzNfhTjP28ylsHMYr9GuXqW3JtPM+5HXewMjcP94EZeHIGDaTDMaBUR9sWjugfEn9BBe+MsMIj2L5vqfYQ8J86mXSLCZUtCwDsCaH3aBxFfs73GWuRGF4NSL74V+r1R6/0CoJ7ocpxgRacndVIuxrrW5+c3k1soG3qUfLmCt03ht3CCVpRkKuue8Ft4QBjlsevkw4F+EtnEKdeI1hwsAx5OUr6v0B+OmCSa7DshrTCP/h6PYQs71/2G7gZHDt3cu77yA1m45NfO24rcosiOyNUx+XoFESXIcgq1NlNBWFrd3QJmTAIigAxUwYwgiPNHTD61lkijArgA6UN1MgdWb9Qh73KkWIONpqjF9+SjFuqogFmdgcQ+k++cjpPkqaJrYZ3kVYXXPdElIEVyf3lKVi5qTuCdzflNwFzeiZRKfZXfbqQ3Qq456x2t0kJwxG1ggaQUtQUgl4r4e+DEpbblj9SNSXvrW18tppRamBytDD4IMekHb/uTl6CWeROgOL7OYYt+SZP/64UuNDXDKetgStyJbgs2vDVsLBsOUKlTu5yDbm1pz0bvw5hooz93Lt29lhZ81BcQVIEHjQX+vj/qLjJYeX+VdXe5dXyvdBlkoRCYFlgH5UFeYzDjhkuKhmgho=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No, I would not use ContinueWith here.\r\n\r\nYour existing code swallows exceptions - which I do not generally do. Also, there's a Task.Run wrapper around an async method, which is quite odd and merits investigation. But if you want to keep both these behaviors, you could do:\r\n\r\npublic override void DoViewReadyCommand()  \r\n{  \r\nbase.DoViewReadyCommand();\r\n\r\nDoViewReadyCommandAsync();  \r\n}\r\n\r\nprivate async Task DoViewReadyCommandAsync()  \r\n{  \r\nvar result = await Task.Run(async () =>  \r\n{  \r\nvar accountManager = ManagerLocator.GetAccountsManager();  \r\nreturn await accountManager.GetEmailAccountsAsync();  \r\n});  \r\nSetRegisteredEmailAccountViewModels(result);  \r\n}\r\n\r\nOn a side note, why not use async void for DoViewReadyCommand?","postId":"2015_01_a-tour-of-task-part-7-continuations-de3f4e98-d7b9-38d9-b8a9-e608dcf2d0c1","replyTo":"e8221b81-1862-3b8a-916e-165b2d478b50","date":"2017-03-17T16:40:45Z","timestamp":1489768845,"authorUserId":"disqus:stephen_cleary"}