{"_id":"0f5dcb86-f8a2-3fcb-9673-3cef27edd19e","authorName":"Stephen Cleary","authorEmailEncrypted":"YGklR9Olr/eKM4ObfOtPRjUORxe67GgSBMCm70xUVwuYm/UnIpISfF+HVnGXoUrmevQTkEjcJxM5e4J/D6Rl/m0OjR4Jo3/VzqBqiw0YtuQZ+YUmN2uwLt/3n8v5WGA0nzHsYJHh/HLFb9siKnFPEglR2fFiIT3vQDRM7LQcIeItJ8i92LdsIePrXMlpAyqJHaVUprbLvbOwcJ8P3qRhMQ5xEJBAjmfHm7rfRwWGIL21x0i9ikDWgJzY+L6sFKqFYiPYVB/07nJgU++8s37LfKLS+uY0LsewJuovEwxET0eTxlb29NawVCiyb007Maq317wtvTAxqfIwxD8UTG7V294/hmdZu5wD7qeATtbXxdtrmT9uSI9WH7VhgYKMNWgyW7LTUeEs2wuOrP4IVdsaN1l6lVCL9TSV3BZa44v0pPmvnSOln1A+JNf0SHCLgyVlAyLXeuTV8qoGQ8nHwZ+z7vNMe2Jyd7kDqOW519me0VPalLodY//wyVS+2s7SCVQ6piiN9gFo304CVnG6yOd+KQtiqLlhWQ3YN75tE8kSMxJqo7qseGpuoUmmwEOdKuTl21aQVw1ii1zVSRImBY65PCQXLnWUR19ISLPMkOz/hOmZXQ58cL1iADArCN6URGJMY7X5FAWcTU83MeIiZMK8IAxPMg0pxo7OY+ZNMb1LeAs=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"No, I would not use ContinueWith here.\r\n\r\nYour existing code swallows exceptions - which I do not generally do. Also, there's a Task.Run wrapper around an async method, which is quite odd and merits investigation. But if you want to keep both these behaviors, you could do:\r\n\r\npublic override void DoViewReadyCommand()  \r\n{  \r\nbase.DoViewReadyCommand();\r\n\r\nDoViewReadyCommandAsync();  \r\n}\r\n\r\nprivate async Task DoViewReadyCommandAsync()  \r\n{  \r\nvar result = await Task.Run(async () =>  \r\n{  \r\nvar accountManager = ManagerLocator.GetAccountsManager();  \r\nreturn await accountManager.GetEmailAccountsAsync();  \r\n});  \r\nSetRegisteredEmailAccountViewModels(result);  \r\n}\r\n\r\nOn a side note, why not use async void for DoViewReadyCommand?","postId":"2015_01_a-tour-of-task-part-7-continuations-de3f4e98-d7b9-38d9-b8a9-e608dcf2d0c1","replyTo":"e8221b81-1862-3b8a-916e-165b2d478b50","date":"2017-03-17T16:40:45Z","timestamp":1489768845,"authorUserId":"disqus:stephen_cleary"}