{"_id":"e8221b81-1862-3b8a-916e-165b2d478b50","authorName":"Stamatis Mavrikis","authorEmailEncrypted":"pOFF1tTkRdcjvUv6Gap8fhd4G50UgN0bHxvkOn/1OPgLJbCY1dybnhytcAQv15QwbzSnLXf96NhoagXkwZWChM4l+hhYkPt/GDHE3WP1U1Lc+3k6nze2v0w5hJrfc9eheWVYbca7by3C5fldzdDmjGojNEM7TE1pc/44/wYgatX/Fes3nFj5zFnuHFqHq7jvC6cypNdokM4PevxuDCYvl2U4WDyFwMjvPNo/U1sjauVHZBPb7Swh56ZBxjXEOnhTgpPYqQadN41IYLATy+xU+TPrKhA1iBdfB7iN5G1c+k8+lxfuEdrPdTvnTRwh3uwvedrntQO1dUh34PmDt1a7iKZ2GuVeNgWRAfqE3+2ERzd6rBvCkGHugtICk8rGAJbjtAaIniCtxpaDmjjNVSEEaM14TLU1YgqYXCFOyCC/WIrJLxulxV0Dra4OIFBnOB0qAB35b0HdLmZyTnStSNG32WU2OqXE+rxDm+fGEUJNce2eQ2c6QKNhICOHhFwnLUKrRR1lzfC3Q5SJjigYzwcp1oMY+roay4errFhMNFL6mg3aLqWYisZkkBd/b0PwcUHm9v3mMgrr5wlpVOC3lSen83SU1/VM1veyZXdNNXO2nlxwqTz6+/aSaX+QMRBsii1/agAdb8Pdgh0i6VktF2lq0RX2giY6uUZBvbCEv5PFKOc=","authorEmailMD5":"adff651da65bdcee45b0be31824f43b5","message":"Hi Stephen,   \r\n I am working on a Xamarin application. Inside a viewmodel:  \r\n```  \r\npublic override void DoViewReadyCommand()  \r\n {  \r\n base.DoViewReadyCommand();\r\n\r\n Task.Run(async () =>  \r\n {  \r\n var accountManager = ManagerLocator.GetAccountsManager();  \r\n return await accountManager.GetEmailAccountsAsync();  \r\n }).ContinueWith((t) => SetRegisteredEmailAccountViewModels(t.Result),   \r\n CancellationToken.None,   \r\n TaskContinuationOptions.OnlyOnRanToCompletion,   \r\n TaskScheduler.FromCurrentSynchronizationContext());  \r\n}  \r\n```  \r\nIs here the use of a the continuation task valid?   \r\nYou do not recommend using ContinueWith. Is there any way, without declaring the DoViewReadyCommand to async void nor using ContinueWith, to implement the same logic?","postId":"2015_01_a-tour-of-task-part-7-continuations-de3f4e98-d7b9-38d9-b8a9-e608dcf2d0c1","replyTo":"","date":"2017-03-17T15:51:11Z","timestamp":1489765871,"authorUserId":"disqus:stamatismavrikis"}