{"_id":"ac4978d5-ed19-4b26-bdb4-6ce7ec889021","postId":"2023_10_padding-for-overlaid-structs-016e7662-3cfd-3fec-8567-66e921dbfc9f","postUri":"https://blog.stephencleary.com/2023/10/padding-for-overlaid-structs.html","replyTo":"49a56c17-fac4-4175-a5d5-c62adf135351","authorEmailEncrypted":"ntu6kMvWewzEpAArcz\u002BJHP/JcgFu3meXVIs2nGqbEruQ3/WkmyHb\u002Bmv8lZocYSb3KyZ346lL8b/jCUeqqE53hiv1b48g4oHsSYvtaOgIiD5KustuPpHGTiUoSmz1Z9k0RjoqPWjYlWeEpezpYbwHfWGDn3cPASnoJTF4KlC7Sxujr5lJVtxPDbNPzZfFQbhPQJz5437s32LLe7/Uuhxi/M7737CyLGIXk\u002BnQ0Mh7uYFEZz0W6YfK1hWWvQ1Bn\u002BS3fZkXPb72iYJpLCtY9nfDMhfIaiwQ8jcIGz593N\u002BWkzB9tnlpgWg2Qo68537s1gv5eVTXtgiCrU2v2kBcQHrZx91WWls/mDaPQtbftiEP9fM2MrDEGRj/y3DddqZAe1PXz/vPa2M0ebsrRB24Oy1VzSse61wWdOLVkfJo7nAeMbxL9QqGkNsAfuBhgOA\u002BUqD3eTnBSUMKV4BzrGKJlQ35\u002BUwjGdXDA7umvsk6Y7MQCud\u002Beex2wotmIumaLtJTwtzPoN\u002BvUGzOBt29EzKgl3MV0stWoOgcMZIwIP9X46Q3815bbAV\u002BP6jEUyGSxSpEdD2sX2nQxibR0yvVxVs6p7r\u002BUjYK0zRBGZ02qyHh7C1ddM3NPdq5t383atZbZ\u002BQ9Sv8AXbVzA3Q7P1MC47CXfxcP4bJ7RJHOR5lsUNUUiZg7Y\u002BQ=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"You can always define your own structs of larger size. I\u0027m just not a fan of the \u0060reserved0\u0060, \u0060reserved1\u0060, etc., especially when there are multiple reserved blocks. And then they\u0027re renamed (or not) when some of the reserved space becomes meaningful...\n\nSomeone posted this idea on last week\u0027s post. Looks pretty interesting!\nhttps://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html#comment-dca30cd9-f819-497e-8745-23f1636cfbe7\nI can totally see someone writing this up in a source generator that produces inline arrays for modern .NET and old-school padding for older .NET.","date":"2023-10-09T14:28:36.1130761Z"}