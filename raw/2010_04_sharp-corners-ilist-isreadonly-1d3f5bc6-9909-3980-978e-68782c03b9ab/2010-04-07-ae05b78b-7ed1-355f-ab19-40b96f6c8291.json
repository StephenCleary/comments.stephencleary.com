{"_id":"ae05b78b-7ed1-355f-ab19-40b96f6c8291","authorName":"Robert Hencke","authorEmailEncrypted":"","authorEmailMD5":"","authorUri":"","authorUserId":"","message":"I believe this behavior is intentional, but I have no way of knowing if I am right or not. :)  \r\n\r\nIn the non-generic IList, you used to have two properties for read-onlyness - IsReadOnly and IsFixedSize.  \r\n\r\nIList.IsFixedSize returns true if  \r\n* number of elements could not be changed  \r\n\r\nIList.IsReadOnly returns true if  \r\n* number of elements could not be changed  \r\nAND  \r\n* individual elements could not be changed  \r\n\r\nWith the generic collections, IsFixedSize was removed, and IsReadOnly was moved to ICollection<T>.  \r\n\r\nThe new IsReadOnly seems to have the following semantics:  \r\n\r\nICollection<T>.IsReadOnly returns true if  \r\n* number of elements could not be changed  \r\nOR  \r\n* individual elements could not be changed  \r\n\r\nThis is my best understanding, but I reserve the right to be wrong... :)","postId":"2010_04_sharp-corners-ilist-isreadonly-1d3f5bc6-9909-3980-978e-68782c03b9ab","replyTo":"","date":"2010-04-07T23:00:53Z","timestamp":1270681253}