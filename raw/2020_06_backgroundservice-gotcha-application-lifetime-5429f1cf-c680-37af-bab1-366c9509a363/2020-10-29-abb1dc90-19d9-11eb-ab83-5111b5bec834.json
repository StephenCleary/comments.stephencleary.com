{"_id":"abb1dc90-19d9-11eb-ab83-5111b5bec834","postId":"2020_06_backgroundservice-gotcha-application-lifetime-5429f1cf-c680-37af-bab1-366c9509a363","postUri":"https://blog.stephencleary.com/2020/06/backgroundservice-gotcha-application-lifetime.html","replyTo":"","authorEmailEncrypted":"ojSWA5RS4wTUX5x+XaYNnzOKRjNyDOlCCu7XUiGTlqHvwefJTqSzNDtdW3Yg4qTXOU+dGr+ny59B2ysiek1Xik/peG9byDvkkDCQr3Jrk1rfpqCBYVZ8eCpX4T8UnSusDKXL1USwQm6nu1wO4XAKBbkme1k7e6ETkI6mw9nP9dDG9Ntx7VjQPkN9Ppmi2OFnAM4nA7VK+FZ6QbRS49TdHby7z7RncS6oivg1dGoVX4ui015flCkkG5+1jsSE8++1q9fLOwIKrZnrBtyTX1I+RLO17siCnZhkgZnkFH+Z7jkd6yceXtkiw0nB0/rV6HQS7i4Wh57xQEuaIBXTLCQzhLAdBFBKkldaBTU8i3DeHqOdKCXjfNS5CyBGoYal2BjxStNIBFqnfJ74o//4jrWmzURa0+CN3jEzIMB60p21fyUOfSdB9/MyRYspBEudD9hft2qkSTp5gvvpM0a55ZoFqwGJvr9wqIL5CDzhfL0M6p1fzab2qClr//MzrCnlapQCV6GOZGnAxgft4A9CXAs9NvUQyEJGXFhJhm1FsXeqSMEqIL678oSslSMgZRH9m5MQP1rfJO+jf/dYtCopskeSuIXNtvPPKJbBhiS0o+t0beqsuv2dw8BTHKRt4rLnqYQlCRj3fo/HHWqQ73I8JAcwDdxlVvx1wqtv9nmC2bnTegU=","authorEmailMD5":"7dd713c9e4fed25355845acb9648fe8c","authorName":"Luka","authorUri":"","message":"Hi Stephen. I'm writing my first .NET Core service and I'm trying to grasp the basics...<br>\r\nSo I presume in this case (of this post) the service (and the host) are <i>supposed</i> to exit when there's no more work to be done. Isn't this the very unlikely scenario as most of the long running workers are basically meant to do work forever?<br><br>\r\nAnd related to your \"Silent failures\" post - my worker calls DoWork after a set interval inside a While (which itself is in ExecuteAsync). I'm wondering should I wrap my DoWork in try-catch inside a While loop, as opposed to wrapping While, if my goal is to just Log the exception thrown by DoWork and continue looping in While and calling DoWork?<br> It sounds silly but I'm asking this because I'm not sure how ExecuteAsync behaves. Is it, in case of long running workers, called only <b>once</b> in application lifetime, during the initial start of the worker? Or perhaps Host can call it multiple times, for example if ExecuteAsync throws an exception?","date":"2020-10-29T11:27:04.765Z"}