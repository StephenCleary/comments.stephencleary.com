{"_id":"5d909960-b265-11ea-a868-2d28d91fdf57","postId":"2020_06_backgroundservice-gotcha-application-lifetime-5429f1cf-c680-37af-bab1-366c9509a363","postUri":"https://blog.stephencleary.com/2020/06/backgroundservice-gotcha-application-lifetime.html","replyTo":"e5ffd7f0-b262-11ea-a868-2d28d91fdf57","authorEmailEncrypted":"mepqWA4fFFovFr/dgePvKyFivq5UQaBAb5QSBOfP0+LKWG8fU48XFu86XVa5LMwzRQN5Ov4biMVmKyFcC+p/0JngneQSZDOnfthqnXOuUpa+l9UaPoPhTQvv67NPslltZ/6a1bHnYUV+1E0vJhjX8WZj04tcenrDitHyikZ9ptphsYzW5bWvhx6GljCUf3H2rN3qacaidfkuR1lLTVnSl8j2aUAmq1cWfzSpuquyMb9NwPYL01CUWykSJZxDT8jZnhjZZcyriyVoVZcqnJ2fCnv23LDHor2Yf1jZxGVk1ykyVjEi3xqZ7jXE95CLqz3Wa2WwX4KPDiTbSgJZwbu5uYjOw8SDi5+qUmE2YBik4/lhZRMVH52Lf4iaChJiYGJJoSMDsH2TED+1iqrNmobiOvLr8xD6Rf0FyfUys0dtYIoRP89w15qNSnklFM/KR059h9pS5eJqAaaeJgVSprzeqhcBOJ2qXurcGP2v32egZyzumIR8rICE8xTki9y40z+l77bfdMQ+HJbSngUiKX3NRVvzejXcKF8CXKowDgm8X7shGJAEVPsKd1Mqy7ztvsRR0aiv8g5GxV/0iTzk/fx4cSZd0IIyZQU46FWOvLSrMIEdy+8L1QLu1vQSe932Eo7kz8xgVPLcXUCczdP0Ov5YkZ3G37JbH96wE6r6qB+A0tE=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I'm not aware of any .NET Core app that runs multiple Win32 services in a single process. The only `ServiceBase` type used by .NET Core is `WindowsServiceLifetime`, which is an `IHostLifetime`, and there can only be one of those per process.\r\n\r\nFor a .NET Core to have multiple services, you'd need a `ServiceBase` type that uses `IHostedService`, and a custom lifetime that interacts with those and supports multiple services. I'm not aware of anyone who has done that.\r\n\r\nOr it may make more sense to have `ServiceBase`-derived types and have each one create its *own* host. That seems to make more sense to me - each one would want different dependency injection and possibly different configuration. I'm not sure if .NET Core supports multiple hosts; and if it does, it's not going to be the most natural path.","date":"2020-06-19T19:45:02.242Z"}