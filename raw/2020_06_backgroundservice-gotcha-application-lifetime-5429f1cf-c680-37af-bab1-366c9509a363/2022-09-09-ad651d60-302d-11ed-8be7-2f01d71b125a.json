{"_id":"ad651d60-302d-11ed-8be7-2f01d71b125a","postId":"2020_06_backgroundservice-gotcha-application-lifetime-5429f1cf-c680-37af-bab1-366c9509a363","postUri":"https://blog.stephencleary.com/2020/06/backgroundservice-gotcha-application-lifetime.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"Hello Stephen, first of all thanks for the great articles which always have something to teach. One question, would it be a good idea to forward the `stoppingToken` to the `Task.Run` and to every async method inside the body of `Task.Run` ?  \r\nFor example:  \r\n```\r\nprotected override Task ExecuteAsync(CancellationToken stoppingToken) => Task.Run(async () =>\r\n{\r\n    try\r\n    {\r\n        _logger.LogInformation(\"Work started\");\r\n        await Task.Delay(TimeSpan.FromSeconds(8), stoppingToken);\r\n        _logger.LogInformation(\"Wordk ended\");\r\n    }\r\n    finally\r\n    {\r\n        _hostApplicationLifetime.StopApplication();\r\n    }\r\n}, stoppingToken);\r\n```","date":"2022-09-09T10:53:46.117Z"}