{"_id":"d827a64c-2dce-3d51-8e9d-df0ded65c52d","authorName":"Simon","authorEmailEncrypted":"WiMEqo5qmDDAuKaGy5J7dwbFM6e0W+l2AfCsjn5lJKQvxNmktOc5Z3E2gVo6TDN2mEbAdq4fGIw0BVYvSO7E5zqND4IqvQlq96QYvn4lTR+NG0fIQFY+3nRkr+U0p25NDTO20X+nw7xzejB8mLkwPxfWCtqTczblBOPAuCex6X2NznBXTXZ06OQsI1HCxZTOZTaAdrvHuaoHiAfVVs6oD7rPUnuyOBoimLHUlcOI009M3jwN48TYy0mE5G2NtQHIo7JH+umgavy4qwAKwXIbdAILDVoh11FtdlqUp2DWRW4rBRjbNmDklae8oMF3u0U+JWAPASCMBXN2ejegzXfXoR1JUnVgbdqAGRe976W8aYgAuAyVBgdH8dfFTazcK7nWxdfn5CiuU5cckd08xNKbW95l5mEKtbkDnPBAgf/2A8c0H+tJrHNdaUjmE8lrulybegUKrlfIU3SHYXW55zKaEPal9qfYeapqgS8trnZIof0ZXQ35Vx7y3FTxR7bUHSHr+1UzM/dSWOpsg9p2efJKRXuIQxmWiBvcTEXYzQ/3FVLlKw/flPSF0qSaBDp4VcCZzPFmwfwWn16+EK9oU/pLaE4PQ4b0t0RsUk7j0UIIx7/3G5aG5ff5tbc3n0qMQq9PmlmwRqSK9fnAm6qJZTKQPthSEkv5cPDz9NP85A9bBgk=","authorEmailMD5":"edf0fe258fc9accf16caf6136ea48459","authorUri":"","authorUserId":"","message":"Hi Stephen,   \r\nGreat article, helped me very much! I found this article  \r\n because you have linked it in one of your answers on stack overflow. In  \r\n this post you mention  \r\n\"I don't recommend wrapping an entire method in Task.Run\".\r\n\r\nI  \r\n have some methods (in a class library) that I must be able to call from  \r\n a winforms application as well as from a console applition. The methods  \r\n take some time, have to be executed in the background, must report   \r\nprogress or reqest user interaction and support cancellation.   \r\nAll that would be possible with the Task.Run(), but I would have to call for example:\r\n\r\nprivate async void btnStart_Click(object sender, EventArgs e)  \r\n{  \r\n //Init progress handler, cancellation token, wrap in try catch statement according to you article  \r\n // ...\r\n\r\n await Task.Run(() =>  \r\n {  \r\n someClass.LongRunningFunction(progressHandler);  \r\n });\r\n\r\n //Evaluate Cancel, Error, etc.   \r\n}\r\n\r\nIf  \r\n I understand your post on stack overflow, this would be a bad   \r\nimplementation (as an entire method is wrapped in Task.Run), but I don't  \r\n really understand where there are possible problems, and even more   \r\nimportant, can you give me hint on a better implementation technique?\r\n\r\nThanks in advance!","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"","date":"2014-12-11T13:54:48Z","timestamp":1418306088}