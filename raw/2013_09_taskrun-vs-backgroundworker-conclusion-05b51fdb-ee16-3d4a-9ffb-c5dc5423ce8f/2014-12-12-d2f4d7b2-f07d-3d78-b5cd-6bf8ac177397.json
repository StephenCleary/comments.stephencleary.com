{"_id":"d2f4d7b2-f07d-3d78-b5cd-6bf8ac177397","authorName":"Stephen Cleary","authorEmailEncrypted":"bdbqtJfM5XrLbFRsvGpHh8mf5kolUQKIaZ/VGSdNT+fGRiTc9RwydFdIEOxAHJmAXcSIh7C8JzJmjvAoEBgWS8Z5IHxR6obiYbLuSs/v7HefQmE+ATIbr8+ND18u995EdDfPxPOCT+E2x+uQeES/glpaDHjzH52kw8WghZnekfiRZoY2NaBhYjwzCZ+fWlSeLVXKkwk9frQkrwEiP79kbFBGA09mTk05TmoSPzZo8ZnQkp/bzQ7Xx94bnuTzUEY7M9mTlL4EvaIIa4IR8zNSW1aKmarjQOg71XrSeu1BidSBFG9bw3e8SsjhIRx3x/4/ImWsKHhytRUhMoleOgio9TR0/J1xepdXW32p2vCTA49phGIIAE13IlfaVWnayggH90tISKHWZuhc4I7QgPSdErBNT5Lvjm6lyjmPniOtwlvE1lLWXD+HwImve8xj5oxK7Y4nahVKBfaCNg8csx60geI79UuXOxnt0PS1686PuGTbT1evFKbtc17ZcxhyC1K6tkhQfzV39Ca6sQZTa0vcWtSMtr4zWCoy/CJvT/O/i142VBgj3EcOMnusGXJRb/sLN4aRhHfvJf4E0gVvOFOjE8+J0u95PL20BL5riaqW/W4z7+MxRzqcNgNyuy5/j5dUjw4pwWmUmOWHATEcqa50xykSbHUaS6Nv55pO+T79or4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Simon -\r\n\r\nWhat I meant by that statement was \"I don't recommend wrapping all the code of a method in Task.Run\". In your example, you have code in the method both before and after the call to Task.Run, so it's fine. What I don't recommend is if, say, you moved the call to Task.Run within the someClass.LongRunningFunction and tried to make it async that way.\r\n\r\nI have another blog post where I (hopefully) am more clear: [http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html](http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html)\r\n\r\nSo, your code as it is, is just what I would recommend. The guideline is better stated as \"don't use Task.Run to *implement* a method; use Task.Run to *call* a method\".","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"d827a64c-2dce-3d51-8e9d-df0ded65c52d","date":"2014-12-12T14:06:43Z","timestamp":1418393203,"authorUserId":"disqus:stephen_cleary"}