{"_id":"d2f4d7b2-f07d-3d78-b5cd-6bf8ac177397","authorName":"Stephen Cleary","authorEmailEncrypted":"e+uzW7k1HBFvVt985IQa/yamzk2vyJv5SNo/8J8F1tUe2oelR+TuPX3FApmJ4jNisOEBWHXg0iBtNOHhUGCldjjW6EPQrAHYG+BU6f/c9nDAH4UNdodfwgawLezhBrSAAuIIAhFop73E2+3W53Wx8h8WlWMUYPqqLpfMRMPb1PSc/eApP07ef6JNAKZ6BqJvWgJoo2rdFDSNZSHUnX2dXBtTjywy7gmAZM+FegGEyHldWNvbBA2nPh7cWAfhjNNINvY26m/qA5uixFYCpV7/7fk6dKVjMDuDObkyijiusK3N4BGqXBwpWMwBTMePUsdGDGswRk5LnwF4uLV2bGW0woYViTCLSW+xkiC427Nk0ICSD+YVF0ijDfu4WsGCbKupHmfV0zl8Ho5jfB8RXf+R59ek+/t0aduj4zSCOWvrRTobaIFu/3niKlcfClCBSGgE5g2s+1QOjoz8KfRI9Qe8EcfDCAxofUMjPAwhKGNWl4Bf4S0PX5ZiomVjLv35VONEXGjlsavphv3pDMwxn3jpMMb+aANMTUgIvb90Gq7pVz2AIRqmvK0Mbv4rSz75WxSr7sx+ses2Wj7jgh+guMM/Nqvk87I4oglLx4F4bG+AZNd/1GXbCz7ArULP85gs00QIUHjx2v7bsP3RdinrSJOYc5QsqZ5PFTGMDEK8Vr6yr1Q=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"Simon -\r\n\r\nWhat I meant by that statement was \"I don't recommend wrapping all the code of a method in Task.Run\". In your example, you have code in the method both before and after the call to Task.Run, so it's fine. What I don't recommend is if, say, you moved the call to Task.Run within the someClass.LongRunningFunction and tried to make it async that way.\r\n\r\nI have another blog post where I (hopefully) am more clear: [http://blog.stephencleary.c...](http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html \"http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html\")\r\n\r\nSo, your code as it is, is just what I would recommend. The guideline is better stated as \"don't use Task.Run to *implement* a method; use Task.Run to *call* a method\".","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"d827a64c-2dce-3d51-8e9d-df0ded65c52d","date":"2014-12-12T14:06:43Z","timestamp":1418393203,"authorUserId":"disqus:stephen_cleary"}