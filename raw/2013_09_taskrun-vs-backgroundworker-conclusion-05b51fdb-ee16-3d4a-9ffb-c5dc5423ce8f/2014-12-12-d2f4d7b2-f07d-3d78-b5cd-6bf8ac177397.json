{"_id":"d2f4d7b2-f07d-3d78-b5cd-6bf8ac177397","authorName":"Stephen Cleary","authorEmailEncrypted":"n22TXfiVXUkWyqjDokPgiXaOWpF7jKLYCMCMQhwD30qRIrqVC88JvTNvOOkYcQ1VpCBUrwVnj7yZnCsFlJMZxkpuKXZE3niZ1eDl/bLj/Rdr3V54SjDyWMzGHurubIHshxOxRx33PV32y5HcGFXmlUMFHBJIeX+V0sj9HcyTacaS5CrdLJInC/ikH8/PN52wPDrzTAAqkvVztZxds9TpUAVl+tBS4pGjusRw1No0YKCDhsR3IFIldDByLs2RXRKZRFE9PxbY8mSzBXugTgb/oyYort+3wdXFTABZIglfQYOn3tkk5IcG0UWz8oszVxGsd4rlGEXSIn5Pbpt24v89rssAOrbr8iBb/Wt2SxIG20ZO525LFB4oWfjs+qWlHH7muSdPNFIGa9n5OCzbbpcvXAzCDlL/lWyVyEEQ/exton8PTEofDLmKhz4CNJr0eJuo+lvG68woAMaiRFJFcbz8hDozc438GYSvdWZUH1InZkO9+Q283Jj9upM3xt8Mrr347abhYgYWkqtMZWVbTMheLg4DPiu0jArBj09ea5k7GdTSd0UuWmnvEh8vopQkuBM5GfwFWQ2Z58K1EbLB24QUBtOY7p95UQcv8FwtwqUixvju9dVL9zssNPfY1G/Rec4rRpL0rr9h1Qv/PLPHUJ11imVVR5rtKq8naC/rxloTYWk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Simon -\r\n\r\nWhat I meant by that statement was \"I don't recommend wrapping all the code of a method in Task.Run\". In your example, you have code in the method both before and after the call to Task.Run, so it's fine. What I don't recommend is if, say, you moved the call to Task.Run within the someClass.LongRunningFunction and tried to make it async that way.\r\n\r\nI have another blog post where I (hopefully) am more clear: [http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html](http://blog.stephencleary.com/2013/11/taskrun-etiquette-examples-dont-use.html)\r\n\r\nSo, your code as it is, is just what I would recommend. The guideline is better stated as \"don't use Task.Run to *implement* a method; use Task.Run to *call* a method\".","postId":"2013_09_taskrun-vs-backgroundworker-conclusion-05b51fdb-ee16-3d4a-9ffb-c5dc5423ce8f","replyTo":"d827a64c-2dce-3d51-8e9d-df0ded65c52d","date":"2014-12-12T14:06:43Z","timestamp":1418393203,"authorUserId":"disqus:stephen_cleary"}