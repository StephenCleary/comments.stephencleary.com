{"_id":"3a61fab0-8548-11e9-ba28-3542af84de90","postId":"2009_07_interpreting-notifycollectionchangedeve-9e466c44-64e0-3e2d-9bba-5a1c675421e1","postUri":"https://blog.stephencleary.com/2009/07/interpreting-notifycollectionchangedeve.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"sjb","authorUri":"","message":"I keep reading this post over and over, it is so useful! \r\n\r\nThere is a real 'gotcha' with the NotifyCollectionChangedEventArgs constructors. If you are working with a typed collection then you may well have your newItems and oldItems typed as IList<T> rather than IList. If you pass these into the constructor then you will get zapped with a rather unobvious exception, such as 'attempt to access beyond memory' or similar. Since IList<T> does not implement IList, the constructor that is actually used is the one with 'object' as the element type, not the one that takes IList. In other words you end up trying to notify a single-element change with the single element being an IList<T>. \r\n\r\nI made this same mistake twice, which to me is a sign that a helper method is needed.","date":"2019-06-02T15:08:08.234Z"}