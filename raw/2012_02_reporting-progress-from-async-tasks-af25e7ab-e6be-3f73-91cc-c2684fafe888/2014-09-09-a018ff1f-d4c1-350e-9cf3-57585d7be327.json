{"_id":"a018ff1f-d4c1-350e-9cf3-57585d7be327","authorName":"Alec","authorEmailEncrypted":"fxKYHHFwHc0kkhYPXQcgJqOKTJrO/dOkY3JCaNcC2CyTs0a0YrK8rsP+1QcAAfwKe17UZjHNccHZZKMFpUz8ELLEfruLVahboT9SVTYrfXxrAm8icxZSWaXG405OqJBfgIaPvbiBUhg9ekxOwZoYOXfgO1en0Mopj+pAlTJseXqklQpAcfkbE5Ja6XP9bAFjmGKuszGlMpz644U5i7tznKCPVofFsOb5wlz+5K8Ax2dRJdsArMGOyoTTEytsQaReyuZIVN7TwlIr1dJrCMsMXWFueiNDNT5zomg7SgBlP/9J5un3/HAl4z54mrv2cAYss12KqYxaMx17samj3FDzlrfvmJ5m9xSmueGJ176F9eoTCyAWP91dJTrqNhgXEWF7xrPGbxwSHtvdA8rsk9ze6RiBX9AL1cyyOqomNHipdNnpWbJGCtJ5job/1xfSr18AC2raCPQQP7jwFdELRvvhsp7mL7tatRYNviHPg13qj1HrVi50DCRWSU7yRTX5eGTV/T44sUbejjP+H3nkbN5wfL0XWt+IRcFdO+skVcbuZ1GGgC+A0Y7+8M0m6zVRZCN2DB6U6Zv0mhXu+nG3YUFurnPDgr6nV9RGfHNXopopTHHJBHM502M8ckAO0dl/Dsy0aD125FzXhYl2h0keLSWQ4jRpdWC+eKsKdOJ5LEGlY6k=","authorEmailMD5":"684c913f3f708ce2dd79804e410382a2","message":"Thanks for your insight Stephen. Sounds like I could also use ConcurrentCollection inside my IProgress implementation to achieve that. This should ensure thread safety and a single consumer will make the logic wait for the handler to finish before a next call begins.","postId":"2012_02_reporting-progress-from-async-tasks-af25e7ab-e6be-3f73-91cc-c2684fafe888","replyTo":"88039201-f5f1-3be1-a6d3-9496988c5109","date":"2014-09-09T02:22:43Z","timestamp":1410229363,"authorUserId":"disqus:alecbryte"}