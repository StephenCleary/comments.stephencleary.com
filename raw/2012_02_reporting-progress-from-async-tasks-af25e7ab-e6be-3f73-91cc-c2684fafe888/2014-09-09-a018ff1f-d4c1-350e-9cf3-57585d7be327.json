{"_id":"a018ff1f-d4c1-350e-9cf3-57585d7be327","authorName":"Alec","authorEmailEncrypted":"br9ewbLBUWohelmUygsQ9jE3fMnyf7fMhKQ+HX405afXrMevBSfepavpbxfe9YAy6g1VTII/GgbBYlAROqpUW+60f1TIdCIagvn5NQKQH9P0OaPT/4jvNfic/rNDSuwxCUj+l8J0jd8Z7qhp52Tl1Mvz3xk1ehEwwgmfI2e6YbFNDs6+B1RkBZUbXS9scgJ3sf1m/iHOa6wZgGahPokZVX1wdDbB+5QiJ59b9RxEI4UaL5IkYYf3GY24XAMF+EWVLhIwSxlXT50wlZtwdXycYYvGQqCR2xg/SBJMPEhVYNnYgF3tWUC+qGQp6G2MqqLCSEtuQFH3GoIt+GRYargnADblensrUWHiYQgVQ/99TppUKflZYm8OaadPH6UaGnNDXQ9p4g46CoZAg7I8ORFsLir/iD3ZAXDfPA7UMteSNeVxVROoslkyl4zeSVNsskGptHo7lR5HFz5FpGhE5yKUZw8GqjMkrjaANC16o4JDYOLJ32jEDE2giqxKEhXXS6nNaVHixqH6D+xju4TbI23odwcujgrKLKdRSmr29yDNDGwQafofYFomv/2sXNMeRIcMrZLIQ1sl14yzLIqiqm+ParJuEzY2baPCtFZxxz2Sx0fntjrogpJz07YR55dRj4LqAF1gsaGvw4qvB5xyt81683SNnfw0uepaqdnn5MTEkqU=","authorEmailMD5":"684c913f3f708ce2dd79804e410382a2","message":"Thanks for your insight Stephen. Sounds like I could also use ConcurrentCollection inside my IProgress implementation to achieve that. This should ensure thread safety and a single consumer will make the logic wait for the handler to finish before a next call begins.","postId":"2012_02_reporting-progress-from-async-tasks-af25e7ab-e6be-3f73-91cc-c2684fafe888","replyTo":"88039201-f5f1-3be1-a6d3-9496988c5109","date":"2014-09-09T02:22:43Z","timestamp":1410229363,"authorUserId":"disqus:alecbryte"}