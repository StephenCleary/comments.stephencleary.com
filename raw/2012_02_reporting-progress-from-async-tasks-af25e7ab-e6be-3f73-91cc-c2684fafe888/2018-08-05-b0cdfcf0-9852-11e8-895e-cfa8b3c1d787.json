{"_id":"b0cdfcf0-9852-11e8-895e-cfa8b3c1d787","postId":"2012_02_reporting-progress-from-async-tasks-af25e7ab-e6be-3f73-91cc-c2684fafe888","postUri":"https://blog.stephencleary.com/2012/02/reporting-progress-from-async-tasks.html","replyTo":"0bf0e8d0-97e6-11e8-895e-cfa8b3c1d787","authorEmailEncrypted":"W5JcEGsihBjxFJO0Lv3RdpJxgCwMswk81wWkednCi5vkhTaMy/plrOisA2UCcGGpM6g+91mFrG7oYbTZWYSXHDw6YjYIy11TZPXMBTXcduyA/pC5LBRxPZzWVsEVQhhWTdMFZfCDZ7LVcIlAfFhkDsQ3FVyidjfFBOOeRbU2apwk3oRtpUEaaSOVaxSrW77wcBbF4kvd4TfJlRONjp9g0MjuHORtu+wZRycujvSo+aOn8wk0qdTNu6p7yxX/+/Sp2niiE7XJmtw68Xc7vIuYZJZOQSJ29ZXCbP8+2dYemdYEFNf4lfWntPKL1i6NkQnShCktJF7CBjg4Pcc+8t7eBSBSQqBnjcUYT8mJzleolRg5U6rl+1KxgG/vD8ICIAZiGy84IT9koukdSPnOD3tKl2zM+3W5KsPER5JQpq4r9MlTg7w5T5/IsiVtzPKjycw5x3/kNnweaDZpSJ7Nh/6EcpvUPHANCknqCstKTP4Z5lEAIADn3sxx5S8WW3s3Low+NbN82v3IirnRsHzZADZYwauEUcvvhid/ZzRkjagMVgptBaJAhyHLeR7AnnCYbA7Umlal/bJI+vk19uUU8KCilbpdhIzPekq73N7PNSksO8f9MyH8YAUaxwmJuJ0Th48sT3jszODVqrggXatvcR1OdDMUVOjdpInCD9Ln+Pudmbk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"What I have is pretty abstract: https://blog.stephencleary.com/2009/04/asynchronous-callback-contexts.html\r\n\r\nThe idea is that you have a \"token\" - in C#, this is most easily represented by an `object` instance. When you want to invalidate the token, you set that field to a `new object()`. Code that wants to use the token should copy that field locally, and then only perform their action if their token is equal to the current token.\r\n\r\nAlternatively, you can wrap the `IProgress` into an `IObservable`, something like https://gist.github.com/StephenCleary/4248e50b4cb52b933c0d - the `IObservable` allows you to unsubscribe from progress updates.","date":"2018-08-05T01:55:55.981Z"}