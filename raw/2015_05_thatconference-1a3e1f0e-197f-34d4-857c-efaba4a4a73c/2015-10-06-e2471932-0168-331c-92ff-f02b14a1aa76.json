{"_id":"e2471932-0168-331c-92ff-f02b14a1aa76","authorName":"Riko","authorEmailEncrypted":"jY32Mhv7d9a1a23Wd84UwUjy6fstpNxoFcb7ywklQBQ7o8QCWp4QNmjUtbUNrTNIQO8NVWFlTYf2tpzh/oQpGgQ+MeNHsyOqXLzC0FYTqJArWDhjf9FbQc493Z+HsTZZENc+v/2z03KrRCD5omzt8RHNIEBRwoDUIrkt2ZGeQcPlmCrr+XUgNz0vsaq0GHp+Pvo2P05rXlF1d6FwNRNxHXwnecKu6IEegq2RTgVNpn/tHa52ggHeWRtejpWt20mjbc5tLtJM4o9sRr6ycVtBvx53of2fZgXGvPpSkLrh29ewOt1KFTIBqlKFdk3UqIR1V324IhnUsSe9P/oTgCotsQ89HNrySUVkPThBK14vQ3OleG3kmQMwGdQ6lvHd2jZwxc3L+OliMOuN+895xxrUoSKvHbC07BFVSJsLxaaKAlS6okOvudQmNghHpFg3QlZm2IfqQ6CdxIM0rsqeR1llI7EC3zJgALlj/iJEzhJMWzLy+ydkqi/SpcZNTv8b4gw6YR6TUi37aXawTbJDYDLzmb0ykpeo+5tigmMBoveFzSW2xxeq3WOuSZt1diTshOASV9T89cQYjiNDCQAYKeoqI7p533b8Mcc9W/f274L0o8kgVMHqPVde1SmB5eiFVUqVSt1mzs2CnbGyKEBFaozLl/umxrF4eZK/5RU28oGGM1w=","authorEmailMD5":"c1b99fc51717f507f13d0e2297a64fdc","message":"Hi Sthephen.\r\n\r\nCan you, please, help with Console project ?\r\n\r\nI have a few questions. And can you help make this code better (especially the part about working with the console).\r\n\r\nHere is the code:\r\n\r\nstatic void Main(string[] args)\r\n\r\n {\r\n\r\n CancellationTokenSource mycts = new CancellationTokenSource();\r\n\r\n var task1 = Task.Run(() =>\r\n\r\n {\r\n\r\n // doing some work, that can throw exception\r\n\r\n Thread.Sleep(1000);\r\n\r\n // how to avoid closuring ?\r\n\r\n mycts.Token.ThrowIfCancellationRequested();\r\n\r\n throw new InvalidOperationException(\"test\");\r\n\r\n }\r\n\r\n )\r\n\r\n .ContinueWith((_) => mycts.Cancel()); // need caching for this task ?\r\n\r\n var task2 = Task.Run(() =>\r\n\r\n {\r\n\r\n // doing some work, that can throw exception\r\n\r\n Thread.Sleep(1000);\r\n\r\n // how to avoid closuring ?\r\n\r\n mycts.Token.ThrowIfCancellationRequested();\r\n\r\n throw new InvalidOperationException(\"test\");\r\n\r\n }\r\n\r\n )\r\n\r\n .ContinueWith((_) => mycts.Cancel()); // need caching for this task ?\r\n\r\n // I do not know how to do better with Console !\r\n\r\n var consoleTask = Task.Factory.StartNew((cts) =>\r\n\r\n {\r\n\r\n Console.WriteLine(\"Press Enter to exit\");\r\n\r\n Console.ReadLine();\r\n\r\n }, mycts)\r\n\r\n .ContinueWith((_) => mycts.Cancel()); // need caching for this task ?\r\n\r\n// We are waiting for the Completion or Exception  \r\n Task.WaitAny(task1, task2, consoleTask);\r\n\r\n // We are waiting for the completion of workflow  \r\n Task.WaitAll(task1, task2);\r\n\r\n // WHY this task is not Faulted ?  \r\n if (task1.IsFaulted || task2.IsFaulted)\r\n\r\n {\r\n\r\n //log\r\n\r\n }\r\n\r\n //Exit  \r\n }","postId":"2015_05_thatconference-1a3e1f0e-197f-34d4-857c-efaba4a4a73c","replyTo":"","date":"2015-10-06T09:06:14Z","timestamp":1444122374,"authorUserId":""}