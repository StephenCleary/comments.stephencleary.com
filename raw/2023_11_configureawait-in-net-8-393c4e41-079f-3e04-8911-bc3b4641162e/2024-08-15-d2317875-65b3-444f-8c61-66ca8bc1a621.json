{"_id":"d2317875-65b3-444f-8c61-66ca8bc1a621","postId":"2023_11_configureawait-in-net-8-393c4e41-079f-3e04-8911-bc3b4641162e","postUri":"https://blog.stephencleary.com/2023/11/configureawait-in-net-8.html","replyTo":"a52806e8-a7b4-4153-afc7-ea3a66eb1246","authorEmailEncrypted":"NvC\u002B1gNwb0\u002BLbPxukTAJemUS4qYUa\u002BaUlemAqbYgNq41KkBtf3MZYIjccMut1yTHJ9GkjQN1u2ZGQDa2yx2TKeN2JkaoNBvSeRKQPx\u002BRHJcirKbiTaLMSQYyADddyLaFaiA2Ch0P5NuPhHC608PwbPdq82iqoD\u002BEXFAJcLQNRl6INjDjZ7PL9zs6HrEF/meX5dUDW0LnWxNPXmJlqycC9ujDO6qPwFWtCCv06pLGyaypgShDlIQ3\u002Bt6FU3K6p9b3Jqd/hkJZUKy4ckHa6OXq\u002BCjK36y9xXvfJ28Re4I3d4n3FZNwnKpTemQ97smmzBncWEtdGsnczcAtHx7o8UYupd6CDG2fW1LKdVXNTYju1bTmXFbUPupgp9tUGVaOmRIoYrzZfHMTmA3i1/uENuWL7e5cwFt7zeNenEx/T4M5z3jWqg/O0dPIAUnAWCAVdcavKg4e4LKeovTVLhn84AZ8iu2NFkOu/lqR8ULb1eWjfdFGQ3/opWDoYuabMB7rwr79TOHvFmwLExDmCPINeJ8/wjm6JzvP\u002BEbCdXr0i8bY\u002BYRIjcLgmsY2SjtljfAi5bPSqnle6\u002B3ULNvB\u002BNR5L38yOBLpqaTZNxRjgLqkAXx3p4WxDz59hKg2vKYV\u002BMFGiIooreEvVtEP81kB4GXIAjp0wr9GdBsQBaaO9qI1jr2qht8=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"In the general case, yes; \u0060ForceYielding\u0060 will resume on a thread pool thread. (Technically there are some edge cases with custom threads as Theodor Zoulias pointed out).\n\nPersonally, though, I strongly prefer using \u0060Task.Run\u0060 if I want a certain block of code to run on the thread pool instead of switching contexts in the middle of a method. I find \u0060Task.Run\u0060 results in code that is easier to read and understand.","date":"2024-08-15T08:10:54.9806171Z"}