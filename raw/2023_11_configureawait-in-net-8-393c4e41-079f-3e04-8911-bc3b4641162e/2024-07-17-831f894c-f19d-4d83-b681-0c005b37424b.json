{"_id":"831f894c-f19d-4d83-b681-0c005b37424b","postId":"2023_11_configureawait-in-net-8-393c4e41-079f-3e04-8911-bc3b4641162e","postUri":"https://blog.stephencleary.com/2023/11/configureawait-in-net-8.html","replyTo":"","authorEmailEncrypted":"X1HMW7CCck0gTM8OJGWYWv0gi1fK1T\u002BxZ7XWQBvt0woIy4iKWzYpidPvJ04O78vpiS\u002B9QBf8LaVZN6RCV3m8P\u002BE1tI6StEMCEigeLjM90Pnn2WdAGllN6gg4MF80wcQWOTtWEsMaO9pN4DU4uGa6Ix0eZkuW7szj30JBlLv5g52uQyXZGCZDs3pOY4ONKfBQXX4pMGzsPGZELDGDWMOiRiF\u002BoorNvIbG/ics796ThJmVziQO6FdZKsBuh2VEYj8ZxQDXq6MWKzkA\u002BMq5MURY3/pdSu3Be3DNnoXRkwKI0K2eM5mueXXME6l/iTJW0d1iH64mG6aE6Veq6c5\u002BE5jpDfxJoqU58zV8fAcGRQ2BJPydGAqMh0PiqalLqkzITRDZh46HUvRXxKrjWXhEsz4yFKH7pgQHQFCd1jNLXIxr3J5HruPXHF4WUYihAHTuy379T16A47RyfqxKGDLlcYRfL1IyU9uABtuVfyN9gJXPGIB5uLqm/PXzdJOXXKbcgX/1n4yLKBObBdGwyWeEviZZJnJvawcSpjO3C7eO1nOkdGP1\u002B55d5MiEa4BDADijPJxQy8brG5EIGK6dG3aMPSRKkmxnqt7wuxOryRo5DC0GIz4xjV4MzWdBQRKvI3t20KA9qTMzbYOt1DseU/hMr7/ZSWSLnTqfOfJmpjB8PtnKMyI=","authorEmailMD5":"d93e43aa4049b43d5460426a0f9ae144","authorName":"Theodor Zoulias","authorUri":"","message":"I would like to point out that the statements below are inaccurate:\n1. \u200Bfalling back on the thread pool context if none is provided\n2. the async method resumes on any available thread pool thread\n\nIn .NET 8 there is no mechanism that actively redirects the continuations to the \u0060ThreadPool\u0060. In case a task completes on a thread not owned by the \u0060ThreadPool\u0060, that\u0027s where the \u0060await\u0060 continuation will run. For experimental demonstrations of this behavior see [this](https://stackoverflow.com/questions/19543240/what-thread-runs-the-code-after-the-await-keyword/77392646#77392646) StackOverflow answer.","date":"2024-07-17T15:56:47.9443536Z"}