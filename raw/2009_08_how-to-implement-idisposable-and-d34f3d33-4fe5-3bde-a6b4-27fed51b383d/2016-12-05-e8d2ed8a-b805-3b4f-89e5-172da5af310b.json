{"_id":"e8d2ed8a-b805-3b4f-89e5-172da5af310b","authorName":"Stephen Cleary","authorEmailEncrypted":"u9riFTJfWpm+vwRne1ac/W9KHsDmxgFdjPV+B+HT5/z4BBlPPoanUd/h4eQNu+SR3EmYFyyZ6/uAUbQNYUilpa75n3FPq331qmKJHtbz5FsIF5oQJR7glHKReOAErbE8/6JmA2Wi459xXANaU5hYjaf5bWQUhkKuABjIR0D+NuVBtGUkcC5KxaOTjKXTvql/saIhoS4s8P0uPylF2rwZJtow+Xt5uqZvWf6RklSI12nbkR2QK46CBdeRIDuIpVHIb2XK8DBlSfjuunOEoTejlQf1Pmh7krCNhmQLmjA/C3ipTOJo8OZEGGcL9aAFKenfz62XFg0KB1Zjxtrxf7vfRFriLrPy0hzBITXwYQdy7GOUcnBG5KezH/FOfDqqcfK6kKcWHpnAWolbTR9Zc2oYKFFYxu5xLKJsx+x4A5R9ujlWtznivgr57APFrmz/fBOUkkiRf/fv+Bb6HrvdP+JH9lKmFkGIWgdouxEyq+0aVMDtRFxxujsDQYWUHTRRjIkS92HeZblXmPH8t3YbUZA5L5Pk5vOocArFRBwtjH6LyNooFtR3OcWUzgkhbNMudXrzTryVWVUmLqOoTnjuEnrQYsSYqc6KCSv+pLjxtrhJzdBOq51hhysqk+Z0dGfP02/CJza87eX6LcULBSqDLX5KxT2XDqluDXfS93s0KHaf+jE=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"It depends on your background. For example, with my background in C++, I see one major problem with the whole disposable system: it puts the burden on the client to dispose of the resource. C++ destructors do not; they are always called automatically when the object goes out of scope (RAII).\r\n\r\nI have nothing against using IDisposable for \"cleanup\" tasks - e.g., I use IDisposable to unlock async-compatible locks; this series is just looking at IDisposable with its original purpose in mind: disposing allocated resources.","postId":"2009_08_how-to-implement-idisposable-and-d34f3d33-4fe5-3bde-a6b4-27fed51b383d","replyTo":"8500c14e-1853-3795-b2da-02362700a4ae","date":"2016-12-05T14:20:46Z","timestamp":1480947646,"authorUserId":"disqus:stephen_cleary"}