{"_id":"bf73d638-4709-33c2-81f1-3bc30adb89e1","authorName":"Fabien","authorEmailEncrypted":"fTEtJKlrY79UmrabYQgdUSFR2QXS4ZvhDCRMXtYjuz4H/9ToObsR7/X7bQetrPbXFS1D9pC+DfhUgORjxvliLPiMQhhFg0MXdCQi8mcb32fkTwwjKmGMxu4TuEnqaTosD0J9mRlFyBRtCpcTBC+tBt/lXg9xOa++ipszaUtsYT8cy1e6G+k0CSIQ/Ufnzl0FJTo633eTWZAS249psOoMnHqbd0gJua5FH4UIc3xOrCo7bBgAE1uFSFKYG8WMppk/YjIZZKMfYTUMIC9rMupCqUgXaCjVBePdajaLf8BIpBf8z0WXyowqOCBYE0BpcSWjidh1gQfcuJBuBik2sSX0mDdutavf4EqXgruY5m5T8tmywY6JPXIKn1uGe+Y/0BJPGjk/6bycCtzGZJSLkKzkpYzqLIUOxxNbp3MDzSEWHq8qiJi/6Zb+3rMQi1CkbO9Fp/9lGUT/1wLAMWrrCKXXAVPAb1ix2sBi9shs965eYCjNS7hdDFKrOqv7IYtS1i/YseU1y5btfvhY5OMlVmoIHfsVnhHGM8RJLhlUrSr7DkPlCIkpnpEya78PRsI7j7Fpu1G32sVe0dTobHizbmDXD7PE0thkul7rhPKzG8965X92NXiH48O3wLx6u9/k2ZI6aVnwzuK92/kh5Ar6uUyUQlvGsfsCPVzo0AZ4SgWo8Nw=","authorEmailMD5":"be5474fef5e767307116d7e30773bd9a","message":"Hi Stephen,\r\n\r\nEverywhere we see that \"async\" is an implementation detail. Unless I am wrong this is not entirely true : a method marked async will generate a promise Task. It should be awaited, it has restrictions, there are multiple methods we should not use with it : Task.Wait, Task.WaitAll, ...\r\n\r\nSince there are implications I still believe there should be a way to know, it is a Promise Task, in the interface. Otherwise, if you manipulate such an interface, how to differentiate a promise Task from a \"regular\" Task?","postId":"2013_01_async-oop-1-inheritance-and-interfaces-65a8e6d1-bcc6-3bb1-9b74-3323eb40448f","replyTo":"","date":"2014-10-26T16:54:27Z","timestamp":1414342467,"authorUserId":"disqus:disqus_douBO7CvQy"}