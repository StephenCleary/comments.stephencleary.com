{"_id":"bf73d638-4709-33c2-81f1-3bc30adb89e1","authorName":"Fabien","authorEmailEncrypted":"socKorimniiQczLaGgGHWY1kWuQCscv4lu9sIbJz/l6bNLdhgQKnfy9F2+xlfSBvPXzBI+PK9ITJxyfp6Y5FWKHnDKcsemlpdryEPSs48gMheS6T0eqIC3rywwEmt0Re/0s+b5+jLFIPUFW194V4K71qGxfGrfDChAvFqyK1UKLWuZoR6p/zswrxAgCNFjAdV4zEZjO22ebWUuxSiARfW9CvBOxks9sG+3iDgkzkrIvxxZIScUSc05dT7f22gnblVgmA7ub0g+jLZzdl0lHIkrAD6It9sv/80+suhTIXZRTUj9jA95l86r+bNyHevta0L4iu8+za6qndr4AozLNx/Lnm9yqCc1/2kZsH5XASgMhsff2oDTCWz2q6/zwBGQ+oDrmVYO8P6CBMEB+Eji+ZloRc6Br0qsWsSc7R7wL7TH/Tv9mNT0RFanTo/lCWy+7j0LM8TAiYw/J1cUIvhg5A/GdIskqN6329IiSwRqlEWpEjQ5dBF5leE8iliMV3dfrhFRWHwv0EWFMNjgtiiLr6wIcy4KckmBmc9017Y0T72dV3ca+Z2W34djSbClAE6odYxJ07ie1GsAuMWToRsy1lLGLI+UwHDWoTQdx/9iHZu3J2Ij3mnrZ8T6DduP3aqOcXNbgPVQOk3S972NGk7+XP+LnRXn4w1rZ1f/g4NyXTvZI=","authorEmailMD5":"be5474fef5e767307116d7e30773bd9a","message":"Hi Stephen,\r\n\r\nEverywhere we see that \"async\" is an implementation detail. Unless I am wrong this is not entirely true : a method marked async will generate a promise Task. It should be awaited, it has restrictions, there are multiple methods we should not use with it : Task.Wait, Task.WaitAll, ...\r\n\r\nSince there are implications I still believe there should be a way to know, it is a Promise Task, in the interface. Otherwise, if you manipulate such an interface, how to differentiate a promise Task from a \"regular\" Task?","postId":"2013_01_async-oop-1-inheritance-and-interfaces-65a8e6d1-bcc6-3bb1-9b74-3323eb40448f","replyTo":"","date":"2014-10-26T16:54:27Z","timestamp":1414342467,"authorUserId":"disqus:disqus_douBO7CvQy"}