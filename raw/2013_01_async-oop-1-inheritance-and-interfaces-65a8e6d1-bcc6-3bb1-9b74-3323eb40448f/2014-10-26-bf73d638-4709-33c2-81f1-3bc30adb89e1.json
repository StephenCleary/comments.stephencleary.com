{"_id":"bf73d638-4709-33c2-81f1-3bc30adb89e1","authorName":"Fabien","authorEmailEncrypted":"T1CMi1bxTe2/eK14VbEM9Kd/XLyoxj8mTeiCWzg8SE+lP1e+xgMwi/oEw829KXZ26KUz9FEnniE3cJDjPcAPHub+Ad9vuLRJQN/EQToW230SetEK6lpJcvIFApf6bkv58qcuCgevADQ79wzht+yW6dg+TgCPUpKr6cd3PC/WdPU7NcOaSgwCN1K7M9V5XDFUUoIuaXELPDftQTcSj/yEzUR06i6qAa81NNH7R6U7vhJYIDya/4fmyVpLPv79KsX7HgR4YjeWhl21GdpxADYyu5FZxDpqhjm8lCsj2zHvsioSToCcWqFIeRmK6FybOuLuVzBQG1jTjvc+U60cx8sC4QwjO0H8DS3PNlbz9qJ/UAPPHVPobPAta7sdyrrkGAcAleIVHEfGrtShJv01ycdXaDNP7cqXhvYyXx20AhHaUtcHOJUSgEw+GAaRyx+ugaApHqxd0y5x9G/EgqgnYGlwtp62Srkcq6p4i2RYvcDvXuZH5XWgdBNEW0chfEQLlECwyf5/UUgmnPeh+QQQhj5WfN4VMqZxWQx/3MK2cwGCf3rXDSb5c6fSlh4u/RKqC92kBKib8GEzwc4fMnrhwMERPkoX+xUpqr29DZkiyq7KWfYgVb1/+4qyjiba8BS7oV6JGrO6ESTm8p4S8zAz4mmuz1pobmxhxPpfw0WhYhS3b+c=","authorEmailMD5":"be5474fef5e767307116d7e30773bd9a","message":"Hi Stephen,\r\n\r\nEverywhere we see that \"async\" is an implementation detail. Unless I am wrong this is not entirely true : a method marked async will generate a promise Task. It should be awaited, it has restrictions, there are multiple methods we should not use with it : Task.Wait, Task.WaitAll, ...\r\n\r\nSince there are implications I still believe there should be a way to know, it is a Promise Task, in the interface. Otherwise, if you manipulate such an interface, how to differentiate a promise Task from a \"regular\" Task?","postId":"2013_01_async-oop-1-inheritance-and-interfaces-65a8e6d1-bcc6-3bb1-9b74-3323eb40448f","replyTo":"","date":"2014-10-26T16:54:27Z","timestamp":1414342467,"authorUserId":"disqus:disqus_douBO7CvQy"}