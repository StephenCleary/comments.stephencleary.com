{"_id":"bf73d638-4709-33c2-81f1-3bc30adb89e1","authorName":"Fabien","authorEmailEncrypted":"X987AI1K4iNYjozcAWc4gXlFllPtjam8NWqo4JhFoW4jjtBJGqwl785MqWMGCn9ms0vr++C4LJcBT3nkERrMo2f3aE2JlXPEgA0ehYy0C5xzVU3H+Bu4bqKrs7z+xxv7+So1IdpOnn8d3vmRsuVQgM2g6AzgS16EAoGYt6ZGvbYqP0HgeOTod0I8duOuW1MHgrfHI8uNFPfXKQef62IJZ29X2mfwZqioRQR+ml7Hmy/VZX8diwW6xGWuRuVGyCA6Zm7eLF4VeR0ES78uZK794hIoyxPrELNDpZ4l7v1VllF0+vhoWVzP/RYxrhOm0uobJ/zjP6mcOJDnsHNCmvurKD0s82CSZcVDMsUfSrby1zOjK6vOB4xNHYAw1XkTg8AC+N9mlQCtZqSUVI71pl0su+doIteD9fWv7RrHEpTFMbq7de74txna45gTtSSPY5yZrFjNHTqVcLsdRiK/Zz5ZNv5ydyw/LJ2OQBVuEQWr5TsUiKRuOzT4iusGnh30c82OOAKV3SNvznCjxuxxRUltRYfKnEjX2jjEp9gkTv9RIIIQIzmuIxTTujOcIjBUwZ4nvj+qRXpPlFyh1Jc7aUQ3gasTuqjCeOiSD3UZC13FslGqOZVTBYtoiljXfBfEMwudJnHh0OcWBb5QEM526FQCuT9BzPjhyCgmJZC3M3mZkss=","authorEmailMD5":"be5474fef5e767307116d7e30773bd9a","message":"Hi Stephen,\r\n\r\nEverywhere we see that \"async\" is an implementation detail. Unless I am wrong this is not entirely true : a method marked async will generate a promise Task. It should be awaited, it has restrictions, there are multiple methods we should not use with it : Task.Wait, Task.WaitAll, ...\r\n\r\nSince there are implications I still believe there should be a way to know, it is a Promise Task, in the interface. Otherwise, if you manipulate such an interface, how to differentiate a promise Task from a \"regular\" Task?","postId":"2013_01_async-oop-1-inheritance-and-interfaces-65a8e6d1-bcc6-3bb1-9b74-3323eb40448f","replyTo":"","date":"2014-10-26T16:54:27Z","timestamp":1414342467,"authorUserId":"disqus:disqus_douBO7CvQy"}