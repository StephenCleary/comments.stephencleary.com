{"_id":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","authorName":"Nick","authorEmailEncrypted":"LLK7JTNEobZcIlkGIr7eLEHpAr/wJIGgqjRd8hZB78nitghGNU6hzlFyHRFuP+uS/L3+FmR2wNIr/ESR8GLkR8QfXEGO8nS4sRbBsRztMH1aZgZLsI3PGH/Z2UfX1GPPZiFJ7gCxd/Smra4diPmYQ7oWtfbCaXAtoYxO6qZCcvnj/MV804dmvdvHcYOSe+2DGNK2s+/pM0sanNXGD2FrfPt7AGrPvd1MKuzX+br6XAVtPyfMH8oS9g9WNkeOPMQ2gGBOfVVJaVR8PJeG0P96AULf05bN+AlFMBmIEkGH9/k7qo+XmHAaDVuLR4OQGZCehmtOueHDX3P9KsCLdunIvApsWzTNkdW94xbqNfW3wSdm0TGwrwskJbd3XffrjpWvUYNatOrclTeFPJE8C/jLZPE06JBdUWrlJVN4AZ1SZs+huB9cMe8hVHDldAIyV5k4/0+Woi/xznAf3r1rGIs1Vo/BxbTrut75My5pDEECzUvTONYxK0Sa98MkOq7hvSP/g8JU4dCXgi1VMQOJbxjeQ2gtwgfzgOb7LsFtnAtvx+MSTyymuZKLktZOurknGE+uL2sSdWZYgGHc2MyhC1vOuYc3kEQZ1SvEFlJyEZIC4pz9bDBqFJGfmpJxPt+PVx0kbod0BcUwh6ZqCWjTapekr+eLRuc+Zz+WkQ+gQOiVpR4=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Hi Stephen, thanks for the article. - I've read many of yours in the last six months. Question on your statement not to use task constructors. Microsoft's Async example at [https://msdn.microsoft.com/...](https://msdn.microsoft.com/en-us/library/hh191443.aspx? \"https://msdn.microsoft.com/en-us/library/hh191443.aspx?\") uses a task constructor that is then awaited after some other work is done. If I understand you right and you advise against this then how would you re-write the code they have below?\r\n\r\n // GetStringAsync returns a Task<string>. That means that when you await the   \r\n // task you'll get a string (urlContents).  \r\n Task<string> getStringTask = client.GetStringAsync(\"[http://msdn.microsoft.com](http://msdn.microsoft.com \"http://msdn.microsoft.com\")\");\r\n\r\n // You can do work here that doesn't rely on the string from GetStringAsync.  \r\n DoIndependentWork();\r\n\r\n // The await operator suspends AccessTheWebAsync.   \r\n // - AccessTheWebAsync can't continue until getStringTask is complete.   \r\n // - Meanwhile, control returns to the caller of AccessTheWebAsync.   \r\n // - Control resumes here when getStringTask is complete.   \r\n // - The await operator then retrieves the string result from getStringTask.   \r\n string urlContents = await getStringTask;","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2015-03-05T22:49:06Z","timestamp":1425595746,"authorUserId":"disqus:disqus_podUK3vGs5"}