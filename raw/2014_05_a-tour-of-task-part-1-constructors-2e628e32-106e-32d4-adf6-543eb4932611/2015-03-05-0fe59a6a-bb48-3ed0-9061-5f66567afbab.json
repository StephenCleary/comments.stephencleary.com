{"_id":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","authorName":"Nick","authorEmailEncrypted":"ekP2KbH/M3XrtlnYq+x1YtBO+VGyUMcKTojGgsUIjre5s4X1ifbzvDXew8Vk2mO+Rv3Q2q0QSY2bJYiatkzfvipKKUEwjOX6F/NV+0+7/BDCYqyH/kDJlF17xgxfJCi+Tr9LaLvXZyJ6QEqmV3X29C5Z0X9jlR3Yx/QlQ1DvD6NatyL+sgaqSgAgx3nbVbdmW66rlMIgMxLWH4inmT3yYV27oXmGl0lngmKIKbi3n3PWrHuQIfImMztAkto6PV53BBWwpRzCAotkEXafWy/T7rFgNfBtUn9ukfHorrNFW1VVe9NMatNf+0izLm8w6To/igeFxOL0BH2P0ro5FkabL7TnQ5KEot90IZhKU2P2dyba91K1zhBuGeoFZVA8TyozxvSg45CwtikhqRk0SBXggIwa6Q5wLVSCli94AXKr/6/zL0yOx5aMB4r40/9IUvkJGwPjtFmtQ9dMyWJvMxxc2hy7maIATlefC5scKZumkz45EzznhUyRs/O4Wu9MlGAPKyx+wMWaw3wWIPc0lJQunFcyJOgWWW69YJZ89NvUq7zfXCxG94EF0TQUTj4jmSZ8+k3UOatYp4ZaFqHOgj0/TW9tAtMpiD76veyuaXJQDAFuJQQBnlPnDNuhHoNGfGwHc88ShJTllvUgHdA+KbKWXWj1Eg3ljRxGrcBgzZMVFcQ=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Hi Stephen, thanks for the article. - I've read many of yours in the last six months. Question on your statement not to use task constructors. Microsoft's Async example at [https://msdn.microsoft.com/en-us/library/hh191443.aspx](https://msdn.microsoft.com/en-us/library/hh191443.aspx) uses a task constructor that is then awaited after some other work is done. If I understand you right and you advise against this then how would you re-write the code they have below?\r\n\r\n // GetStringAsync returns a Task<string>. That means that when you await the   \r\n // task you'll get a string (urlContents).  \r\n Task<string> getStringTask = client.GetStringAsync(\"[http://msdn.microsoft.com](http://msdn.microsoft.com)\");\r\n\r\n // You can do work here that doesn't rely on the string from GetStringAsync.  \r\n DoIndependentWork();\r\n\r\n // The await operator suspends AccessTheWebAsync.   \r\n // - AccessTheWebAsync can't continue until getStringTask is complete.   \r\n // - Meanwhile, control returns to the caller of AccessTheWebAsync.   \r\n // - Control resumes here when getStringTask is complete.   \r\n // - The await operator then retrieves the string result from getStringTask.   \r\n string urlContents = await getStringTask;","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2015-03-05T22:49:06Z","timestamp":1425595746,"authorUserId":"disqus:disqus_podUK3vGs5"}