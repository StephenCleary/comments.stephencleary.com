{"_id":"0fe59a6a-bb48-3ed0-9061-5f66567afbab","authorName":"Nick","authorEmailEncrypted":"vExPRmATE1yHgwkAlsAUM7UKrNp5xTFfntkf3ca5CeCkDHz/gx3UTfv5LIsS6EnB+1AGuPZ74sp9WDiVZxSmuJVJ3ATfiQuJBZ70VeKgfq+SBquX0iizUaSyJtBNRmPX2wAy3/EGeLnu9jO42VjidrNY9ZpPIiQhezQVOfKHlX2WA8hs4y/EfPpsCM29c6zjWA8yl1kPb+RwRG7wf0qGbRTd/AMlzigpLM/VNHh1ceGMrAd4v6Y8KYZ7yHmeiUSm4S7r+yDiCp9ifOm/yngeVdN0H6Ua2r0U2CaKb1YFknrRMxKzN5ZKuHwvYqpjxWw0AJa+bL04GPZ3OR/u1eXj83iXxTSXzpyhQziVrbDMxzvY/mjlP3QgJHme5NCSld7IIDHg9jC0OHoqqH+ER4n3ckxJD/QlTITKLQDWf2z11Fwdudl5dQlJEB6YhIWJZD5TNBwAj+x8tG0pEeSp4pXPXQzyNnqrQXQNPIP5ptolPZa+f/Zss6vJ4RiEC0wc4A6vCqYae8qbaQuG4t0/4G1aQqAqMWNX9viC3AgiLyBUUWOELkGm2SyNhMkbzSA02nHCdqgeDPVdGWYa0bH3Dm+y7SCA8xM1gwEprXWuQ3bqfPBOFa+r9ph/BNY4T+i4DgBnK3sh32g9HOLdo6OTfn5AVe1TicX+8+7K/x3HU6R9Bes=","authorEmailMD5":"deffa4f5e332fbe8d50c94844b85d315","message":"Hi Stephen, thanks for the article. - I've read many of yours in the last six months. Question on your statement not to use task constructors. Microsoft's Async example at [https://msdn.microsoft.com/en-us/library/hh191443.aspx?](https://msdn.microsoft.com/en-us/library/hh191443.aspx?) uses a task constructor that is then awaited after some other work is done. If I understand you right and you advise against this then how would you re-write the code they have below?\r\n\r\n // GetStringAsync returns a Task<string>. That means that when you await the   \r\n // task you'll get a string (urlContents).  \r\n Task<string> getStringTask = client.GetStringAsync(\"[http://msdn.microsoft.com](http://msdn.microsoft.com)\");\r\n\r\n // You can do work here that doesn't rely on the string from GetStringAsync.  \r\n DoIndependentWork();\r\n\r\n // The await operator suspends AccessTheWebAsync.   \r\n // - AccessTheWebAsync can't continue until getStringTask is complete.   \r\n // - Meanwhile, control returns to the caller of AccessTheWebAsync.   \r\n // - Control resumes here when getStringTask is complete.   \r\n // - The await operator then retrieves the string result from getStringTask.   \r\n string urlContents = await getStringTask;","postId":"2014_05_a-tour-of-task-part-1-constructors-2e628e32-106e-32d4-adf6-543eb4932611","replyTo":"","date":"2015-03-05T22:49:06Z","timestamp":1425595746,"authorUserId":"disqus:disqus_podUK3vGs5"}