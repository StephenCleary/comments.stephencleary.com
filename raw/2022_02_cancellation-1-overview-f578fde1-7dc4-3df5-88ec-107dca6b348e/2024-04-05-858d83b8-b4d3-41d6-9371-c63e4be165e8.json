{"_id":"858d83b8-b4d3-41d6-9371-c63e4be165e8","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"JHZw6CJ5WC97wMpKFdOR1Ti5pVgyxovo/U8m3tJHMwNCbSX/u4/bDVCUXZGL8Kc4015NfdD7UH9WdCkVWAE2Od7BujigxrKIAa8x\u002BF5FfpHmKEUce5hQ05AHthZlxP4CicHBB\u002BtQ3vQQWgKvy3/gEivBCwqMJfiVpoXQK5hoDDrwP8Et6RKmFJe6aGeTofGpkdDzzA4MDBTAlj/fo509\u002B\u002BYFh74NQo0hXJ5iw4Pw1B6CSQMQW6F11L1Fy5hpeLEwAAuUQWo3qxt8UpnLZxCeR/1mb4fXYt8OnLNxstTuiQSWeg7c8MalCLWcFbkjNGnBUa0hKRDLYFA3RrLA9Ty3VrUNqbaaX7Sl\u002BPnBXilMMVXxg7psYRS5WiZJXJQDIH2zuJx\u002BTHo4jg/LorFQTXsuF2gdFFr5T3ZgooPZwLfqKCVi9FXuQE2WSSerZD1OL7YtXplHixZE6ZysVYB63s20E7b\u002BJnbinQDoCq2bwADAyNl2YUt8Q13/ojfAd\u002Bai5U\u002B6s74ZDzYS8NRkkA2jAtC0iX3WLP\u002BiKfKcK3rcgkHIHrA/uy5YluOoLVH93v\u002BiXzhln0KALBeZmdNxsLEP1yl36IWLG/KrqOkzs7dZ2TA2JM9z3fWadZPFdLtu0S2NUckckcfA8Ab2Mf2HtT6BdENJoCYzzgVOPKVjncOPdC6sP9g=","authorEmailMD5":"d66d5925cf7d5fc1375ddfd93335a921","authorName":"Jesse Slicer","authorUri":"https://github.com/jslicer","message":"Hi Stephen. Appreciate all your hard work on educating all of us about asynchronous programming. I quote and link you often in code reviews for best practices. One thing that strikes me as odd is the throwing of \u0060OperationCanceledException\u0060 when respecting a request to cancel via a \u0060CancellationToken\u0060. It\u0027s a bit of a cognitive lift to expect an exception on the happy path where the request was made and the \u0060Task\u0060 honored that request.  While I accept that as the convention, I feel that *surely* there must be a better paradigm than using an exception for program flow. Thoughts?","date":"2024-04-05T21:50:38.8995527Z"}