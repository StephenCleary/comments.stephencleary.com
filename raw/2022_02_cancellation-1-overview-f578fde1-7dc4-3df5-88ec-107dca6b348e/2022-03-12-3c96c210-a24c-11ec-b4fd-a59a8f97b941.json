{"_id":"3c96c210-a24c-11ec-b4fd-a59a8f97b941","postId":"2022_02_cancellation-1-overview-f578fde1-7dc4-3df5-88ec-107dca6b348e","postUri":"https://blog.stephencleary.com/2022/02/cancellation-1-overview.html","replyTo":"","authorEmailEncrypted":"fGP80Bb1lzmqTY0Qm4gdrPe2cWLVPRHtBw046rILtGN+AZXH1cHYAVYRnTjREAjKENe/1jIceQouTaEfQb+18PPw2dEjJ2XYeCEN8n9g2eCdS+4R0A1qKH3rzHevh6ZzNZAiVpvWCyM1GBcjwY5EQk4hc9yeFsLj5btgYJvbYNv8GyTRSjT8NuZ1P3P/+s7jQZKupIGYpMVG37gO4mPr70QEc1wizinE1CabbAVesfW71w2ZOvtrvxTknKdAOrLEb/CnILiZbx3etiffCo7tpUdDAOmqwRxGNzv9yDQllgBygxLkH24OpB9JnkFGsxaqMYVJqdXixPTp1ZONtRhmqNloQS/z2ue/eKbeTDPgLon3BnWRMP6OkUS0rEOXgN2Jhp+LvnMAPFlNyzVHjP1gpaXXv9+EngYkZMYeKF9B11zih6rkJf4oQIxdkidf6PCS/vBDU8ZiRdese3YvmMvBuOoQsX0Qfjt8w2TnZ01+0WT1kyVhoXj6O1YTadbYm1+ndA854YtNr8sAO3IuXJYp0f+6hkjFCqC8Wt1IrFw7MWHNTx1H3AbcWXP2kUjAP7ZwJZ5OUh/VFuJ6Qh7gXGEnGtmm78R6ETr12xI425GHRXrRoaPTqjynWElYYljwI1s3TNw4dioTZ1l+2lsdH1b4vCDB3eWDCWOy2NYTmTTFn10=","authorEmailMD5":"dabc563241484bc06c27f5ff75b951bc","authorName":"Paolo Meozzi","authorUri":"","message":"Hello Stephen, i don't know if it's important, but about passing the 'ct' to the Run() method, the difference is seen using the ContinueWith() method.\r\nWithout passing the 'ct' to Run(), the task is considered 'faulted', even if it is stopped by the 'ct'. \r\n\r\n     CancellationTokenSource cts = new CancellationTokenSource();\r\n    private void button1_Click(object sender, EventArgs e)\r\n    {\r\n        CancellationToken ct = cts.Token;  \r\n\r\n        Task t = Task.Run(() => DoSomething(ct), ct); // -> canceled\r\n        //Task t = Task.Run(() => DoSomething(ct)); // -> faulted\r\n\r\n        t.ContinueWith(th => { MessageBox.Show($\"canceled\"); }, \r\n                                     TaskContinuationOptions.OnlyOnCanceled);\r\n        t.ContinueWith(th => { MessageBox.Show($\"faulted\"); }, \r\n                                     TaskContinuationOptions.OnlyOnFaulted);\r\n    }\r\n\r\n    private void button2_Click(object sender, EventArgs e)\r\n    {\r\n        cts.Cancel();\r\n    }\r\n    private void DoSomething (CancellationToken cancToken)\r\n    {\r\n        while(true)\r\n        {\r\n            cancToken.ThrowIfCancellationRequested();          \r\n        }\r\n    }","date":"2022-03-12T21:34:46.151Z"}