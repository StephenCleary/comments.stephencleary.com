{"_id":"41c5b410-2000-3c46-9c1b-db91f06b3a4c","authorName":"Stephen Cleary","authorEmailEncrypted":"stp8EOHNGFN3y4kuG42N9q1QAFfrYX6QMFAIXLsDMhiQpJyI+XOglj7FyD+fj0iVmOq0I4W7Qk4r7+bIlmc44iTjtd4ZuHPpLmKxgxqdectaXicdNzrlQ3vPxpsJgnDk9RvKmqWCmSZ+lZN/uRYwNtxY6g7/wvShU1ljAxA7UsQL3oFzvZ1Jf2YQb3eqi6zxpyXQPL2ouiRKw/bwS/wKpQsfNRauh5qEXh7Pm5rfhwiVO8Vwdtvnpi3fJKElo/KgL1Y2erZOCaaKSo0Ar7lPgXczcDhSPwTdLuQzZsF18NW8Ly2plVFcLp49t/MulVt45VDbtqWLs/JP0H5eT8i4WtctnxzAgNAWIDwPhaniUU4e4XiygruBILu+SuftOsH1pq0Hr5wA2sHQjg/MN97wHenEm23GdKe6E1tz5UOaQwiS45EIqZOsFdsrGQdpA/ZsG6L6BhCE9f4LRAdf2VYhV2Cp7dpf5A/gER4rElMUGbN6xCpDdlBL8/21fUz7hqBV+StaJLk+WwJTgHtPu0TQMetyh7jlJX7ejOogv7kPW9QuDOwTN+t8ukSM6o9CMgShhPjNQBNyHn5BiBgKCGTuiZr3aDw2iIDTTLMxIrEl3PHll54UGCVs82w6hl0tW80cWRfXfdyQNnFEv+S+TQxtQCbTp0Pzieb07+olWRNBNXk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I recommend using await or IProgress<t> for UI updates, and not calling Invoke directly.\r\n\r\nAsync/await (with Task.Run) allows you to push the CPU-bound work off the UI thread (Task.Run), and allows the UI code to treat the offloaded CPU-bound work as though it were asynchronous (async/await).\r\n\r\nHave you looked at my posts comparing Task.Run to BackgroundWorker? They are a series of examples that show how to do the same thing in both systems, and explains why (IMO) Task.Run is better: [https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html](https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html)","postId":"2017_09_happy-birthday-async-4abb0050-b281-3a1c-a271-8815945e5d18","replyTo":"564525fd-522a-3648-8924-3e80b962ce6d","date":"2017-12-11T00:21:15Z","timestamp":1512951675,"authorUserId":"disqus:stephen_cleary"}