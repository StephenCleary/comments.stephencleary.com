{"_id":"41c5b410-2000-3c46-9c1b-db91f06b3a4c","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"I recommend using await or IProgress<t> for UI updates, and not calling Invoke directly.\r\n\r\nAsync/await (with Task.Run) allows you to push the CPU-bound work off the UI thread (Task.Run), and allows the UI code to treat the offloaded CPU-bound work as though it were asynchronous (async/await).\r\n\r\nHave you looked at my posts comparing Task.Run to BackgroundWorker? They are a series of examples that show how to do the same thing in both systems, and explains why (IMO) Task.Run is better: [https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html](https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html)","postId":"2017_09_happy-birthday-async-4abb0050-b281-3a1c-a271-8815945e5d18","replyTo":"564525fd-522a-3648-8924-3e80b962ce6d","date":"2017-12-11T00:21:15Z","timestamp":1512951675}