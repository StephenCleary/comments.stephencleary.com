{"_id":"41c5b410-2000-3c46-9c1b-db91f06b3a4c","authorName":"Stephen Cleary","authorEmailEncrypted":"X2z3zzWM/wLv4cpo5U9/GQ/fReYIaOqEOrQAKTjpXFTZ8vBU5eYtg0fVmdvzYbJup3ltJFf3ud+qwxrfrKRQNSWKojTueouyNb8tiC0CMJTd0H28Td/1/7PJCJrLt3frul9CGTmwF8dsep1R9belpooBrOxz1S07NtlxCz+Y9vknSWvLUdSiSifs3p23lvhMeR1azdR4dgQYSConXrUp1tUQt51LSWDpFuRsDvt0S3l4h2ZljwfrWI5ViJVacZYnnJiBT9QlNTdOkJbvw/SFtGwOTrxbkoypdljxzzZdatXofcgpt/ZJPEg923+fs+D6JAS7LIaSUioYV9/4+p2betsprkVSMWG1GpEVtEQ9g/5gnoWQIyF9/nuEbOUm9MneswtbNkBAwb+uB1fkj1NBY+cMLcEoL9tTQ40Z8j+ey9k5XMOz6/zJpHvxFYtJhQ5jtu3gVP5zHbma77lkq+zCIbAmHisa+NPXSmMMWxJWE7Zmf4XYQ4KMSi7YdnWHUpOnwuGpM6FXF61KW2u6oNYi0X0zPtdxaC4fQS8zMBrbV/VtFP32iqnJPjkaTcWasV73k6ZJ2Kgzs9fCZbZ5lxmPEpt4ASbKJNwnFVfn0WyJOiBWjLywHrhzpnKv2UN/4+FIkoofBk+siNkaL2Fd1Y11BxfA2d+dXWvPUr/D0k2JKMs=","authorEmailMD5":"28dde5772b48c92e08b8050411aa5ba8","message":"I recommend using await or IProgress<t> for UI updates, and not calling Invoke directly.\r\n\r\nAsync/await (with Task.Run) allows you to push the CPU-bound work off the UI thread (Task.Run), and allows the UI code to treat the offloaded CPU-bound work as though it were asynchronous (async/await).\r\n\r\nHave you looked at my posts comparing Task.Run to BackgroundWorker? They are a series of examples that show how to do the same thing in both systems, and explains why (IMO) Task.Run is better: [https://blog.stephencleary....](https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html \"https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html\")","postId":"2017_09_happy-birthday-async-4abb0050-b281-3a1c-a271-8815945e5d18","replyTo":"564525fd-522a-3648-8924-3e80b962ce6d","date":"2017-12-11T00:21:15Z","timestamp":1512951675,"authorUserId":"disqus:stephen_cleary"}