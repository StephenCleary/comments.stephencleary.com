{"_id":"41c5b410-2000-3c46-9c1b-db91f06b3a4c","authorName":"Stephen Cleary","authorEmailEncrypted":"svOOgz4K20bH57MA3qWmVD+//N1XgvHDnEHSq6irNso9ql18LjOG879OetFW4dzMQeQuRDTj3WGONdtkomhDq1B6g/RtLaWu0ldWBTsN6e3WTUl50iE4qNnpj7rjcZNJU1ewACF7avU8N1uCcAbS/MPSWn9gdIdoeHuI7yLkDDrD0rujoiJ6YimnnVHHxAjXyArVCK9bTqDuplOI1Uij3JFqxsyeUxG8fChEnQZzgrcFgP3CVePrkO1zogB7crgnTlvyAw1DB2IYOvCtarSkEIDSnEnNPKuuj8ZKgyul6p3tmqjZkmmxFAlrbgWYliSyHFYVpUMqjQqPMHOEwthny48Y3hiCse355+U6Jc05IL9XV7Ry4x1mRL0f1EYxezVYZ2OnalRupYxKNzwGzIIJX2HB8krcthRRY54pMGw6BFgsWtlwsLCehjs90S6m4jqaJWS7pqSKvHVHMaqzJfWnBfuZO7tqo16XOiE3yBLJlSaITlrVzaePxGgaSwhAXT0+20NvDaZBNAv1sQj1CbMucA4UgDsGGTmQ2J4FsmsHmftnIZhEj0CVwTUhFEcARsGLgAuy5VeMuqfLcI8Hrrn09lBLLvJ9M3cXFRJeSbVLdmmIRVCjLv80ZT4N4S6ZfXCdeI9bii93LNmDS54d8eM3HOFJTzZXHNpltz5I0h1xzRw=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I recommend using await or IProgress<t> for UI updates, and not calling Invoke directly.\r\n\r\nAsync/await (with Task.Run) allows you to push the CPU-bound work off the UI thread (Task.Run), and allows the UI code to treat the offloaded CPU-bound work as though it were asynchronous (async/await).\r\n\r\nHave you looked at my posts comparing Task.Run to BackgroundWorker? They are a series of examples that show how to do the same thing in both systems, and explains why (IMO) Task.Run is better: [https://blog.stephencleary....](https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html \"https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html\")","postId":"2017_09_happy-birthday-async-4abb0050-b281-3a1c-a271-8815945e5d18","replyTo":"564525fd-522a-3648-8924-3e80b962ce6d","date":"2017-12-11T00:21:15Z","timestamp":1512951675,"authorUserId":"disqus:stephen_cleary"}