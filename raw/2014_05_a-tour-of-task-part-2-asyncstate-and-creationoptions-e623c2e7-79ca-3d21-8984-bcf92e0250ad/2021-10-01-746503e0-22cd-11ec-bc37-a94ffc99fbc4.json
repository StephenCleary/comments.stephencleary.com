{"_id":"746503e0-22cd-11ec-bc37-a94ffc99fbc4","postId":"2014_05_a-tour-of-task-part-2-asyncstate-and-creationoptions-e623c2e7-79ca-3d21-8984-bcf92e0250ad","postUri":"https://blog.stephencleary.com/2014/05/a-tour-of-task-part-2-asyncstate-and-creationoptions.html","replyTo":"a838e8a0-2168-11ec-9ebe-ebc3485e1cca","authorEmailEncrypted":"Iy2fctKRvf6PesAFNRYrQsoCw52l815chlJkrFXiAU1N+BmgU44NGhNaw8KxzmnR2mZXuJBxlUy13T4cZSbgsSewp8nfyRk/FQT6WbdzH+c0C0i+CkxdTApHvyD0TaoIuhG7tkhQwqnZXyLAozuG8pHCQ3s70hqIGnuBwKswvCTfaepuvyRMScc/Eq8194m82YGxxaLYZbv3vTciUUpg6lhA4dHRqUlG2PbRW9+UfvFYXg+NsXEKH3mzvhDOQBhI7mm/zI5Ojyj4jmNK03xDOYH0hKn1VroRLai0ChXUlxh8TI9HNYGQb88flHASXmOzZb2Kr5ErMKJPNGks56fBAbCW3/+oET9vWWsvk1UZsrJOXQM44rnsSI3Okkmd7i8Inz3orXfAkko4q0kEBjA+gsipwuf4iLnHW0PtNElPeKsuU0V7V2+dKlBpzyGCpjBzeDPazgcE2nmFu7TLqtrZUl/NjuG/SVfdvq+ugMr3/a77z+rHcqiUqtrMWUXH1zBS71Eq46a/fu20g0YsD3/u6QdWL2EIrD8d1WTq9w8TBX5j855SEZHOF8wEt3ef9/c5DlWRWqEQmFDFcLu8v4QZHemqZwTbFH/z6ql9uUJdCXMO7yGrxpTt9wzDtK/m7hJxzzFvTafArXS5mscg4wNvSdALqsLoUFnJky9VfDwrk0k=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"The `AsyncState` usage would look something like this if you wanted to pass an integer parameter to your callback method:\r\n\r\n```C#\r\nint parameter = 13;\r\nx.BeginOperation(OperationCompleted, parameter);\r\n\r\n...\r\n\r\nvoid OperationCompleted(IAsyncResult result)\r\n{\r\n    int parameter = (int) result.AsyncState;\r\n    ...\r\n}\r\n```\r\n\r\nThe lambda approach doesn't use the `AsyncState` member. It is slightly less efficient but more typesafe:\r\n\r\n```C#\r\nint parameter = 13;\r\nx.BeginOperation(result => OperationCompleted(result, parameter));\r\n\r\n...\r\n\r\nvoid OperationCompleted(IAsyncResult result, int parameter)\r\n{\r\n    ...\r\n}\r\n```","date":"2021-10-01T15:37:15.977Z"}