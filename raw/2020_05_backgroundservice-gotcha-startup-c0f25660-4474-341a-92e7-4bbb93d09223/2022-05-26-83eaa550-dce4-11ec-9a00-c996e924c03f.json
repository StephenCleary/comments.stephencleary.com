{"_id":"83eaa550-dce4-11ec-9a00-c996e924c03f","postId":"2020_05_backgroundservice-gotcha-startup-c0f25660-4474-341a-92e7-4bbb93d09223","postUri":"https://blog.stephencleary.com/2020/05/backgroundservice-gotcha-startup.html","replyTo":"","authorEmailEncrypted":"gnV0SXYG9Y7kXbwR0llOrPObcSgl4rIKrhnYdl8TELPlaT4jQox09bUTSAZae6J/03sA48iba6NF4DCZWselL1mJUtBBujPt7NeRPw8Agk2fVCY9GIBvfLh1BBECOz59j7lUBiiI5Nfou+HWZl6RX8wc3EGcTB8ZgO11AvmfEgcQ+C1q/IIIwWlHiOItTeHuXwSWxjZubZsnh/CAnVsmcMq+Wi3NF+CNyh9sO+MI1zQfLGN1BXZfVKooAkrRiNQwjj0BojjMPwn2C+ll4BGFmoHGTl1S0NnkoAQdKfKNbcJvSy4AW62B83zI3DLsu0M6iP3+D8naqXG3Qqup7VF1eiZ8cEP0MGacPfYy2elnV3I7T3qSMvY1evWTipa2l/qYwf45ae6tX4b9Ldg2Fb+8Ry9OXKdQFnznllQbrnIPQ+CMazBb5eJN3s3MOqETOLjmt19em0VbXCiTpJODG+RSg52pUafsucu4xykBrHuVamc9xz+17qSxNxQp1Ss25SOtZopXgEjAGodSKqlw14NIQN6YBJ4nPgwfbJMz8J1aLdBLEXF81YA7XavpGyvgawP3idgYaw1/GmNx+2hz4hRXPCTdgMj4NxHSaoLFqnKNhqW2MprBtV2T5g+lpWSiSM63cAZjdJzGoissDODOOP5XnLz+7/SRRdNNfy4PZq9++nA=","authorEmailMD5":"c5a82c9d49550abe8703272ef858cb18","authorName":"Eric Lynch","authorUri":"","message":"Wow!  Thank you for this post Stephen.  I <b>already</b> sometimes struggle a bit with async/await. This was driving me nuts!\r\n\r\nIn my case, I was implementing a hosted service as the \"main\" for a Console app.  No matter what I did, I couldn't seem to get my service to run after the application lifetime had started.  \r\n\r\nReading further in this thread, I opted to use the suggestion of adding \"await Task.Yield();\" at the start of my service.  This workaround instantly solved my issue.\r\n\r\n In doing this, I found a couple of other roadblocks (specific to this usage) that took much less time to figure out.  I'll share them here...in case it saves anyone else a little time.\r\n\r\nFirst, I used Dependency Injection in my constructor to get the application lifetime and a logger.\r\n\r\nThen, in ExecuteAsync, I added a try-catch-finally block.  The \"catch\" was necessary to log any unhandled exceptions; otherwise,  BackgroundService swallows them silently.  The \"finally\" clause was necessary to invoke the IHostApplicationLifetime.StopApplication; otherwise, (somewhat obviously) the Console app will never finish.\r\n\r\nThanks again, Stephen.  You're a lifesaver!","date":"2022-05-26T11:10:56.848Z"}