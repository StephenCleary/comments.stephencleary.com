{"_id":"9cd50358-8e36-33da-a097-bdcb54cde63e","authorName":"Rozsos Antonio","authorEmailEncrypted":"vHNB9ZcYMoQp1w2matUztKbXtoPG54+Nqu9SoZ9fCAzPAFooSEwf4bFUy0jTYIwG1CLvGXEhiqS6gOV92C/dKxtOfMH2k3BHHdFgOyCZjCzLQriOJsUtaKsRAlm8LKZwJikc//ZZnepQ16vqPvhY2fmR9I+Gheq832QbIjnw9G6G/IbHVZ3mMw38qSv2scy0gyFvcCq970Dd+kN4Mte0/my2u3jzu6uo7V2eQhaWFsRVqLrWej9uGev2qRPXtih/AL/QAUy4dCWGeWoSwS8yKj6KD3PFRRP4J1AU8UT3wYQOOx7uatIrO25hN9ttIM55WUXuiSzrde/IWAEdy7cEdDXmvpKqqvvhMAsRPbg1nMMZDUKOFnpuugsAh0VfMiKqH2JeDSDzlgd0g/sqAqSQAF0q5Kivdl56pxJxq6EcTS3578L3coja7IkxDPeO+fwqT/JP03yVfOCYvkrED6xWX2WLFH8A3+DkuZziYoFNV0O0pR8gzzf6WTRqNRkg0XiVdvRFYqR9sqLFok4Hoo3u3wMMRwn3YlaP9Q3o3LksKXfI9mWmXBvhfi+w7NgGhAJv54tOOVEIs1CaWBd030ouAgocb3ubMDq5jUgXj+ugNIm7U9v+OD6Q+rVSRGlH5XGDWctkc7XixSkEOTne6jMWlB2wy8iDSmqcIRrJPWauSKY=","authorEmailMD5":"85374bf6705e6ef24e2e9f9507057250","message":"Hi Stephen, I really enjoy your articles here and also on Stackoverflow. I have one question regarding the reporting of the progress using a Task.Run. With the help of your articles I have managed to implemenet a Task.Run from the button event. Basically it reads a large Excel File without the UI Blocking. The thing is this is done in a Service Class and I have no idea how to report from that service class back to the caller.\r\n\r\nThe code looks something like this:\r\n\r\nTask.Run(() => _sourceService.ReadFileContent(filePath)).ContinueWith(task =>  \r\n {  \r\n var dt = _sourceService.ReadFileContent(filePath);  \r\n dataGrid.ItemsSource = dt.DefaultView;  \r\n DataTable = dt;\r\n\r\n if (dt.Rows.Count > 0)  \r\n BtnCreateXmlFile.IsEnabled = true;\r\n\r\n }, CancellationToken.None, TaskContinuationOptions.None, TaskScheduler.FromCurrentSynchronizationContext());\r\n\r\nAny hints will be gladly appreciated.","postId":"2013_09_taskrun-vs-backgroundworker-round-5-6765eadc-903d-3bf0-b857-b299eb57c1ab","replyTo":"","date":"2017-01-31T07:36:28Z","timestamp":1485848188,"authorUserId":""}