{"_id":"9cd50358-8e36-33da-a097-bdcb54cde63e","authorName":"Rozsos Antonio","authorEmailEncrypted":"NeSmvjeBDlRVlrR7xGm8/YXmRPhvC2y6ZAh1mAo+6zcq0zRUZP3lepRysu1N/zArXvBsEOUuQKeTAwQJ9Gv8WAWJLSjEHq0dDma1703uQvFX13mJGd4EfQHXyccrvqf5waeW4oicXBaalxUxU4y7aG2Y82aq24QxYAxEEZM0a6jjtZEBN5dt7JZWiHSpBZNKsSWWdfYGl0+k3SGLLfS9GkzyZORqX4Q+UXcxrvFs3J+jHNTVKWvYMaSbv48XAwbPIB7CySDdJK9Rbh04vRpt/Utq6rzAsq4Jo1PwXI8lxTymWzauVWMHqbM3ooJsGOVE9cEOeL/TWhYuBAzIpoJFStpN4ZTA2toPUGzpHFr0TSgGyx6FaSAgmCctboPvaZjS9gYIqyXybgphz2TxkIRA54Z9i09KXd9GT62FKvbVQ4flok+gq11fc+3fG+fTF/tFe5Y33BN/Cebu5HEuDlNfyuA7MqxhTGG0+uRegETExAyj6PlxlM5Z2t7rsrqzgkVe7EChTelJ+iO0iuPR76cBZISEmreBDjyEZ9YdQnaBiVwb698HXU+Tcd1wBIqDEVQEHXl/ll7vkc/4wVhSM7nAuJHu8VxIya5VpBIB2hBcsSHSwOgea57PtXqVxAoK7Ty+VIn+vAx5ODpqDPR3MEOqyH0zUAFck5ieyUv7/vjjh8Q=","authorEmailMD5":"85374bf6705e6ef24e2e9f9507057250","message":"Hi Stephen, I really enjoy your articles here and also on Stackoverflow. I have one question regarding the reporting of the progress using a Task.Run. With the help of your articles I have managed to implemenet a Task.Run from the button event. Basically it reads a large Excel File without the UI Blocking. The thing is this is done in a Service Class and I have no idea how to report from that service class back to the caller.\r\n\r\nThe code looks something like this:\r\n\r\nTask.Run(() => _sourceService.ReadFileContent(filePath)).ContinueWith(task =>  \r\n {  \r\n var dt = _sourceService.ReadFileContent(filePath);  \r\n dataGrid.ItemsSource = dt.DefaultView;  \r\n DataTable = dt;\r\n\r\n if (dt.Rows.Count > 0)  \r\n BtnCreateXmlFile.IsEnabled = true;\r\n\r\n }, CancellationToken.None, TaskContinuationOptions.None, TaskScheduler.FromCurrentSynchronizationContext());\r\n\r\nAny hints will be gladly appreciated.","postId":"2013_09_taskrun-vs-backgroundworker-round-5-6765eadc-903d-3bf0-b857-b299eb57c1ab","replyTo":"","date":"2017-01-31T07:36:28Z","timestamp":1485848188,"authorUserId":""}