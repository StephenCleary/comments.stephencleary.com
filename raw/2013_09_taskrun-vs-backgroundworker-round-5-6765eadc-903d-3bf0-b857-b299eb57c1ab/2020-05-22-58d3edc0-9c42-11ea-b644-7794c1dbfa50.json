{"_id":"58d3edc0-9c42-11ea-b644-7794c1dbfa50","postId":"2013_09_taskrun-vs-backgroundworker-round-5-6765eadc-903d-3bf0-b857-b299eb57c1ab","postUri":"https://blog.stephencleary.com/2013/09/taskrun-vs-backgroundworker-round-5.html","replyTo":"e9a18c60-9c40-11ea-b644-7794c1dbfa50","authorEmailEncrypted":"wiNZGXcQJzc/5Ymo1PMJFDDl8wnOsNfmdwAU9GUW8/SIjBONluyaysjbybpe5tM1INFum5HdsMqupihosiWPSwONoLxoEaBjn6bVDzjpTn+xwn0m+iq7jftqt461XSp6TdwPIO4hUAzBEzSS8nJW6idL7mia1MLSpQGdiXE1tfD/4bHQchCNMqpCZOFa3pYk96xDggjoKpISRaH4tE7XnRV8XIcnW54jpnXtTSyfEeqkp1gBdIfJvI1yFLE8yQBfbWJUg6JTtFZh/jGY4pczibQyCJpouH3G38L1g7ecTx2WSMbw03YAIb0XXLNWX8FIaMF1NS5wAsrJmAS2WNHT+XWU8CD38iv9fTH2E46cBHd94fjmh0aH08HB4w6Wh9AYOKr9K/Kl5ICG5bO08R3uABlJBrrPhXRBlb9Oo+kAxCdp+WFJZ5JvZkioSqZKgpy1q//wna4QQkCt7PBxMoK+1yUYxKkuqMYoajQfIqvAVUhsDQ2NJkG42soKFtPmpc2Jz/cflzGWClvJpQvQSbbRsB/TWnYv8WoDTV6mtAGfwjR9RM+ozQ9zFKPyg9WauDSyeC6AMjDqxVp5y8I/JdDPKhDxxUCWhCcccDhCJWs6tj/3kvWFZzGDZXe5+Z1aaXSh1gXmPq0r6L5A+3+b7flfdtPbbrPMQrY5NONtcgm64PA=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"`Progress<T>` is only used on the *consumption* side - it has members that allow the code to consume progress updates. `IProgress<T>` is only used on the *production* side - it has a member that allows code to report progress updates.\r\n\r\nPerhaps a better design would have been to have two different types. Currently it is using an explicitly implemented interface to have both API surfaces in the same type.\r\n\r\nNormally this is not a problem because the `Progress<T>` is passed as an argument to a method taking an `IProgress<T>` parameter. That's the normal usage, and there is no `as` cast required in that case.","date":"2020-05-22T15:38:56.212Z"}