{"_id":"826eaf92-88a4-48ac-98c7-172afbf09f89","postId":"2024_08_cancellation-5-registration-4ecdfeab-3e4e-3a88-83c5-5e78cd8e9542","postUri":"https://blog.stephencleary.com/2024/08/cancellation-5-registration.html","replyTo":"e9968512-0251-46c4-a72a-6f1f00b4f4e7","authorEmailEncrypted":"DBj2/X0ETvH\u002BJR43/C7QNEQ80/Fwz6/fwsV3\u002Bh6HkGPqlUv/OWZioORsgkdVGsuZu5mN5HPoqjD75\u002B4PzSqqAcgKb8YU3kC3Gu6LpFwCU64DdoQV66Xj/isP8v/fvOR0aR2YNIZZA5cTHOZX2wBN6CvF9GU6/ahG\u002B93vlvchz21bwdAN5cmxbl/d2cB9iZCDmY4SlLgY1dvm/wSd/xmO/mlI5uO0ddFFpwq//RnQeEP8kJd62qNpkgCrf\u002BdggBhLqEg\u002BJ/8yzNhl/EZagxYND1JXDk4/GrRRyGpzWTxU4WZJR6mRjHguRgiMBdq\u002BreJED9MhP0\u002BqOoXp20N/KdkLrXy3ReujI/Snfb9p0E6Oe9dvBLmAhW6Y8AeNKyo59mCC56tXPmN2R5xMnzYJPZEpG/4ZVOcmZ/f1j2AJRuL8EYW3ddqRT45imPJPoTis733lJ8Xuj29AScjcxWfxCTG3uxoW2Mb8t7BIAv2GQKby8Hz\u002B3NDCjfalhIM0xHhfNQRsmP2GkfZw529wkOwMEwJf/ZR9gTYYLlWEwBTBvbGmUrqbOHfOBQZJSsqnQa8W9hg8bbIMmwX4uVA0cC4lKww5iVW6gmOEw8Ok/CYE/zNTEAD1EgDQCEzJkqqOLUj\u002BVj8FuEW6tOsQGtQKkv7X1jwK7ouB5QgnZmQvqIa4oY6tQGo=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"It depends on _when_ the \u0060CancellationTokenSource\u0060 for that token is disposed, not just _whether_ it is disposed. Some CTSs are very long-lived, and I have seen code that doesn\u0027t clean up registrations cause resource leaks in that case (that have become actual production issues).\n\nRemember that the registration is a callback, so by calling \u0060Register\u0060, you\u0027re extending the lifetime of that delegate (and all of the objects it reaches) to the lifetime of the CTS. By disposing the registration, the delegate lifetime is the _shorter_ of the CTS or the registration. In the general case, code shouldn\u0027t assume anything about the CTS lifetime from a token passed into it; and the natural corollary of that is that code should always dispose its registrations.","date":"2024-10-07T01:57:24.5929604Z"}