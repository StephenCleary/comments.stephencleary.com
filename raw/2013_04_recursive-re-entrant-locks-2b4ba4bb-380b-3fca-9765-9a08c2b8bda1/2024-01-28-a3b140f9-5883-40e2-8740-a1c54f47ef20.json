{"_id":"a3b140f9-5883-40e2-8740-a1c54f47ef20","postId":"2013_04_recursive-re-entrant-locks-2b4ba4bb-380b-3fca-9765-9a08c2b8bda1","postUri":"https://blog.stephencleary.com/2013/04/recursive-re-entrant-locks.html","replyTo":"e19a97de-cf97-418b-8b1d-a8aba3081d5b","authorEmailEncrypted":"kGeERhbNzwP4a5CBO0lbtW/Pu/XjKC/nELLWlRA8LmjBZGUHg1\u002BCoPHuiWQk\u002BU\u002BQAhM8xRRlWcNvvbzCsmjQ/roJzsLS8Cuw608wOOfB6bnGUohkjxgGH8WAjTI1/a\u002BhZcb7/N/bPOcM8j50D1VAfwg22BHd5CzgPuf8xwtDdco\u002Bl4Goz2uu9MQI6uUS9NGGCciXqv7gqrkGri97pn648/1rbOfpS/xLQod7TkRuigeqo\u002BXHaugOlXjz1Ri3iqdnWlJkKariqhugU0uwg1ZUVusC2YiP4fprSaysSFLGvhD7FYEr/ohpJvo0I5QiNmDTSebdR67cn8KaQJSFq9qP0bayuzai30M3t1sTpHY4ROKKyofUDiPNqnabbe\u002BTft97FlALnaGOI0JdIUv2TOKiT3uXEDJHfuU1APJOdBBl7LjhppS3RJdMXK6u6pDpV\u002BbURvxEb\u002B7Tk4O7VYAlXaPAqdQctJnobYYmDnlKlrxTIp/AcHkez/zUOS09adlKKptGnqW\u002BUA6QNBBbRB2AlZpjuRyFP0ViNJZLe2jto33iRWYQBFp8pNNeanOWoJAEMiBxy6G4IxNc/XBTztcQCI851maQ7iKBrDO7uVpoj0bcJZNNV/lf1oxvvSnHV\u002BZATHrT2dH377vDacyeMwAiXSpJTaQ50U170yWY2mfHdHBTGmw=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"That\u0027s an interesting application! What you\u0027ve done is essentially an \u0060AsyncLazy\u003CT\u003E\u0060 that always resets itself whenever it completes.\n\nI have not been in a situation where I\u0027ve needed this kind of behavior, but I can see where it would be useful. And the recursive lock does make the code elegant. Of course, there are no other methods that would use the same lock in this case, so the drawbacks of recursive locks wouldn\u0027t apply. Interesting!","date":"2024-01-28T03:02:45.6531732Z"}