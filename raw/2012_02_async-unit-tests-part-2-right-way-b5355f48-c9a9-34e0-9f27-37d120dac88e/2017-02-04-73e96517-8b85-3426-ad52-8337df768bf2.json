{"_id":"73e96517-8b85-3426-ad52-8337df768bf2","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"No, that will cause problems.\r\n\r\nOne solution is have your TestInitialize method call your asynchronous initialization code and store the result in a task:\r\n\r\n Task Initialize;  \r\n void TestInitialize() { Initialize = InitializeAsync(); }\r\n\r\nThen in your unit tests, await that task:\r\n\r\n [TestMethod] async Task MyTest()  \r\n {  \r\n await Initialize();  \r\n ...  \r\n }\r\n\r\nIt's awkward, but it works.","postId":"2012_02_async-unit-tests-part-2-right-way-b5355f48-c9a9-34e0-9f27-37d120dac88e","replyTo":"705115a7-0dc1-3118-8979-14f394dd0020","date":"2017-02-04T15:13:40Z","timestamp":1486221220}