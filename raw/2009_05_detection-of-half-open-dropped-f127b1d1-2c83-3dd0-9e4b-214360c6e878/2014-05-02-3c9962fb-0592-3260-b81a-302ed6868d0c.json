{"_id":"3c9962fb-0592-3260-b81a-302ed6868d0c","authorName":"Bruce Stephenson","authorEmailEncrypted":"BBsPx9L9BqLS4UGr0Q6Dxn0ZY91c7UMN/J7yEmzemBHOtmrNtNLyBGSGgpm55/5uuzQSrRFjrpZ+rSuecZuBTewuuiPHMtUDDVPnItBlSkw0CJGGYYx+4UlZQHmNPWfTNavw82XgWdWzoBj1g7M7TzzjAd90/1H5+PFDwX6JTXAX+o1anyat8jZ0DpRKtwq3fkEmUF9XMFA2xxQ31C4RUD1/NzbkJHbCMj6TQhH4AT8LltpvLNOUqNHtq92N6NRQYCeOYM9PnZCSiJtkuNRu8hZf8VbMiedDQX11ku+5ae63Z1LJl3Vza1NgAabsWAS2kBXW/pp4sVP4Kj8MPbCoP+CswyG3n9hHWannrifjCvuwRLm6miDY65AhZm81XlnDmDTfxL8q4/m9m0wgIaaslia1nbxQWVmm3bwyYjntPVV+X0XXz6/xpNUMa5j39n1LPAD3IftqrrKuJ88FELzRiLhZfdCMW+zmFOG9M4glfuyPG9Gva1FU1uo9dyIXS7y6HHWnPdM5sTyMj4C/BiljYvqna68PnlwOgB1H1E4tLNnc+gpXeC7s4nuORLqj5dWR8nMes9OUaaeAwmL/lqSenK1W8PlHKodZuoNb2ULEFwNs150Zevvc7XvAfwgWRxYGLEzeYFVegtrtjvJZn2CVJhUq+H1lpAZE/5SNgHC7Kn0=","authorEmailMD5":"420e0ea1f13519cf3c91a56cf174f845","message":"Hi Stephen,  \r\n\r\nI was hoping you could shed some light on my trouble detecting a half-open connection.  \r\n\r\nI'm trying to heed all of the wisdom presented in this article as I'm tackling my first TCP server implementation. It's probably a similar scenario to your \"true story\", where there's one server, just one client, and just one long-running connection. It's exceedingly simple: every 20 minutes or so the client sends a small message, server receives it and sends back a simple response. So far, I've got my server using the Begin*/End* approach to receiving and sending. So, according to the advice I read in another one of your articles, there is always an asynchronous receive in effect: as soon as the read-processing is done, a BeginSend() is queued and we go back to BeginReceive. Elsewhere, I've got a 3 second timer that performs a non-blocking, synchronous, zero-length Send() test (as per MSDN). The head-scratching thing is, this test always succeeds--even when the network cable on the remote side is unplugged. I thought it was clear from this article that doing a send while there was a physical break in connection would quickly uncover the connection issue, and allow the server to close its socket, thereby preventing the half-open connection problem you described. What am I missing?  \r\n\r\nThanks for any help.","postId":"2009_05_detection-of-half-open-dropped-f127b1d1-2c83-3dd0-9e4b-214360c6e878","replyTo":"","date":"2014-05-02T17:17:54Z","timestamp":1399051074,"authorUserId":""}