{"_id":"a727ad02-2728-3550-a711-337839a7ad8b","authorName":"KE GAO","authorEmailEncrypted":"BHb6QzB19JhpADnJxpevhOe1XH0CZPShc/NOKzR1mJSm1ZBcOJjxJHEZbpYsEzHPjkkb+vR33QGQq3Alo0fZlG+ZHgYA2R0MQP1OfHleNFvFWgiO9K0mTrlUwBKh9fbWbY0KdFeoY/U7spkVvjKB/dfFDPjJ5evlhp+4VC0sMqtADXl4FarPc/PtcUpMW2SgrkrXKUXD85QlDnaPGrKOv+VdUUPgPqu+CtBxfJTjRuV+TSLHYpw1GFDIJefY78GwMfP6za25g4e/v+wW7DM4N6IU1u0lOzDJCGtbBKqgO5FdGzIgfx5q3xVeIMyf40pLHyA+QyuN6QRpgXi67Z4cGbM2L7HdSr4FdY/JxFcu/uYkshAOqKzThwSH4xom5IZeAv7kXD5ZgRCpQcK4NhWaDBgu3nvFnLDryP4tMPCUdOnebngIXx8KkkUsH9JcmdjcIC6/DeLazMuRr/QTpE3KUUDlTg5NgVNKSpDeocHih/OAQ7+qTMN06HKdQ01PlcW9AmxAs9mMGyy5eHKyE0j0naOLjhEWl3xqpbhDHgtHc5v8h+31pfdUnEjm7LuUoRHogUQsPe9cSMcHwAFJEKeS08xEgXzDyMold3gGy1zzimPzP+TVm1B2rRCvzRVVvNo63oHkdpwiYVKMgv5qytWPbbHgTXKF1VyDEm8haY0MZq4=","authorEmailMD5":"242b2a5c20298580093fd2326a3bdeb8","authorUri":"","authorUserId":"disqus:kegao","authorFallbackAvatar":"","message":"Hi Stephen, for the TCP Half open detection, i found a weird thing, show as below, Do you have any idea about this issue.\r\n\r\nTest Scenario\r\n\r\nI had written a windows program which I simply called it \"simpleServer.exe\". This program is just a simulation of a very basic server application. It listens on a port, and wait for incoming messages. The listening Socket was defined to be a TCP Stream Socket. that's all that this program is doing.\r\n\r\nI had been deploying this exact same program on 2 different machines, both running on windows 7 professional 64bit. This machine will act as a host. and they are stationed in the same network area.\r\n\r\nthen, using the program \"nmap\", I used another machine on the same network, to act as a client. using the \"-sS\" parameter on \"nmap\", I do a Syn Scan, to the IP and Port of the listening simpleServer on both machine (one attempt at a time).\r\n\r\n(note that the 2 hosts already had \"wireshark\" started, and is monitoring on tcp packets from the client's IP and to the listening port.)\r\n\r\nIn the \"wireshark\" entry, on both machine, I saw the expected tcp packet for Syn Scan:\r\n\r\nclient ----(SYN)----> host\r\n\r\nclient <--(SYN/ACK)-- host\r\n\r\nclient ----(RST)----> host\r\n\r\nthe above packet exchange suggests that the connection was not established.\r\n\r\nBut on the \"simpleServer.exe\", only one of it had \"new incoming connection\" printed in the logs, while the other instance was not alerted of any new incoming connection, hence no logs at all.\r\n\r\nCode Snippets\r\n\r\niRetVal = WSAEventSelect (m_Socket, m_hSocketEvent, FD_ACCEPT);  \r\nif (SOCKET_ERROR == iRetVal)  \r\n{  \r\n if (WSAGetLastError()==WSAENOTSOCK)  \r\n {  \r\n return E_SOCKET_INVALID;  \r\n }\r\n\r\n printf (\"Error while WSAEventSelect(). Error code: %ld\\n\", WSAGetLastError() );  \r\n return E_FAILED_RECV_DATA;  \r\n}\r\n\r\n// Wait for Network Events to occcur  \r\ndwRetVal = WSAWaitForMultipleEvents ( 1,  \r\n &m_hSocketEvent,  \r\n FALSE,  \r\n lTimeout,  \r\n TRUE);\r\n\r\nif ( WSA_WAIT_TIMEOUT == dwRetVal )  \r\n{  \r\n return E_TIMEOUT;  \r\n goto CleanUp;  \r\n}\r\n\r\nif ( WSA_WAIT_FAILED == dwRetVal)  \r\n{  \r\n printf (\"Error in WSAWaitForMultipleEvents() failed. Error code: %ld\\n\", WSAGetLastError() );  \r\n dwReturn = E_FAILED_RECV_DATA;  \r\n goto CleanUp;  \r\n}\r\n\r\n// Parse the Results from the Network Events.  \r\niRetVal = WSAEnumNetworkEvents (m_Socket, m_hSocketEvent, &mEvents);  \r\nif (SOCKET_ERROR == iRetVal)  \r\n{  \r\n printf (\"Error while WSAEnumNetworkEvents(). Error code: %ld\\n\", WSAGetLastError() );  \r\n dwReturn = E_FAILED_RECV_DATA;  \r\n goto CleanUp;  \r\n}\r\n\r\n// ACCEPT event Detected.  \r\nif (mEvents.lNetworkEvents & FD_ACCEPT)  \r\n{  \r\n // Perform accept operation.  \r\n *p_SOCKET = accept (m_Socket, NULL,NULL);  \r\n}\r\n\r\nHelp That I Needed\r\n\r\nwhy is the different behavior from the 2 same of the same application on a different machine with the same OS?\r\n\r\n BTW: In our production, the client is F5 for Traffic Management, the F5 sent the use the 3-way TCP handshake to check the port is alive or not.","postId":"2009_05_detection-of-half-open-dropped-f127b1d1-2c83-3dd0-9e4b-214360c6e878","replyTo":"","date":"2015-05-05T07:57:37Z","timestamp":1430812657}