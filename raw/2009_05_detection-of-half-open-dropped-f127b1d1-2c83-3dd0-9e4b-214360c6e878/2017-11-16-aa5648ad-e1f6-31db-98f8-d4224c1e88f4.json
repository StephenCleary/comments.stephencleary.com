{"_id":"aa5648ad-e1f6-31db-98f8-d4224c1e88f4","authorName":"Eric Hesse","authorEmailEncrypted":"K806p/Uuf+p7UqJEGlzCwcRLsZP0ArzR0el5S+pGP6hFA7MxERE38T4Nttak9Un+HHLF2x5MtX0ZuYmetS5GeAv5OUn4QDquuSi8ddne9R6WiyQiVQWOViRCSVOrLRCeF3u2CdUD5n8t8x/kBx1dB9TN5m2gdvwA4emepmNNHLTsyCl5aTOlOL/vFTpVkihJ7LJv0xI2FUtqV02BBFbz+vbrBiazgJH6BtkwmjTsd76rr3Kb63Am1nwxtPmzTbx5GNSlkLU/cXI9hG49TttYKA0AJRyKeO+Ubl5275R+cjYXex+4ZLTVxQAK84B/lcB6dxuO6VN0u0ka611ILzai8IGRNQWwVtdpXLSNi71rb85r6Y2+budrDxNNwIcziDIK8Z4eVo8LWyptZ7Gt92/0MjWvvqEegBFzvcU9flX777nObTeVTUlFhiX7a1SDseX7bwp630u//ZolhPbKER5aNwdaMyipJszNxC871sSV8SVedY1BcMObh5fXhCsn7wT9ruCN4Ym8+zgIXmpNl8+AcXNudr7O1YuhUAMnVJ+pEkvNkDIZpPYspMEvSzUBZYhw2MGCLHY7v/Ilc7W4BI1UMx+7ceHK4yXDeyWX2k9YDqbGRKqh4XOyqAHhErumP8MZ47RUx6jyh8199koM5VXzEiHphjnbkRp3yR8A6pv5sE8=","authorEmailMD5":"031134010a19b24e448a57f4ca9d5f46","message":"I was able to use Java to create a small socket server that can detect the issue. See here:\r\n\r\nimport java.io.IOException;  \r\nimport java.io.PrintWriter;  \r\nimport java.net.ServerSocket;  \r\nimport java.net.Socket;  \r\nimport java.io.BufferedReader;  \r\nimport java.io.InputStream;  \r\nimport java.io.InputStreamReader;\r\n\r\npublic class PBSocketServer {\r\n\r\n /**  \r\n * Runs the server.  \r\n */  \r\n public static void main(String[] args) throws IOException {  \r\n int count = 0;  \r\n ServerSocket listener = new ServerSocket(4321);  \r\n System.out.println(\"java.net.ServerSocket listener has been created.\");  \r\n try {  \r\n while (true && count < 2) {  \r\n count++;  \r\n System.out.println(\"Awaiting new connection...\");  \r\n Socket socket = listener.accept();  \r\n socket.setSoLinger(true, 10);  \r\n System.out.println(\"Connection received... setting SoTimout=20, TcpNoDelay=true, SoLinger=20\");  \r\n try {  \r\n System.out.println(\"Getting BufferedReader to retrieve query...\");  \r\n BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));  \r\n String query = \" \";  \r\n for (;query != null && query.length() > 0;) {  \r\n query = input.readLine();  \r\n System.out.println(\"... Query = \"+query);  \r\n }\r\n\r\n socket.setSoLinger(true, 20);  \r\n socket.setTcpNoDelay(true);  \r\n socket.setSoTimeout(20);   \r\n System.out.println(\"Going to sleep now for 5 seconds... disconnect cable please\");  \r\n Thread.sleep(3000);\r\n\r\n System.out.println(\"Getting PrintWriter to prepare response...\");  \r\n PrintWriter out = new PrintWriter(socket.getOutputStream(), true);  \r\n out.println(\"Here is your response.\");  \r\n System.out.println(\"... Response written to PrintWriter Successfully\");  \r\n out.flush();\r\n\r\n System.out.println(\"Calling Socket Shutdown\");  \r\n InputStream is = socket.getInputStream();  \r\n socket.shutdownOutput();  \r\n System.out.println(\"Awaiting FIN Packet\");  \r\n while ([is.read](http://is.read \"is.read\")() > 0);  \r\n System.out.println(\"Calling Socket Close\");  \r\n socket.close();\r\n\r\n System.out.println(\"... PrintWriter Flushed Successfully\");  \r\n out.close();  \r\n System.out.println(\"... PrintWriter Closed Successfully\");  \r\n System.out.println(\"Socket.isOutputShutdown()=\"+socket.isOutputShutdown());  \r\n System.out.println(\"Socket.isConnected()=\"+socket.isConnected());  \r\n } catch (Throwable e) {  \r\n e.printStackTrace();  \r\n } finally {  \r\n System.out.println(\"Connection close initiated.\");  \r\n socket.close();  \r\n System.out.println(\"Connection close completed.\");  \r\n }  \r\n }  \r\n }  \r\n catch (Throwable e) {  \r\n e.printStackTrace();  \r\n }  \r\n finally {  \r\n System.out.println(\"Listener close initiated.\");  \r\n listener.close();  \r\n System.out.println(\"Listener close completed.\");  \r\n }  \r\n System.out.println(\"Exiting program\");  \r\n }  \r\n}","postId":"2009_05_detection-of-half-open-dropped-f127b1d1-2c83-3dd0-9e4b-214360c6e878","replyTo":"eef23b96-1b5d-3a6a-8bb9-f212ce48c69a","date":"2017-11-16T14:16:21Z","timestamp":1510841781,"authorUserId":"disqus:eric_hesse"}