{"_id":"7f0b4e61-1ad3-4978-af53-92ddb363dc26","postId":"2022_03_cancellation-2-requesting-cancellation-d627708d-a45e-3a5d-8359-b4af914f70b0","postUri":"https://blog.stephencleary.com/2022/03/cancellation-2-requesting-cancellation.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"\u0022This cleanup is done when the CancellationTokenSource is cancelled or when it\u2019s disposed.\u0022\nCancel does not dispose of resources after creating a linked source.\n\u0060\u0060\u0060\nCancellationTokenSource top = new();\n\nfor (int i = 0; i \u003C 1000; i\u002B\u002B)\n{\n    CancellationTokenSource l = CancellationTokenSource.CreateLinkedTokenSource(top.Token);\n    ////l.Dispose(); // cleans up memory\n    l.Cancel(); // creates memory leak\n}\n\u0060\u0060\u0060","date":"2023-08-21T19:23:55.3223136Z"}