{"_id":"c2058ba0-0e96-11ed-aae8-9f19883eb780","postId":"2022_03_cancellation-2-requesting-cancellation-d627708d-a45e-3a5d-8359-b4af914f70b0","postUri":"https://blog.stephencleary.com/2022/03/cancellation-2-requesting-cancellation.html","replyTo":"0ad7d4c0-0dd7-11ed-bb11-83695a393411","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Jess Rod","authorUri":"","message":"In case someone is reading this, and Stephen Clearly hasn't answered yet, I've come to this (better) approach:\r\n\r\n    CancellationTokenSource? _cts = null;\r\n\r\n    async void StartButton_Click(/*...*/)\r\n    {\r\n        // _cts is null when no DoSomethingAsync is running\r\n        _cts?.Cancel();\r\n        using CancellationTokenSource cts = _cts = new();\r\n\r\n        try\r\n        {\r\n            await DoSomethingAsync(cts.Token);\r\n        }\r\n        catch (OperationCanceledException) when (cts.IsCancellationRequested)\r\n        {\r\n            // Operation canceled\r\n        }\r\n        finally\r\n        {\r\n            _if (cts == _cts)\r\n            {\r\n                _cts = null;\r\n            }\r\n        }\r\n    }","date":"2022-07-28T17:00:18.360Z"}