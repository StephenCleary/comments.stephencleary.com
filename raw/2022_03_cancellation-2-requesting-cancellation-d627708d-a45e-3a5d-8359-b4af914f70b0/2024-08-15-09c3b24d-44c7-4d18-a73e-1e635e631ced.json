{"_id":"09c3b24d-44c7-4d18-a73e-1e635e631ced","postId":"2022_03_cancellation-2-requesting-cancellation-d627708d-a45e-3a5d-8359-b4af914f70b0","postUri":"https://blog.stephencleary.com/2022/03/cancellation-2-requesting-cancellation.html","replyTo":"0984c2f4-de92-487c-a85a-1e53f03bcb51","authorEmailEncrypted":"E5MT1W6cxFE/cXiWI/mbkdL0xZCLBHBUUkgH0crbuT0QmxoGvKgB7D3nPabq7V8giHSjMrYSE1aFeSkHtAaGcAqknC665Ad7r/AGLOfL94xEx8H3zEvlPI86qE0UbfAwdWddQZpe\u002B37xKonjCgbPMNDjsoHTvM4j6iSPMIi7A\u002B/p9nxe5IAi8r04Xl6v6GdnEVZoaDwKNnxzdu\u002BP7NcCkZ3yGsKFKuz2PPJqUK\u002BPiU4plpwzoyrOlGgSm1Aq56kZWW6JOQXktvplRw5k4ptubLXH6c7BGWQnTWRyIOBldkr1th4qDOZiHFZ66tAelD8Wm\u002BUE8tMqR8E53T5hLGOjRM7mzVwPBaMahXcAAiyWj9SKsSBRC9K3XCHZ2BiDUSvK2ICVyO6mycJT\u002Bv1RGTCh5dtQii3eeQ0BgqdxSm8hP5EgmmqUL2A0grOaLq2ybgcLHeWWU6IJoHP4rF5z85g9x5wmQqExUin1YmXIF6iEZXG9lq3O\u002Bd6OCTXYVUCiC0Wc5L/QiALDDagAdPPZEbvYkrxagl/ypv9O0FYm3Mi4ZPnhaSWJ2xrMinYNvI/Qw/Rx1SosKiUazsiu9hsre6eaUZckBJo7tL7p9AN1U1uO2Vr0Vwg8EW4K/3ZeqYjxVAQ/zRn96NH7yWv6Pu6C0xQLIby8Xg0ORAdKnoFeELcglfk=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"\u003E I think \u0022Clean Up and Disposal\u0022 is a topic which might warrant a separate entry in your series on CTS\n\nThat\u0027s a great idea; thanks!\n\n\u003E It seems that Cancel does not do exactly the same things as Dispose. So in this case you mean that GC will later dispose what is necessary through Finalizers, OR do you mean that even without GC, calling Cancel by itself is enough to avoid memory leaks?\n\nIIRC \u0060Cancel\u0060 and \u0060Dispose\u0060 do behave slightly differently, but they both avoid memory leaks. It\u0027s been quite a while since I\u0027ve looked at that code, though.\n\n\u003E I assume some operations on such token will cause an exception? Can you clarify which operations exactly?\n\nYes, they would. I don\u0027t remember which operations.\n\nI think I\u0027ll answer both of these questions in a future post on clean up / disposal. It has been long enough that I can\u0027t answer from memory, so I\u0027ll have to dive into the source again to find out how it works. Tip: if you don\u0027t want to wait for my post, .NET is open-source, so you can find out how it works the same way I will.","date":"2024-08-15T08:02:45.6749193Z"}