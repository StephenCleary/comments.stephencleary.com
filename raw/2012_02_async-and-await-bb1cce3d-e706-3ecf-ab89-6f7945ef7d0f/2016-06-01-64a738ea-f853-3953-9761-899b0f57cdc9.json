{"_id":"64a738ea-f853-3953-9761-899b0f57cdc9","authorName":"Stephen Cleary","authorEmailEncrypted":"wM3UsmGFqx1n9kMRInx4UjtPyrXoprXhxS1SFiKvq9vEb5d9ybk7L8pCc7Ie8VRYgIs0EPejkureqS9GAdKgz8wE1cf/563JPon4z8JB2AWJKC6TVtjsh/hfaD5W+4G0F6NVjoO8hpfqqjAOb+6astwM6cNX6Xcwc3/+V4plwmyWzJ6sSHT4I9Y9zzVAyjwzAeuTHwI32od6Ea0iFyEFqn+ws8olBTpJtO2IgaljFzoGOQSFQxP6jhqGkjR1sW6VKhbjf2MCIT3Ommr7/uVtbu9sAJVEe1tOo48loQJuuYrUGErekvLvTDefRcTDOVO+zwu06wNabeiIdr9XRMUuCavtTvRzez/Q/eLw2we55JxR4Q0EcO/VPBEzlpjii6AZ7tx0zuf9aIcPvn9oyRNC1ouR7b0AJSSnUfAfTdhcRAsZT27XkP4GHyWmimxBvx0pf7Ns1gcRoaLcy1Phitzg7csDdvFy89Jrcvtd2o+H90a1ms6u2psmNEaAJ0eikE8z3UqFpVoZ/o7zFFlx4Gmp4fW+AaG25rddX3zFwEk/DGhtI7CfBTR0BYpOf8Tx606lxcfgr3J+NHJCPhRScW362DdkmjBqVCJZJZ5orZHjq5UhtOhQ1FgdiDQu4TP7mKoR5wl1NYfwWxvaSgP2cMaqD9wxlln9r4sYpr1w6ychP1M=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I explain the full mechanics of await in this blog post. At each invocation level, the caller chooses whether to await the Task that it gets from the invocation; if it awaits, then it returns an incomplete task to *its* method, etc. The thread pool does not come into play at all unless the code explicitly places work on the thread pool (i.e., `Task.Run`), or unless the `async` method continues without a context.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"0e7d2b5e-ecea-336e-ac6a-e6a5fb62b348","date":"2016-06-01T20:40:32Z","timestamp":1464813632,"authorUserId":"disqus:stephen_cleary"}