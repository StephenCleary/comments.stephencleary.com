{"_id":"64a738ea-f853-3953-9761-899b0f57cdc9","authorName":"Stephen Cleary","authorEmailEncrypted":"Zpbycs/wx5VisYog+vXvIkZnHBNdaa4ha+/TLXrkFHc6ZBNrROEiTdfyiW2tqrpjZLiuP/RBV7ZdX2mYOhjBzWyUyNRKgsLj4J/ycJ51HJUKsm9COQXjpcTmx0Egx+Btuc6M1F2/HvKIAiJgSn4eC/vpoSsN89L7w7VDeFm9T3mOMI2HTaK8VDVijaMJtlTm4ofJTE7RfVzeg4P9eYxuJZObprjDNNUIHZZ+/5KgEXAVGijJTUqTVHAp3EDe/50p8QeQpPknQqLPonZkT65VZl3BHGUAwhZ8RzEJ+ySSFw6mwafebdIf9gv/H6+fAPkQ7pfqgNHb6mNiXrrhVTjnKGQftKlX00SbLfURerWRw6hM6TTDyG/8pJKgtTsyY4pQucKP9fqhbYOYWa5++mshSBMrvkCGcxMZASJC4sQZgr0MltCtKRpWM1Y5B9x3D01lGog3phuRxdkHjuafCIEZGsE8MTdiwRX0JFzVzDXTW+XQHaLJVNozlZqowaDzqzmgZqKigrwqTZ7WE9W+YdOhgFYJ+XYuatBmSF0Z7TtBzXnfyLh5RYtgXqkykk6zWidDyJuGJaFDzcaCf/S9xLzo0ahhUlaY9iXcQkEh9sx7oFcj523GwILp59dyMWnwMYRNzGo6+6Hl0933wo0nM/9yYe994Fhy8WAkr0Q9DD1pwN4=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"I explain the full mechanics of await in this blog post. At each invocation level, the caller chooses whether to await the Task that it gets from the invocation; if it awaits, then it returns an incomplete task to *its* method, etc. The thread pool does not come into play at all unless the code explicitly places work on the thread pool (i.e., `Task.Run`), or unless the `async` method continues without a context.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"0e7d2b5e-ecea-336e-ac6a-e6a5fb62b348","date":"2016-06-01T20:40:32Z","timestamp":1464813632,"authorUserId":"disqus:stephen_cleary"}