{"_id":"64a738ea-f853-3953-9761-899b0f57cdc9","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"I explain the full mechanics of await in this blog post. At each invocation level, the caller chooses whether to await the Task that it gets from the invocation; if it awaits, then it returns an incomplete task to *its* method, etc. The thread pool does not come into play at all unless the code explicitly places work on the thread pool (i.e., `Task.Run`), or unless the `async` method continues without a context.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"0e7d2b5e-ecea-336e-ac6a-e6a5fb62b348","date":"2016-06-01T20:40:32Z","timestamp":1464813632}