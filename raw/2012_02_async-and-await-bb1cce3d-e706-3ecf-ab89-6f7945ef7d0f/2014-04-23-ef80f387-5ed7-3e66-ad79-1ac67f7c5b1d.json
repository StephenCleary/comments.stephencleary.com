{"_id":"ef80f387-5ed7-3e66-ad79-1ac67f7c5b1d","authorName":"Stephen Cleary","authorEmailEncrypted":"AYY560oR4wXleMRJcoGtRpI+2X1bqiZOmwRxEAI29qeGl4oukdvH/bEVW8o0jDfl3F5HsrdqM/g7QlHugaAreAJCBSUnPiVoEY4xbhNoY/DsqzWATBAtvyPDuK7zb7lTiLB/VOccXR40rmdFJzCzJA1YWzpqGma68ovWrpNQ7J1kV19BtvZOwqZnCq71qx7f2KzNAyEBOhQrAddKcBWZ0YGyLIouGyVsgIxlThAEqxHNyb3J5Tqv7KSMrfPn5Q/2KFt8NhCBeqPXS2Bvn0yT/tMcky/C/r1wPoYg+vCQEswlWsEtHwvttlCgp0IBL8Dir8mqX2QNn+gPwp1s4N//1TCpR83QC87oXgMZRoIW0nu/irtW009L2WC24DZuzd3ohj6b6QSsqvAS5YMC+suWuo8QXxwuDzvfrj/AMYGcFYh5x4a/xt3t5we8ujRpvr77sZtDki8JQ/tvbvsQ7YZzOgS3OiRSY71GEMKOUUXtEsmkDtrzRohcWcB44JtxE0r3GHMNZCM04bA8KfjXlRvQRoQhXvhChR0NYN5ucLJbwW27RiQlUZTeAJzvemZD/Vy2Lef9HIUCkKAh11ZDV9l50FRx6d9Gf7X4huuR/cnSZ2/QWbnU1zVtszcLsYdwF+MSBvT646ZtbQeou3DMF+lS7lNJCVGapWUoPjOPXWbniR8=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"","message":"If you have some asynchronous operation that your method should (asynchronously) wait for (like calling an Async method), then use await.  \r\n\r\nTask.FromResult creates an already-completed task, so it's not actually asynchronous. It's useful in a few scenarios, like if you look up the result in an in-memory cache, so there's no asynchronous work to do. Or if you have an asynchronous (Task-returning) method in an interface or base class and need to override it with a synchronous implementation, like a test stub.  \r\n\r\nIn production code, await is used a lot more often than Task.FromResult.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"","date":"2014-04-23T04:30:59Z","timestamp":1398227459}