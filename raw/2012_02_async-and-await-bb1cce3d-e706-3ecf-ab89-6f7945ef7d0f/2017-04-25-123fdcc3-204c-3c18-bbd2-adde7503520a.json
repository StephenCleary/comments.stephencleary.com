{"_id":"123fdcc3-204c-3c18-bbd2-adde7503520a","authorName":"Stephen Cleary","authorEmailEncrypted":"CHkCHahN6GoVdWQiPZFM5LAQtV51vuo/X8M0WxjIWnziffY/9JSHC2JbOF4/t9yNdBxPeBgRsHNCRTmSbsCxXgtvUSeAqcFY+C0ZkRM1NXpIK7OOSPDS4VfKBjmyABIT5KSN6m7LPYMMdnmVGAIgLY9KWmBvRDxLGsFce3RtfXbc64jyJmIIGtBxIa9C8GlzS3VDv82PuGCOXrBGmbZKO3Cc0XnLWaeiq/yqfo5wWoyVTnZbAQL1cY0wbHFGXINvkejswyRkyETY4/i+D7lt6CbYPkUdW7VTwCDOUNQ+dEILv0qVmbF63Fm4mC8JqKS+0Zdy60TUtMxWMh5GEJmKDYuEnJzKx94B18UBcM282lJlJGkqh+iSHRDdiyK8w5ChBYe08SyoMpaKTaymjX5aLkb4HqUsZOiNVyz0ix2bGBfP5PbVnl3tCWMOpeRi0QpLsYO4+6GmlVkCfXnD1ExQKjnesaHJ6jIHtb4+ClPwUvX85A/yJgaoDy4HjLj8EPMl2MLDhvHpYaY07oQWvruwpxdzQ2egHY8LL8ZZZkgG36o6E3Y1uesRpXECRJwHztYqwiORI4CAkZBqOBrLVDvnm/txUvrkQNG5en7mjqPVMDm/5RBKc13m/awnZmarNOI90FEO09IuRq2dPCN5sqxa+XJ1aWwVSManLprL7j3mOIU=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"Your understanding of ConfigureAwait(false) is correct, except for the thread switch parts.\r\n\r\nThink about it this way: await will return the thread to the thread pool at the time the operation starts (this is true if you use async all the way and always await immediately - but close enough for a mental model). So that thread is gone. When the operation completes, there's actually a thread that performs the completion of that task. await has an optimization where it will try to continue on that same thread, if possible. But it's a question of whether or not it can continue on the thread that completes the task, not on the thread the async method was on earlier. That thread is long gone.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"b46f9538-58c7-39b3-a661-079eb12d59d7","date":"2017-04-25T13:49:03Z","timestamp":1493128143}