{"_id":"af5986d7-0f04-3bcb-beb4-66c320063c3a","authorName":"Kal Sze","authorEmailEncrypted":"Yprj7Pxhef9kHKJN90vHQKrQjbWdIIjl8kSSMisoIGovQZbaHqn3/il4LZeBgFRd+c8JlkHh2vGn9DKFtDvDG0ULgS7iIyMIyb+6oj7PgZt6hqvKMB6jJlbZKb30MJCiZ2AOEc4S5+A6tpgVyxVYJ5iPifwO9McWplppve6AKVMfJ6bN7izPPMaPwb02zLN8n+jeASAYCFnsEahiK7tElIdldmUKOzu48yJWvaxL66fFOAe29a/Vxu7D6PyfdWhnie4D7eyyqmOhuKFwSE8AXLvZ468nzGyLdklx50dXIoxgdUJ5adiZmwH9a14RLfrpDZGdZIe4y/cJGDMAzMzD26Jv9gOvzp1KfmfGEQ5K63piidAAVh/epSn6aWuVaZp9CpG6Pu7grK7AkXg5mEM1g8BFEg0dA2khH0tDgPJtK6x7xd+GED9e2ci1Oc4B2R3bIwgtNdedyVCDuSNthWzAZ/bq6NsIQa7E1HzR2bncIRCv+cOvEFkBe8l4o+0Lky71yrluTpQOO+5c4JSLdGOvYhlXOQlGQZXMlQCCZVTXsMXiHQG0lVsEjjdO9McZsCrTK8bUxjcqVyR9V2loXRzcd/34B9tJYhD412MYvPyG9PvHZ1UYp/Imkwz/Bq+1z64PLLOhZbpY8c0PSoGS5z6XKfzSkbqDGXu8FJocLmQow6Q=","authorEmailMD5":"b227c6c2c91f7248998801b23712314a","message":"Thanks for the great explanations.\r\n\r\nI would still like some clarifications and help with an issue that I'm having.\r\n\r\nI am developing a WPF application. It has method that does basically something like this:\r\n\r\n``\r\n\r\nThis method is passed to a ThreadStart, which is used by the UI thread to spawn a Thread, so it's not the UI thread. If I inspect the Thread in Visual Studio, I see that the Thread is not a background thread and not a thread-pool thread.\r\n\r\nOn *very* rare occasions, the thread stalls for well over an hour, after which point I have a DispatcerTimer that would purposefully crash the application if this thread has not made certain progress, which it can't make while it's stalled. My gut feeling is that it's stalling at the async_write.Wait(). But I haven't been able to reproduce the problem in a debug session yet, so I can't be sure. I'm betting my money that this has to do with the fact that I'm writing over the network (SMB 3).\r\n\r\nMy question is: can I be pretty much certain that it's not a deadlock in the async/await/Wait() sense? For two reasons:\r\n\r\n1. Because I'm not on the UI thread, SynchronizationContext.Current is null;  \r\n2. I'm not nesting async/await/Wait();","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"","date":"2015-11-06T09:59:28Z","timestamp":1446803968,"authorUserId":"disqus:kalsze"}