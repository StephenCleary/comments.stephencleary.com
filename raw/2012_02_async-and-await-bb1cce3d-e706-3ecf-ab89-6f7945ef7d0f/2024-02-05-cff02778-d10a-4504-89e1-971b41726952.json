{"_id":"cff02778-d10a-4504-89e1-971b41726952","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"https://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"using System;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main()\n    {\n        // Replace with your CyberArk PVWA details\n        string pvwaUrl = \u0022https://your-cyberark-pvwa-url\u0022;\n        string safeName = \u0022your-safe-name\u0022;\n        string accountName = \u0022your-account-name\u0022;\n\n        // Replace with your CyberArk credentials\n        string username = \u0022your-username\u0022;\n        string password = \u0022your-password\u0022;\n\n        using (HttpClient client = new HttpClient())\n        {\n            // Set the base URL for CyberArk REST API\n            client.BaseAddress = new Uri($\u0022{pvwaUrl}/PasswordVault/WebServices/\u0022);\n\n            // Authenticate and get the access token\n            string accessToken = await AuthenticateAsync(client, username, password);\n\n            // Fetch the password\n            string fetchedPassword = await GetPasswordAsync(client, accessToken, safeName, accountName);\n\n            Console.WriteLine($\u0022Password for {accountName}: {fetchedPassword}\u0022);\n        }\n    }\n\n    static async Task\u003Cstring\u003E AuthenticateAsync(HttpClient client, string username, string password)\n    {\n        // Set the authentication endpoint\n        string authEndpoint = \u0022CyberArk/PasswordVault/API/auth/ldap/login\u0022;\n\n        // Create authentication request payload\n        var authRequest = new\n        {\n            username,\n            password,\n        };\n\n        // Convert the payload to JSON\n        string authJson = Newtonsoft.Json.JsonConvert.SerializeObject(authRequest);\n\n        // Create the authentication request\n        var content = new StringContent(authJson, System.Text.Encoding.UTF8, \u0022application/json\u0022);\n\n        // Post the authentication request\n        HttpResponseMessage response = await client.PostAsync(authEndpoint, content);\n\n        // Check if the request was successful\n        response.EnsureSuccessStatusCode();\n\n        // Extract and return the access token\n        return await response.Content.ReadAsStringAsync();\n    }\n\n    static async Task\u003Cstring\u003E GetPasswordAsync(HttpClient client, string accessToken, string safeName, string accountName)\n    {\n        // Set the password retrieval endpoint\n        string passwordEndpoint = $\u0022Accounts/{safeName}/{accountName}/Password\u0022;\n\n        // Set the headers with the access token\n        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\u0022Bearer\u0022, accessToken);\n\n        // Get the password\n        HttpResponseMessage response = await client.GetAsync(passwordEndpoint);\n\n        // Check if the request was successful\n        response.EnsureSuccessStatusCode();\n\n        // Extract and return the password\n        return await response.Content.ReadAsStringAsync();\n    }\n}","date":"2024-02-05T13:48:19.7963639Z"}