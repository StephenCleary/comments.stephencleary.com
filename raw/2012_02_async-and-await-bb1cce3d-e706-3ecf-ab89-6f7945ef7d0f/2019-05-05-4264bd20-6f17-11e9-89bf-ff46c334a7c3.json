{"_id":"4264bd20-6f17-11e9-89bf-ff46c334a7c3","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"http://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"kanistu","authorUri":"","message":"I understand if awaitable has not completed method start to act asynchronously. We will run remainder of the method when it completes, and we return from the async method (and continue executing lets say method Log() whatever it is). I also understand that there is no thread.\r\n\r\nWhat I don't understand: Awaitable has not completed, and we need resources to complete some I/O work. Log() method is executing since we don't wait I/O work completion and don't want to block thread.  If there is no additional thread, and if both operation need processor/resources/thread to done its work how it is possible to done work from both methods with one thread, in non-blocking  way and asynchronously?  \r\n\r\nDoes it mean that at one point thread that executing Log() will be suspended to continue I/O work? Or both operations will be somehow executed in parallel on one thread? How is I/O work done if we have one thread that continuously do some other work in Log method?","date":"2019-05-05T09:22:10.644Z"}