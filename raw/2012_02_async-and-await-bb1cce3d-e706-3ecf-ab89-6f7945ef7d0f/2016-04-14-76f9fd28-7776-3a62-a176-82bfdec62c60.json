{"_id":"76f9fd28-7776-3a62-a176-82bfdec62c60","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"From the perspective of A, the only important thing is that B returns a Task. It doesn't care whether B uses async/await or not.\r\n\r\nThe line  \r\nvar resultset = await rep.B(input1, input2);  \r\nis the same as  \r\nvar bTask = rep.B(input1, input2);  \r\nvar resultset = await bTask;\r\n\r\nIn other words, A calls B directly (synchronously). B will (presumably) return an incomplete task. A then awaits on that task, which causes A to return an incomplete task.\r\n\r\nNote that at this point both B and A have returned incomplete tasks, but they are not finished executing yet.\r\n\r\nWhen B completes, it will complete the task it previously returned to A. This will cause A to resume executing, and when it completes, it will complete the task it previously returned to its caller.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"08625892-1a4f-32d6-b4cd-d3eddc218c25","date":"2016-04-14T12:20:44Z","timestamp":1460636444}