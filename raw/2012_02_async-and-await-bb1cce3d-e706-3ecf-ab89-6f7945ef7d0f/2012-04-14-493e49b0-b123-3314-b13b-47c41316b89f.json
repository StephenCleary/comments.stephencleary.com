{"_id":"493e49b0-b123-3314-b13b-47c41316b89f","authorName":"Stephen Cleary","authorEmailEncrypted":"JWgHdJCn/Vv/n+fcc2OMB7xqoB7hSt40Ud2L15GmhITPQtOnFwkNsKnBVdAX75deZ++RlWzhEwYIAKAuuZ767pyp3aPP37LiCust50ctF6k1PiFRqQdAIxa7LY7iKyhY2G0n4Vm/vw9A0KFC8FZRIY4T8b5DtndY0koWSJeCjILmeDbkJMJXyRqL57KKcKeyyKV8ooQjWYK8yWcexwJeXPB7jUcOi7cZkDQA9FKEsy05g146ZebpgAQlShEnnB8hBOtTDnIKa95iCRBQfb3+56LgMjwpZ1jkrgD7WRDtVrmCUQoV7I4JOn9ovOvRSsFBYW7/ZgYsIKyyglJzt9UMdbYqIGVVMLc9okxB7QQxokbyPJwHbkARRK6R5a6EMeIn1es3KDN/OS7oD3qDN8GWRTgyZRo/Uojxr5grEUNUQrABVMWZOC/c6OMtctbO2nEzGgSTLQujc+GO6Fv9VRPd3THOzaFU30UpahqtMqQL7KsN1Aa9XIx2qkYzmFgIB/wYJ2r0vdoPoDsYcnAagaPsoUwCe071xKTtnmhSmvlQQTPqF0oIpME/xDyozbjSmp26Z4jFPkJP7fdVZCM8v1+MXwjyC6qWELbIJ+2PeHExYjZIzUT4FPPcrfWUVc6+ovqPMiIFwq2u8QCPfba+T2YWHWYkcdVCn1oayEPCWrUGWBg=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","message":"Each async method is processed serially. This is true even if ConfigureAwait(false) is used; the async method will continue on a thread pool thread, but each part of the async method is still dependent on the previous part of the async method.  \r\n\r\nThe only case where locks would be needed is when you actually have multiple threads running at the same time (e.g., starting several Task.Run tasks and then awaiting Task.WhenAll). In that case, Stephen Toub has done some very interesting work with await-friendly synchronization primitives (on the MSDN parallel team blog).","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"","date":"2012-04-14T02:19:55Z","timestamp":1334369995,"authorUserId":""}