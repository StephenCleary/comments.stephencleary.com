{"_id":"9358ceee-b47d-3acb-a1fe-f3580aed159b","authorName":"Stephen Cleary","authorEmailEncrypted":"OEgn1/ilFwmvKAj6U35VuuDEV5s+zOlFuZOmadsea+evlsS6GGsdyjvjlXgSsbkaos4gG/o1Oc7bJZHE+x+qv4eENN3NwLbKmM2P3xvjNg4i0vxYMKEoxnOHwGzoqbfZqaI0wQSMai2EprflQhrDaU7kgKTpSt6svjj4SJ/SuOSoIYKeRJiuyEjHIQqPJD4mtW3fxcLNAK8DKN6Pe8iqO9wUAK4lRWZOURhJayw/gjtSJd4q5eCDlik1lGGec1Q7K4D8qH8+Icp+85ocg1UgPSUo8DV3deudX4Xdp0we7x0VIgyyRN3YYzvKXoGpfMMK5SgUflbd32eiELpj2vKwhaqsb07yWRs6XOApk9HdiSds472QHJKJjtFJIxTG8/CpZBV3M4KKSOwSDVqb7L/PrFrIkBGFgkcw9YTUJd/JCytM92sgn9vtF2HLCny4W5Cj+s5jNo0Svs+9ouGWD9ADPmc5BqWi9KRP0SnklrgbgXdvQiJEvVU3XDOgolL2fR8zN4xWuIrH2lJyPmZH2Oqogr7r8fnsif21ls28bfJl20hFG54kiwwlxNvhcQWgRxqyGJqExmnyP601q2S8CXxXqMPmN76DlUc85u5saQiskBWpGJ7iN7mXVD7s/UuX5dKd2VbkbW5OfCPvXDnxgFYmDi9gxBvt5Ln8hKnsi6I9rQA=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://www.blogger.com/profile/13192873941258824056","authorUserId":"","authorFallbackAvatar":"","message":"Yes, that is both correct and the *proper* way to do it. This works because every await captures its *own* context. So the ApiWrapper.GetSomething and BusinessLayer.GetSomething will complete on a thread pool thread (discarding the context), but MyController.Go will complete on the original ASP.NET context.  \r\n\r\n(There are various optimizations in place so that what actually happens is that when the last await completes in ApiWrapper.GetSomething, it will run on a thread pool thread which also finishes BusinessLayer.GetSomething and then enters the ASP.NET request context and finishes MyController.Go all on the same thread - but this is just an optimization detail).  \r\n\r\nI have an MSDN article online ([http://msdn.microsoft.com/en-us/magazine/jj991977.aspx](http://msdn.microsoft.com/en-us/magazine/jj991977.aspx)) that goes into more detail around the best practices, but to summarize the guideline is to use ConfigureAwait(false) unless you know that you *do* need the context. Your example code is exactly correct.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"","date":"2013-10-10T21:44:43Z","timestamp":1381441483}