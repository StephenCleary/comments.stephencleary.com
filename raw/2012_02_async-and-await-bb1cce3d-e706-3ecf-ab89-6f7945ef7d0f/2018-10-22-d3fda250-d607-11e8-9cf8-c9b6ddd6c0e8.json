{"_id":"d3fda250-d607-11e8-9cf8-c9b6ddd6c0e8","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"https://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"6f0b85d0-d556-11e8-b679-9f4cb5de2438","authorEmailEncrypted":"HNhsbJ/U+6oD5d7MLbl5sfMQ7wpUCOqZMAr7QDxMCodIKm79WCOgaN/h/b1u/5BeS1X8Ba6EXtOQ+VFffYuzrS2aHJpfTF0r5TuiCmep4k7jEvKchnrS8tdlPlP5GiHnL//U6hsxKqmEjDUKdeeUfsAJU//sQ5WFmRAGBTyZB4viPHIGWCCtZJjzIEsO6B/z83qWzCfX1+pxpwl7Czuho34uAr27hsm6VIhH6ddA3zMoUzjvgO9A7pUNp44sDKj6CrSjKUroFojbJBzwz0UE3JYwmjxyuGZye500/IhOdpGLaBjDJhLaoD8q0LbR+sGtiGD+kgSoFcPhoi/D3VOLKy5KRA1JOqlC1b/uD2+2o8Dwcy5TYAcYpWEJWKUcq5U7PJdKQPRsiv4LOmKipyF0xQMLlLU2ODQ12crMYIAVp0lazncs4fehiF1i4ZJ6DH5s7kPcaftI4Gjvd/9vFeEKXyos+NeO2tkIUjIBlmw/Ke89+MVjsn6EbywbH0oBH1VOytrsX+fGUMmEVipwmQlppraZNVIEVC3H8N6w7Ico6qb9yZ5utCPxE1fgqN6HEzahpJ57RiYPWBp4WlxIYXsseBXpZxKuyZb7xr7Lqaf14EnhDNqBp5uA5x4abSY3Vgp0LK+M6/CY5c5XSIFi5f66CoTPP3tMQBQ6+JVwfaB1fL4=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"1)\r\n\r\nThe statement `await Moe();` is the same as saying `Task t = Moe(); await t;`. In words, what is happening is that we are calling the method which returns a task, and then we await the task.\r\n\r\nThere are several possible scenarios where a task may have completed before the `await`. It may represent a cache hit; if `Moe` downloads a resource that is already in an in-memory cache, then `Moe` may return a task that is already completed. Or it could just be a very fast task; if `Moe` just delays for 1ms and the calling thread is swapped out at just the right time, then `Moe` could return an incomplete task that is completed before the `await` is reached.\r\n\r\n2)\r\n\r\nYes, the \"remainder\" is Part B. That is, it continues executing the next statement after the `await`.\r\n\r\n\"returns from the `async` method\" is referring to returning from the method that has the `await`; in the original example, this would be returning from `DoSomethingAsync`.","date":"2018-10-22T14:36:14.883Z"}