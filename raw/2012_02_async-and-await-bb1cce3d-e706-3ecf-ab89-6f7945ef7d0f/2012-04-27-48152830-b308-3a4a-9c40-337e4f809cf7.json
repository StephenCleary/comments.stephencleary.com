{"_id":"48152830-b308-3a4a-9c40-337e4f809cf7","authorName":"Stefan Forster","authorEmailEncrypted":"fZgDJNBNQ+qIqKN4ZNKZuVgtT4FQQ1Bap6KuB0OzlzGtkMcx4EAFmmizRdD5knkIgGSpCzImYtzDykXf37P+KBTiL2OovKQqVMPFQ6nGV2wQBxfSVGgt/OqLuoBKgppMa72WXOyBOKBktiBBasy6jmL6RVrE8cOHqureJKx0pjlWmEOYOnHFS5LKyqsmI/8EGumAHtywDvPOivPJixdT52Kapzc9Y43l+ra2yoPq8e4Y1ZVS/cg2+jU+cElEXQuc5fROveSeSjBr3BTZ1klYWxs8+bjM5trw640di0f6rvQxX99d1GGlalzO0wopE/p5JkDvEXkUt8RPdX/5hFiiXThbzKXko3trth+u2g2ivEsp9cjQD0hRwlGXDtoYZv/JUOJ0DcUkFRCft2UEubn0uAQl1YxVLe9UZ6yXB9WB+4Dzk9fi3c/0amzt86nb+cZLNfkS7V+Z2w5IrKS/aAIRJiVHatIaNf911jLnYWpc92UKcTiQlSe/7oWOGHgoau6ihzvVTJJBtCFc6s6ozoPSSMB1DyGpg+7sZHalkUfK+S/oAkl/RsJUxPHc4Z6c060XsMkINTDH/ABHH3VWkCp/g94B1OI7LeeFF+QL1poYp9xJvGTuaV6gq8wJurF4osAUGFy/e58mRTyS7NvHWW91cZ17i9ZUn+adV+3MSeQbqeM=","authorEmailMD5":"e1a8cf48073c25894e2cd29ef23751e1","message":"Hi Stephen,  \r\nThanks for your answer!  \r\nTo stress my point I made a small console application.  \r\nOne run generates about 5-15 race conditions on my laptop.  \r\nMy recommendation is to always use a SychronizationContext unless you really have to optimize the performance.  \r\n/ Stefan.  \r\n\r\n static void Main( string [] args ){  \r\n for( int i=0; i < 100000; i++ ){  \r\n TestThreadSafety();  \r\n }  \r\n Console.WriteLine( \"done.\" );  \r\n Console.Read();  \r\n }  \r\n\r\n static int m_counter;  \r\n\r\n static async void TestThreadSafety(){  \r\n await Task.Delay( 10 );  \r\n\r\n int n = m_counter + 1;  \r\n m_counter++;  \r\n if( n != m_counter ){  \r\n Console.WriteLine( \"Error: counter=\" + m_counter + \", n=\" + n );  \r\n }  \r\n }","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"","date":"2012-04-27T01:40:01Z","timestamp":1335490801,"authorUserId":""}