{"_id":"a05079a0-e4ba-11ea-8204-01a9690cdab6","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"https://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"50b9f880-e4b5-11ea-9a49-d5f8577284ca","authorEmailEncrypted":"eoG6nOyIbqbFF1ndirTn0/Eg61qlERCRiER1/BxFw7QMFcuDXyXF+MY7gm3IjIGh7sWJJu+ml7X62PLoGg35tD+M7NYLVTcN/vegmtfoednVoTlH2OFC504NluTjlFTUA8mAyy7/oaFE1mFuqqcAjo3GK7pv2E0Gx2vLEz9b8x0Bp7suvFKpaBsAR92BnLj5fxs9ChsAE/7NCIqMzXIaMlRxoAbz9jWyzasvG37FQLE5XuZ9qB8OyXW3bfAq9UhP80N09kfZhcLmf4VoFnA0UWaRArSA8uLQnINkcCQnlNEEYJ1eEEu+1DTNAgdjNEsNrMZoZb++LbHVbggnIEPdrHA3nQXXXDakjFU4RIzGPOabTXUEiKyKHsLEAeaxpvLwBigkm0V4775pDR0ZQbEtyXhF5IJgelx2CKCy65WcOXyFWVaBOarhsca4qLlkKR9Bx04hk41hxCFLRy0mUB/CrVH/lEJuaCNFYbhkA5p7PCLredTfxl3y7WNU7vkkBqiYgGv2u9hYZup0PGic9RSS1EuCVDp0SaaCoN61iwWs6enDBxzv/QGvAv8DCmhurO3OlpnolM9oWjlRpwfImafCjFQBWRZ74e11haVzWQz3KzRN7NPwNdl1XxoHnJJlXJPEluCrkAIkuDBRQ98rei32qfuBO1whEzrunsSHVfZ5Ugs=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"That's a good question!\r\n\r\nThere's nothing really *wrong* with blocking on a task that is already completed; it's completed, so there's no actual \"blocking\". It might have completed with an exception, so `GetAwaiter().GetResult()` would be safer than `Result`.\r\n\r\nBut I do prefer using `await`, for this reason: if the code is changed in the future so that the `Task.WhenAny` is removed, then the code using `await` will be correct, while code using blocking calls will suddenly start blocking. So that's why I choose that pattern, but it's a minor preference.","date":"2020-08-22T21:01:19.676Z"}