{"_id":"165f92b7-442c-31f7-8a13-fbe3b904adc2","authorName":"Jacob's Trouble","authorEmailEncrypted":"DXzG/gujdvc8vPKwi46IpQZgVUxLosMJDiJ2U3xos+gVaa+nPGmB9ck7rdB7+QDA4zETvhxKS/axTHALN4lc42fYUj2dKAWeTpqNHszochUsipnihAQ27VZ5NBMJGYeF9EaHJhPjW9z6zhqy7EfqCDZ3PYuEiWzSStn8+qz68pBhHxthvvDv1bI572XAu4QuxSLpW0h0twksEKIa5Oc283no+bvQuiJZSrGGoyiw7sx9wN9Ta8gmodvpTcD7ZeE/u6PGlE2tKrEr0xXFuBOBv97UGDx3CPQfwY2tjuiyrReeSTLfw8w+5pDzTl09tyzGbaFzMvN+oy9SUbazn1GSiTQFD48l1aggy6isnJuck9R0ExwsVTZ6uYq6ow8JO+9t5ruXeknO1PUyqy7iGUBnt1doTRig70t6XlMSQSk+vNKSZrSjPcyiwvOjHonYIDo2lNOuEyYYF6qlHNbffY25CnpX3uhrJot85zcQkq19B7XR9fi8/YdogRKrI3tK69eSxGU0Jfo9YNjEFFNVnA+abKApqXHBdx1VcVPjBCWq0N0vl+nvhTdJQDJGIsrOOqfs3mX/S6g0zjjTrhbj9LczNf91UcPxgfuTAPTf9eesQR53Dfh7xcgb5C2RqkeXE4d74ThN4ql/KJUFE5bRnk69jk6Gtf1GVUbDqTvMvnCP7hg=","authorEmailMD5":"26f1a4766077cb8c8816d616799ebee7","message":"What better person to ask than the evangelist for async/await?\r\n\r\nI have a class for running non async methods as async tasks. What I do in the class is simple and it works  \r\nonly when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"false\"/>\r\n\r\nI house the methods by their address insides a task list and then await as follows:\r\n\r\nawait System.Threading.Tasks.Task.WhenAll(_TaskQueue);\r\n\r\nIn the end, I add a hard wait by appending to the above list of tasks a dummy task, System.Threading.Tasks.Task.Delay(0); as  \r\nnewTask = System.Threading.Tasks.Task.Delay(0);  \r\nQueueUpAsyncTask(newTask).Wait(); // hard wait\r\n\r\nThis mechanism seems to deadlock when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"true\"/>\r\n\r\nI can share the class if you would like to take a look and advise why it doesn't like \"TaskFriendlySynchronizationContext\"","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"e102ebc2-9b8c-378b-94a0-589071e1aeb7","date":"2017-08-11T20:10:35Z","timestamp":1502482235,"authorUserId":"disqus:jacobstrouble"}