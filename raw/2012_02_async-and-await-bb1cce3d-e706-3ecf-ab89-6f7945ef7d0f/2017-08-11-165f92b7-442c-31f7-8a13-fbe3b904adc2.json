{"_id":"165f92b7-442c-31f7-8a13-fbe3b904adc2","authorName":"Jacob's Trouble","authorEmailEncrypted":"Pnqq0guFsvjLGo9+Bv+P3F4vVhld3gP42goSzFd0Xlrl2nChGAH6iK9bAEFy56QMVQJNMLW6zGqubdqxmeQlTAJTEje39WimKWPrRpSD65aQHegC0O0bhj7N8SU/A8v3zXfFU9ZnPrrHmOsz/6vPxzwMKtVvheUQCHe39GD2bRvVn4bF2G67OZ2lVL7OWkq8vnOByuCw2BPeQzMIUWcDLWoy7kxBOz0I+HVUWVK8VzsYu2CaKGAta6c5SRbc9sDLJp++3AmaJID/mOpIDdwgi9P/BA9dLsaCLJn3DYspEIdCG7zFKzWaYGrk665BEGdMArEAP80xTf0tuBxMvb7V8N681fbcuPqmnAQ29Yse74Mu8lpljZ7X6204gPMx1uPmuUQdYz0fRcpykeHS7PX1IYVQaSURLzdpUTJynOaoeDhzOn+gXINvoOJuql2fH3xOAVJ2q5ahpg2MK1OHW3VFY/TeBoCDSUW7nCkS8w8pomBivE0ra7oK+SS3J07PnYFuL2T+PTx4H2XWT7Ei3AJzZzjftL62VoxBLTLG8zbLkZZ7CwgBwe7zi/Uyhhqa2wwiW8FD5BeI0SnIT/9zWkexKACuU2GgUtDnYl8fkNWweWjE5BMsluHNeORYToLHxi0znpC0f4UKwNRoi5qzwaA8PM/bp6CG6gHPAGyvqJB/W+c=","authorEmailMD5":"26f1a4766077cb8c8816d616799ebee7","message":"What better person to ask than the evangelist for async/await?\r\n\r\nI have a class for running non async methods as async tasks. What I do in the class is simple and it works  \r\nonly when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"false\"/>\r\n\r\nI house the methods by their address insides a task list and then await as follows:\r\n\r\nawait System.Threading.Tasks.Task.WhenAll(_TaskQueue);\r\n\r\nIn the end, I add a hard wait by appending to the above list of tasks a dummy task, System.Threading.Tasks.Task.Delay(0); as  \r\nnewTask = System.Threading.Tasks.Task.Delay(0);  \r\nQueueUpAsyncTask(newTask).Wait(); // hard wait\r\n\r\nThis mechanism seems to deadlock when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"true\"/>\r\n\r\nI can share the class if you would like to take a look and advise why it doesn't like \"TaskFriendlySynchronizationContext\"","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"e102ebc2-9b8c-378b-94a0-589071e1aeb7","date":"2017-08-11T20:10:35Z","timestamp":1502482235,"authorUserId":"disqus:jacobstrouble"}