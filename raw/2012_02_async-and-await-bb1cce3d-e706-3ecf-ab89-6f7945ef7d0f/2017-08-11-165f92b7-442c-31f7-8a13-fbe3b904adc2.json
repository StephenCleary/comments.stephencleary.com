{"_id":"165f92b7-442c-31f7-8a13-fbe3b904adc2","authorName":"Jacob's Trouble","authorEmailEncrypted":"I15DP9pnRXx3ND13vviTa5NaIM4jK/qudlEysX/PNv2V0obXwhIZghmwMjKy+hZyIzxCig9+n8snMlc0tA2mEO+Kzg0T7uA1yvueznpD6pl0QffboOU9QIuuP23NpwpU5zJyI9IZzpRiBE37DGeq6GYs2i4sej+GSW6gImSV32hMyEGuGJ9js/1zFw5+yNzOBfpl+5uQqROQ5N1/ZjmIVwyZgpvAf9qvP7G3ZjW61BJGBF4FWupFnIWVITu3w1Lq7DGoGyvbYdktfSvHfI/NQxcwB6CB2XyngTnYpkCfv7AHMaq2PU09dFqeFkon7pvWXs1TZ/khR34D69vvZ/OewFIltWE16nuGG+4j8KWHsycUCAH8qzzdB/fphj2SzyXHJ4+uhN0gWUDV1ayuqkneRQ5WkNDCO9r/dwuQ1k84SrfbVVLQFaRPUq9a55YOP/EC/2HgTOf/qZ7BHzkqxiUGIvxtyWnei23u4kwtVV8+VueeU07giYgLDGkqtbx5+S4pn3N1xOeSTYxfg9zTA8WJutKYWSAE+UI2ScegqSqNwmswUrWFt5zey7HuYsuD/0SVBs7ui3HpcQJ/+MzIfsJtCnKYWGUphGdZ5d7QLy9lTARBWt/aANByQpmTKNpikDD7MeSe5NqbdFX+B5tbZ3QicDUtvX6BLu1nVAlOpUdVzPU=","authorEmailMD5":"26f1a4766077cb8c8816d616799ebee7","message":"What better person to ask than the evangelist for async/await?\r\n\r\nI have a class for running non async methods as async tasks. What I do in the class is simple and it works  \r\nonly when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"false\"/>\r\n\r\nI house the methods by their address insides a task list and then await as follows:\r\n\r\nawait System.Threading.Tasks.Task.WhenAll(_TaskQueue);\r\n\r\nIn the end, I add a hard wait by appending to the above list of tasks a dummy task, System.Threading.Tasks.Task.Delay(0); as  \r\nnewTask = System.Threading.Tasks.Task.Delay(0);  \r\nQueueUpAsyncTask(newTask).Wait(); // hard wait\r\n\r\nThis mechanism seems to deadlock when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"true\"/>\r\n\r\nI can share the class if you would like to take a look and advise why it doesn't like \"TaskFriendlySynchronizationContext\"","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"e102ebc2-9b8c-378b-94a0-589071e1aeb7","date":"2017-08-11T20:10:35Z","timestamp":1502482235,"authorUserId":"disqus:jacobstrouble"}