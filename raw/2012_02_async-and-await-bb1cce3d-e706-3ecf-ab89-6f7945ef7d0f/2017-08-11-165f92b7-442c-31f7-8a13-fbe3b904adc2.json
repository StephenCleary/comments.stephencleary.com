{"_id":"165f92b7-442c-31f7-8a13-fbe3b904adc2","authorName":"Jacob's Trouble","authorEmailEncrypted":"K7lFS824CFyfF/UJgVBbIb63IO91teGA5Mm1qQuBh4WSCnb12IgFQ/g+Nso/HrF2O1spmSsLJYCLxvCcazOhVCuNJf2tshC6VzIpir6G91bIf5MNFwjApND4N/fgoNENPEchfdhVJ82NYwwYxTxDBt3yoMUi9J1Ge9MieTxfQ61ofMHrr3UEmWVBHwDEWpL+Bcwvr6dWu2/6p2NfXCalsBXaQwTazBnUuKelTWlrqQ5NhIlFhv1sw27kHQzQjkTbGMh1ba84gKa5Vi6ORUz4W1zB/uJXmY3R5j33ttRJGxc8H/oTX9z3XEDrf6wzAjp/2jgcDKgAl3k2EN9TolotKfnjTEGp9nGl98kuFo0r/fE0mhuWXVX6KMgrysMGDR8BCHWtzFLVEuolHUrkEBQPvYiZQQYXqhuvpXv3AlfSv+jLbYApk6CCNcfkQbwrIzs1PR5JV2DdxO8vpdufnaxB7aUkzdx4MZXQRzQb7JTW3I8aqX6tKtuFc7k3pfaAZa1W6YntV/vLcAgTDKBMTiwU3qui3x5Jw4z/5yK0rHLIbnDyL6VPsHPdWlRYcqdTmfC3Ukc/0JmKSsd46MtDq0ctXm7CZ9xQvsKwnrA7PKhn64X/GW6ZlFeXl7DEO39gYBaXFT/lbqcvyr0U3lmVC1qj/7Z+luvs7PZ7F7xXosqOTdU=","authorEmailMD5":"26f1a4766077cb8c8816d616799ebee7","message":"What better person to ask than the evangelist for async/await?\r\n\r\nI have a class for running non async methods as async tasks. What I do in the class is simple and it works  \r\nonly when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"false\"/>\r\n\r\nI house the methods by their address insides a task list and then await as follows:\r\n\r\nawait System.Threading.Tasks.Task.WhenAll(_TaskQueue);\r\n\r\nIn the end, I add a hard wait by appending to the above list of tasks a dummy task, System.Threading.Tasks.Task.Delay(0); as  \r\nnewTask = System.Threading.Tasks.Task.Delay(0);  \r\nQueueUpAsyncTask(newTask).Wait(); // hard wait\r\n\r\nThis mechanism seems to deadlock when <add key=\"aspnet:UseTaskFriendlySynchronizationContext\" value=\"true\"/>\r\n\r\nI can share the class if you would like to take a look and advise why it doesn't like \"TaskFriendlySynchronizationContext\"","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"e102ebc2-9b8c-378b-94a0-589071e1aeb7","date":"2017-08-11T20:10:35Z","timestamp":1502482235,"authorUserId":"disqus:jacobstrouble"}