{"_id":"d62dda13-58c6-47ac-ad42-e85f22edde28","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"https://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Jack Warner","authorUri":"","message":"In this code snippet you posted:\n\u0060\u0060\u0060\n  // Write the file contents out to a disk file.\n  await WriteToDiskAsync(fileName, fileContents).ConfigureAwait(false);\n\n  // The second call to ConfigureAwait(false) is not *required*, but it is Good Practice.\n\u0060\u0060\u0060\nCan you elaborate why the 2nd ConfigureAwait is not required? Does that mean it is somehow inheriting the thread pool that the first one resulted in?\n\nI tried doing this at the start of the method:\nawait Task.CompletedTask.ConfigureAwait(false);\nAnd then not specifying ConfigureAwait(false) on any of the following await calls in the method, but it definitely behaved differently than if I just put ConfigureAwait(false) on all the await calls.\nSo it seems like it is required, to me.","date":"2023-01-20T20:01:20.0376764Z"}