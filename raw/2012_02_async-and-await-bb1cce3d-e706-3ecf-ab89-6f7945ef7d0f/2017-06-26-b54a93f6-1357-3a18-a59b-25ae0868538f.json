{"_id":"b54a93f6-1357-3a18-a59b-25ae0868538f","authorName":"Stephen Cleary","authorEmailEncrypted":"j4P0nl2Li9dkEhxzBnZwKJMAgMjMqr9Iyj3jYi8NB2anuDY1ksi3QAQEV6NAUixZ/WxPXfyamua8YXcPJbrhtrBEiqiEKzbpXeaT5XFJOlka9UY8tV62ciwQYU9fA6Zj0r1Vd1M0J52RB48amEafEdzPyKBoQbXjQSjCdgwsvktTt7K4NY/1j0V4A0f3Xv007xdhTCF8lj7oOBtW8mUfks5n48CiE+ZzMomsMeVXvdZ/YXzBGhDPLJzcU25CckyAo4drEADRKk6aLURZHZ1c4sLXkRWXg2shIxfJKi5e2zjRxxfFo/2crYJ89elRYTfz15Kvj2qiybZgSKi17X40X4tRcSsss9t+/b1BnJckYJLHVNzsZQr2pNNCmIs3NUhtQIkneGTkbjvnYR7KvzYgTpE1d2yIkfnj6iYvBqLM0my9LppmgQWQue2OA/w2+62w/WJpO2BPsQQ48xv7h9Ahu7Jh1VNO0E8v9Ab3qZ1yfp/0SsWR9Xn23JMmq+KsRYTp37vJTSV7xkbnR7WFWFKEx0Fz+i/x7Rr8yIZ7t5nV1jugxLRDurtdnrcqy6r2AT5ZGfj3RhRAFuqP5k2IWyaO507wVjc0ClX4Ut8cfXr7uemAd+qe7UxV1m3SQA8eV0GJqG6qOgH+JAV08WySC4HNiduA8N3Rxn5LaTLm9RHwU+g=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"","authorUserId":"disqus:stephen_cleary","message":"No; \"async\" doesn't mean \"run on another thread\".\r\n\r\nThe way it would work is like this:  \r\n- TestAsyncCall calls DoSomethingAsync.  \r\n- DoSomethingAsync calls Task.Delay and awaits the task it returned. This causes DoSomethingAsync to return an incomplete task.  \r\n- TestAsyncCall stores that incomplete task into TaskResult1 and invokes DoSomething.  \r\n- DoSomething returns \"synch\" to TestAsyncCall.  \r\n- TestAsyncCall stores that string into Result2.  \r\n- TestAsyncCall awaits the task returned from DoSomethingAsync. This causes TestAsyncCall to return to its caller.\r\n\r\nsome time later...  \r\n- The task returned from Task.Delay completes.  \r\n- DoSomethingAsync resumes executing. It may be on the same thread or a different thread, depending on the context that was captured by its await (see my post on this page for details).  \r\n- DoSomethingAsync completes its task with the value \"asynch\".  \r\n- TestAsyncCall resumes executing. Again, it may or may not be on the same thread.","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"a2335ec3-165b-32d9-82ad-a616eb4de913","date":"2017-06-26T13:53:14Z","timestamp":1498485194}