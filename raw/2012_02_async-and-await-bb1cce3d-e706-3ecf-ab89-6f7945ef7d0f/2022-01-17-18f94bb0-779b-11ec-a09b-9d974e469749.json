{"_id":"18f94bb0-779b-11ec-a09b-9d974e469749","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"https://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"6a62b6e0-7786-11ec-963c-8bb69afd31af","authorEmailEncrypted":"T7CmJLK5syOPG7kX6oms0TPoJti+STj0yQXg1er4w0Pv7KBdZwL0sgEEGYvCpKKRptCgUM3euNC0CylNNIKzZOtQaIjBsfa3zf0QtVLtNhi0wIOXuXAC+uMttR3tgIDW1mR+11hLno+sX/p4ZfvtgVpOndtBZw9bmwi5o1BiCERtOv6KSwDMy0CiquhgUdejoAY6foZI8Hp/WRwyf3j5PPh/VL0QQjjfkoJf0O5P9IhlMDgWGbXqygpWteVA/Z0XE5y5b/qGLxo/6g5cIb7GZZrLQuy+AGLk9im5Ew+pFyAc9ftodFKIR+IUK2CUIk/hYIFpYjwqdAFWhJk7VNzXe0VoeX2Ke3sO79FjKzStZEq0PBvjGqkVxXXw6JmQ3ysGBuPbvlYKrxLDOokh5QgFmrIYYACahebsSyAduLZUZ49fV8kkhfAmn61PBA41j95jfSLJ6BYwET2N+vVWH50RgzfWxh6h0+DgE5md9wE34FgBqb1fPim16frUvwmgHkfkGVAPQN5a/vNnPLeD7MS+2RfLZyIJnWpdX/X/BeAM5w6ji5Opum1uk1umcasdOf12UBT6EyfkPZ1lwg5tEdAGz6wCcWDNtiOy4NpFRZTWhFkUTYhSX2CnInqxYHZdLYi1IwM7LFsqK50/lFXLVvqUw63itqmubxc+jC8m6oA/zrw=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I'm not familiar with Navision, sorry.\r\n\r\nIn general, if your platform has a way to communicate asynchronous work, then that is best. You can usually write a [conversion layer](https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/interop-with-other-asynchronous-patterns-and-types) so that you can use `async`/`await` in your own code but then expose that in whatever asynchronous pattern is used by your platform.","date":"2022-01-17T13:40:56.625Z"}