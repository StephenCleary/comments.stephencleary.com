{"_id":"c28cacfd-213e-48d1-b042-a6c067879544","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","postUri":"https://blog.stephencleary.com/2012/02/async-and-await.html","replyTo":"87c579ee-7a97-465f-b372-ad0e63155cb6","authorEmailEncrypted":"TKZkg1M5B4pqeQDOdMYXURI7YMJYklqUF03pOs435vHyWKW1Za2HuPI0b37UFuro97b42E73BwcjTKn3HJ5OgeFaqidjSDvcan3CzzY71MZNiKZZWbDLQizZ7ZnJ8t/OAbS8A1Ti7BaamrAYzAoySkH1BHjQS08oL53bEUEKLBWThEIYuywc0sucQk0R4Klko4lhYKRy34acpra7NDlQRtRXdbmLQo4NRENdT2kOrHWATA454BqIVfaBmkS/k4xXsLwLJxkXNbxH2UYDf6vx0hqQQ5W6xNBJAnqKUDqUAamkIZQyJpI3TR7olR4Up4SNmglGuW3wKN/UrgajRYpv0S/OAHpnVZQuMSXqBGpbuiC7Mk9GkY2OdOgVxhLfD/rLJd\u002BpJjdhfa946lWohkPoNuirJ3\u002BwoyTlb8dIIlkOZbLL7/nQ/fq7oNTVRWohSi1wie3iJpcdtpIuZdHArVPSrsxCvL1WrY7AYv6A40qrTlZalndFdmBpXKS6ulG4Dyy2DvPLYu893xJp\u002BsCWCOPJELVIhRsrUkddjAxSOw2C6B3TIMvaPB0wdavpfwXwOo/ICp3rjQAcPv/3aRNRqauqIgP/PrqPAIBBw6l8BDRk\u002BArTiDDlEssYO46PuwuVNnHdLWVHq\u002Bajxeocb5n4TuqsjZ\u002BKxnp/Ffix\u002BMXgoNQMG4E=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Yes, that\u0027s correct. \u0060ConfigureAwait(false)\u0060 on every platform always does the same thing: resumes without the current context on any available thread pool thread.\n\n\u0060ConfigureAwait(true)\u0060 (the default) on ASP.NET pre-Core will capture the ASP.NET \u0060SynchronizationContext\u0060 and resume on that. See [It\u0027s All about the SynchronizationContext](https://learn.microsoft.com/en-us/archive/msdn-magazine/2011/february/msdn-magazine-parallel-computing-it-s-all-about-the-synchronizationcontext) for more about what it actually is. The ASP.NET \u0060SynchronizationContext\u0060 does not have a specific thread associated with it; it is applied to any available thread pool thread.\n\nWinForms/WPF also have a \u0060SynchronizationContext\u0060, but theirs *is* tied to a specific thread (the UI thread). This misleads some developers to think that *all* \u0060SynchronizationContext\u0060s are tied to specific threads, or that \u0060ConfigureAwait(true)\u0060 resumes on the current thread - neither of which are always true. In the specific case of a UI \u0060SynchronizationContext\u0060, it is tied to a specific thread, and \u0060ConfigureAwait(true)\u0060 will resume on that thread. But that\u0027s not true in general - and specifically not true for ASP.NET.","date":"2023-11-01T14:26:45.7582758Z"}