{"_id":"a2335ec3-165b-32d9-82ad-a616eb4de913","authorName":"Sandhya Rajesh","authorEmailEncrypted":"VtXw4XTREVCZMJQp0ydxnpeXfDkr5fUxJYAd04+MMxbhhsyONu7wy4etSZGdY6RUiQJqNaxo07FfsBC6DJ/cBJ8l5p8uAlskEesTYwVRfxxDi7RAGDMiKy8Fr6wQJxP7dbP+pL4eoHQcROlBKWe+Up/WKsTxPeqdi25zG6rbnxzgapg0Nh7VyJ1zueZgXFUSWcuPXP7yPoU1rMIFrAz5QgegDnATLKL18puQfcOo6dY6FTaXWaljZt5pbwy9DfXkGgaJgKQNZWpE0VqBDtu5EVyvpwleIu/3ol0/pdBkPsITmI0VgvBGGBUhT+lk7AetTssBdeJmTQH/7ndTIZw4c8UMNa9j70HoHPcYd0b3RCSLF4QfUmfkZjsUgYHJPKyepn7ZthY+3/0rVh3gPZWm2P3VNVyZPpBGicF+PTvowkN7zOiA8wfBrMaKcBcWU233SRAfUljgK5E8hAKZ/wnOlo2kicOUVlT2ENfgyFlYefm+239mbEdiKJCmVpHWXa9hzBVv+aMZdDCmD6ACABmUIVjgJDWd2+8qao+7LaCw20VYITt3NMsATHiVFZstYycS8cThRgH8JeMDmZb6YRx0x3QVx5zhbVnVbwAkEK7LQ/phtTLdJOm+HuIxKa9r207XibZdlzhifovlRWLrXv+NByeFW9FnPlH7LhH/qNFQaJc=","authorEmailMD5":"4b69054b1075246294f18c65becf7f89","message":"I'm trying to understand async programming and I had a question. If you had a function call TestAsyncCall() as below, would one thread be used to execute DoSomethingAsync(), and another thread to execute DoSomething()?  \r\nThen when await is encountered, it would wait for DoSomethingAsync() to complete and release that thread (while also not blocking the original thread)? Do I have this right?\r\n\r\n public async void TestAsyncCall() {  \r\n Task<string> TaskResult1 = DoSomethingAsync();  \r\n string Result2 = DoSomething();  \r\n string Result1 = await TaskResult1;   \r\n }\r\n\r\n public string DoSomething() {  \r\n return \"synch\";  \r\n }\r\n\r\n public async Task<string> DoSomethingAsync() {  \r\n await Task.Delay(10000);  \r\n return \"asynch\";  \r\n }","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"","date":"2017-06-25T13:48:19Z","timestamp":1498398499,"authorUserId":"disqus:sandhyarajesh"}