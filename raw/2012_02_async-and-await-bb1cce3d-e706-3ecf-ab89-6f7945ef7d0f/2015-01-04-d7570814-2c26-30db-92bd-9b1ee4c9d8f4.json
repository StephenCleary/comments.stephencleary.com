{"_id":"d7570814-2c26-30db-92bd-9b1ee4c9d8f4","authorName":"Stephen Cleary","authorEmailEncrypted":"e7cjP4r9pKJzcnqk0DMXm+7wqAUt6ZgLUlDxRqNj/PBrbLwfTwQc5YpYOtqouA1BD7w6rREqDErcmyoJeboRQu8F2gwEzEP04BxlloUxoV8rHaCFLevNhsZBWQsYXm5K1gLEvwOOFUO3qHzIbsM2qNocFVhjyGZNT2Te7o4+RomP2Ln79iF9//aYI5aea2TJyHCvLT4wNFmaNOvT50ImiflI5ezxKTFyU2QeZ1ts6Q8EAthLvqA6Kwvj9qL5yr8up7+oxDDluBQWo7med3LLnbYDcgPCi2AMvAdzdcksu4Z6TSsJ9bbk/GO5BzE9O8M8VHWuvKgck8jT0uhdc6XPEozk7r7mbNVUcrQ+u10OpfpDmkDjvPJCO/7M+HO08AltUUbfuEuAwjhD4iaXz3QHmX+SFjHH8EbDEDGZedFmg+YYXZhIdmHaoGVZr46uM5ljLLbxPJkvejdxDrJCaCb4SKDoqLH+gmQ6zQ94Z0WMMT7h2NOHjqV1jda8oOaeh9FtgDgQKnwV1yTwm8kf6qF1TK3yT6BGbx1h38id1r9ZMr5txGDvTdCe4TyhG/nRg4dGHe6qolxaeAEswndJvDnvpC2k13j6DhTXX1IPfjEEbxNeJ0LKXGC6UswvMVFcL7/dQOgjvPbtfVk9vLFFfxJ+qrd1eqEIlODEK4Fcw8YJr1o=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://stephencleary.com/","authorUserId":"disqus:stephen_cleary","authorFallbackAvatar":"https://disqus.com/api/users/avatars/stephen_cleary.jpg","message":"Task.Run should be a last resort; what you're actually doing is just moving the blocking call to a thread pool thread.\r\n\r\nIf this is a WCF service, you should be able to have Visual Studio auto-generate a proxy for you that has Task-returning methods.\r\n\r\nIf that isn't possible, then if the API you're using has any asynchronous capability (e.g., Begin/End methods, or an Async method with a Completed event, or even just custom callbacks), then you can wrap it into a Task-returning API (e.g., TaskFactory.FromAsync or TaskCompletionSource<t>).\r\n\r\nIf all you have is a synchronous API, then async/await isn't going to magically make it asynchronous for you. You can implement a workaround like Task.Run, but the ideal solution would be to augment the API so it supports asynchrony natively.\r\n\r\nRegarding return types, both await and Task.Run will work just fine with return values. E.g., if Execute() returns an int, then you can do \"int result = await Task.Run(() => objSlowOperation.Execute());\"\r\n\r\nIf any of this isn't clear, feel free to post a question on Stack Overflow. Source code examples in particular are formatted much nicer on that site than in my blog comments. :)","postId":"2012_02_async-and-await-bb1cce3d-e706-3ecf-ab89-6f7945ef7d0f","replyTo":"fac3e235-8c1d-3abc-af64-0e271c3d5d61","date":"2015-01-04T20:32:39Z","timestamp":1420403559}