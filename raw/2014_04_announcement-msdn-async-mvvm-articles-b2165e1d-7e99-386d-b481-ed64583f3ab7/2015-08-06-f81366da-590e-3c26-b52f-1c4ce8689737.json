{"_id":"f81366da-590e-3c26-b52f-1c4ce8689737","authorName":"Alberto Antunes","authorEmailEncrypted":"kMNlpVS3YBJ/SjYf2YfLeTXeSJgyVbh94LOzPem1xJlnR27Ds4mP1eufovNN2MRiaY9VCexU3kv2dAYTOv9DcaE3gtpin9wkyMm+rVdkydj6gN7M27gqk1hUCaMzmMDLSpyaHoeInkjPooXMUpP6V+nSIKoPTWJZshHB8HHYu4iBnqVygReXUamOBhqBJcm0duQVLlJ/fjFKXG6fSxUveKcc47f4Ak//DsuLbQUHcEnrEONEvfErxegr/ePTbL7LGq2c7s0LxM+SLejiey7iDUrKOBsnJ0EXbDRZ+USxdFpUdSL5pR3PK8OJk+VkP+vRFdxaZ6a4v1A1prDaDiDZN/nsyc+nIhOZLaU9ypu51Bp4durUp+dg9OQkD30eYyXoKEXNAOjjRnKNLIxqJbMkfhKvc0TEbTjnZFf88JX+KaG21hYTalv8+UofeD7ZRulU3A3qh8FNyoxnhgp+DzYzwX3Ku20KuR+bNij1TXWDTjmJmm8hcDZzU5/h3OiX2STUUwz7ht5tMZhcJaaEpQ6v5q0X/NWDNTid30f0wIA66zvXt8kXMPkuH16uZNr8+StY8wcAbi8Tdh+dd3t/QCQSPIW/KQylyEhuPgxCeh4bwuxHnF1GXg8nqBr9kVRTnFzsjvj0m7BeGwt8kw9JvfP1PvElWh0WY7LojnM1eWpJK5Y=","authorEmailMD5":"07d521c848871c24805c64c5b3302289","message":"I managed to at least make it work by adding a throttling in my ImageLoader class, though it is pretty ugly. I used a static variable to hold the amount of concurrent requests and modified my async method like so:\r\n\r\npublic async Task<string> GetImageUrl(string movie)  \r\n{  \r\n while (CurrentRequests > 2) //only accept at most 3 concurrent requests  \r\n {  \r\n await Dummy();  \r\n }\r\n\r\n CurrentRequests++;   \r\nvar document = await GetMovieHtml(movie);  \r\nCurrentRequests--;\r\n\r\n //Rest of method....  \r\n }  \r\nThe Dummy method is a simple await Task.Delay(200)  \r\nWhile this worked I am not happy with this solution and would welcome suggestions of a better way to solve it!","postId":"2014_04_announcement-msdn-async-mvvm-articles-b2165e1d-7e99-386d-b481-ed64583f3ab7","replyTo":"15eb38e4-0273-38b8-84ab-3bc9f45273b9","date":"2015-08-06T01:22:26Z","timestamp":1438824146,"authorUserId":"disqus:albertoantunes"}