{"_id":"f81366da-590e-3c26-b52f-1c4ce8689737","authorName":"Alberto Antunes","authorEmailEncrypted":"g4M/SgHMyGEt1wz9oOxsawZqBuPjI8gX3b33rYCgXxkq53t5o0wHgOHtRsVBOXrsKmO3M9n7h4tV9O7OKo8JSXGJHFxr3GP0bY9RJiJNX0++Kv/wk59WUvmSvduOCySY4tJCJdE3q7iE9bQ6abQDJnnuMtTlVWc8Nj1D9vGyokfRfPF5DFNa8FDo1z7RlR0cO52geVAJrBkh4GpqYoXxX+8mhjnb1KaVbjo6+GfKxpMxkV/XF59W3n8/7q/ZxBsUU8Sa4AgNiaeIQ3B9a58RG8YGcvrMKIpIHmegQAkXmu4rSgkiE2RYYlELrvy79IeRxkSNUl4mqFS0Tf4NVP/Yi9U5dCOr3omteXYWmY9vrpn1UMI9AgqXoC5nhqB7nuKdZy2xI1GMFGWC1NNaJE4MDk0xm+kW0NLy6nQigHgxP0YN5KGeZwL0OdLTpb/nkBPpmRAFV37CqcsfROZGNtj1tCJi7MCXHOiLk1iNBI3izydUsJmUamSyg5eUsg2kDgm/vDP9ZccW+TMDOYwOFECoW+GLYILwvr6ceGwC5Ay1TmDvRT8hlCuz/fZonSumoymuABuNRa978LQLz5sqfL9Y3Cslms76gIAK69NrjMSaWyLV3+UYo2y7U9VUApliDGnxmIeUbDMldVYR4qKibsPfN0KEke5/LOZfQZXd0GrmE28=","authorEmailMD5":"07d521c848871c24805c64c5b3302289","message":"I managed to at least make it work by adding a throttling in my ImageLoader class, though it is pretty ugly. I used a static variable to hold the amount of concurrent requests and modified my async method like so:\r\n\r\npublic async Task<string> GetImageUrl(string movie)  \r\n{  \r\n while (CurrentRequests > 2) //only accept at most 3 concurrent requests  \r\n {  \r\n await Dummy();  \r\n }\r\n\r\n CurrentRequests++;   \r\nvar document = await GetMovieHtml(movie);  \r\nCurrentRequests--;\r\n\r\n //Rest of method....  \r\n }  \r\nThe Dummy method is a simple await Task.Delay(200)  \r\nWhile this worked I am not happy with this solution and would welcome suggestions of a better way to solve it!","postId":"2014_04_announcement-msdn-async-mvvm-articles-b2165e1d-7e99-386d-b481-ed64583f3ab7","replyTo":"15eb38e4-0273-38b8-84ab-3bc9f45273b9","date":"2015-08-06T01:22:26Z","timestamp":1438824146,"authorUserId":"disqus:albertoantunes"}