{"_id":"b1c413aa-dcba-3106-ab4f-a93bc1bc4c8e","authorName":"JCDrumKing","authorEmailEncrypted":"DyzBpX+F4c6WV5fc63cxlTbn74S5L4QdPAAs8pbgbwK935Ro0iSdM6lxr3w7ytZugHF8+iKbFB1o7ZzLdch5gPGdh4Ro4k3onFIJ5q3KH/FVKAXHHji7K5oZZSA7TFVOlmtgiZWgqKrmpElnOFoTtjqkgvOc+GCGHIqdPY8Dk0uVVVsuloYfM7QkNFfqLe7VzFy7fHzlvo3BNAcvZT8rr/jU4l8SjJXACNHeSTSVlZaeC+wjB0U+o1tyfOfmfS+YlOF3/NwLWowo0MMlskjxz3/rg5cQ1WmvIVcNVOnr1yZsxPN5KBzt1KogcMRckPUE1eUtv3bGZBs6tbssKwHzbni5wZZ+jKUhBiKJ8EJHkn8KA7lmsVbH9+0pki6SGRYfVS5NcuSL/shzw+mh64WQGTENGEeifShapMT7PfZr9ybtTx4C/TQ20tQ7sHC3w15P/KhIVQJsQhrcIXVeymZdvCtLwbXWjEbSawS0ID6b2Cef/K9GqxCqMl2LW2SusQ444VZ95T8YAR5nn5Sr++IlxnMXUwQN0Jls6DS02NDpmFWVytvqVfmdDCaZQQDna2OwNO9RKanZEJnOEprsK0xKyUAs032Z0iQhbbltU88z5nWm/O+Au3LnPykBmF1QvwbUducJgU2C9RDcVnjU7AOwRG+z/ebmKYDAxYy1T/XCUBA=","authorEmailMD5":"f011ecf439b738c61f5f2fc697434e0e","message":"My class owns a managed resource (an API connection to an external system), therefore I am implementing IDisposable. Due to slow performance when making the connection, the connection is made once in the constructor and I expose a Disconnect() method that delegates to the api.Disconnect() method.  \r\n\r\nHowever, I cannot be certain that users of my class will always call my Disconnect() method, and I want to make absolutely sure that the connection is closed when my object is disposed/finalized. Even though I do not have unmanaged resources, is this a case where a finalizer (and the full Dispose pattern) is needed? Otherwise how can I ensure the connection is closed and I do not have a leak?  \r\n\r\nMany thanks","postId":"2009_08_second-rule-of-implementing-idisposable-7a1a789c-9a61-3596-ac63-8d78ef6528a5","replyTo":"","date":"2012-04-10T20:53:08Z","timestamp":1334091188,"authorUserId":""}