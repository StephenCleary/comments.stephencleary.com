{"_id":"b2e24950-f8bb-350c-bc85-19bbde94b136","authorName":"Stephen Cleary","authorEmailEncrypted":"eSphPiChVlhf1MRGEdD0tUpAZxWdScIGeE3JmrX/BI3qJKYPVwlnRYn+HzAQM5mUZLmbsSnsVN29ywxNIeLUkBtAtwFCXdl2ANggNXQb0MqBm2fJAVTezRyhWogyd6b5+XRCksiMnuERcUIyKLQNHKalXakgTSTQq3rLp3BZtgMHS+8v+SHtL0mKu6QbY13GqXvshmZ34AfzC5cNs69EFmk/V1ee1akbznMV76ajEZ9GwMOcET+HK7YgSnqsFUTty4wGwDi1/rvefR1jgxk4MAOQ49rPRJ8kHq58QUtOjieO09A8Bhd5we+VQAXnRMhodABw7xqRvxvjdFlGKEsbXBKi6gQS0uTvmuR+SNQuWtRqmJ2XR5NoDbuv6S4Tei4zUK3M5OYU17fD7XClzNe76nsxxZE+Bu6yFf0wmGgildZVe59TNno9e4Tp7khsbn3MGXHd2md0h2otrrCh7Tco+wk7Y5oIJpTLGiPZGyjSVr+iyp1GDUku0xjz/lXHihd6ab9wRsMutURx1y4ndpQBtxAdvHWnv4xgkOEw8OzcrTryM7Va6VNgCIv6J6KN9IuycsH+Eb8Zpot4D7CHXV0Oa70F/oxXr/hKbjktN3UsPYcKkPWmRkZWWL1N+Resjj2DubtthJprqnhNx7Wt0IEyGorJ4o1AJbr4WVpHeD8eMCk=","authorEmailMD5":"ad2250182ff26a84dda974e50cd94382","authorUri":"http://www.blogger.com/profile/13192873941258824056","authorUserId":"","authorFallbackAvatar":"","message":"@Rodi: The design here is that SingleApplicationInstance owns the Mutex resource. Since it owns that resource, it is responsible for freeing it.  \r\n\r\nFor this reason, the Dispose method does not have a bug. It is possible that someone may introduce a bug during refactoring, but the Dispose method as it stands does not have a bug.  \r\n\r\nIn particular, I would say it's wrong to have Dispose check namedMutex for null. This implies that the design is that SingleApplicationInstance may or may not own a Mutex resource.","postId":"2009_08_second-rule-of-implementing-idisposable-7a1a789c-9a61-3596-ac63-8d78ef6528a5","replyTo":"","date":"2010-05-26T20:41:48Z","timestamp":1274906508}