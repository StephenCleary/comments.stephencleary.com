{"_id":"36bf1a1f-57c0-3a88-896d-2c9aa42bc346","authorName":"Anonymous","authorEmailEncrypted":"","authorEmailMD5":"","message":"What exactly is the benefit of not coding a test to see if mutex is null? You speak of whether the object owns or maybe-owns the mutex as to whether that is the test for good code. I call BS on that and charge you with misdirecting a lot of inexperienced programmers. The fact is that the 1xCPU cycle it typically takes to execute a BranchNonZero (BNE) instruction which your IF statement represents means NOTHING in the course of your applications execution, but it does mean that the developer understand the following:  \r\n1. Software Processes are complex  \r\n2. Software is maintained by groups of people  \r\n3. Software is maintained over time  \r\n4. It is more important to be explicit about your intent than it is to have the next developer divine your intent by thinking that your coding values are somehow universal  \r\n\r\nWhen I read your code I see risky vanity. When I see code with the IF statement I see code written to be bullet proof, designed to live long in a complex environment and owned by a team not an individual.  \r\n\r\nAnd dont come and tell me that that contributes to bloat either. You will lose the balance of any respect I have.","postId":"2009_08_second-rule-of-implementing-idisposable-7a1a789c-9a61-3596-ac63-8d78ef6528a5","replyTo":"","date":"2011-04-08T02:43:16Z","timestamp":1302230596,"authorUserId":""}