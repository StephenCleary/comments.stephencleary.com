{"_id":"7d481fdf-aebb-345c-a3af-fb46185f9132","authorName":"Stephen Cleary","authorEmailEncrypted":"C9H2cH53oIORWXE6sXhItAObAXkoVKtRf74qDZci1DwcqQYAFf2OwaZpFplTXKIUFiqHlR0M9iW2Ccz801k2Srb+qpTNoGQEJ18d0NqypwDzLqQ7GvJwjlQlCmIkOwPPi2jw9rYL8+HLFOw67/l/LlLqe8VLUiA7QWIVhmeYiHm4LNQCwVSy4gHRYmPjT/gBYaQEM4DvAR6B8BgmC1oA8Thkb6W5sZ2cubJDhh2mIqXzPwmv0a3AkpMqGghUo5fXJVn+fQ69Hj8iyVzArNlomOXJZ6YH7xKGhO+4O8yOg0t0m6zWTZLeQR05rjElvegeHDbKgOcqi2pctZILWwlJC/6N7P8MkC15BV1kjWleuMyPEG8keHCeMuwy7geldwLTxYZ3P8wUIolUvAgV3MnGingJnRpURESB4WnOhB3T6BRN5eyf9ZmmCT6h2N7tDEgo7mKjitHld/gUj6J3SIMAlmfna4ZaB7g5nThV7zz6/eiu94/AlnRYBxN3h1IN9S5JowsYV3AZD03PaUqy2shPwK/6NgEweqMaF/urPI0tkHK0N03awmBrQZFB1U2AP2oyYdv2KtiA8dH2kxpBt4ivOvQZZ/UAMpBUXPiz4+CkLyL5ilushwCes6FeaBj4RdHMuFD4mYaV8DFCHeHibGbripyFdJxt0eHybWV7kKHvKQE=","authorEmailMD5":"36e44ea0274d8207eb632c566e60ecc7","message":"I would say it depends on whether there is an actual \"leak\" or not. What happens if Disconnect is never called? If the system as a whole recovers from that situation (e.g., the external system will eventually detect the connection is no longer there or just times it out, and if the external system allows other connections from the same source) then it can be treated as a \"managed\" resource - it's inefficient but there's no leak.  \r\n\r\nThat's probably the best way to go, because the system as a whole must be able to recover from connection problems. The only other situation I can think of is if the (client-side) API layer itself has some restriction, like only allowing one connection per process. In that case, I would lean towards putting in a finalizer which actually (intentionally) crashes.","postId":"2009_08_second-rule-of-implementing-idisposable-7a1a789c-9a61-3596-ac63-8d78ef6528a5","replyTo":"","date":"2012-04-14T02:12:19Z","timestamp":1334369539,"authorUserId":""}