{"_id":"f780dbd3-cc22-3342-9b28-c6e36ed7aaf1","authorName":"Stephen Cleary","authorEmailEncrypted":"","authorEmailMD5":"3db7b6e14d9da42751e4bab03bc4d034","authorUri":"https://stephencleary.com/","authorUserId":"","authorFallbackAvatar":"","message":"There is no easier method that I'm aware of.  \r\n\r\nMost logging methods may fail from within a finalizer, especially during process exit. Console.WriteLine is guaranteed to succeed, but pretty much anything else may fail.  \r\n\r\nI have (in the distant past) thrown an exception in this situation, crashing the process intentionally. However, all of my more recent code just ignores this situation. AFAIK, there just isn't a good way to detect it other than in a finalizer, and your code is so restricted in a finalizer that there isn't much you can do even when you do detect it...","postId":"2009_08_second-rule-of-implementing-idisposable-7a1a789c-9a61-3596-ac63-8d78ef6528a5","replyTo":"","date":"2012-03-23T05:16:46Z","timestamp":1332479806}