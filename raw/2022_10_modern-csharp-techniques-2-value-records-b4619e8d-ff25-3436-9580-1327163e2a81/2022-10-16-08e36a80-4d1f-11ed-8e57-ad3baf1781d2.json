{"_id":"08e36a80-4d1f-11ed-8e57-ad3baf1781d2","postId":"2022_10_modern-csharp-techniques-2-value-records-b4619e8d-ff25-3436-9580-1327163e2a81","postUri":"https://blog.stephencleary.com/2022/10/modern-csharp-techniques-2-value-records.html","replyTo":"","authorEmailEncrypted":"eoRlAoLPtvwarGQtMRZ19kReOqirGR5WqLqi6deb4G0dJpRs/++hq+r6LyXSEtwvu70J/wYdLb95OVf4mnl2md2z1CxG4mBL8tvShQZCPLw47VNGe4J3NEjOZ/x5U+4e4g1NoUvi5iyIsfrJ7V+FWomVlWyPq/hFP9ddA3m1PScNY64C8e6h5PdmDcoTsMwnI4rrDk6Izl6V/of9Rdp2t3+PxPY4EWUphdGIO0Ze3XdEmlFK+GGV8ThKQBLGviLy7zphTaBDnl3/uEB3ZIYMpmJoQe3DrrenMuLtDK5vL9qhK0XiQWyxuFPVpKlKr5CGEpT2H5y2VUSqVxJ75nQ1YaoEJpqmuktsYxJdIWG8b/c0SPhae6YFlbQqA+/xfhh4ejob5bKFbqzWUg/A4lHrAqe8TyJJ4H7ftv9rFzZqBtMLFJuLCqJznuxYAgaaAwpdaNRjhHC3Hljf4rJIXS+GpIt9neVN9yXayTIecBiQoIlbxuuWq/fWPsy+zPwo5/nr6rNMiN7BVcz+Ma+fA6dEJmJbINwW+dDNdCLDkJWUFwIAEpgYlx+OXtrggOiYR24ysN4Givkm8i07LKFv22E0ufUDspqausZ4saofBRN2kJkOpwMmmGiQg+jjk/R3BRfeZ8yMgKbC037RypBlw0CX0lspArJu3HTDmy+zNurA3DU=","authorEmailMD5":"5621d2e9e945346b6cd16f3c0b0eec14","authorName":"Jack Kendall","authorUri":"","message":"One issue I've had with using records for this in the past is preventing invalid values. Say I want an `Age` value type which is an `int` with values limited to between 0 and 100.\r\n\r\nI obviously don't want to let myself make one with a value of 101, so I have to either throw an exception in the `Age` constructor (yuck) or create a static `TryCreate` method, which I have to check the success state of every time I make an `Age`. In either case, I'm losing a lot of the simplicity garnered by the one-line record syntax.\r\n\r\nMaybe I shouldn't consider this a core part of value objects, as opposed to just having strong types for business concepts?","date":"2022-10-16T06:52:00.844Z"}