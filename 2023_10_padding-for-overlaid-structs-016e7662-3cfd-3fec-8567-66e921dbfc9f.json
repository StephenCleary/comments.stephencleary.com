[{"_id":"49a56c17-fac4-4175-a5d5-c62adf135351","postId":"2023_10_padding-for-overlaid-structs-016e7662-3cfd-3fec-8567-66e921dbfc9f","postUri":"https://blog.stephencleary.com/2023/10/padding-for-overlaid-structs.html","replyTo":"","authorEmailEncrypted":"MaH8rcpy723h9dX04EQMl9gYkIwSy7fCPnn/O3YdXnnW/cUgSi33WeqZV/t3h4yFT6sJbnVBBkYY5axlh8tqqMcB8ZhzRX1qmUjXBtFUSQLFeG/7wbh6MRwQoutZ/fbPUxUQIRHDkZGl5WlpLNwf57TR4+lg9gnbVM1E6HilxAf+4MXJ9FYxShb/dPkGyPlSTR5HMeo4lO7n+u7KH5NTswosL9G/XPiD+uG38cowIzvW/LXiECVoy1FDqGusv2obONo1ecWYIsnnz7kV8BOe3LX1Y3y4slX5BxFD54BXATm622Qv7cKYJcNVdNfRLef0h/I+qk3vbOyuK4TdIjFpw2Il7CdpSf2A/riK+hYUdSUvbZYLZKsN/EO6TuF0vTUPzy8uOExp9Vm16TgNG2as3xLp9rqAgucYDmJiV8eyWmb53JvUXZ55jm+EMWuPAiFIIqeRA8s5he28dO5lSgNB953NC5WqpCig43H+fE5OiBjRTG6S4aQ7nB3JtOsJBYb2kt59G2/wd0ejfCoSQKSWjFxQT3L6FWCDTm5Llpb+nq9GRhSztsY1paH90uZ2tXOF5GZ3eONViQZQFBg1mA6BekL3CWW9Bf2T/ZJPPPFUnTU2W7NdawbxsIT40gvDOQ/myEIAkDTnAcCKauImtPrITYJbUQLC6xA4rToOE5kK3hQ=","authorEmailMD5":"7ae9501bc7c8bff2b567b90e474ad968","authorName":"Steve","authorUri":"","message":"Using larger structs for padding (long would half the padding fields, not sure if we have a bigger struct, maybe Guid) would still keep the extra overhead relatively easy while still being able to run on older .NET versions, or is there still another difference?","date":"2023-10-09T14:10:00.5767191Z"},{"_id":"ac4978d5-ed19-4b26-bdb4-6ce7ec889021","postId":"2023_10_padding-for-overlaid-structs-016e7662-3cfd-3fec-8567-66e921dbfc9f","postUri":"https://blog.stephencleary.com/2023/10/padding-for-overlaid-structs.html","replyTo":"49a56c17-fac4-4175-a5d5-c62adf135351","authorEmailEncrypted":"ntu6kMvWewzEpAArcz+JHP/JcgFu3meXVIs2nGqbEruQ3/WkmyHb+mv8lZocYSb3KyZ346lL8b/jCUeqqE53hiv1b48g4oHsSYvtaOgIiD5KustuPpHGTiUoSmz1Z9k0RjoqPWjYlWeEpezpYbwHfWGDn3cPASnoJTF4KlC7Sxujr5lJVtxPDbNPzZfFQbhPQJz5437s32LLe7/Uuhxi/M7737CyLGIXk+nQ0Mh7uYFEZz0W6YfK1hWWvQ1Bn+S3fZkXPb72iYJpLCtY9nfDMhfIaiwQ8jcIGz593N+WkzB9tnlpgWg2Qo68537s1gv5eVTXtgiCrU2v2kBcQHrZx91WWls/mDaPQtbftiEP9fM2MrDEGRj/y3DddqZAe1PXz/vPa2M0ebsrRB24Oy1VzSse61wWdOLVkfJo7nAeMbxL9QqGkNsAfuBhgOA+UqD3eTnBSUMKV4BzrGKJlQ35+UwjGdXDA7umvsk6Y7MQCud+eex2wotmIumaLtJTwtzPoN+vUGzOBt29EzKgl3MV0stWoOgcMZIwIP9X46Q3815bbAV+P6jEUyGSxSpEdD2sX2nQxibR0yvVxVs6p7r+UjYK0zRBGZ02qyHh7C1ddM3NPdq5t383atZbZ+Q9Sv8AXbVzA3Q7P1MC47CXfxcP4bJ7RJHOR5lsUNUUiZg7Y+Q=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"You can always define your own structs of larger size. I'm just not a fan of the `reserved0`, `reserved1`, etc., especially when there are multiple reserved blocks. And then they're renamed (or not) when some of the reserved space becomes meaningful...\n\nSomeone posted this idea on last week's post. Looks pretty interesting!\nhttps://blog.stephencleary.com/2023/09/memory-mapped-files-overlaid-structs.html#comment-dca30cd9-f819-497e-8745-23f1636cfbe7\nI can totally see someone writing this up in a source generator that produces inline arrays for modern .NET and old-school padding for older .NET.","date":"2023-10-09T14:28:36.1130761Z"}]