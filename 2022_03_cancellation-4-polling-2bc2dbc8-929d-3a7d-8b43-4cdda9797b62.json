[{"_id":"083a5280-a6c9-11ec-b83c-ff379ee9b2ad","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"34d9a3f0-a691-11ec-8ee7-cd2d7f5c65fe","authorEmailEncrypted":"h7zCwth7zESoFh9vzaO0digifOK4SzyjPdb82JbKD9MdkBT+wrbYLauMpxN0j9fmJUnjuVEJe2cMFVr4L10CMfWqcfSOOO6+pCaTbV15dGhiMbZEbeF8s1grG+CdoIL+MSK7mvVqs2exYMSPYEOs1nt0kXd37r3sNJ09t2iRFZavqYNxoFHt0HAuKTuX7BHVP0I/F2Xljw9m5N+zmOGORoit1c2OuZ7cn4GtzgyvBAAPYOboM1hUvfP+vRZCHuODZJkzBh4z34ve9UcJwz73crQ0V4Ou5XDZt0UT2f3G0O9CP6NAfcSPglM9JcM/WlaQMffmIpb2hV+HSNhDN2iBbZL3T1p6XEEFt2z+rrgxHGVaJpq7+yr0RGM2KsCxQzaWgBANsM+7AyW/zRjTOIKngu6Q9qUT111uBas2P0RYxVUunP5FyZ132b3kyc7K2lB4zdJSdcEddRtmia4T6qFmXUhwLUDfb78Nj/hYSgzrp2byX5mjPJKfvqyMdNVnx4qbVMf+PEqxmS7eXD3Vg8tsOcHnPV2ylq6RYBtyQSdtfwki8wMP6jqsQy+BWireL1rskzH+Y8N0A3a8cSsP3JY+bkH2dQDaRFX9+mSXjJb1Fx9uOXtqpW+ltiG4SpMQU92DzuGoAwoFEwh2teEq8bT61Gn+m5+uEshj5K3yJf+0iEc=","authorEmailMD5":"5fafcd128fb9ba805b41d8770c0345cc","authorName":"Bradley","authorUri":"","message":"I think it introduces a method that \"lies\". Someone could use it elsewhere and it wouldn't return what the method name says it does.","date":"2022-03-18T14:38:10.023Z"},{"_id":"34d9a3f0-a691-11ec-8ee7-cd2d7f5c65fe","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Sebastian Schumann","authorUri":"","message":"Great article series.\r\n\r\nThe infinite loop sample may cause a hint in Resharper that the containing method will never return.\r\nMaybe it's a possible solution to create an extension method for `CancellationToken` hat will check the instance for cancellation and always return `true`. Something like:\r\n\r\n```\r\npublic static bool NotCanceled(this CancellationToken self)\r\n{\r\n    self.ThrowIfCancellationRequested();\r\n    return true;\r\n}\r\n```\r\n\r\nThe usage may look like:\r\n```\r\nwhile (cancellationToken.NotCanceled())\r\n{\r\n    // no need for an initial ThrowIfCancellationRequested\r\n}\r\n```\r\n\r\nThis does not produce any hints and looks much similar to the common antipattern.\r\nWhat do you think about it?","date":"2022-03-18T07:58:33.112Z"},{"_id":"7fb36bb0-a8d8-11ec-8545-491a52a8788a","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"083a5280-a6c9-11ec-b83c-ff379ee9b2ad","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Sebastian Schumann","authorUri":"","message":"Yes, that's right. The name should be fixed and should be clear to the user.\r\n\r\nBut there are only two options:\r\n* Writing the same boilerplate code ever again to satisfy Resharper.\r\n  * Maybe we can create a static method that returns always true `Always.True()`. Wuah...\r\n* Suppress the hint/warning.\r\n\r\nPlease don't misunderstand me, I already know that, but as a developer you want some support to do things the right way without the feel of doing something wrong. It feels a little weird to suppress a warning - like doing something illegal.","date":"2022-03-21T05:33:55.297Z"},{"_id":"2263e290-a997-11ec-87b6-3f213a484233","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"7fb36bb0-a8d8-11ec-8545-491a52a8788a","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Johannes Egger","authorUri":"","message":"It's not your fault by creating code like this, it's ReSharper's fault for not recognizing this code being \"safe\". So in this case you are smarter than the analyzer and as with the \"!\"-(null-forgiving)-operator you can explicitly say \"I know better - this code is safe\" by suppressing the warning. So suppressing the warning here seems to be the right thing to do. I don't want to obfuscate code only to satisfy the analyzer.","date":"2022-03-22T04:18:32.571Z"},{"_id":"2d254960-aa1b-11ec-b52a-eb0d8ec9ea52","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"7fb36bb0-a8d8-11ec-8545-491a52a8788a","authorEmailEncrypted":"nG5ttzcZJwfTXGeaQSBgo+xbgK2ZI5jrljY9LewRGSADhUjdXCQ5Te5zBCWm89s6ntrL2PGzQ2CGGCC/PheDt+xgDBri254MHkvU2hVFEnYskRHoz95g6QBLR2ZOso0vo5r33tr7tr67JTaNLKBfvZ0L40kzxuRJ+hNUaQ4tz/zpp/aa1Q3l1fJsFoMgm5KSB6a0W1Xhu0u+egPzDte0zYdHGh3zniH0xi/YlkBsajGULW9nWJnIG2iiYg+NWOvz6pSwcgEv7zVcCJond8eAbpuqVmgrc0ecRfovblLq2EptlUkyW/8KnO0jmUYW9U3EiVd94zg5WPjzYuRRffA6HKpJ6TUR+Tl+b5jPW/sfQ/AHnX/ehml+dA1iYSWxrHmJg4xau2iP95MtvgmqGwdy+2VRgcRq8Yn7KduZJ/d03K6T6DzYAY8Y0RSRAaE0b5bKyPoc/gEcRUERfWTN42st1Lg4t9RD4O7sRD6UtaIdEQFt52fFi6xMTy1pKC+iUzliVa7EK1dMb/fjNSo71s70nZzPasEF1werZs0AcjGiuv3CE/o2hUyQtDRRd1i0KswkNyXuG6Bip1LXRkA8dPwamJPm8tgw2Q7PPBiuyNzmq5BpMl5S54uBLfqG+9usDKyfePVVhe5KyfUHWcXtSFKPWZc9COBzz+dqZhOx8+Xa2TA=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"> It feels a little weird to suppress a warning - like doing something illegal.\r\n\r\nIt's a warning - and not an error - for a reason. It's *probably* wrong.\r\n\r\nThe tool is pointing out to you that there's probably a bug. So I see nothing wrong with disabling the warning; in fact, I *prefer* it, because `#pragma warning disable` or `// ReSharper disable once` is clearly recording right in the code \"I have read this warning, and I have determined that the code is correct in spite of the warning\". Writing clever (and possibly misleading) code just to silence a tool warning feels more wrong to me than explicitly silencing the warning.\r\n\r\nI haven't felt this way for long, though. I've come around to this point of view gradually just in the last few years.","date":"2022-03-22T20:03:44.288Z"},{"_id":"3c56f1c0-a9d2-11ec-a00f-81677b10a0cb","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"2263e290-a997-11ec-87b6-3f213a484233","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Sebastian Schumann","authorUri":"","message":"I'm not talking about *null forgiving*. I'm talking about *this method will not return* what happens every time you write `while (true)` without any `brake` or `return` statements in it. I don't know about a smart short suppressing of this warning - like null forgiving.","date":"2022-03-22T11:21:36.524Z"},{"_id":"db749870-c4bc-11ec-9862-d34f29bce7bb","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"","authorEmailEncrypted":"F8pv9a0LyoclIviP2h3i/cxywuqhBCvI4wFyLkXPDA27r6+f3E5YrjVmgs6PNWClniAbpCDFsBs1UUHIAFHS8BdML68mfpZAx2hjfItM6u5xtbvJqEbDoD+qn4piSVDhNPXgTV07KVtw1RguaKtXDgYSsSwgxLkRQifzjKX1kTF8csRRyzo9UOICbeILgSFjBaSwtl5dnT5QHe7zjvcWiAKIrsig7VC5h52UVlNdkHQyY3S3ZPJ/xId1VzQO5omRPPnIFGlzTyO+WTztdFvp8uZvOcKuqcZe1QaQEAnjKf7IdoVaThxLDaBxTe8XvNsUoKurnpXLNIRRZnkf7+F65AjXtnxRk+ky9tf5RUPodRZaZCE9g7qY10K0CeDcgNFOoInSyxnhgAgtvkmAEU3Sk576fZsEtj0CxiBjE8dZ8LAOs35MRXJI6g2zzicGo5aS9gt6qkKzSDSQ6AvCVqVHJdwIeqi7kJigPwNgEZb6WL+Fuw+0L40HLJmWGruHblH55eFNyY3I1rAT7846kBOXXsx7FN6xBKzHFS8sT1VYR+qqZlJDewzbIUWVQBZ5Q9M1MNUviMhPq9K+oMLYmywF/6Hj1ti27Q89+/IWy429QGMzghKLIcSxKSM7dqoke9tJD6Uw0CVWC/aBfqXrPNw4K1IG6DP3ojtSEAebSYMQjpU=","authorEmailMD5":"99abedbb6a5abac8a0ca3b313ff894e5","authorName":"Jacob","authorUri":"","message":"Hi,\r\nregarding \"while (!cancellationToken.IsCancellationRequested)\"\r\nwhat if the caller doesn't care if it was cancelled or it ran to completion?\r\nwhat if there is no completion, because it is something that need to run for the whole time the process is running?\r\nWe are using this quite a lot and i really don't think this is always an anti-pattern. There are use cases that this is valid implementation of infinite loop.","date":"2022-04-25T17:26:35.827Z"},{"_id":"7e245800-c4f7-11ec-a332-a75a0f7ed727","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"db749870-c4bc-11ec-9862-d34f29bce7bb","authorEmailEncrypted":"PvOgqe207WeNJUvWDbLq9RASj15bba0VrRQPLzE7Emn/2eGX310i01ASeG2RRJtfRRDmx6WLMboS14U70wfJpoDV9Q2qwMqZuxCuJk+fQpA1hcIEapO3rmJOohyzDJPFHnzoJlwYEZp6CljFM/BYfX3nM1Yl2nC72RKISofL5qDsp0h2lX38x2tJVvcSGEVf8XBvKzcqlvOc6FxaKDvlgJOh3RfwSvJWrWXLIulwGbhOqYtuZl+nmb21tOcz+mpvabaD/p6iyTJIiI72kDhgHBwDsq/Q4NpYewu0a+v/hdlnNm9/gYiBznqyHTkbvNaI2pFOAGbao98Lfr/3UVAxHUieHMcQxdv09fNHJQ/zujJYeBcZsUML3tTfCywhtfLOPlQmPts8qLxxueyc3PO7gEtE7ulcEaQRIGTHm2URrq7PK2GhzW0GLI7Xpk0bZ6KIcYaDBaWwkOGQ2xIjE3L6XP36RXP1C8IxSmJvDttm+Pp5w6tGGndbk3Gi5qfz8WfQ/kkBVjze0vmhBbV2ORnvkQVmI8nIaBNbamNQ8rHHLgAITXmv/DI/0ZRueet75A/ZtfDoWc3XpS/yUpBM38A68880Y2A8OclO6bZr5jKvz8fy66b4u/b80q5Riypg45Njlhlg/koYGylGa7MPb+Cy2Xhb4FlEOLKsTAibu28wjAQ=","authorEmailMD5":"92163ee3ea226db164805292f1491841","authorName":"Greg H","authorUri":"","message":"Iâ€™d like to know this as well. Why is using provided functionality an anti-pattern?","date":"2022-04-26T00:26:19.558Z"},{"_id":"9379a380-ca11-11ec-a798-4fa97a27e0b7","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"7e245800-c4f7-11ec-a332-a75a0f7ed727","authorEmailEncrypted":"bQgorfZK9J65G3cmaazETkpiDsMafFYuW2sMm7/nnMyB5vR8Ah0EM8GgDPesvpgDHcxaXUAByO6XWFh0eHYCAYmJuwxg+41T4PnwNrg5S/78e2FjX9TKuJfep3DgkE9JIKv2NaosYsUa2LBjv6T5AZQBGe+XeW7VxNaRN3Ve7axLuNUVfQVIOLFbi5DyWEEvRjZtMlz8TFkYFPXr0928Ed+Duq1Vm8c6OgxmI6/h52QPbTwJ6aYlpL2D0jbnI28ugwRMfar9ZuCt850m0KfFiu2SC7w0xQ+YAwOrq2R1/SqgdGzBX2JiHybQmg3DlA8jIi/FMvjGokG0/Z/2eQDBxvSgxyvR1t7RF5dYTB1Ry8pGUvLhULJxwKu/UA04Rv+N/C+DZBMA0bDDKTtW4PrD/h38hpNXkPYje0N8B6Dxb0YdIRGXcyQTHUQRmVQjitwxUFO2er0Ac7J8J28SXmzeSZIR2/sODgYeJaOAoOeopOMOZGWOB8jjPuVzWcTtnf54EeLDsW/qKv9ELURI7SjQPfYzG4uHcObv6lmXI9mSvgC8oHbtVEc/yS74VErrvbtX0rE2vNqrXDXFfZNx02mCf+q8F5rfPBpLBNVlKlRMMEJw+LIsoKiKv6fcoAFz9dpnfVW2lyjh/AcImZwn+MusUS31awYtAjVtHc2NWjAfFnw=","authorEmailMD5":"557fe8f9059f9eb345a62a9d48cdd111","authorName":"mu88","authorUri":"https://mu88.github.io","message":"Me to - because even Microsoft uses this approach in their examples, see here: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-6.0&tabs=visual-studio#consuming-a-scoped-service-in-a-background-task","date":"2022-05-02T12:15:38.129Z"},{"_id":"b25a99e0-d78f-11ec-9fbe-51e073df5339","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"9379a380-ca11-11ec-a798-4fa97a27e0b7","authorEmailEncrypted":"RTV73P3cNyBhxkjf6aTeIrg1r+GdVFHgXQoyWgn1NNor+O1HaZb/psCbe8M5jLcqSBw7f1g6/mQ6rzbibuNRBQl08Df/WPV539YYM155J7iGDZniciCi5HPwxjsIbvrUIrY73yU2dILNK+vwhuAC6hcRZ7nMc4miwnuynz5xaR1ZhuaZtM1W+cxFc+N5KY/sndVuFPd9RCXI1UcZ+aDYCvOzWbLT/yCqJS/Ihxsh2wLONKMJy5xEmFh5fAbvHRC9Lda/e+9crpwIN74DD1NWjk/iG6nGbfqcGp0YMKBJgrexL/gKc4h0QZO1U4w8p74U/lx6Glb4uyayKOXi//YyZBNRhy8AbJbym0aC/n8V7MA4JlRYGbMsrUJuNUdZkuV+LJ9kkYokXW+rDzfXnfK3TUYL9+kTML8zaNATQxCoR7zg8gXzYM/A4eiA2/drQhZToD5KlNXns4hnSOh+IxDEqVRZyvq2Ni0VrqUmFMlDc4+sXiG/07bNoOo3zHrZHkDmwkdVcaYNk1ZwRpjFxombndaFo1LK+GTWWdUIQduKkqLbkL7s1KMIXq3tgKhvMXH3qcWJgUjEH1spsRbNFXSBNsN4UoCHgpIETrHF9eRKqjJHII4fiJAXjhJvSe9thNbOn74IGARP+Ngw/17wopoC3HVXQoB0WlVg3CXDlCofjFo=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"If the caller *doesn't care*, then `while (!token.IsCancellationRequested) { ... }` is fine; it's functionally equivalent to `while (true) { token.ThrowIfCancellationRequested(); ... }`. Microsoft does use this in their background service template, which is a decision I disagree with.\r\n\r\nHowever, it's been my experience that for the vast majority of code, the caller *does* care. And then I've seen the `IsCancellationRequested` code get copied and pasted and the result is confusion as developers wonder how to communicate cancellation - when there has been a common pattern for communicating that cancellation since .NET 4.0.\r\n\r\nSo that's why I call this an antipattern (which may be too strong of a word): when the caller doesn't care, both patterns have the same semantics. But one of those patterns can be copied into places where the caller *does* care, and the other one can't.","date":"2022-05-19T16:21:11.625Z"},{"_id":"36740fd0-d872-11ec-857d-f5e8e4ad0b4d","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"b25a99e0-d78f-11ec-9fbe-51e073df5339","authorEmailEncrypted":"XQtZRYFOkEOTEXJhl5XojNAx+Nx41My91EK+/BHzEaTQt0oyoDUcYPtA76xUuWjL/aKE+oa9w7jZYTTG/7veZt20L3CTLdmma7nsiCPTUn0aUcWQTea2CuItkCWgridRi5vPkmxHigFfwVKI8OoYLPlyHi+6pDBan65DHbPexOafdOdgySTdtzuKKXSGmiKdneTgWZYjyLyvF3Z2L8fJ0Jr3hUC12lFgHHt3/ewzvZ91FJqDJjF7y/lrRxQXnq+mFQIW1iX1SvMhhaG/nEFwLZ9z5MYT2ck6UE+uxUPUSTPQ2rddsS999DY/dl6QRs0+R+WG8a463RMa6wJHbl2x5J+fZW44X7pZmS08Sxs2js7Lz5bcvbvwq43JUcRPIqgdirn+71MZbOriiyEhv0MUYyIM8h/CWTVnpdLV+kVVmrol5uZcFF/4g/u7gXRW/Eu+CmHmmVu5aXjsXumzBjBaLZJgQbkDdKFxX/dYvuCRicf12EEIOukn9aa6BzPDIy2wjwEMEtnNmnutrK7FSuINzgkHSO1ZFEo/vVHKCF2oEHeQvMtnTTnmoyCXxF7pkynqWtZZrH3PiDDXHzwz1yqqVw9jqNmI+xvBdg3vwp+eXkmDo/md6WslSrnGv81b+6h7qnIwXD3+U53uIhgN9uj0BB9v2lzW+aaT52dBpkP/H3w=","authorEmailMD5":"17623e31d04acaabe104eb4b914bb599","authorName":"Formalist","authorUri":"","message":"Thank you for the clarification, I agree with you.\r\nUnfortunately Microsoft documentation doesn't warn about that, and (as I wrote below) suggests to use ```if(token.IsCancellationRequested) return;``` in many examples Â¯\\\\_(ãƒ„)_/Â¯","date":"2022-05-20T19:22:39.511Z"},{"_id":"83388c90-d874-11ec-857d-f5e8e4ad0b4d","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"97e98060-d86d-11ec-857d-f5e8e4ad0b4d","authorEmailEncrypted":"SmC39voZXvwiyekAROHpTHhotOTqXUH8Vqm0xe3qPrusB3fiOg71qKJQ3sqP0UklsraAnQnzJOkcLS1TOEkHEPmCYbk69sQR1nGsVIve6O/0M9V1jntsPehRN4A7CAWurXNbAUAhJG3M53zouqUVJPw8JbxchuiWA4D0ZvZztcUsPcROd1q/wnzJzCIZwm7/2qD8FFISTvxvB8RLTlXGSAE0myTwX7+5WyXTJaxMjhmoEvQryG6j9hgAHQxlGBJBZLqO3+Vbw2FYbgah/NTDKhbD2pNg0tuAeKKhXW26STh40lRNrjRmhIGIq7DKk+zdDUptPFSdnj7V7NqFcn5QgyrNHm9KMb37jeJeuELDBpYvmJ4y36y2IXDCWDh0C78lkOeCDDAPXHLBU2ky+zvFQisogwXXNwUCmglzibxSgIxM5gsM5nM6+xDs1SSpoi4lY3DFxYim3nahsgBOIM5qJHtHv7RJhnY3Pu9/i/FjQfav7l3UIg7UNtDww4kX7YveqNrxyWyMpN0frgNOreLZI4T1vYmEh6vcpJ+wwDHq0jsMvpq32kbJ9kGC+O0atYRjkg+qofxFlDSbONT2/VaMMNf13TCzfIz5kw6iV+uT09rbj9AtCv2VzhBobzOfdNB04adhiSQKiZPjmzw9Siozg2II0VxWtnHX8OKyQwTgJeo=","authorEmailMD5":"17623e31d04acaabe104eb4b914bb599","authorName":"Formalist","authorUri":"","message":"@stephen Sorry for the duplicated comment, but FYI: whenever I try to post a comment, i get a 'Failed to post comment' error (but the comment appears anyway, a little later). Thank you.","date":"2022-05-20T19:39:07.327Z"},{"_id":"97e98060-d86d-11ec-857d-f5e8e4ad0b4d","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"9379a380-ca11-11ec-a798-4fa97a27e0b7","authorEmailEncrypted":"FIurMXONyc1f+eYTZ8/Je8hZB38mk1NzedTY+DHPlpGEJ7gAXQJH3En04rNehHbe9aIMK73ZTd+G46fpwZq1EUpF+yOWT4u74P4evmXhhTGxFEwuHMaeQp0rgHxaxe6GSJ5Au9VlYDu6xZF9O7YsAWOdgYllYvps5QpX4ZLOLjlQJ7kdd2jDPFPuecbNCwLnGMgs8vsM+SGvjM0u3P7zKd42IuURi0ucVdC6qBgdz8Wio38fdXTvP3mIkyNd06LWu+5UhReb8IT93rOhv6gfffjR1AyuIrrrOGKTg+yNWLk1VXu95stmKoGqv5VUw0/14Dgeoqse3SZ30CwlzxZ00JhtPuaJtzQ8/gnxW3M3a2tN9uoY/iHUL6nofnaEN92bOneKmbmMY8V161uMTK+We9pwLYuIohGVTQV1rXvpI7oF8qSHfggdRROZ2NKoZZXkqUjJoCeZ3/uH7AR6SoGsPySDKVKK+O2FbS4hHG75QmhzEHt3MpDbSRl6ICmKynd24ZuwrqbVnT8Hx7dDU1mu0dm16yUbcW0xwkkmYLWBtXwVbNIKxbu2Zeh9ylyr2VZrQDHqIi7b48lSyWcS9r42C1A7Kd5yvHZYcm7mLIc5i/k8wp0K4N+aAm3VgNKFpBWFtClRLPr9pmVw+vuiVWTrMxlPaZdCWJNu2VU7CUhDiTM=","authorEmailMD5":"17623e31d04acaabe104eb4b914bb599","authorName":"Formalist","authorUri":"","message":"True - It's even the first approach explained in the 'Overview', in 'Cancellation in Managed Threads':\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/standard/threading/cancellation-in-managed-threads#code-example\r\n```\r\nif (token.IsCancellationRequested)\r\n{\r\n  Console.WriteLine(\"In iteration {0}, cancellation has been requested...\", i + 1);\r\n  // Perform cleanup if necessary.\r\n  //...\r\n  // Terminate the operation.\r\n  break;\r\n}\r\n```","date":"2022-05-20T18:49:35.565Z"},{"_id":"ada78fb0-d86c-11ec-857d-f5e8e4ad0b4d","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"9379a380-ca11-11ec-a798-4fa97a27e0b7","authorEmailEncrypted":"QEyVJult/c5ghAS1XJ8OHkkFsscsu12jdCdtRojtQlc9VhiPMK89PwtmlqG/6O24EzIbwLl2SyegFF67SyxDs6IB/9gNm8XT436E9i0E2Q8XhnAvmBleSZujZgB4T3Udg1gJ2uVB8cOe1AUU8C6qualGVjJ+zcz+V/3gnqJfYPqux9ZnzbXTWSAQv2fdo0DKummFJ0Rhcpcyy5cQTMs/nmf8aMRy/M97BdIwG4Edx8iMS6R1CelsGFC9t8nI6MNtcwLFSOfi+dJMAfb7HZ1vY6DTyxSSC482seQjS24TIXadSh/eNbM+4BA4cz5HxKEduRY0ZfY4rEBQ5h4620c16/V0t3FtPVDBQMozeqPQo8YP13ArNbWacPpiujWDpxrPuEvJYFMzGH9QBdC8NMwbWO+R+F3cemXOktGzp8HeQ/rwyoh1b+VZMhlclG1UPiHkH0BKwFub8Bq5voQi4Za0I+7ua8VRXANAiPo03sLuvArk3xnp82wzv4adnWzVqksOyJj11TPT9L3uhCxkc0pm6HBqwQmOW7SAnv5bHxjrVjgBiHsPCK9BJ1myQ2hblq5T7xhz2X1HHsCUsiXAsC1yFucdjqcRsh0xN0DZ+TD5JFqVsnRJj1cKEnOPZ3Pncu6TjNeY5TJunoxa6wOcpcNCpLxF6A8DC0WR2x5VOzNLIl0=","authorEmailMD5":"17623e31d04acaabe104eb4b914bb599","authorName":"Formalist","authorUri":"","message":"True. Moreover, it's even the first approach presented by Microsoft in the 'Overview', in 'Cancellation in Managed Threads':\r\nhttps://docs.microsoft.com/en-us/dotnet/standard/threading/cancellation-in-managed-threads#code-example\r\n```\r\nif (token.IsCancellationRequested)\r\n         {\r\n            Console.WriteLine(\"In iteration {0}, cancellation has been requested...\",   i + 1);\r\n            // Perform cleanup if necessary.\r\n            //...\r\n            // Terminate the operation.\r\n            break;\r\n         }\r\n```","date":"2022-05-20T18:43:02.535Z"},{"_id":"5fcd8500-db6f-11ec-a5aa-258eb96b20f2","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"b25a99e0-d78f-11ec-9fbe-51e073df5339","authorEmailEncrypted":"X6BnmgK9b1MkdO2yejqtyAwy34jDgaZCC0Edxtgivp7sn2yrZAPzTHvaDyqklxgHgb6W6RboYumXlqTpAJ+qvecge2qFK4IB0q+D4Lznfx+R+/nh1C17O1fcCzFkJYCyc3Um1vu0iDsDGCAuGpl6+bfAP9wtWQbXGFwYwD2w3xmCvTBEHEIF1hVl7zJnaa7g5RIvnMd4f8+srM3aYaz1zmAwXYJnPduFJtseTmOOwkfiJ/8ql+/X4jMqD4hlSVd39LzxZcM8ktWTReGj0cy22Qw/oirKFAV+T2wCDoSsaOn/OvfAhZUzYJBBf5gbmOd/NiLsypUxC0iLfFC/J2MQT7zRzfkQVsrZ0Zz4zJfg727IOaqtfawqAgOWBxwQWawpTq2jDpdL+lwmBlSzinFN+KoABfeUiQB/RrSJehcTeCIq9S7exDB1AD0z/IwBakDGrhj9pIcHCwcggkxHZbKQdyglpzYz/H+nNgQvWITXHrh+V9U3u8z3bW1ZuBfO1K63iUscoFGCUIbjM0aw3n+KriIPiWhj1hVMvzGh98Qg9EFzDxFq4vFeE4lb9nCeLednvcNNbwcav8KqNYs0Ni8ppAXQipns85LKkxuh8dwSgWy9ObZPk+s/179xp+ZU1TKaluxZr9TWHeIMl33lkUCsO78kg3QDPi8IJk8SzQCj6/Q=","authorEmailMD5":"557fe8f9059f9eb345a62a9d48cdd111","authorName":"mu88","authorUri":"https://mu88.github.io","message":"Thank you for clarifying!\r\n\r\nWhat I don't understand: I've checked four classes I'm using very often (`System.IO.File`, `System.IO.FileStream`, `System.Net.Http.HttpClient` and `System.Text.Json.JsonSerializer`) and only one of them (`HttpClient`) throws an `OperationCanceledException`.\r\nWhy is this the case? Is the contract you're describing considered outdated by Microsoft?","date":"2022-05-24T14:39:53.879Z"},{"_id":"508d41e0-f099-11ec-9e33-c39dca43a550","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"","authorEmailEncrypted":"NcCsuMegqMEtBISbPdFKMHtaiYnMqcgFhKjw99ZOF1dHMWUOZYahtdXEbKkPRPy6nVzZOuYJPpM8gsuLUJIAChNdAhZMYAJQ+5gB3nEUcrPz0B7Dltixt6rp8TBjopGYO+IJqTT6J0Ej114kWMn/niwJsU+IqGH8JOELddCj05JdU8cH+q3HOyO15FU34QvIUEEG/2ssOBFTrZX87XMvKwp8HmEvDPsgPeglIhZEFUbbYrl4Mnp39dLUKOM0ZFhiRmRg4rnIwhhllPbcsTpeQ61NX6bknVStFPb9u6XyDdkq2Xx58WnKpfQXqnZVPCX9RqdFZh3hZ1STKfuuXmJWE5nwrSuEP//w2Ly9LzRgQc0d5cLznUXWEfh+Auojf9mU25VMUajxudBK5Qf8LCeBY7QxCBLCO/eqYpsSbrLj5qfWIXQtvd/OnTIS8Mkt1kyIc6gIqDrwlGNalA5CTAa/G5RVtiH3NTrVImJB7j7rWiXW/9B7JXm0XTp1ffzfCr693Q3PuK5IQ82/DKz/iGgEaEur+O2tQ51K8MsIfMfJQU4y4gMwtZ6pTb68xMR/J9ivd3uDwg2/pqrjTNt17ukUqrtWRVhVXdLEmaz/6yi4qhqrU9D2skqWYfZnrs1sELF1OHsrm1RXU/mauopWAfzIzQMLwYDRLCYYkGNjf+BfRAw=","authorEmailMD5":"b27ff69e899fe6f5beb3f8310f8d5ee9","authorName":"Jakob","authorUri":"","message":"Great series! When is the next post coming?","date":"2022-06-20T13:03:01.580Z"},{"_id":"dc7d7790-f09b-11ec-9e33-c39dca43a550","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"508d41e0-f099-11ec-9e33-c39dca43a550","authorEmailEncrypted":"s4SB9TgD+Gkxx9MX3Kuo1l6h16Gl0q4KmXMbQoHQN/1BW5iIsv0W8rZMiTanNhMvMnoN2NQBd4FYegCDHTCOLWhnt2pUHX4nwOtAvhMJTthYQzc9q3vdXcqTZGGEVCVMUqteIBYSAEpX2eMArA31k9gI+4FoQz/6MCTyGGISKZlIQDjgaOx6oTWSoPQwh9CWdWi650Qo8SVL/dWO+MGTSaAp/eWE4XbkWfMR7FJrwmPVuUBLgPWSqTrbG7S0asJsBMt4mBhlxxzak8UkmV1sh5oYo92Rdc9B02G3pxmLxFQyLlrNn5iS2H7PKi6Qu0BrrZuLyjZ9ix4Ok0mnUhgkYoH8pOHSZNhvXhiyZmEy9PsjRw8tLv8ZrAk4ZKW/G3ad5G7u6nX105KjjCQPxYeE8PdKyDI+Qxtrp0ysLvuPoTsFyAyGkpji3FwTW2swl/rpM2xhnbAiLmsjqljQBWi1EWvWQDc5JCprwdPDHrpzcJQYg4dnG2S0obJwCvHN3Fm4a1YSXVoUd3DieWzyUNUxH4NhQJvtxy8qKY0qXz/tvca7QAIM/IBzDee9Hx4Z4MwSsJ+uuRogxDkeJqofUq0rBtCnyYCddHLfM7CY3VpvaArYs389/TLVc4g/pA8b34RqjXHa0G/6GMUQ+Yw/DdvzvjmIKyqfQshuWuQXUuPT5pY=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I've been out for a few weeks, but hopefully soon!","date":"2022-06-20T13:21:15.289Z"},{"_id":"c118ca30-ffba-11ec-8278-c132177ae00a","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"5fcd8500-db6f-11ec-a5aa-258eb96b20f2","authorEmailEncrypted":"i/VB0Q3bTqgWgas7NYHezfjBnR3OQ7hvPO1M4/6shWIC0uZF+Krr0cvD2IPKzj0ksPNVMPUuTFEe18kof3mvs5sLGkZTOWkLWsQmJNJnhLG/kIPqqXhcbBtfFNezkJVNdtWYtnQbFMG8tcullmJRzujk9sKtXx27V/YbF4HtMHRWKiShhUlIFARdmg9JuaVrkgs/3qfipy7l6bSegbY7A2R/c/ddec5szgOwl9TGM6VgO3r+yzjOYn6nD6lra3F/SigLE866kTd/YpRaufSShv+gX9Rtk2RfZzQzXB0tie161RSo0M1m9oabOv2pXbuRxNMy0DruoN71QcSYqJskA9/Z3/QI4CyKYikSqxlL1oMzgHZr0EDO+sSPgKCjQakSv29pO6U3tN4yqs2jJ9379Lp6bba4fgWAiWqAWtkcpEXzO4QEXB1ICupVKuDQyHHXn+cJnIApKMI0Z9bx/oo+pNfURnznS7jTJZVaszWOqxtVmdFzG3OcWeTqorHvXpwZkoUw2AjELEurjcp0hsEKUQV/WiAmR+AsauP7ka0Nl5EaF5jXgQB+GiNN3Vl8txD3yUywLkxfQq7go405M9ZjYJA6xmDDEVCGTpAS1nT9CjfdXX4HrJtoK8OpY+GvPvwVRfA9B4M6aF4Z6RvM9/a6ccqEkyDQaPdRGOqGKooKUPc=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Some APIs throw `TaskCanceledException`, which is fine because `TaskCanceledException` derives from `OperationCanceledException`.","date":"2022-07-09T19:10:11.160Z"},{"_id":"5277be50-0164-11ed-80b7-e7b2fff5f17b","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"df8d8510-0162-11ed-80b7-e7b2fff5f17b","authorEmailEncrypted":"SiVSirXsN5Vj3BFSNl9Hi2TgS86L/D/az0ZrGOusJKFd6iqZrvrA5lFatT2+WEp4Hmn9R60Bzm7JzRT6YVNv7dyYbJTrStNP+0RKWpKGYDJB/FnXCPQsq47zXvG91qTDspez1JpD9Yo8mXUPdIyNPASI4KdAwo+slbm27hC1l3tJlgbcvzpX0i4GVdLKqEGKcflvtPbERCSJQkHKooj+TD4IPRXD3b7lV4+zs3f8Na5BOxF17Vf/N0lE9KMJEqX/a2nKv8vprS+N8wkONHCifOYwtNR0LVTeU6n+n4QX/s/ZH/6FUe8W/hAOWHvnRBlp7SCA4KLr+EtROMaorydo77UHHpGRnzKdL3Mj9mSNdJ/dgXXbnyUHBwinXxdyJy/9gcMLNJKxIYfkI+Xa2LVnZ//stwdQwhIpAXFvLllqu3+dvmuqUhG/edSsaqZbGOGMDicnAiCmm/XwbnsLCn67eeNGQvsOymV2/G9zw1meV5iAJQyuVA+gOenPJwEMX4lv1DYXMsMe/AZ3CcUskDNtk+rTxo13aNANHtUxC4Jvqcp3f1How00JlFJ8ksbDWJRb/IbNob4a+8x39DumjlpONtvnbrKvg+hKiHCv0+zH7UZhV1OqamRvaprwjMc4HJlRjQChjrGaiDSvXa+Yh4eEhEqrVgY5xDQkimjGMbIb19k=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I would say that looks like a bug. But 1) Microsoft may disagree, and 2) it may need to stay that way for backwards compatibility reasons.","date":"2022-07-11T21:56:31.184Z"},{"_id":"5718f380-015e-11ed-80b7-e7b2fff5f17b","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"","authorEmailEncrypted":"YoulR2AbKHPy1L3a00p+69Jalg2vW4lTuHsp8FPh+NdSUT0dBLlt42Yye48jC6KL18SV6xITDdcN/UVb5g4BELF++J1wQLmV9D1wUacfX286Ifdt/Sl7Wcj/6W66oLTvutoQKvo1u1fgl7PPwiJsw3CCAxyoHps4Ftb5zWz8M/AfCRX7TQtHTn9KEBga1H7/ApJIP77AMsCoVxYPhpQyGiuBEtNq4o3hwaD0qeeK045NuxDk1lKwz2rV/wEnRPEZl1J0tWm/8On8tmNB74zBgWr+SU5PFZQjcoK/c+rqg157j1n+nKSH2b4q6eJ5wj3jLSy+WArSDtnryGLCaZsClbiM/kO4XmsCBo1OqVqWEnwM5/gz3qs+xMrOuhYI6LBycOnpg8b9b0w7SjLJutEbAQOCOUtB/jpqgGipokse1H7vdBC0VGEklZfqCwN8NndE1Q8+8Za9avlUwKg9ht1lYLrgmxKz5CaMV0vIY3uhBjMH69Ysknsx5uM2+5ju/GVepBWo5YkMluBF8/SXaB5yARpPDogkN5pJRhWtGjPoeilS7/Bmu3R9M18WCbLqrKlPwcUEweCV/NUdpokNwruVePw8uUd+w/EsmFH/sv/37pkZxIiw/eg5/leiMb9A3Sgqyg1pf+kUUtm2KjhGJ/E0U8kdlc/E6jrzYfdYaKFFQpc=","authorEmailMD5":"f2387034cbcf2b260f266196c78d0ea4","authorName":"Marqs","authorUri":"","message":"Is it bad practice to throw an OperationCanceledException from a Task-returning non-async method?","date":"2022-07-11T21:13:42.201Z"},{"_id":"c5c91010-0160-11ed-80b7-e7b2fff5f17b","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"5718f380-015e-11ed-80b7-e7b2fff5f17b","authorEmailEncrypted":"FhHyt7Rf4eX7ZWLtOunEm8YaQBGdDxcfuZe1FJSxq2FZuXxK2BDNuh5qrMJzZ642LTNCSYfqRDpq75PBlIdwryWJmw+w2IJqjofS7SX0VxtrQ463By5n3lMSSUnuZo8bQJ6v+XjtbRocDQrabjG2myVN+HjLqNtXTyZluxAYhv+DULs3Z7PDQ3Ng/RrmShTH9AKXpisKUepx9+FEc9pwPFjz8KFz94WfVi02B8mNSdyHn1oXKyeFYLAl4nhNvS6grVCEnpY3ZEYk/sL1q7c13s1AAjlmcsAY2h/PKfpN77/7xQ7JqERoEs1Y1DdgXQkV4qKzOfWYdakWYT5ItWkjNo0PaK9u73nG4rJsf3ub8fK/fSqESPjRvDYnc/m9RR7RQ5B5iAScPJB8xgXN+JWrDSunyilyA5FUCXR5aPFNhfVMgcybW/8ky1bbZjW1k2rHMSnj3+X3Ua/wMcwuN4j4Et1tHGUF1utkBbfuA87RbkQ9b62JfC3+4Wbr6Mo6A34i3pxPRD44Rc1Sy4tISmK9SBlBckIscUvnUy4NYWL1Svu/GZ5a5xVRHTrb53rOOlpdNb/y2ZQlp4WbvOGkfG/9YlNvOoPi+AFcUkkFdi3E/0xWTYY8xluvk7MBm2y4SvC7Ze2pQqeA0qTPxdPtKXQmMy5EWOCgaMJTayKQCI24JZ0=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Yes. It's a bad practice to throw *any* exception from a `Task`-returning non-`async` method. You could argue that [boneheaded exceptions](https://ericlippert.com/2008/09/10/vexing-exceptions/) are an exception to this rule, but exogenous/vexing exceptions such as `OperationCanceledException` should never be thrown directly. They should always be placed on the returned `Task`. Note that the `async` keyword will do this for you.","date":"2022-07-11T21:31:06.693Z"},{"_id":"df8d8510-0162-11ed-80b7-e7b2fff5f17b","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"c5c91010-0160-11ed-80b7-e7b2fff5f17b","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"","authorUri":"","message":"That's what I thought too. But when I saw that the method Task<string?> GetUserNameAsync() in Microsoft.AspNetCore.Identity.UserStoreBase (https://source.dot.net/#Microsoft.Extensions.Identity.Stores/UserStoreBase.cs,120) called cancellationToken.ThrowIfCancellationRequested() it made me wonder.\r\n\r\nThanks for the quick answer and all your great blog posts!","date":"2022-07-11T21:46:08.863Z"},{"_id":"e9790880-368f-11ed-9ed5-573ead631153","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"dc7d7790-f09b-11ec-9e33-c39dca43a550","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Paul Cutting","authorUri":"","message":"Hi Stephen. This is a fantastic series on cancellation, thank you. You have a talent for explaining things, and provide clear, practical examples. I'm really looking forward to the remaining blog posts!","date":"2022-09-17T13:52:04.558Z"},{"_id":"dbb51bd6-38dc-4bb0-b275-fdcf8af27c99","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"e9790880-368f-11ed-9ed5-573ead631153","authorEmailEncrypted":"bpwWi5BMDC9xv2TvpSykopO3G6I4DZX6z/zt+dfn6YDaF8B9trdEtpDDermMto9RWgAQHxA1P5+XJ35q3VC5eMV/ZG1MD3f7ZpNCW9fcBAByhIB6DU6WQ8BQ9x6Guzc1zwH6VbR0vuTnGn8Ns9KmDxleAUv3hAk5wZPCVTPPR1qGp34LI0iJeDI1Y/YeBcnyo57CnpzCIogVtrUeJU3XMfDiN1jN3SDg73UfamvAAkzsebPmjYLSrnRd++OkFRaGkmcN3vNtcoI8yrQ0W0Pw5pTUMnJABu43MtnIZDsBlXY1IAe7wd2tkk0+d7cAljw3zltJTVqPqX0n1V6pFzN+0/VuSUQ9AHwlLJUFQleIZ2JpK9JfG21ho0BbtA9Bqd2FrdqR83K1JJTW6LI4ZGnk9QJFhtjOXmF4w16I5coewbblNNTscYsSYOZZnMlQeagXG3iJKcPW796Z4urLY2jD15c2hkWCNLG3AkhOQtfoKZZS9avHWdEfZprvUZ39u4//5AtA7kD05GjAy1CUTm2TZHwsfPJXQwont8pgLEpXwLkkoKhJPcxDgHtCbAi95it/l0uv+L1m49vzs/knmDqa2LBjNZvpVODjDxs8dIhSscdgEhKg0yEFeNV9JITq32YQlz89Lsi5YC4BuxWgfejEnIMIOXt4IlnA3Pr9odaoSls=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"Thanks for the kind words! Still planning to get to this soon... for some definition of \"soon\"... :)","date":"2022-12-30T03:06:50.7644131Z"},{"_id":"a8cc807d-3037-4b34-a127-b7558fa2a699","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"","authorEmailEncrypted":"","authorEmailMD5":"","authorName":"Milo","authorUri":"","message":"\"Most asynchronous code does not use polling; weâ€™ll cover that scenario next time!\" â€” Hoping you'll circle back and post this soon.","date":"2024-02-21T03:44:09.6240025Z"},{"_id":"f14f8699-f996-47bf-9570-198cba67156f","postId":"2022_03_cancellation-4-polling-2bc2dbc8-929d-3a7d-8b43-4cdda9797b62","postUri":"https://blog.stephencleary.com/2022/03/cancellation-4-polling.html","replyTo":"a8cc807d-3037-4b34-a127-b7558fa2a699","authorEmailEncrypted":"UjKNI4iTc5+gt2v+W7WTN/xGKZWFopn4X2x43GKI1DDk+zf4hkNa5Pqpj5NNh7kpgbkwRi7Q75f0vcWQuSMEzJgEtGRaFbaVxzI3tBexLcliLm1V41kNDN82SeeyFII1zVy8c2b5aJiqdWnnoKHnlH02YK66N85CeItEfJ10Kff1x7FkTKN8/VUKXIyMZSp8rNuXhb9Ele89sTX1mtG6LJW9Acl19P9w/ZiMDX+mszWXfKkZ1EHBvQxXln0C5m7dTMXHqDViknv7Hzn07J9aY8yZcNtqGXADTKChQSVLBDm0xmMOVIsDXPITrO01ZZE0PfMtiHXkwJUweKAk1F8aIUdSBkDTOaOsBLUxZdGtTFyU2x9kP/f0H2/i7pPnNMmc4yGem1z3+JrAehDoMYompSvlAH4LV26l/Z5/J0ACCKFgteZYL6LPoZF39tanaIpJIMOBd71H4v4rRS8nXo9UKSb39spR8bAQP2ecejHK6aOzeQIyYvO4VmZ9tlEeXCiA5rF5hLToKm5Se8vz2BZeDrLAYZWWjh8MgcyamTWDwy/RF/+n9TlwHYHr7+Xg33v2gCIs1ZyEoETxMZBvrdKHUBeawiRaIGgS2kasERtQq1aGmBJkX0s8Fp/Ac1kZMCVyW9Hg3kPARBrznlKYPVKXzGECfKVytYsZ+aOcNfFMuw4=","authorEmailMD5":"23448e78d187fba56d8bc263081ac5d8","authorName":"Stephen Cleary","authorUri":"https://stephencleary.com","message":"I did eventually: https://blog.stephencleary.com/2024/08/cancellation-5-registration.html","date":"2025-07-19T00:26:33.6554527Z"}]